{"version":3,"file":"8878.314e4beb40fc773fa83c.js","mappings":"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","sources":["webpack://telegram-t/./src/lib/lovely-chart/constants.js","webpack://telegram-t/./src/lib/lovely-chart/utils.js","webpack://telegram-t/./src/lib/lovely-chart/formulas.js","webpack://telegram-t/./src/lib/lovely-chart/StateManager.js","webpack://telegram-t/./src/lib/lovely-chart/minifiers.js","webpack://telegram-t/./src/lib/lovely-chart/toggleText.js","webpack://telegram-t/./src/lib/lovely-chart/format.js","webpack://telegram-t/./src/lib/lovely-chart/skin.js","webpack://telegram-t/./src/lib/lovely-chart/Projection.js","webpack://telegram-t/./src/lib/lovely-chart/canvas.js","webpack://telegram-t/./src/lib/lovely-chart/preparePoints.js","webpack://telegram-t/./src/lib/lovely-chart/simplify.js","webpack://telegram-t/./src/lib/lovely-chart/drawDatasets.js","webpack://telegram-t/./src/lib/lovely-chart/captureEvents.js","webpack://telegram-t/./src/lib/lovely-chart/Tooltip.js","webpack://telegram-t/./src/lib/lovely-chart/data.js","webpack://telegram-t/./src/lib/lovely-chart/LovelyChart.js","webpack://telegram-t/./src/lib/lovely-chart/Header.js","webpack://telegram-t/./src/lib/lovely-chart/TransitionManager.js","webpack://telegram-t/./src/lib/lovely-chart/Axes.js","webpack://telegram-t/./src/lib/lovely-chart/Minimap.js","webpack://telegram-t/./src/lib/lovely-chart/Tools.js","webpack://telegram-t/./src/lib/lovely-chart/Zoomer.js"],"sourcesContent":["export const DPR = window.devicePixelRatio || 1;\n\nexport const DEFAULT_RANGE = { begin: 0.8, end: 1 };\nexport const TRANSITION_DEFAULT_DURATION = 300;\nexport const LONG_PRESS_TIMEOUT = 500;\n\nexport const GUTTER = 10;\nexport const PLOT_HEIGHT = 320;\nexport const PLOT_TOP_PADDING = 15;\nexport const PLOT_LINE_WIDTH = 2;\nexport const PLOT_PIE_RADIUS_FACTOR = 0.9 / 2;\nexport const PLOT_PIE_SHIFT = 10;\nexport const PLOT_BARS_WIDTH_SHIFT = 0.5;\n\nexport const PIE_MINIMUM_VISIBLE_PERCENT = 0.02;\n\nexport const BALLOON_OFFSET = 20;\n\nexport const AXES_FONT = '300 10px Helvetica, Arial, sans-serif';\nexport const AXES_MAX_COLUMN_WIDTH = 45;\nexport const AXES_MAX_ROW_HEIGHT = 50;\nexport const X_AXIS_HEIGHT = 30;\nexport const X_AXIS_SHIFT_START = 1;\nexport const Y_AXIS_ZERO_BASED_THRESHOLD = 0.1;\n\nexport const MINIMAP_HEIGHT = 40;\nexport const MINIMAP_MARGIN = 10;\nexport const MINIMAP_LINE_WIDTH = 1;\nexport const MINIMAP_EAR_WIDTH = 8;\nexport const MINIMAP_MAX_ANIMATED_DATASETS = 4;\n\nexport const ZOOM_TIMEOUT = TRANSITION_DEFAULT_DURATION;\nexport const ZOOM_RANGE_DELTA = 0.1;\nexport const ZOOM_RANGE_MIDDLE = .5;\n\nexport const MONTHS = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nexport const WEEK_DAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\nexport const WEEK_DAYS_SHORT = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\nexport const MILISECONDS_IN_DAY = 24 * 60 * 60 * 1000;\n\nexport const SPEED_TEST_INTERVAL = 200;\nexport const SPEED_TEST_FAST_FPS = 4;\n\nexport const SIMPLIFIER_MIN_POINTS = 1000;\nexport const SIMPLIFIER_PLOT_FACTOR = 1;\nexport const SIMPLIFIER_MINIMAP_FACTOR = 0.5;\n\nexport const ANIMATE_PROPS = [\n  // Viewport X-axis\n  'begin 200 fast', 'end 200 fast', 'labelFromIndex 200 fast floor', 'labelToIndex 200 fast ceil',\n\n  // X-axis labels\n  'xAxisScale 400',\n\n  // Viewport Y-axis\n  'yMinViewport', 'yMaxViewport', 'yMinViewportSecond', 'yMaxViewportSecond',\n\n  // Minimap Y-axis\n  'yMinMinimap', 'yMaxMinimap', 'yMinMinimapSecond', 'yMaxMinimapSecond',\n\n  // Y-axis labels\n  'yAxisScale', 'yAxisScaleSecond',\n];\n","// https://jsperf.com/finding-maximum-element-in-an-array\nexport function getMaxMin(array) {\n  const length = array.length;\n  let max = array[0];\n  let min = array[0];\n\n  for (let i = 0; i < length; i++) {\n    const value = array[i];\n\n    if (value > max) {\n      max = value;\n    } else if (value < min) {\n      min = value;\n    }\n  }\n\n  return { max, min };\n}\n\n// https://jsperf.com/multi-array-concat/24\nexport function mergeArrays(arrays) {\n  return [].concat.apply([], arrays);\n}\n\nexport function sumArrays(arrays) {\n  const sums = [];\n  const n = arrays.length;\n\n  for (let i = 0, l = arrays[0].length; i < l; i++) {\n    sums[i] = 0;\n\n    for (let j = 0; j < n; j++) {\n      sums[i] += arrays[j][i];\n    }\n  }\n\n  return sums;\n}\n\nexport function proxyMerge(obj1, obj2) {\n  return new Proxy({}, {\n    get: (obj, prop) => {\n      if (obj[prop] !== undefined) {\n        return obj[prop];\n      } else if (obj2[prop] !== undefined) {\n        return obj2[prop];\n      } else {\n        return obj1[prop];\n      }\n    },\n  });\n}\n\nexport function throttle(\n  fn,\n  ms,\n  shouldRunFirst = true,\n) {\n  let interval = null;\n  let isPending;\n  let args;\n\n  return (..._args) => {\n    isPending = true;\n    args = _args;\n\n    if (!interval) {\n      if (shouldRunFirst) {\n        isPending = false;\n        // @ts-ignore\n        fn(...args);\n      }\n\n      interval = window.setInterval(() => {\n        if (!isPending) {\n          window.clearInterval(interval);\n          interval = null;\n          return;\n        }\n\n        isPending = false;\n        // @ts-ignore\n        fn(...args);\n      }, ms);\n    }\n  };\n}\n\nexport function throttleWithRaf(fn) {\n  let waiting = false;\n  let args;\n\n  return function (..._args) {\n    args = _args;\n\n    if (!waiting) {\n      waiting = true;\n\n      requestAnimationFrame(() => {\n        waiting = false;\n        fn(...args);\n      });\n    }\n  };\n}\n\nexport function debounce(fn, ms, shouldRunFirst = true, shouldRunLast = true) {\n  let waitingTimeout = null;\n\n  return function () {\n    if (waitingTimeout) {\n      clearTimeout(waitingTimeout);\n      waitingTimeout = null;\n    } else if (shouldRunFirst) {\n      fn();\n    }\n\n    waitingTimeout = setTimeout(() => {\n      if (shouldRunLast) {\n        fn();\n      }\n\n      waitingTimeout = null;\n    }, ms);\n  };\n}\n","import { GUTTER, PLOT_PIE_RADIUS_FACTOR, MILISECONDS_IN_DAY, SIMPLIFIER_MIN_POINTS } from './constants';\n\nexport function xScaleLevelToStep(scaleLevel) {\n  return Math.pow(2, scaleLevel);\n}\n\nexport function xStepToScaleLevel(step) {\n  return Math.ceil(Math.log2(step || 1));\n}\n\nconst SCALE_LEVELS = [\n  1, 2, 8, 18, 50, 100, 250, 500, 1000, 2500, 5000, 10000, 25000, 50000, 100000,\n  250000, 500000, 1000000, 2500000, 5000000, 10000000, 25000000, 50000000, 100000000,\n];\n\nexport function yScaleLevelToStep(scaleLevel) {\n  return SCALE_LEVELS[scaleLevel] || SCALE_LEVELS[SCALE_LEVELS.length - 1];\n}\n\nexport function yStepToScaleLevel(neededStep) {\n  return SCALE_LEVELS.findIndex((step) => step >= neededStep) || SCALE_LEVELS.length - 1;\n}\n\nexport function applyYEdgeOpacity(opacity, xPx, plotWidth) {\n  const edgeOffset = Math.min(xPx + GUTTER, plotWidth - xPx);\n  if (edgeOffset <= GUTTER * 4) {\n    opacity = Math.min(1, opacity, edgeOffset / (GUTTER * 4));\n  }\n  return opacity;\n}\n\nexport function applyXEdgeOpacity(opacity, yPx) {\n  return (yPx - GUTTER <= GUTTER * 2)\n    ? Math.min(1, opacity, (yPx - GUTTER) / (GUTTER * 2))\n    : opacity;\n}\n\nexport function getPieRadius(projection) {\n  return Math.min(...projection.getSize()) * PLOT_PIE_RADIUS_FACTOR;\n}\n\nexport function getPieTextSize(percent, radius) {\n  return (radius + percent * 200) / 10;\n}\n\nexport function getPieTextShift(percent, radius, shift) {\n  return percent >= 0.99 ? 0 : Math.min(1 - Math.log(percent * 30) / 5, 4 / 5) * radius;\n}\n\nexport function isDataRange(labelFrom, labelTo) {\n  return Math.abs(labelTo.value - labelFrom.value) > MILISECONDS_IN_DAY;\n}\n\nexport function getSimplificationDelta(pointsLength) {\n  return pointsLength >= SIMPLIFIER_MIN_POINTS ? Math.min((pointsLength / 1000), 1) : 0;\n}\n","import { createTransitionManager } from './TransitionManager';\nimport { throttleWithRaf, getMaxMin, mergeArrays, proxyMerge, sumArrays } from './utils';\nimport {\n  AXES_MAX_COLUMN_WIDTH,\n  AXES_MAX_ROW_HEIGHT,\n  X_AXIS_HEIGHT,\n  ANIMATE_PROPS,\n  Y_AXIS_ZERO_BASED_THRESHOLD,\n} from './constants';\nimport { xStepToScaleLevel, yScaleLevelToStep, yStepToScaleLevel } from './formulas';\n\nexport function createStateManager(data, viewportSize, callback) {\n  const _range = { begin: 0, end: 1 };\n  const _filter = _buildDefaultFilter();\n  const _transitionConfig = _buildTransitionConfig();\n  const _transitions = createTransitionManager(_runCallback);\n  const _runCallbackOnRaf = throttleWithRaf(_runCallback);\n\n  let _state = {};\n\n  function update({ range = {}, filter = {}, focusOn, minimapDelta } = {}, noTransition) {\n    Object.assign(_range, range);\n    Object.assign(_filter, filter);\n\n    const prevState = _state;\n    _state = calculateState(data, viewportSize, _range, _filter, focusOn, minimapDelta, prevState);\n\n    if (!noTransition) {\n      _transitionConfig.forEach(({ prop, duration, options }) => {\n        const transition = _transitions.get(prop);\n        const currentTarget = transition ? transition.to : prevState[prop];\n\n        if (currentTarget !== undefined && currentTarget !== _state[prop]) {\n          const current = transition\n            ? (options.includes('fast') ? prevState[prop] : transition.current)\n            : prevState[prop];\n\n          if (transition) {\n            _transitions.remove(prop);\n          }\n\n          _transitions.add(prop, current, _state[prop], duration, options);\n        }\n      });\n    }\n\n    if (!_transitions.isRunning() || !_transitions.isFast()) {\n      _runCallbackOnRaf();\n    }\n  }\n\n  function hasAnimations() {\n    return _transitions.isFast();\n  }\n\n  function _buildTransitionConfig() {\n    const transitionConfig = [];\n    const datasetVisibilities = data.datasets.map(({ key }) => `opacity#${key} 300`);\n\n    mergeArrays([\n      ANIMATE_PROPS,\n      datasetVisibilities,\n    ]).forEach((transition) => {\n      const [prop, duration, ...options] = transition.split(' ');\n      transitionConfig.push({ prop, duration, options });\n    });\n\n    return transitionConfig;\n  }\n\n  function _buildDefaultFilter() {\n    const filter = {};\n\n    data.datasets.forEach(({ key }) => {\n      filter[key] = true;\n    });\n\n    return filter;\n  }\n\n  function _runCallback() {\n    const state = _transitions.isFast() ? proxyMerge(_state, _transitions.getState()) : _state;\n    state.static = _state;\n    callback(state);\n  }\n\n  return { update, hasAnimations };\n}\n\nfunction calculateState(data, viewportSize, range, filter, focusOn, minimapDelta, prevState) {\n  const { begin, end } = range;\n  const totalXWidth = data.xLabels.length - 1;\n\n  const labelFromIndex = Math.max(0, Math.ceil(totalXWidth * begin));\n  const labelToIndex = Math.min(Math.floor(totalXWidth * end), totalXWidth);\n\n  const xAxisScale = calculateXAxisScale(viewportSize.width, labelFromIndex, labelToIndex);\n\n  const yRanges = data.isStacked\n    ? calculateYRangesStacked(data, filter, labelFromIndex, labelToIndex, prevState)\n    : calculateYRanges(data, filter, labelFromIndex, labelToIndex, prevState);\n\n  const yAxisScale = calculateYAxisScale(viewportSize.height, yRanges.yMinViewport, yRanges.yMaxViewport);\n  const yAxisScaleSecond = data.hasSecondYAxis &&\n    calculateYAxisScale(viewportSize.height, yRanges.yMinViewportSecond, yRanges.yMaxViewportSecond);\n\n  const yStep = yScaleLevelToStep(yAxisScale);\n  yRanges.yMinViewport -= yRanges.yMinViewport % yStep;\n\n  if (yAxisScaleSecond) {\n    const yStepSecond = yScaleLevelToStep(yAxisScaleSecond);\n    yRanges.yMinViewportSecond -= yRanges.yMinViewportSecond % yStepSecond;\n  }\n\n  const datasetsOpacity = {};\n  data.datasets.forEach(({ key }) => {\n    datasetsOpacity[`opacity#${key}`] = filter[key] ? 1 : 0;\n  });\n\n  // TODO perf\n  return Object.assign(\n    {\n      totalXWidth,\n      xAxisScale,\n      yAxisScale,\n      yAxisScaleSecond,\n      labelFromIndex: Math.max(0, labelFromIndex - 1),\n      labelToIndex: Math.min(labelToIndex + 1, totalXWidth),\n      filter: Object.assign({}, filter),\n      focusOn: focusOn !== undefined ? focusOn : prevState.focusOn,\n      minimapDelta: minimapDelta !== undefined ? minimapDelta : prevState.minimapDelta,\n    },\n    yRanges,\n    datasetsOpacity,\n    range,\n  );\n}\n\nfunction calculateYRanges(data, filter, labelFromIndex, labelToIndex, prevState) {\n  const secondaryYAxisDataset = data.hasSecondYAxis && data.datasets.slice(-1)[0];\n  const filteredDatasets = data.datasets.filter((d) => filter[d.key] && d !== secondaryYAxisDataset);\n\n  const yRanges = calculateYRangesForGroup(data, labelFromIndex, labelToIndex, prevState, filteredDatasets);\n\n  if (secondaryYAxisDataset) {\n    const {\n      yMinViewport: yMinViewportSecond,\n      yMaxViewport: yMaxViewportSecond,\n      yMinMinimap: yMinMinimapSecond,\n      yMaxMinimap: yMaxMinimapSecond,\n    } = calculateYRangesForGroup(data, labelFromIndex, labelToIndex, prevState, [secondaryYAxisDataset]);\n\n    Object.assign(yRanges, {\n      yMinViewportSecond,\n      yMaxViewportSecond,\n      yMinMinimapSecond,\n      yMaxMinimapSecond,\n    });\n  }\n\n  return yRanges;\n}\n\nfunction calculateYRangesForGroup(data, labelFromIndex, labelToIndex, prevState, datasets) {\n  const { min: yMinMinimapReal = prevState.yMinMinimap, max: yMaxMinimap = prevState.yMaxMinimap }\n    = getMaxMin(mergeArrays(datasets.map(({ yMax, yMin }) => [yMax, yMin])));\n  const yMinMinimap = yMinMinimapReal / yMaxMinimap > Y_AXIS_ZERO_BASED_THRESHOLD ? yMinMinimapReal : 0;\n\n  let yMinViewport;\n  let yMaxViewport;\n\n  if (labelFromIndex === 0 && labelToIndex === data.xLabels.length - 1) {\n    yMinViewport = yMinMinimap;\n    yMaxViewport = yMaxMinimap;\n  } else {\n    const filteredValues = datasets.map(({ values }) => values);\n    const viewportValues = filteredValues.map((values) => values.slice(labelFromIndex, labelToIndex + 1));\n    const viewportMaxMin = getMaxMin(mergeArrays(viewportValues));\n    const yMinViewportReal = viewportMaxMin.min !== undefined ? viewportMaxMin.min : prevState.yMinViewport;\n    yMaxViewport = viewportMaxMin.max !== undefined ? viewportMaxMin.max : prevState.yMaxViewport;\n    yMinViewport = yMinViewportReal / yMaxViewport > Y_AXIS_ZERO_BASED_THRESHOLD ? yMinViewportReal : 0;\n  }\n\n  return {\n    yMinViewport,\n    yMaxViewport,\n    yMinMinimap,\n    yMaxMinimap,\n  };\n}\n\nfunction calculateYRangesStacked(data, filter, labelFromIndex, labelToIndex, prevState) {\n  const filteredDatasets = data.datasets.filter((d) => filter[d.key]);\n  const filteredValues = filteredDatasets.map(({ values }) => values);\n\n  const sums = filteredValues.length ? sumArrays(filteredValues) : [];\n  const { max: yMaxMinimap = prevState.yMaxMinimap } = getMaxMin(sums);\n  const { max: yMaxViewport = prevState.yMaxViewport } = getMaxMin(sums.slice(labelFromIndex, labelToIndex + 1));\n\n  return {\n    yMinViewport: 0,\n    yMaxViewport,\n    yMinMinimap: 0,\n    yMaxMinimap,\n  };\n}\n\nfunction calculateXAxisScale(plotWidth, labelFromIndex, labelToIndex) {\n  const viewportLabelsCount = labelToIndex - labelFromIndex;\n  const maxColumns = Math.floor(plotWidth / AXES_MAX_COLUMN_WIDTH);\n\n  return xStepToScaleLevel(viewportLabelsCount / maxColumns);\n}\n\nfunction calculateYAxisScale(plotHeight, yMin, yMax) {\n  const availableHeight = plotHeight - X_AXIS_HEIGHT;\n  const viewportLabelsCount = yMax - yMin;\n  const maxRows = Math.floor(availableHeight / AXES_MAX_ROW_HEIGHT);\n\n  return yStepToScaleLevel(viewportLabelsCount / maxRows);\n}\n","export const createElement = (tagName = 'div') => {\n  return document.createElement(tagName);\n};\n\nexport function addEventListener(element, event, cb) {\n  element.addEventListener(event, cb);\n}\n\nexport function removeEventListener(element, event, cb) {\n  element.removeEventListener(event, cb);\n}\n","import { createElement } from './minifiers';\n\nexport function toggleText(element, newText, className = '', inverse = false) {\n  const container = element.parentNode;\n  container.classList.add('lovely-chart--transition-container');\n\n  const newElement = createElement(element.tagName);\n  newElement.className = `${className} lovely-chart--transition lovely-chart--position-${inverse ? 'top' : 'bottom'} lovely-chart--state-hidden`;\n  newElement.innerHTML = newText;\n\n  const selector = className.length ? `.${className.split(' ').join('.')}` : '';\n  const oldElements = container.querySelectorAll(`${selector}.lovely-chart--state-hidden`);\n  oldElements.forEach(e => e.remove());\n\n  element.classList.add('lovely-chart--transition');\n  element.classList.remove('lovely-chart--position-bottom', 'lovely-chart--position-top');\n  element.classList.add(inverse ? 'lovely-chart--position-bottom' : 'lovely-chart--position-top');\n  container.insertBefore(newElement, element.nextSibling);\n\n  toggleElementIn(newElement);\n  toggleElementOut(element);\n\n  return newElement;\n}\n\nfunction toggleElementIn(element) {\n  // Remove and add `animated` class to re-trigger animation\n  element.classList.remove('lovely-chart--state-animated');\n  element.classList.add('lovely-chart--state-animated');\n  element.classList.remove('lovely-chart--state-hidden');\n}\n\nfunction toggleElementOut(element) {\n  // Remove and add `animated` class to re-trigger animation\n  element.classList.remove('lovely-chart--state-animated');\n  element.classList.add('lovely-chart--state-animated');\n  element.classList.add('lovely-chart--state-hidden');\n}\n","import { MONTHS, WEEK_DAYS, WEEK_DAYS_SHORT } from './constants';\n\nexport function statsFormatDayHour(labels) {\n  return labels.map((value) => ({\n    value,\n    text: `${value}:00`,\n  }));\n}\n\nexport function statsFormatDayHourFull(value) {\n  return `${value}:00`;\n}\n\nexport function statsFormatDay(labels) {\n  return labels.map((value) => {\n    const date = new Date(value);\n    const day = date.getDate();\n    const month = MONTHS[date.getMonth()];\n\n    return ({\n      value,\n      text: `${day} ${month}`,\n    });\n  });\n}\n\nexport function statsFormatMin(labels) {\n  return labels.map((value) => ({\n    value,\n    text: new Date(value).toString().match(/(\\d+:\\d+):/)[1],\n  }));\n}\n\nexport function statsFormatText(labels) {\n  return labels.map((value, i) => {\n    return ({\n      value: i,\n      text: value,\n    });\n  });\n}\n\nexport function humanize(value, decimals = 1) {\n  if (value >= 1e6) {\n    return keepThreeDigits(value / 1e6, decimals) + 'M';\n  } else if (value >= 1e3) {\n    return keepThreeDigits(value / 1e3, decimals) + 'K';\n  }\n\n  return value;\n}\n\n// TODO perf\nfunction keepThreeDigits(value, decimals) {\n  return value\n    .toFixed(decimals)\n    .replace(/(\\d{3,})\\.\\d+/, '$1')\n    .replace(/\\.0+$/, '');\n}\n\nexport function formatInteger(n) {\n  return String(n).replace(/\\d(?=(\\d{3})+$)/g, '$& ');\n}\n\nexport function getFullLabelDate(label, { isShort = false } = {}) {\n  return getLabelDate(label, { isShort, displayWeekDay: true });\n}\n\nexport function getLabelDate(label, { isShort = false, displayWeekDay = false, displayYear = true, displayHours = false } = {}) {\n  const { value } = label;\n  const date = new Date(value);\n  const weekDaysArray = isShort ? WEEK_DAYS_SHORT : WEEK_DAYS;\n\n  let string = `${date.getUTCDate()} ${MONTHS[date.getUTCMonth()]}`;\n  if (displayWeekDay) {\n    string = `${weekDaysArray[date.getUTCDay()]}, ` + string;\n  }\n  if (displayYear) {\n    string += ` ${date.getUTCFullYear()}`;\n  }\n  if (displayHours) {\n    string += `, ${('0' + date.getUTCHours()).slice(-2)}:${('0' + date.getUTCMinutes()).slice(-2)}`\n  }\n\n  return string;\n}\n\nexport function getLabelTime(label) {\n  return new Date(label.value).toString().match(/(\\d+:\\d+):/)[1];\n}\n","function detectSkin() {\n  return document.documentElement.classList.contains('theme-dark') ? 'skin-night' : 'skin-day';\n}\n\nlet skin = detectSkin();\n\nconst COLORS = {\n  'skin-day': {\n    'background': '#FFFFFF',\n    'text-color': '#222222',\n    'minimap-mask': '#E2EEF9/0.6',\n    'minimap-slider': '#C0D1E1',\n    'grid-lines': '#182D3B/0.1',\n    'zoom-out-text': '#108BE3',\n    'tooltip-background': '#FFFFFF',\n    'tooltip-arrow': '#D2D5D7',\n    'mask': '#FFFFFF/0.5',\n    'x-axis-text': '#252529/0.6',\n    'y-axis-text': '#252529/0.6',\n  },\n  'skin-night': {\n    'background': '#242F3E',\n    'text-color': '#FFFFFF',\n    'minimap-mask': '#304259/0.6',\n    'minimap-slider': '#56626D',\n    'grid-lines': '#FFFFFF/0.1',\n    'zoom-out-text': '#48AAF0',\n    'tooltip-background': '#1c2533',\n    'tooltip-arrow': '#D2D5D7',\n    'mask': '#242F3E/0.5',\n    'x-axis-text': '#A3B1C2/0.6',\n    'y-axis-text': '#A3B1C2/0.6',\n  },\n};\n\nconst styleElement = document.createElement('style');\nstyleElement.type = 'text/css';\nstyleElement.appendChild(document.createTextNode(''));\ndocument.head.appendChild(styleElement);\nconst styleSheet = styleElement.sheet;\n\ndocument.documentElement.addEventListener('darkmode', () => {\n  skin = detectSkin();\n});\n\nexport function createColors(datasetColors) {\n  const colors = {};\n  const baseClass = `.lovely-chart--color`;\n\n  ['skin-day', 'skin-night'].forEach((skin) => {\n    colors[skin] = {};\n\n    Object.keys(COLORS[skin]).forEach((prop) => {\n      colors[skin][prop] = hexToChannels(COLORS[skin][prop]);\n    });\n\n    Object.keys(datasetColors).forEach((key) => {\n      colors[skin][`dataset#${key}`] = hexToChannels(datasetColors[key]);\n\n      addCssRule(styleSheet, `.lovely-chart--tooltip-dataset-value${baseClass}-${datasetColors[key].slice(1)}`, `color: ${datasetColors[key]}`);\n      addCssRule(styleSheet, `.lovely-chart--button${baseClass}-${datasetColors[key].slice(1)}`, `border-color: ${datasetColors[key]}; color: ${datasetColors[key]}`);\n      addCssRule(styleSheet, `.lovely-chart--button.lovely-chart--state-checked${baseClass}-${datasetColors[key].slice(1)}`, `background-color: ${datasetColors[key]}`);\n    });\n  });\n\n  return colors;\n}\n\nexport function getCssColor(colors, key, opacity) {\n  return buildCssColor(colors[skin][key], opacity);\n}\n\nfunction hexToChannels(hexWithAlpha) {\n  const [hex, alpha] = hexWithAlpha.replace('#', '').split('/');\n\n  return [\n    parseInt(hex.slice(0, 2), 16),\n    parseInt(hex.slice(2, 4), 16),\n    parseInt(hex.slice(4, 6), 16),\n    alpha ? parseFloat(alpha) : 1,\n  ];\n}\n\nfunction buildCssColor([r, g, b, a = 1], opacity = 1) {\n  return `rgba(${r}, ${g}, ${b}, ${a * opacity})`;\n}\n\nfunction addCssRule(sheet, selector, rule) {\n  sheet.insertRule(`${selector} { ${rule} }`, sheet.cssRules.length);\n}\n","import { proxyMerge } from './utils';\n\nexport function createProjection(params) {\n  const {\n    begin,\n    end,\n    totalXWidth,\n    yMin,\n    yMax,\n    availableWidth,\n    availableHeight,\n    xPadding = 0,\n    yPadding = 0,\n  } = params;\n\n  let effectiveWidth = availableWidth;\n\n  // TODO bug get rid of padding jumps\n  if (begin === 0) {\n    effectiveWidth -= xPadding;\n  }\n  if (end === 1) {\n    effectiveWidth -= xPadding;\n  }\n  const xFactor = effectiveWidth / ((end - begin) * totalXWidth);\n  let xOffsetPx = (begin * totalXWidth) * xFactor;\n  if (begin === 0) {\n    xOffsetPx -= xPadding;\n  }\n\n  const effectiveHeight = availableHeight - yPadding;\n  const yFactor = effectiveHeight / (yMax - yMin);\n  const yOffsetPx = yMin * yFactor;\n\n  function getState() {\n    return { xFactor, xOffsetPx, availableHeight, yFactor, yOffsetPx };\n  }\n\n  function findClosestLabelIndex(xPx) {\n    return Math.round((xPx + xOffsetPx) / xFactor);\n  }\n\n  function copy(overrides, cons) {\n    return createProjection(proxyMerge(params, overrides), cons);\n  }\n\n  function getCenter() {\n    return [\n      availableWidth / 2,\n      availableHeight - effectiveHeight / 2,\n    ];\n  }\n\n  function getSize() {\n    return [availableWidth, effectiveHeight];\n  }\n\n  function getParams() {\n    return params;\n  }\n\n  return {\n    findClosestLabelIndex,\n    copy,\n    getCenter,\n    getSize,\n    getParams,\n    getState,\n  };\n}\n\nexport function toPixels(projection, labelIndex, value) {\n  const { xFactor, xOffsetPx, availableHeight, yFactor, yOffsetPx } = projection.getState();\n\n  return [\n    labelIndex * xFactor - xOffsetPx,\n    availableHeight - (value * yFactor - yOffsetPx),\n  ];\n}\n","import { DPR } from './constants';\nimport { createElement } from './minifiers';\n\nexport function setupCanvas(container, { width, height }) {\n  const canvas = createElement('canvas');\n\n  canvas.width = width * DPR;\n  canvas.height = height * DPR;\n  canvas.style.width = '100%';\n  canvas.style.height = `${height}px`;\n\n  const context = canvas.getContext('2d');\n  context.scale(DPR, DPR);\n\n  container.appendChild(canvas);\n\n  return { canvas, context };\n}\n\nexport function clearCanvas(canvas, context) {\n  context.clearRect(0, 0, canvas.width, canvas.height);\n}\n","import { sumArrays } from './utils';\n\nexport function preparePoints(data, datasets, range, visibilities, bounds, pieToArea) {\n  let values = datasets.map(({ values }) => (\n    values.slice(range.from, range.to + 1)\n  ));\n\n  if (data.isPie && !pieToArea) {\n    values = prepareSumsByX(values);\n  }\n\n  const points = values.map((datasetValues, i) => (\n    datasetValues.map((value, j) => {\n      let visibleValue = value;\n\n      if (data.isStacked) {\n        visibleValue *= visibilities[i];\n      }\n\n      return {\n        labelIndex: range.from + j,\n        value,\n        visibleValue,\n        stackOffset: 0,\n        stackValue: visibleValue,\n      };\n    })\n  ));\n\n  if (data.isPercentage) {\n    preparePercentage(points, bounds);\n  }\n\n  if (data.isStacked) {\n    prepareStacked(points);\n  }\n\n  return points;\n}\n\nfunction getSumsByY(points) {\n  return sumArrays(points.map((datasetPoints) => (\n    datasetPoints.map(({ visibleValue }) => visibleValue)\n  )));\n}\n\n// TODO perf cache for [0..1], use in state\nfunction preparePercentage(points, bounds) {\n  const sumsByY = getSumsByY(points);\n\n  points.forEach((datasetPoints) => {\n    datasetPoints.forEach((point, j) => {\n      point.percent = point.visibleValue / sumsByY[j];\n      point.visibleValue = point.percent * bounds.yMax;\n    });\n  });\n}\n\nfunction prepareStacked(points) {\n  const accum = [];\n\n  points.forEach((datasetPoints) => {\n    datasetPoints.forEach((point, j) => {\n      if (accum[j] === undefined) {\n        accum[j] = 0;\n      }\n\n      point.stackOffset = accum[j];\n      accum[j] += point.visibleValue;\n      point.stackValue = accum[j];\n    });\n  });\n}\n\nfunction prepareSumsByX(values) {\n  return values.map((datasetValues) => (\n    [datasetValues.reduce((sum, value) => sum + value, 0)]\n  ));\n}\n","export const simplify = (() => {\n  function simplify(points, indexes, fixedPoints) {\n    if (points.length < 6) {\n      return function () {\n        return {\n          points: points,\n          indexes: indexes,\n          removed: [],\n        };\n      };\n    }\n\n    let worker = precalculate(points, fixedPoints);\n\n    return function (delta) {\n      let result = [],\n        resultIndexes = [],\n        removed = [];\n\n      let delta2 = delta * delta,\n        markers = worker(delta2);\n\n      for (let i = 0, l = points.length; i < l; i++) {\n        if (markers[i] >= delta2 || i == 0 || i == l - 1) {\n          result.push(points[i]);\n          resultIndexes.push(indexes ? indexes[i] : i);\n        } else {\n          removed.push(i);\n        }\n      }\n      return {\n        points: result,\n        indexes: resultIndexes,\n        removed: removed,\n      };\n    };\n  }\n\n  let E1 = 1.0 / Math.pow(2, 22), // максимальная дельта\n    MAXLIMIT = 100000;\n\n  function precalculate(points, fixedPoints) {\n\n    let len = points.length,\n      distances = [],\n      queue = [],\n      maximumDelta;\n    for (let i = 0, l = points.length; i < l; ++i) {\n      distances[i] = 0;\n    }\n\n    if (!fixedPoints) {\n      fixedPoints = [];\n    }\n\n    //инициализируем дерево срединным значением\n    //чтобы не попадает в ситуации когда начало линии близко к концу(те полигон)\n    //и правильные расчеты сложны\n    let subdivisionTree = 0;\n\n    for (let i = 0, l = fixedPoints.length; i < l; ++i) {\n      distances[fixedPoints[i]] = MAXLIMIT;\n    }\n\n\n    function worker(params) {\n\n      let start = params.start,\n        end = params.end,\n        record = params.record,\n        currentLimit = params.currentLimit,\n        usedDistance = 0;\n\n      if (!record) {\n        //let deltaShifts = getDeltaShifts(points);\n        let usedIndex = -1,\n          vector = [\n            points[end][0] - points[start][0],\n            points[end][1] - points[start][1],\n          ];\n        for (let i = 0, l = fixedPoints.length; i < l; ++i) {\n          let fixId = fixedPoints[i];\n          if (fixId > start) {\n            if (fixId < end) {\n              usedIndex = fixId;\n              usedDistance = MAXLIMIT;\n              break;\n            } else {\n              break;\n            }\n          }\n        }\n        if (usedIndex < 0) {\n          if (Math.abs(vector[0]) > E1 || Math.abs(vector[1]) > E1) {\n            let vectorLength = vector[0] * vector[0] + vector[1] * vector[1],\n              vectorLength_1 = +1.0 / vectorLength;\n\n            for (let i = start + 1; i < end; ++i) {\n              let segmentDistance = pointToSegmentDistanceSquare(points[i], points[start], points[end], vector, vectorLength_1);\n\n              if (segmentDistance > usedDistance) {\n                usedIndex = i;\n                usedDistance = segmentDistance;\n              }\n            }\n\n          } else {\n            //фиксируем на среднинной точке\n            usedIndex = Math.round((start + end) * 0.5);\n            usedDistance = currentLimit;\n          }\n          distances[usedIndex] = usedDistance;\n        }\n        record = {\n          start: start,\n          end: end,\n          index: usedIndex,\n          distance: usedDistance,\n        };\n      }\n\n      if (record.index && record.distance > maximumDelta) {\n        if (record.index - start >= 2) {\n          queue.push({\n            start: start,\n            end: record.index,\n            record: record.left,\n            currentLimit: record.distance,\n            parent: record,\n            parentProperty: 'left',\n          });\n        }\n        if (end - record.index >= 2) {\n          queue.push({\n            start: record.index,\n            end: end,\n            record: record.right,\n            currentLimit: record.distance,\n            parent: record,\n            parentProperty: 'right',\n          });\n        }\n      }\n\n      return record;\n    }\n\n    function tick() {\n      let request = queue.pop(),\n        result = worker(request);\n\n      if (request.parent && request.parentProperty) {\n        request.parent[request.parentProperty] = result;\n      }\n\n      return result;\n    }\n\n    return function (delta) {\n      maximumDelta = delta;\n      queue.push({\n        start: 0,\n        end: len - 1,\n        record: subdivisionTree,\n        currentLimit: MAXLIMIT,\n      });\n      subdivisionTree = tick();\n\n      while (queue.length) {\n        tick();\n      }\n\n      return distances;\n    };\n\n  }\n\n  function pointToSegmentDistanceSquare(p, v1, v2, dv, dvlen_1) {\n\n    let t;\n    let vx = +v1[0],\n      vy = +v1[1];\n\n    t = +((p[0] - vx) * dv[0] + (p[1] - vy) * dv[1]) * (dvlen_1);\n\n    if (t > 1) {\n      vx = +v2[0];\n      vy = +v2[1];\n    } else if (t > 0) {\n      vx += +dv[0] * t;\n      vy += +dv[1] * t;\n    }\n\n    let a = +p[0] - vx,\n      b = +p[1] - vy;\n\n    return +a * a + b * b;\n  }\n\n  return simplify;\n})();\n","import { getCssColor } from './skin';\nimport { mergeArrays } from './utils';\nimport { getPieRadius, getPieTextShift, getPieTextSize } from './formulas';\nimport { PLOT_BARS_WIDTH_SHIFT, PLOT_PIE_SHIFT, PIE_MINIMUM_VISIBLE_PERCENT } from './constants';\nimport { simplify } from './simplify';\nimport { toPixels } from './Projection';\n\nexport function drawDatasets(\n  context, state, data,\n  range, points, projection, secondaryPoints, secondaryProjection,\n  lineWidth, visibilities, colors, pieToBar, simplification,\n) {\n  data.datasets.forEach(({ key, type, hasOwnYAxis }, i) => {\n    if (!visibilities[i]) {\n      return;\n    }\n\n    const options = {\n      color: getCssColor(colors, `dataset#${key}`),\n      lineWidth,\n      opacity: data.isStacked ? 1 : visibilities[i],\n      simplification,\n    };\n\n    const datasetType = type === 'pie' && pieToBar ? 'bar' : type;\n    let datasetPoints = hasOwnYAxis ? secondaryPoints : points[i];\n    let datasetProjection = hasOwnYAxis ? secondaryProjection : projection;\n\n    if (datasetType === 'area') {\n      const { yMin, yMax } = projection.getParams();\n      const yHeight = yMax - yMin;\n      const bottomLine = [\n        { labelIndex: range.from, stackValue: 0 },\n        { labelIndex: range.to, stackValue: 0 },\n      ];\n      const topLine = [\n        { labelIndex: range.to, stackValue: yHeight },\n        { labelIndex: range.from, stackValue: yHeight },\n      ];\n\n      datasetPoints = mergeArrays([points[i - 1] || bottomLine, topLine]);\n    }\n\n    if (datasetType === 'pie') {\n      options.center = projection.getCenter();\n      options.radius = getPieRadius(projection);\n      options.pointerVector = state.focusOn;\n    }\n\n    if (datasetType === 'bar') {\n      const [x0] = toPixels(projection, 0, 0);\n      const [x1] = toPixels(projection, 1, 0);\n\n      options.lineWidth = x1 - x0;\n      options.focusOn = state.focusOn;\n    }\n\n    drawDataset(datasetType, context, datasetPoints, datasetProjection, options);\n  });\n\n  if (state.focusOn && (data.isBars || data.isSteps)) {\n    const [x0] = toPixels(projection, 0, 0);\n    const [x1] = toPixels(projection, 1, 0);\n\n    drawBarsMask(context, projection, {\n      focusOn: state.focusOn,\n      color: getCssColor(colors, 'mask'),\n      lineWidth: data.isSteps ? x1 - x0 + lineWidth : x1 - x0,\n    });\n  }\n}\n\nfunction drawDataset(type, ...args) {\n  switch (type) {\n    case 'line':\n      return drawDatasetLine(...args);\n    case 'bar':\n      return drawDatasetBars(...args);\n    case 'step':\n      return drawDatasetSteps(...args);\n    case 'area':\n      return drawDatasetArea(...args);\n    case 'pie':\n      return drawDatasetPie(...args);\n  }\n}\n\nfunction drawDatasetLine(context, points, projection, options) {\n  context.beginPath();\n\n  let pixels = [];\n\n  for (let j = 0, l = points.length; j < l; j++) {\n    const { labelIndex, stackValue } = points[j];\n    pixels.push(toPixels(projection, labelIndex, stackValue));\n  }\n\n  if (options.simplification) {\n    const simplifierFn = simplify(pixels);\n    pixels = simplifierFn(options.simplification).points;\n  }\n\n  pixels.forEach(([x, y]) => {\n    context.lineTo(x, y);\n  });\n\n  context.save();\n  context.strokeStyle = options.color;\n  context.lineWidth = options.lineWidth;\n  context.globalAlpha = options.opacity;\n  context.lineJoin = 'bevel';\n  context.lineCap = 'butt';\n  context.stroke();\n  context.restore();\n}\n\n// TODO try areas\nfunction drawDatasetBars(context, points, projection, options) {\n  const { yMin } = projection.getParams();\n\n  context.save();\n  context.globalAlpha = options.opacity;\n  context.fillStyle = options.color;\n\n  for (let j = 0, l = points.length; j < l; j++) {\n    const { labelIndex, stackValue, stackOffset = 0 } = points[j];\n\n    const [, yFrom] = toPixels(projection, labelIndex, Math.max(stackOffset, yMin));\n    const [x, yTo] = toPixels(projection, labelIndex, stackValue);\n    const rectX = x - options.lineWidth / 2;\n    const rectY = yTo;\n    const rectW = options.opacity === 1 ?\n      options.lineWidth + PLOT_BARS_WIDTH_SHIFT :\n      options.lineWidth + PLOT_BARS_WIDTH_SHIFT * options.opacity;\n    const rectH = yFrom - yTo;\n\n    context.fillRect(rectX, rectY, rectW, rectH);\n  }\n\n  context.restore();\n}\n\nfunction drawDatasetSteps(context, points, projection, options) {\n  context.beginPath();\n\n  let pixels = [];\n\n  for (let j = 0, l = points.length; j < l; j++) {\n    const { labelIndex, stackValue } = points[j];\n    pixels.push(\n      toPixels(projection, labelIndex - PLOT_BARS_WIDTH_SHIFT, stackValue),\n      toPixels(projection, labelIndex + PLOT_BARS_WIDTH_SHIFT, stackValue),\n    );\n  }\n\n  pixels.forEach(([x, y]) => {\n    context.lineTo(x, y);\n  });\n\n  context.save();\n  context.strokeStyle = options.color;\n  context.lineWidth = options.lineWidth;\n  context.globalAlpha = options.opacity;\n  context.stroke();\n  context.restore();\n}\n\nfunction drawBarsMask(context, projection, options) {\n  const [xCenter, yCenter] = projection.getCenter();\n  const [width, height] = projection.getSize();\n\n  const [x] = toPixels(projection, options.focusOn, 0);\n\n  context.fillStyle = options.color;\n  context.fillRect(xCenter - width / 2, yCenter - height / 2, x - options.lineWidth / 2 + PLOT_BARS_WIDTH_SHIFT, height);\n  context.fillRect(x + options.lineWidth / 2, yCenter - height / 2, width - (x + options.lineWidth / 2), height);\n}\n\nfunction drawDatasetArea(context, points, projection, options) {\n  context.beginPath();\n\n  let pixels = [];\n\n  for (let j = 0, l = points.length; j < l; j++) {\n    const { labelIndex, stackValue } = points[j];\n    pixels.push(toPixels(projection, labelIndex, stackValue));\n  }\n\n  if (options.simplification) {\n    const simplifierFn = simplify(pixels);\n    pixels = simplifierFn(options.simplification).points;\n  }\n\n  pixels.forEach(([x, y]) => {\n    context.lineTo(x, y);\n  });\n\n  context.save();\n  context.fillStyle = options.color;\n  context.lineWidth = options.lineWidth;\n  context.globalAlpha = options.opacity;\n  context.lineJoin = 'bevel';\n  context.lineCap = 'butt';\n  context.fill();\n  context.restore();\n}\n\nfunction drawDatasetPie(context, points, projection, options) {\n  const { visibleValue, stackValue, stackOffset = 0 } = points[0];\n\n  if (!visibleValue) {\n    return;\n  }\n\n  const { yMin, yMax } = projection.getParams();\n  const percentFactor = 1 / (yMax - yMin);\n  const percent = visibleValue * percentFactor;\n\n  const beginAngle = stackOffset * percentFactor * Math.PI * 2 - Math.PI / 2;\n  const endAngle = stackValue * percentFactor * Math.PI * 2 - Math.PI / 2;\n\n  const { radius = 120, center: [x, y], pointerVector } = options;\n\n  const shift = (\n    pointerVector &&\n    beginAngle <= pointerVector.angle &&\n    pointerVector.angle < endAngle &&\n    pointerVector.distance <= radius\n  ) ? PLOT_PIE_SHIFT : 0;\n\n  const shiftAngle = (beginAngle + endAngle) / 2;\n  const directionX = Math.cos(shiftAngle);\n  const directionY = Math.sin(shiftAngle);\n  const shiftX = directionX * shift;\n  const shiftY = directionY * shift;\n\n  context.save();\n\n  context.beginPath();\n  context.fillStyle = options.color;\n  context.moveTo(x + shiftX, y + shiftY);\n  context.arc(x + shiftX, y + shiftY, radius, beginAngle, endAngle);\n  context.lineTo(x + shiftX, y + shiftY);\n  context.fill();\n\n  if (percent >= PIE_MINIMUM_VISIBLE_PERCENT) {\n    context.font = `700 ${getPieTextSize(percent, radius)}px Helvetica, Arial, sans-serif`;\n    context.textAlign = 'center';\n    context.textBaseline = 'middle';\n    context.fillStyle = 'white';\n    const textShift = getPieTextShift(percent, radius);\n    context.fillText(\n      `${Math.round(percent * 100)}%`, x + directionX * textShift + shiftX, y + directionY * textShift + shiftY,\n    );\n  }\n\n  context.restore();\n}\n","import { addEventListener, removeEventListener } from './minifiers';\nimport { LONG_PRESS_TIMEOUT } from './constants';\n\nexport function captureEvents(element, options) {\n  let captureEvent = null;\n  let longPressTimeout = null;\n\n  function onCapture(e) {\n    captureEvent = e;\n\n    if (e.type === 'mousedown') {\n      addEventListener(document, 'mousemove', onMove);\n      addEventListener(document, 'mouseup', onRelease);\n    } else if (e.type === 'touchstart') {\n      addEventListener(document, 'touchmove', onMove);\n      addEventListener(document, 'touchend', onRelease);\n      addEventListener(document, 'touchcancel', onRelease);\n\n      // https://stackoverflow.com/questions/11287877/how-can-i-get-e-offsetx-on-mobile-ipad\n      // Android does not have this value, and iOS has it but as read-only.\n      if (e.pageX === undefined) {\n        e.pageX = e.touches[0].pageX;\n      }\n    }\n\n    if (options.draggingCursor) {\n      document.body.classList.add(`cursor-${options.draggingCursor}`);\n    }\n\n    options.onCapture && options.onCapture(e);\n\n    if (options.onLongPress) {\n      longPressTimeout = setTimeout(() => options.onLongPress(), LONG_PRESS_TIMEOUT);\n    }\n  }\n\n  function onRelease(e) {\n    if (captureEvent) {\n      if (longPressTimeout) {\n        clearTimeout(longPressTimeout);\n        longPressTimeout = null;\n      }\n\n      if (options.draggingCursor) {\n        document.body.classList.remove(`cursor-${options.draggingCursor}`);\n      }\n\n      removeEventListener(document, 'mouseup', onRelease);\n      removeEventListener(document, 'mousemove', onMove);\n      removeEventListener(document, 'touchcancel', onRelease);\n      removeEventListener(document, 'touchend', onRelease);\n      removeEventListener(document, 'touchmove', onMove);\n\n      captureEvent = null;\n\n      options.onRelease && options.onRelease(e);\n    }\n  }\n\n  function onMove(e) {\n    if (captureEvent) {\n      if (longPressTimeout) {\n        clearTimeout(longPressTimeout);\n        longPressTimeout = null;\n      }\n\n      if (e.type === 'touchmove' && e.pageX === undefined) {\n        e.pageX = e.touches[0].pageX;\n      }\n\n      options.onDrag && options.onDrag(e, captureEvent, {\n        dragOffsetX: e.pageX - captureEvent.pageX,\n      });\n    }\n  }\n\n  addEventListener(element, 'mousedown', onCapture);\n  addEventListener(element, 'touchstart', onCapture);\n}\n","import { setupCanvas, clearCanvas } from './canvas';\nimport { BALLOON_OFFSET, X_AXIS_HEIGHT } from './constants';\nimport { getPieRadius } from './formulas';\nimport { formatInteger, getLabelDate, getLabelTime, statsFormatDayHourFull } from './format';\nimport { getCssColor } from './skin';\nimport { throttle, throttleWithRaf } from './utils';\nimport { addEventListener, createElement } from './minifiers';\nimport { toPixels } from './Projection';\n\nexport function createTooltip(container, data, plotSize, colors, onZoom, onFocus) {\n  let _state;\n  let _points;\n  let _projection;\n  let _secondaryPoints;\n  let _secondaryProjection;\n\n  let _element;\n  let _canvas;\n  let _context;\n  let _balloon;\n\n  let _offsetX;\n  let _offsetY;\n  let _clickedOnLabel = null;\n\n  let _isZoomed = false;\n  let _isZooming = false;\n\n  const _selectLabelOnRaf = throttleWithRaf(_selectLabel);\n  const _throttledUpdateContent = throttle(_updateContent, 100, true, true);\n\n  _setupLayout();\n\n  function update(state, points, projection, secondaryPoints, secondaryProjection) {\n    _state = state;\n    _points = points;\n    _projection = projection;\n    _secondaryPoints = secondaryPoints;\n    _secondaryProjection = secondaryProjection;\n    _selectLabel(true);\n  }\n\n  function toggleLoading(isLoading) {\n    _balloon.classList.toggle('lovely-chart--state-loading', isLoading);\n\n    if (!isLoading) {\n      _clear();\n    }\n  }\n\n  function toggleIsZoomed(isZoomed) {\n    if (isZoomed !== _isZoomed) {\n      _isZooming = true;\n    }\n    _isZoomed = isZoomed;\n    _balloon.classList.toggle('lovely-chart--state-inactive', isZoomed);\n  }\n\n  function _setupLayout() {\n    _element = createElement();\n    _element.className = `lovely-chart--tooltip`;\n\n    _setupCanvas();\n    _setupBalloon();\n\n    if ('ontouchstart' in window) {\n      addEventListener(_element, 'touchmove', _onMouseMove);\n      addEventListener(_element, 'touchstart', _onMouseMove);\n      addEventListener(document, 'touchstart', _onDocumentMove);\n    } else {\n      addEventListener(_element, 'mousemove', _onMouseMove);\n      addEventListener(_element, 'click', _onClick);\n      addEventListener(document, 'mousemove', _onDocumentMove);\n    }\n\n    container.appendChild(_element);\n  }\n\n  function _setupCanvas() {\n    const { canvas, context } = setupCanvas(_element, plotSize);\n\n    _canvas = canvas;\n    _context = context;\n  }\n\n  function _setupBalloon() {\n    _balloon = createElement();\n    _balloon.className = `lovely-chart--tooltip-balloon${!data.isZoomable ? ' lovely-chart--state-inactive' : ''}`;\n    _balloon.innerHTML = '<div class=\"lovely-chart--tooltip-title\"></div><div class=\"lovely-chart--tooltip-legend\"></div><div class=\"lovely-chart--spinner\"></div>';\n\n    if ('ontouchstart' in window && data.isZoomable) {\n      addEventListener(_balloon, 'click', _onBalloonClick);\n    }\n\n    _element.appendChild(_balloon);\n  }\n\n  function _onMouseMove(e) {\n    if (e.target === _balloon || _balloon.contains(e.target) || _clickedOnLabel) {\n      return;\n    }\n\n    _isZooming = false;\n\n    const pageOffset = _getPageOffset(_element);\n    _offsetX = (e.touches ? e.touches[0].clientX : e.clientX) - pageOffset.left;\n    _offsetY = (e.touches ? e.touches[0].clientY : e.clientY) - pageOffset.top;\n\n    _selectLabelOnRaf();\n  }\n\n  function _onDocumentMove(e) {\n    if (_offsetX !== null && e.target !== _element && !_element.contains(e.target)) {\n      _clear();\n    }\n  }\n\n  function _onClick(e) {\n    if (_isZooming) {\n      return;\n    }\n\n    if (data.isZoomable) {\n      const oldLabelIndex = _clickedOnLabel;\n\n      _clickedOnLabel = null;\n      _onMouseMove(e, true);\n\n      const newLabelIndex = _getLabelIndex();\n      if (newLabelIndex !== oldLabelIndex) {\n        _clickedOnLabel = newLabelIndex;\n      }\n\n      onZoom(newLabelIndex);\n    }\n  }\n\n  function _onBalloonClick() {\n    if (_balloon.classList.contains('lovely-chart--state-inactive')) {\n      return;\n    }\n\n    const labelIndex = _projection.findClosestLabelIndex(_offsetX);\n    onZoom(labelIndex);\n  }\n\n  function _clear(isExternal) {\n    _offsetX = null;\n    _clickedOnLabel = null;\n    clearCanvas(_canvas, _context);\n    _hideBalloon();\n\n    if (!isExternal && onFocus) {\n      onFocus(null);\n    }\n  }\n\n  function _getLabelIndex() {\n    const labelIndex = _projection.findClosestLabelIndex(_offsetX);\n    return labelIndex < _state.labelFromIndex || labelIndex > _state.labelToIndex ? null : labelIndex;\n  }\n\n  function _selectLabel(isExternal) {\n    if (!_offsetX || !_state || _isZooming) {\n      return;\n    }\n\n    const labelIndex = _getLabelIndex();\n    if (labelIndex === null) {\n      _clear(isExternal);\n      return;\n    }\n\n    const pointerVector = getPointerVector();\n    const shouldShowBalloon = data.isPie ? pointerVector.distance <= getPieRadius(_projection) : true;\n\n    if (!isExternal && onFocus) {\n      if (data.isPie) {\n        onFocus(pointerVector);\n      } else {\n        onFocus(labelIndex);\n      }\n    }\n\n    function getValue(values, labelIndex) {\n      if (data.isPie) {\n        return values.slice(_state.labelFromIndex, _state.labelToIndex + 1).reduce((a, x) => a + x, 0);\n      }\n\n      return values[labelIndex];\n    }\n\n    const [xPx] = toPixels(_projection, labelIndex, 0);\n    const statistics = data.datasets\n      .map(({ key, name, values, hasOwnYAxis }, i) => ({\n        key,\n        name,\n        value: getValue(values, labelIndex),\n        hasOwnYAxis,\n        originalIndex: i,\n      }))\n      .filter(({ key }) => _state.filter[key]);\n\n    if (statistics.length && shouldShowBalloon) {\n      _updateBalloon(statistics, labelIndex);\n    } else {\n      _hideBalloon();\n    }\n\n    clearCanvas(_canvas, _context);\n    if (data.isLines || data.isAreas) {\n      if (data.isLines) {\n        _drawCircles(statistics, labelIndex);\n      }\n\n      _drawTail(xPx, plotSize.height - X_AXIS_HEIGHT, getCssColor(colors, 'grid-lines'));\n    }\n  }\n\n  function _drawCircles(statistics, labelIndex) {\n    statistics.forEach(({ value, key, hasOwnYAxis, originalIndex }) => {\n      const pointIndex = labelIndex - _state.labelFromIndex;\n      const point = hasOwnYAxis ? _secondaryPoints[pointIndex] : _points[originalIndex][pointIndex];\n\n      if (!point) {\n        return;\n      }\n\n      const [x, y] = hasOwnYAxis\n        ? toPixels(_secondaryProjection, labelIndex, point.stackValue)\n        : toPixels(_projection, labelIndex, point.stackValue);\n\n      // TODO animate\n      _drawCircle(\n        [x, y],\n        getCssColor(colors, `dataset#${key}`),\n        getCssColor(colors, 'background'),\n      );\n    });\n  }\n\n  function _drawCircle([xPx, yPx], strokeColor, fillColor) {\n    _context.strokeStyle = strokeColor;\n    _context.fillStyle = fillColor;\n    _context.lineWidth = 2;\n\n    _context.beginPath();\n    _context.arc(xPx, yPx, 4, 0, 2 * Math.PI);\n    _context.fill();\n    _context.stroke();\n  }\n\n  function _drawTail(xPx, height, color) {\n    _context.strokeStyle = color;\n    _context.lineWidth = 1;\n\n    _context.beginPath();\n    _context.moveTo(xPx, 0);\n    _context.lineTo(xPx, height);\n    _context.stroke();\n  }\n\n  function _getBalloonLeftOffset(labelIndex) {\n    const meanLabel = (_state.labelFromIndex + _state.labelToIndex) / 2;\n    const { angle } = getPointerVector();\n\n    const shouldPlaceRight = data.isPie ? angle > Math.PI / 2 : labelIndex < meanLabel;\n\n    const leftOffset = shouldPlaceRight ? _offsetX + BALLOON_OFFSET : _offsetX - (_balloon.offsetWidth + BALLOON_OFFSET);\n\n    return Math.min(Math.max(0, leftOffset), container.offsetWidth - _balloon.offsetWidth);\n  }\n\n  function _getBalloonTopOffset() {\n    return data.isPie ? `${_offsetY}px` : 0;\n  }\n\n  function _updateBalloon(statistics, labelIndex) {\n    _balloon.style.transform = `translate3D(${_getBalloonLeftOffset(labelIndex)}px, ${_getBalloonTopOffset()}, 0)`;\n    _balloon.classList.add('lovely-chart--state-shown');\n\n    if (data.isPie) {\n      _updateContent(null, statistics);\n    } else {\n      _throttledUpdateContent(_getTitle(data, labelIndex), statistics);\n    }\n  }\n\n  function _getTitle(data, labelIndex) {\n    switch (data.tooltipFormatter) {\n      case 'statsFormatDayHourFull':\n        return statsFormatDayHourFull(data.xLabels[labelIndex].value);\n      case 'statsTooltipFormat(\\'day\\')':\n        return getLabelDate(data.xLabels[labelIndex]);\n      case 'statsTooltipFormat(\\'hour\\')':\n      case 'statsTooltipFormat(\\'5min\\')':\n        return getLabelTime(data.xLabels[labelIndex]);\n      default:\n        return data.xLabels[labelIndex].text;\n    }\n  }\n\n  function _isPieSectorSelected(statistics, value, totalValue, index, pointerVector) {\n    const offset = index > 0 ? statistics.slice(0, index).reduce((a, x) => a + x.value, 0) : 0;\n    const beginAngle = offset / totalValue * Math.PI * 2 - Math.PI / 2;\n    const endAngle = (offset + value) / totalValue * Math.PI * 2 - Math.PI / 2;\n\n    return pointerVector &&\n      beginAngle <= pointerVector.angle &&\n      pointerVector.angle < endAngle &&\n      pointerVector.distance <= getPieRadius(_projection);\n  }\n\n  function _updateTitle(title) {\n    const titleContainer = _balloon.children[0];\n\n    if (data.isPie) {\n      if (titleContainer) {\n        titleContainer.style.display = 'none';\n      }\n    } else {\n      if (titleContainer.style.display === 'none') {\n        titleContainer.style.display = '';\n      }\n      const currentTitle = titleContainer.querySelector(':not(.lovely-chart--state-hidden)');\n\n      if (!titleContainer.innerHTML || !currentTitle) {\n        titleContainer.innerHTML = `<span>${title}</span>`;\n      } else {\n        currentTitle.innerHTML = title;\n      }\n    }\n  }\n\n  function _insertNewDataSet(dataSetContainer, { name, key, value }, totalValue) {\n    const className = `lovely-chart--tooltip-dataset-value lovely-chart--position-right lovely-chart--color-${data.colors[key].slice(1)}`;\n    const newDataSet = createElement();\n    newDataSet.className = 'lovely-chart--tooltip-dataset';\n    newDataSet.setAttribute('data-present', 'true');\n    newDataSet.setAttribute('data-name', name);\n    newDataSet.innerHTML = `<span class=\"lovely-chart--dataset-title\">${name}</span><span class=\"${className}\">${formatInteger(value)}</span>`;\n    _renderPercentageValue(newDataSet, value, totalValue);\n\n    const totalText = dataSetContainer.querySelector(`[data-total=\"true\"]`);\n    if (totalText) {\n      dataSetContainer.insertBefore(newDataSet, totalText);\n    } else {\n      dataSetContainer.appendChild(newDataSet);\n    }\n  }\n\n  function _updateDataSet(currentDataSet, { key, value } = {}, totalValue) {\n    currentDataSet.setAttribute('data-present', 'true');\n\n    const valueElement = currentDataSet.querySelector(`.lovely-chart--tooltip-dataset-value.lovely-chart--color-${data.colors[key].slice(1)}:not(.lovely-chart--state-hidden)`);\n    valueElement.innerHTML = formatInteger(value);\n\n    _renderPercentageValue(currentDataSet, value, totalValue);\n  }\n\n  function _renderPercentageValue(dataSet, value, totalValue) {\n    if (!data.isPercentage) {\n      return;\n    }\n\n    if (data.isPie) {\n      Array.from(dataSet.querySelectorAll(`.lovely-chart--percentage-title`)).forEach(e => e.remove());\n      return;\n    }\n\n    const percentageValue = totalValue ? Math.round(value / totalValue * 100) : 0;\n    const percentageElement = dataSet.querySelector(`.lovely-chart--percentage-title:not(.lovely-chart--state-hidden)`);\n\n    if (!percentageElement) {\n      const newPercentageTitle = createElement('span');\n      newPercentageTitle.className = 'lovely-chart--percentage-title lovely-chart--position-left';\n      newPercentageTitle.innerHTML = `${percentageValue}%`;\n      dataSet.prepend(newPercentageTitle);\n    } else {\n      percentageElement.innerHTML = `${percentageValue}%`;\n    }\n  }\n\n  function _updateDataSets(statistics) {\n    const dataSetContainer = _balloon.children[1];\n    if (data.isPie) {\n      dataSetContainer.classList.add('lovely-chart--tooltip-legend-pie');\n    }\n\n    Array.from(dataSetContainer.children).forEach((dataSet) => {\n      if (!data.isPie && dataSetContainer.classList.contains('lovely-chart--tooltip-legend-pie')) {\n        dataSet.remove();\n      } else {\n        dataSet.setAttribute('data-present', 'false');\n      }\n    });\n\n    const totalValue = statistics.reduce((a, x) => a + x.value, 0);\n    const pointerVector = getPointerVector();\n    const finalStatistics = data.isPie ? statistics.filter(({ value }, index) => _isPieSectorSelected(statistics, value, totalValue, index, pointerVector)) : statistics;\n\n    finalStatistics.forEach((statItem) => {\n      const currentDataSet = dataSetContainer.querySelector(`[data-name=\"${statItem.name}\"]`);\n\n      if (!currentDataSet) {\n        _insertNewDataSet(dataSetContainer, statItem, totalValue);\n      } else {\n        _updateDataSet(currentDataSet, statItem, totalValue);\n      }\n    });\n\n    if ((data.isBars || data.isSteps) && data.isStacked) {\n      _renderTotal(dataSetContainer, formatInteger(totalValue));\n    }\n\n    Array.from(dataSetContainer.querySelectorAll('[data-present=\"false\"]'))\n      .forEach((dataSet) => {\n        dataSet.remove();\n      });\n  }\n\n  function _updateContent(title, statistics) {\n    _updateTitle(title);\n    _updateDataSets(statistics);\n  }\n\n  function _renderTotal(dataSetContainer, totalValue) {\n    const totalText = dataSetContainer.querySelector(`[data-total=\"true\"]`);\n    const className = `lovely-chart--tooltip-dataset-value lovely-chart--position-right`;\n    if (!totalText) {\n      const newTotalText = createElement();\n      newTotalText.className = 'lovely-chart--tooltip-dataset';\n      newTotalText.setAttribute('data-present', 'true');\n      newTotalText.setAttribute('data-total', 'true');\n      newTotalText.innerHTML = `<span>All</span><span class=\"${className}\">${totalValue}</span>`;\n      dataSetContainer.appendChild(newTotalText);\n    } else {\n      totalText.setAttribute('data-present', 'true');\n\n      const valueElement = totalText.querySelector(`.lovely-chart--tooltip-dataset-value:not(.lovely-chart--state-hidden)`);\n      valueElement.innerHTML = totalValue;\n    }\n  }\n\n  function _hideBalloon() {\n    _balloon.classList.remove('lovely-chart--state-shown');\n  }\n\n  function getPointerVector() {\n    const { width, height } = _element.getBoundingClientRect();\n\n    const center = [width / 2, height / 2];\n    const angle = Math.atan2(_offsetY - center[1], _offsetX - center[0]);\n    const distance = Math.sqrt((_offsetX - center[0]) ** 2 + (_offsetY - center[1]) ** 2);\n\n    return {\n      angle: angle >= -Math.PI / 2 ? angle : 2 * Math.PI + angle,\n      distance,\n    };\n  }\n\n  function _getPageOffset(el) {\n    return el.getBoundingClientRect();\n  }\n\n  return { update, toggleLoading, toggleIsZoomed };\n}\n\n","import { getMaxMin } from './utils';\nimport { statsFormatHour, statsFormatDay, statsFormatDayHour, statsFormatText, statsFormatMin } from './format';\n\nexport function analyzeData(data) {\n  const { title, labelFormatter, tooltipFormatter, isStacked, isPercentage, hasSecondYAxis, onZoom, minimapRange, hideCaption, zoomOutLabel } = data;\n  const { datasets, labels } = prepareDatasets(data);\n\n  const colors = {};\n  let totalYMin = Infinity;\n  let totalYMax = -Infinity;\n  datasets.forEach(({ key, color, yMin, yMax }) => {\n    colors[key] = color;\n\n    if (yMin < totalYMin) {\n      totalYMin = yMin;\n    }\n\n    if (yMax > totalYMax) {\n      totalYMax = yMax;\n    }\n  });\n\n  let xLabels;\n  switch (labelFormatter) {\n    case 'statsFormatDayHour':\n      xLabels = statsFormatDayHour(labels);\n      break;\n    case 'statsFormat(\\'day\\')':\n      xLabels = statsFormatDay(labels);\n      break;\n    case 'statsFormat(\\'hour\\')':\n    case 'statsFormat(\\'5min\\')':\n      xLabels = statsFormatMin(labels);\n      break;\n    default:\n      xLabels = statsFormatText(labels);\n      break;\n  }\n\n  const analyzed = {\n    title,\n    labelFormatter,\n    tooltipFormatter,\n    xLabels,\n    datasets,\n    isStacked,\n    isPercentage,\n    hasSecondYAxis,\n    onZoom,\n    isLines: data.type === 'line',\n    isBars: data.type === 'bar',\n    isSteps: data.type === 'step',\n    isAreas: data.type === 'area',\n    isPie: data.type === 'pie',\n    yMin: totalYMin,\n    yMax: totalYMax,\n    colors,\n    minimapRange,\n    hideCaption,\n    zoomOutLabel,\n  };\n\n  analyzed.shouldZoomToPie = !analyzed.onZoom && analyzed.isPercentage;\n  analyzed.isZoomable = analyzed.onZoom || analyzed.shouldZoomToPie;\n\n  return analyzed;\n}\n\nfunction prepareDatasets(data) {\n  const { type, labels, datasets, hasSecondYAxis } = data;\n\n  return {\n    labels: cloneArray(labels),\n    datasets: datasets.map(({ name, color, values }, i) => {\n      const { min: yMin, max: yMax } = getMaxMin(values);\n\n      return {\n        type,\n        key: `y${i}`,\n        name,\n        color,\n        values: cloneArray(values),\n        hasOwnYAxis: hasSecondYAxis && i === datasets.length - 1,\n        yMin,\n        yMax,\n      };\n    }),\n  };\n}\n\nfunction cloneArray(array) {\n  return array.slice(0);\n}\n","import { createStateManager } from './StateManager';\nimport { createHeader } from './Header';\nimport { createAxes } from './Axes';\nimport { createMinimap } from './Minimap';\nimport { createTooltip } from './Tooltip';\nimport { createTools } from './Tools';\nimport { createZoomer } from './Zoomer';\nimport { createColors } from './skin';\nimport { analyzeData } from './data';\nimport { setupCanvas, clearCanvas } from './canvas';\nimport { preparePoints } from './preparePoints';\nimport { createProjection } from './Projection';\nimport { drawDatasets } from './drawDatasets';\nimport { createElement } from './minifiers';\nimport { getFullLabelDate, getLabelDate } from './format';\nimport {\n  X_AXIS_HEIGHT,\n  GUTTER,\n  PLOT_TOP_PADDING,\n  PLOT_HEIGHT,\n  PLOT_LINE_WIDTH,\n  SIMPLIFIER_PLOT_FACTOR,\n} from './constants';\nimport { getSimplificationDelta, isDataRange } from './formulas';\nimport { debounce } from './utils';\nimport './styles/index.scss';\n\nfunction create(container, originalData) {\n  let _stateManager;\n\n  let _element;\n  let _plot;\n  let _context;\n  let _plotSize;\n\n  let _header;\n  let _axes;\n  let _minimap;\n  let _tooltip;\n  let _tools;\n  let _zoomer;\n\n  let _state;\n  let _windowWidth = window.innerWidth;\n\n  const _data = analyzeData(originalData);\n  const _colors = createColors(_data.colors);\n  const _redrawDebounced = debounce(_redraw, 500, false, true);\n\n  _setupComponents();\n  _setupGlobalListeners();\n\n  function _setupComponents() {\n    _setupContainer();\n    _header = createHeader(_element, _data.title, _data.zoomOutLabel, _onZoomOut);\n    _setupPlotCanvas();\n    _stateManager = createStateManager(_data, _plotSize, _onStateUpdate);\n    _axes = createAxes(_context, _data, _plotSize, _colors);\n    _minimap = createMinimap(_element, _data, _colors, _onRangeChange);\n    _tooltip = createTooltip(_element, _data, _plotSize, _colors, _onZoomIn, _onFocus);\n    _tools = createTools(_element, _data, _onFilterChange);\n    _zoomer = _data.isZoomable && createZoomer(_data, originalData, _colors, _stateManager, _element, _header, _minimap, _tooltip, _tools);\n    // hideOnScroll(_element);\n  }\n\n  function _setupContainer() {\n    _element = createElement();\n    _element.className = `lovely-chart--container${_data.shouldZoomToPie ? ' lovely-chart--container-type-pie' : ''}`;\n\n    container.appendChild(_element);\n  }\n\n  function _setupPlotCanvas() {\n    const { canvas, context } = setupCanvas(_element, {\n      width: _element.clientWidth,\n      height: PLOT_HEIGHT,\n    });\n\n    _plot = canvas;\n    _context = context;\n\n    _plotSize = {\n      width: _plot.offsetWidth,\n      height: _plot.offsetHeight,\n    };\n  }\n\n  function _onStateUpdate(state) {\n    _state = state;\n\n    const { datasets } = _data;\n    const range = {\n      from: state.labelFromIndex,\n      to: state.labelToIndex,\n    };\n    const boundsAndParams = {\n      begin: state.begin,\n      end: state.end,\n      totalXWidth: state.totalXWidth,\n      yMin: state.yMinViewport,\n      yMax: state.yMaxViewport,\n      availableWidth: _plotSize.width,\n      availableHeight: _plotSize.height - X_AXIS_HEIGHT,\n      xPadding: GUTTER,\n      yPadding: PLOT_TOP_PADDING,\n    };\n    const visibilities = datasets.map(({ key }) => state[`opacity#${key}`]);\n    const points = preparePoints(_data, datasets, range, visibilities, boundsAndParams);\n    const projection = createProjection(boundsAndParams);\n\n    let secondaryPoints = null;\n    let secondaryProjection = null;\n    if (_data.hasSecondYAxis) {\n      const secondaryDataset = datasets.find((d) => d.hasOwnYAxis);\n      const bounds = {\n        yMin: state.yMinViewportSecond,\n        yMax: state.yMaxViewportSecond,\n      };\n      secondaryPoints = preparePoints(_data, [secondaryDataset], range, visibilities, bounds)[0];\n      secondaryProjection = projection.copy(bounds);\n    }\n\n    if (!_data.hideCaption) {\n      _header.setCaption(_getCaption(state));\n    }\n\n    clearCanvas(_plot, _context);\n\n    const totalPoints = points.reduce((a, p) => a + p.length, 0);\n    const simplification = getSimplificationDelta(totalPoints) * SIMPLIFIER_PLOT_FACTOR;\n\n    drawDatasets(\n      _context, state, _data,\n      range, points, projection, secondaryPoints, secondaryProjection,\n      PLOT_LINE_WIDTH, visibilities, _colors, false, simplification,\n    );\n    if (!_data.isPie) {\n      _axes.drawYAxis(state, projection, secondaryProjection);\n      // TODO check isChanged\n      _axes.drawXAxis(state, projection);\n    }\n    _minimap.update(state);\n    _tooltip.update(state, points, projection, secondaryPoints, secondaryProjection);\n  }\n\n  function _onRangeChange(range) {\n    _stateManager.update({ range });\n  }\n\n  function _onFilterChange(filter) {\n    _stateManager.update({ filter });\n  }\n\n  function _onFocus(focusOn) {\n    if (_data.isBars || _data.isPie || _data.isSteps) {\n      // TODO animate\n      _stateManager.update({ focusOn });\n    }\n  }\n\n  function _onZoomIn(labelIndex) {\n    _zoomer.zoomIn(_state, labelIndex);\n  }\n\n  function _onZoomOut() {\n    _zoomer.zoomOut(_state);\n  }\n\n  function _setupGlobalListeners() {\n    document.documentElement.addEventListener('darkmode', () => {\n      _stateManager.update();\n    });\n\n    window.addEventListener('resize', () => {\n      if (window.innerWidth !== _windowWidth) {\n        _windowWidth = window.innerWidth;\n        _redrawDebounced();\n      }\n    });\n\n    window.addEventListener('orientationchange', () => {\n      _redrawDebounced();\n    });\n  }\n\n  function _redraw() {\n    Object.assign(_data, analyzeData(originalData));\n    _element.remove();\n    _setupComponents();\n  }\n\n  function _getCaption(state) {\n    let startIndex;\n    let endIndex;\n\n    if (_zoomer && _zoomer.isZoomed()) {\n      // TODO Fix label\n      startIndex = state.labelFromIndex === 0 ? 0 : state.labelFromIndex + 1;\n      endIndex = state.labelToIndex === state.totalXWidth - 1 ? state.labelToIndex : state.labelToIndex - 1;\n    } else {\n      startIndex = state.labelFromIndex;\n      endIndex = state.labelToIndex;\n    }\n\n    return isDataRange(_data.xLabels[startIndex], _data.xLabels[endIndex])\n      ? (\n        `${getLabelDate(_data.xLabels[startIndex])}` +\n        ' — ' +\n        `${getLabelDate(_data.xLabels[endIndex])}`\n      )\n      : getFullLabelDate(_data.xLabels[startIndex]);\n  }\n}\n\nexport { create };\n","import { createElement, addEventListener } from './minifiers';\nimport { toggleText } from './toggleText';\nimport { throttle } from './utils';\n\nexport function createHeader(container, title, zoomOutLabel = 'Zoom out', zoomOutCallback) {\n  let _element;\n  let _titleElement;\n  let _zoomOutElement;\n  let _captionElement;\n  let _isZooming;\n\n  const setCaptionThrottled = throttle(setCaption, 100, false);\n\n  _setupLayout();\n\n  function setCaption(caption) {\n    if (_isZooming) {\n      return;\n    }\n\n    _captionElement.innerHTML = caption;\n  }\n\n  function zoom(caption) {\n    _zoomOutElement = toggleText(_titleElement, zoomOutLabel, 'lovely-chart--header-title lovely-chart--header-zoom-out-control');\n    setTimeout(() => {\n      addEventListener(_zoomOutElement, 'click', _onZoomOut);\n    }, 500);\n\n    setCaption(caption);\n  }\n\n  function toggleIsZooming(isZooming) {\n    _isZooming = isZooming;\n  }\n\n  function _setupLayout() {\n    _element = createElement();\n    _element.className = 'lovely-chart--header';\n\n    _titleElement = createElement();\n    _titleElement.className = 'lovely-chart--header-title';\n    _titleElement.innerHTML = title;\n    _element.appendChild(_titleElement);\n\n    _captionElement = createElement();\n    _captionElement.className = 'lovely-chart--header-caption lovely-chart--position-right';\n    _element.appendChild(_captionElement);\n\n    container.appendChild(_element);\n  }\n\n  function _onZoomOut() {\n    _titleElement = toggleText(_zoomOutElement, title, 'lovely-chart--header-title', true);\n    _titleElement.classList.remove('lovely-chart--transition');\n\n    zoomOutCallback();\n  }\n\n  return {\n    setCaption: setCaptionThrottled,\n    zoom,\n    toggleIsZooming,\n  };\n}\n","import { SPEED_TEST_FAST_FPS, SPEED_TEST_INTERVAL, TRANSITION_DEFAULT_DURATION } from './constants';\n\nfunction transition(t) {\n  // faster\n  // return -t * (t - 2);\n  // easeOut\n  return 1 - Math.pow(1 - t, 1.675);\n}\n\nexport function createTransitionManager(onTick) {\n  const _transitions = {};\n\n  let _nextFrame = null;\n\n  let _testStartedAt = null;\n  let _fps = null;\n  let _testingFps = null;\n  let _slowDetectedAt = null;\n  let _startedAsSlow = null;\n\n  function add(prop, from, to, duration, options) {\n    _transitions[prop] = {\n      from,\n      to,\n      duration,\n      options,\n      current: from,\n      startedAt: Date.now(),\n      progress: 0,\n    };\n\n    if (!_nextFrame) {\n      _resetSpeedTest();\n      _nextFrame = requestAnimationFrame(_tick);\n    }\n  }\n\n  function remove(prop) {\n    delete _transitions[prop];\n\n    if (!isRunning()) {\n      cancelAnimationFrame(_nextFrame);\n      _nextFrame = null;\n    }\n  }\n\n  function get(prop) {\n    return _transitions[prop];\n  }\n\n  function getState() {\n    const state = {};\n\n    Object.keys(_transitions).forEach((prop) => {\n      const { current, from, to, progress } = _transitions[prop];\n      state[prop] = current;\n      // TODO perf lazy\n      state[`${prop}From`] = from;\n      state[`${prop}To`] = to;\n      state[`${prop}Progress`] = progress;\n    });\n\n    return state;\n  }\n\n  function isRunning() {\n    return Boolean(Object.keys(_transitions).length);\n  }\n\n  function isFast(forceCheck) {\n    if (!forceCheck && (_startedAsSlow || _slowDetectedAt)) {\n      return false;\n    }\n\n    return _fps === null || _fps >= SPEED_TEST_FAST_FPS;\n  }\n\n  function _tick() {\n    const isSlow = !isFast();\n    _speedTest();\n\n    const state = {};\n\n    Object.keys(_transitions).forEach((prop) => {\n      const { startedAt, from, to, duration = TRANSITION_DEFAULT_DURATION, options } = _transitions[prop];\n      const progress = Math.min(1, (Date.now() - startedAt) / duration);\n      let current = from + (to - from) * transition(progress);\n\n      if (options.includes('ceil')) {\n        current = Math.ceil(current);\n      } else if (options.includes('floor')) {\n        current = Math.floor(current);\n      }\n\n      _transitions[prop].current = current;\n      _transitions[prop].progress = progress;\n      state[prop] = current;\n\n      if (progress === 1) {\n        remove(prop);\n      }\n    });\n\n    if (!isSlow) {\n      onTick(state);\n    }\n\n    if (isRunning()) {\n      _nextFrame = requestAnimationFrame(_tick);\n    }\n  }\n\n  function _resetSpeedTest() {\n    _testStartedAt = null;\n    _testingFps = null;\n    if (_slowDetectedAt && Date.now() - _slowDetectedAt > 5000) {\n      _slowDetectedAt = null;\n    }\n    _startedAsSlow = Boolean(_slowDetectedAt) || !isFast(true);\n  }\n\n  function _speedTest() {\n    if (!_testStartedAt || (Date.now() - _testStartedAt) >= SPEED_TEST_INTERVAL) {\n      if (_testingFps) {\n        _fps = _testingFps;\n        if (!_slowDetectedAt && !isFast(true)) {\n          _slowDetectedAt = Date.now();\n        }\n      }\n      _testStartedAt = Date.now();\n      _testingFps = 0;\n    } else {\n      _testingFps++;\n    }\n  }\n\n  return { add, remove, get, getState, isRunning, isFast };\n}\n","import { GUTTER, AXES_FONT, X_AXIS_HEIGHT, X_AXIS_SHIFT_START, PLOT_TOP_PADDING } from './constants';\nimport { humanize } from './format';\nimport { getCssColor } from './skin';\nimport { applyXEdgeOpacity, applyYEdgeOpacity, xScaleLevelToStep, yScaleLevelToStep } from './formulas';\nimport { toPixels } from './Projection';\n\nexport function createAxes(context, data, plotSize, colors) {\n  function drawXAxis(state, projection) {\n    context.clearRect(0, plotSize.height - X_AXIS_HEIGHT + 1, plotSize.width, X_AXIS_HEIGHT + 1);\n\n    const topOffset = plotSize.height - X_AXIS_HEIGHT / 2;\n    const scaleLevel = Math.floor(state.xAxisScale);\n    const step = xScaleLevelToStep(scaleLevel);\n    const opacityFactor = 1 - (state.xAxisScale - scaleLevel);\n\n    context.font = AXES_FONT;\n    context.textAlign = 'center';\n    context.textBaseline = 'middle';\n\n    for (let i = state.labelFromIndex; i <= state.labelToIndex; i++) {\n      const shiftedI = i - X_AXIS_SHIFT_START;\n\n      if (shiftedI % step !== 0) {\n        continue;\n      }\n\n      const label = data.xLabels[i];\n      const [xPx] = toPixels(projection, i, 0);\n      let opacity = shiftedI % (step * 2) === 0 ? 1 : opacityFactor;\n      opacity = applyYEdgeOpacity(opacity, xPx, plotSize.width);\n\n      context.fillStyle = getCssColor(colors, 'x-axis-text', opacity);\n      context.fillText(label.text, xPx, topOffset);\n    }\n  }\n\n  function drawYAxis(state, projection, secondaryProjection) {\n    const {\n      yAxisScale, yAxisScaleFrom, yAxisScaleTo, yAxisScaleProgress = 0,\n      yMinViewport, yMinViewportFrom, yMinViewportTo,\n      yMaxViewport, yMaxViewportFrom, yMaxViewportTo,\n      yMinViewportSecond, yMinViewportSecondFrom, yMinViewportSecondTo,\n      yMaxViewportSecond, yMaxViewportSecondFrom, yMaxViewportSecondTo,\n    } = state;\n    const colorKey = secondaryProjection && `dataset#${data.datasets[0].key}`;\n    const isYChanging = yMinViewportFrom !== undefined || yMaxViewportFrom !== undefined;\n\n    if (data.isPercentage) {\n      _drawYAxisPercents(projection);\n    } else {\n      _drawYAxisScaled(\n        state,\n        projection,\n        Math.round(yAxisScaleTo || yAxisScale),\n        yMinViewportTo !== undefined ? yMinViewportTo : yMinViewport,\n        yMaxViewportTo !== undefined ? yMaxViewportTo : yMaxViewport,\n        yAxisScaleFrom ? yAxisScaleProgress : 1,\n        colorKey,\n      );\n    }\n\n    if (yAxisScaleProgress > 0 && isYChanging) {\n      _drawYAxisScaled(\n        state,\n        projection,\n        Math.round(yAxisScaleFrom),\n        yMinViewportFrom !== undefined ? yMinViewportFrom : yMinViewport,\n        yMaxViewportFrom !== undefined ? yMaxViewportFrom : yMaxViewport,\n        1 - yAxisScaleProgress,\n        colorKey,\n      );\n    }\n\n    if (secondaryProjection) {\n      const { yAxisScaleSecond, yAxisScaleSecondFrom, yAxisScaleSecondTo, yAxisScaleSecondProgress = 0 } = state;\n      const secondaryColorKey = `dataset#${data.datasets[data.datasets.length - 1].key}`;\n      const isYChanging = yMinViewportSecondFrom !== undefined || yMaxViewportSecondFrom !== undefined;\n\n      _drawYAxisScaled(\n        state,\n        secondaryProjection,\n        Math.round(yAxisScaleSecondTo || yAxisScaleSecond),\n        yMinViewportSecondTo !== undefined ? yMinViewportSecondTo : yMinViewportSecond,\n        yMaxViewportSecondTo !== undefined ? yMaxViewportSecondTo : yMaxViewportSecond,\n        yAxisScaleSecondFrom ? yAxisScaleSecondProgress : 1,\n        secondaryColorKey,\n        true,\n      );\n\n      if (yAxisScaleSecondProgress > 0 && isYChanging) {\n        _drawYAxisScaled(\n          state,\n          secondaryProjection,\n          Math.round(yAxisScaleSecondFrom),\n          yMinViewportSecondFrom !== undefined ? yMinViewportSecondFrom : yMinViewportSecond,\n          yMaxViewportSecondFrom !== undefined ? yMaxViewportSecondFrom : yMaxViewportSecond,\n          1 - yAxisScaleSecondProgress,\n          secondaryColorKey,\n          true,\n        );\n      }\n    }\n  }\n\n  function _drawYAxisScaled(state, projection, scaleLevel, yMin, yMax, opacity = 1, colorKey = null, isSecondary = false) {\n    const step = yScaleLevelToStep(scaleLevel);\n    const firstVisibleValue = Math.ceil(yMin / step) * step;\n    const lastVisibleValue = Math.floor(yMax / step) * step;\n\n    context.font = AXES_FONT;\n    context.textAlign = isSecondary ? 'right' : 'left';\n    context.textBaseline = 'bottom';\n\n    context.lineWidth = 1;\n\n    context.beginPath();\n\n    for (let value = firstVisibleValue; value <= lastVisibleValue; value += step) {\n      const [, yPx] = toPixels(projection, 0, value);\n      const textOpacity = applyXEdgeOpacity(opacity, yPx);\n\n      context.fillStyle = colorKey\n        ? getCssColor(colors, colorKey, textOpacity)\n        : getCssColor(colors, 'y-axis-text', textOpacity);\n\n      if (!isSecondary) {\n        context.fillText(humanize(value), GUTTER, yPx - GUTTER / 2);\n      } else {\n        context.fillText(humanize(value), plotSize.width - GUTTER, yPx - GUTTER / 2);\n      }\n\n      if (isSecondary) {\n        context.strokeStyle = getCssColor(colors, colorKey, opacity);\n\n        context.moveTo(plotSize.width - GUTTER, yPx);\n        context.lineTo(plotSize.width - GUTTER * 2, yPx);\n      } else {\n        context.moveTo(GUTTER, yPx);\n        context.strokeStyle = getCssColor(colors, 'grid-lines', opacity);\n        context.lineTo(plotSize.width - GUTTER, yPx);\n      }\n    }\n\n    context.stroke();\n  }\n\n  function _drawYAxisPercents(projection) {\n    const percentValues = [0, 0.25, 0.50, 0.75, 1];\n    const [, height] = projection.getSize();\n\n    context.font = AXES_FONT;\n    context.textAlign = 'left';\n    context.textBaseline = 'bottom';\n    context.lineWidth = 1;\n\n    context.beginPath();\n\n    percentValues.forEach((value) => {\n      const yPx = height - height * value + PLOT_TOP_PADDING;\n\n      context.fillStyle = getCssColor(colors, 'y-axis-text', 1);\n      context.fillText(`${value * 100}%`, GUTTER, yPx - GUTTER / 4);\n\n      context.moveTo(GUTTER, yPx);\n      context.strokeStyle = getCssColor(colors, 'grid-lines', 1);\n      context.lineTo(plotSize.width - GUTTER, yPx);\n    });\n\n    context.stroke();\n  }\n\n  return { drawXAxis, drawYAxis };\n}\n","import { setupCanvas, clearCanvas } from './canvas';\nimport { preparePoints } from './preparePoints';\nimport { createProjection } from './Projection';\nimport { drawDatasets } from './drawDatasets';\nimport { captureEvents } from './captureEvents';\nimport {\n  DEFAULT_RANGE,\n  MINIMAP_HEIGHT,\n  MINIMAP_EAR_WIDTH,\n  MINIMAP_MARGIN,\n  MINIMAP_LINE_WIDTH,\n  MINIMAP_MAX_ANIMATED_DATASETS,\n  SIMPLIFIER_MINIMAP_FACTOR,\n} from './constants';\nimport { proxyMerge, throttleWithRaf } from './utils';\nimport { createElement } from './minifiers';\nimport { getSimplificationDelta } from './formulas';\n\nexport function createMinimap(container, data, colors, rangeCallback) {\n  let _element;\n  let _canvas;\n  let _context;\n  let _canvasSize;\n  let _ruler;\n  let _slider;\n\n  let _capturedOffset;\n  let _range = {};\n  let _state;\n\n  const _updateRulerOnRaf = throttleWithRaf(_updateRuler);\n\n  _setupLayout();\n  _updateRange(data.minimapRange || DEFAULT_RANGE);\n\n  function update(newState) {\n    const { begin, end } = newState;\n    if (!_capturedOffset) {\n      _updateRange({ begin, end }, true);\n    }\n\n    if (data.datasets.length >= MINIMAP_MAX_ANIMATED_DATASETS) {\n      newState = newState.static;\n    }\n\n    if (!_isStateChanged(newState)) {\n      return;\n    }\n\n    _state = proxyMerge(newState, { focusOn: null });\n    clearCanvas(_canvas, _context);\n\n    _drawDatasets(_state);\n  }\n\n  function toggle(shouldShow) {\n    _element.classList.toggle('lovely-chart--state-hidden', !shouldShow);\n\n    requestAnimationFrame(() => {\n      _element.classList.toggle('lovely-chart--state-transparent', !shouldShow);\n    });\n  }\n\n  function _setupLayout() {\n    _element = createElement();\n\n    _element.className = 'lovely-chart--minimap';\n    _element.style.height = `${MINIMAP_HEIGHT}px`;\n\n    _setupCanvas();\n    _setupRuler();\n\n    container.appendChild(_element);\n\n    _canvasSize = {\n      width: _canvas.offsetWidth,\n      height: _canvas.offsetHeight,\n    };\n  }\n\n  function _getSize() {\n    return {\n      width: container.offsetWidth - MINIMAP_MARGIN * 2,\n      height: MINIMAP_HEIGHT,\n    };\n  }\n\n  function _setupCanvas() {\n    const { canvas, context } = setupCanvas(_element, _getSize());\n\n    _canvas = canvas;\n    _context = context;\n  }\n\n  function _setupRuler() {\n    _ruler = createElement();\n    _ruler.className = 'lovely-chart--minimap-ruler';\n    _ruler.innerHTML =\n      '<div class=\"lovely-chart--minimap-mask\"></div>' +\n      '<div class=\"lovely-chart--minimap-slider\">' +\n      '<div class=\"lovely-chart--minimap-slider-handle\"><span class=\"lovely-chart--minimap-slider-handle-pin\"></span></div>' +\n      '<div class=\"lovely-chart--minimap-slider-inner\"></div>' +\n      '<div class=\"lovely-chart--minimap-slider-handle\"><span class=\"lovely-chart--minimap-slider-handle-pin\"></span></div>' +\n      '</div>' +\n      '<div class=\"lovely-chart--minimap-mask\"></div>';\n\n    _slider = _ruler.children[1];\n\n    captureEvents(\n      _slider.children[1],\n      {\n        onCapture: _onDragCapture,\n        onDrag: _onSliderDrag,\n        onRelease: _onDragRelease,\n        draggingCursor: 'grabbing',\n      },\n    );\n\n    captureEvents(\n      _slider.children[0],\n      {\n        onCapture: _onDragCapture,\n        onDrag: _onLeftEarDrag,\n        onRelease: _onDragRelease,\n        draggingCursor: 'ew-resize',\n      },\n    );\n\n    captureEvents(\n      _slider.children[2],\n      {\n        onCapture: _onDragCapture,\n        onDrag: _onRightEarDrag,\n        onRelease: _onDragRelease,\n        draggingCursor: 'ew-resize',\n      },\n    );\n\n    _element.appendChild(_ruler);\n  }\n\n  function _isStateChanged(newState) {\n    if (!_state) {\n      return true;\n    }\n\n    const { datasets } = data;\n\n    if (datasets.some(({ key }) => _state[`opacity#${key}`] !== newState[`opacity#${key}`])) {\n      return true;\n    }\n\n    if (_state.yMaxMinimap !== newState.yMaxMinimap) {\n      return true;\n    }\n\n    return false;\n  }\n\n  function _drawDatasets(state = {}) {\n    const { datasets } = data;\n    const range = {\n      from: 0,\n      to: state.totalXWidth,\n    };\n    const boundsAndParams = {\n      begin: 0,\n      end: 1,\n      totalXWidth: state.totalXWidth,\n      yMin: state.yMinMinimap,\n      yMax: state.yMaxMinimap,\n      availableWidth: _canvasSize.width,\n      availableHeight: _canvasSize.height,\n      yPadding: 1,\n    };\n    const visibilities = datasets.map(({ key }) => _state[`opacity#${key}`]);\n    const points = preparePoints(data, datasets, range, visibilities, boundsAndParams, true);\n    const projection = createProjection(boundsAndParams);\n\n    let secondaryPoints = null;\n    let secondaryProjection = null;\n    if (data.hasSecondYAxis) {\n      const secondaryDataset = datasets.find((d) => d.hasOwnYAxis);\n      const bounds = { yMin: state.yMinMinimapSecond, yMax: state.yMaxMinimapSecond };\n      secondaryPoints = preparePoints(data, [secondaryDataset], range, visibilities, bounds)[0];\n      secondaryProjection = projection.copy(bounds);\n    }\n\n    const totalPoints = points.reduce((a, p) => a + p.length, 0);\n    const simplification = getSimplificationDelta(totalPoints) * SIMPLIFIER_MINIMAP_FACTOR;\n\n    drawDatasets(\n      _context, state, data,\n      range, points, projection, secondaryPoints, secondaryProjection,\n      MINIMAP_LINE_WIDTH, visibilities, colors, true, simplification,\n    );\n  }\n\n  function _onDragCapture(e) {\n    e.preventDefault();\n    _capturedOffset = e.target.offsetLeft;\n  }\n\n  function _onDragRelease() {\n    _capturedOffset = null;\n  }\n\n  function _onSliderDrag(moveEvent, captureEvent, { dragOffsetX }) {\n    const minX1 = 0;\n    const maxX1 = _canvasSize.width - _slider.offsetWidth;\n\n    const newX1 = Math.max(minX1, Math.min(_capturedOffset + dragOffsetX - MINIMAP_EAR_WIDTH, maxX1));\n    const newX2 = newX1 + _slider.offsetWidth;\n    const begin = newX1 / _canvasSize.width;\n    const end = newX2 / _canvasSize.width;\n\n    _updateRange({ begin, end });\n  }\n\n  function _onLeftEarDrag(moveEvent, captureEvent, { dragOffsetX }) {\n    const minX1 = 0;\n    const maxX1 = _slider.offsetLeft + _slider.offsetWidth - MINIMAP_EAR_WIDTH * 2;\n\n    const newX1 = Math.min(maxX1, Math.max(minX1, _capturedOffset + dragOffsetX));\n    const begin = newX1 / _canvasSize.width;\n\n    _updateRange({ begin });\n  }\n\n  function _onRightEarDrag(moveEvent, captureEvent, { dragOffsetX }) {\n    const minX2 = _slider.offsetLeft + MINIMAP_EAR_WIDTH * 2;\n    const maxX2 = _canvasSize.width;\n\n    const newX2 = Math.max(minX2, Math.min(_capturedOffset + MINIMAP_EAR_WIDTH + dragOffsetX, maxX2));\n    const end = newX2 / _canvasSize.width;\n\n    _updateRange({ end });\n  }\n\n  function _updateRange(range, isExternal) {\n    let nextRange = Object.assign({}, _range, range);\n\n    if (_state && _state.minimapDelta && !isExternal) {\n      nextRange = _adjustDiscreteRange(nextRange);\n    }\n\n    if (nextRange.begin === _range.begin && nextRange.end === _range.end) {\n      return;\n    }\n\n    _range = nextRange;\n    _updateRulerOnRaf();\n\n    if (!isExternal) {\n      rangeCallback(_range);\n    }\n  }\n\n  function _adjustDiscreteRange(nextRange) {\n    // TODO sometimes beginChange and endChange are different for slider drag because of pixels division\n    const begin = Math.round(nextRange.begin / _state.minimapDelta) * _state.minimapDelta;\n    const end = Math.round(nextRange.end / _state.minimapDelta) * _state.minimapDelta;\n\n    return { begin, end };\n  }\n\n  function _updateRuler() {\n    const { begin, end } = _range;\n\n    _ruler.children[0].style.width = `${begin * 100}%`;\n    _ruler.children[1].style.width = `${(end - begin) * 100}%`;\n    _ruler.children[2].style.width = `${(1 - end) * 100}%`;\n  }\n\n  return { update, toggle };\n}\n","import { createElement } from './minifiers';\nimport { captureEvents } from './captureEvents';\n\nexport function createTools(container, data, filterCallback) {\n  let _element;\n\n  _setupLayout();\n  _updateFilter();\n\n  function redraw() {\n    if (_element) {\n      const oldElement = _element;\n      oldElement.classList.add('lovely-chart--state-hidden');\n      setTimeout(() => {\n        oldElement.parentNode.removeChild(oldElement);\n      }, 500);\n    }\n\n    _setupLayout();\n    _element.classList.add('lovely-chart--state-transparent');\n    requestAnimationFrame(() => {\n      _element.classList.remove('lovely-chart--state-transparent');\n    });\n  }\n\n  function _setupLayout() {\n    _element = createElement();\n    _element.className = 'lovely-chart--tools';\n\n    if (data.datasets.length < 2) {\n      _element.className += ' lovely-chart--state-hidden';\n    }\n\n    data.datasets.forEach(({ key, name }) => {\n      const control = createElement('a');\n      control.href = '#';\n      control.dataset.key = key;\n      control.className = `lovely-chart--button lovely-chart--color-${data.colors[key].slice(1)} lovely-chart--state-checked`;\n      control.innerHTML = `<span class=\"lovely-chart--button-check\"></span><span class=\"lovely-chart--button-label\">${name}</span>`;\n\n      control.addEventListener('click', (e) => {\n        e.preventDefault();\n\n        if (!control.dataset.clickPrevented) {\n          _updateFilter(control);\n        }\n\n        delete control.dataset.clickPrevented;\n      });\n\n      captureEvents(control, {\n        onLongPress: () => {\n          control.dataset.clickPrevented = 'true';\n\n          _updateFilter(control, true);\n        },\n      });\n\n      _element.appendChild(control);\n    });\n\n    container.appendChild(_element);\n  }\n\n  function _updateFilter(button, isLongPress = false) {\n    const buttons = Array.from(_element.getElementsByTagName('a'));\n    const isSingleChecked = _element.querySelectorAll('.lovely-chart--state-checked').length === 1;\n\n    if (button) {\n      if (button.classList.contains('lovely-chart--state-checked') && isSingleChecked) {\n        if (isLongPress) {\n          buttons.forEach((b) => b.classList.add('lovely-chart--state-checked'));\n          button.classList.remove('lovely-chart--state-checked');\n        } else {\n          button.classList.remove('lovely-chart--state-shake');\n          requestAnimationFrame(() => {\n            button.classList.add('lovely-chart--state-shake');\n          });\n        }\n      } else if (isLongPress) {\n        buttons.forEach((b) => b.classList.remove('lovely-chart--state-checked'));\n        button.classList.add('lovely-chart--state-checked');\n      } else {\n        button.classList.toggle('lovely-chart--state-checked');\n      }\n    }\n\n    const filter = {};\n\n    buttons.forEach((input) => {\n      filter[input.dataset.key] = input.classList.contains('lovely-chart--state-checked');\n    });\n\n    filterCallback(filter);\n  }\n\n  return {\n    redraw,\n  };\n}\n","import { analyzeData } from './data';\nimport { getFullLabelDate } from './format';\nimport { ZOOM_RANGE_DELTA, ZOOM_RANGE_MIDDLE, ZOOM_TIMEOUT } from './constants';\nimport { createColors } from './skin';\n\nexport function createZoomer(data, overviewData, colors, stateManager, container, header, minimap, tooltip, tools) {\n  let _isZoomed = false;\n  let _stateBeforeZoomIn;\n  let _stateBeforeZoomOut;\n\n  function zoomIn(state, labelIndex) {\n    if (_isZoomed) {\n      return;\n    }\n\n    const label = data.xLabels[labelIndex];\n\n    _stateBeforeZoomIn = state;\n    header.toggleIsZooming(true);\n    tooltip.toggleLoading(true);\n    tooltip.toggleIsZoomed(true);\n    if (data.shouldZoomToPie) {\n      container.classList.add('lovely-chart--state-zoomed-in');\n      container.classList.add('lovely-chart--state-animating');\n    }\n\n    const { value } = label;\n    const dataPromise = data.shouldZoomToPie ? Promise.resolve(_generatePieData(labelIndex)) : data.onZoom(value);\n    dataPromise.then((newData) => _replaceData(newData, labelIndex, label));\n  }\n\n  function zoomOut(state) {\n    if (!_isZoomed) {\n      return;\n    }\n\n    _stateBeforeZoomOut = state;\n    header.toggleIsZooming(true);\n    tooltip.toggleLoading(true);\n    tooltip.toggleIsZoomed(false);\n    if (data.shouldZoomToPie) {\n      container.classList.remove('lovely-chart--state-zoomed-in');\n      container.classList.add('lovely-chart--state-animating');\n    }\n\n    const labelIndex = Math.round((state.labelFromIndex + state.labelToIndex) / 2);\n    _replaceData(overviewData, labelIndex);\n  }\n\n  function isZoomed() {\n    return _isZoomed;\n  }\n\n  function _replaceData(newRawData, labelIndex, zoomInLabel) {\n    if (!newRawData) {\n      tooltip.toggleLoading(false);\n      tooltip.toggleIsZoomed(false);\n      header.toggleIsZooming(false);\n\n      return;\n    }\n\n    tooltip.toggleLoading(false);\n\n    const labelWidth = 1 / data.xLabels.length;\n    const labelMiddle = labelIndex / (data.xLabels.length - 1);\n    const filter = {};\n    data.datasets.forEach(({ key }) => filter[key] = false);\n    const newData = analyzeData(newRawData, _isZoomed || data.shouldZoomToPie ? 'day' : 'hour');\n    const shouldZoomToLines = Object.keys(data.datasets).length !== Object.keys(newData.datasets).length;\n\n    stateManager.update({\n      range: {\n        begin: labelMiddle - labelWidth / 2,\n        end: labelMiddle + labelWidth / 2,\n      },\n      filter,\n    });\n\n    setTimeout(() => {\n      Object.assign(data, newData);\n\n      if (shouldZoomToLines && newRawData.colors) {\n        Object.assign(colors, createColors(newRawData.colors));\n      }\n\n      if (shouldZoomToLines) {\n        minimap.toggle(_isZoomed);\n        tools.redraw();\n        container.style.width = `${container.scrollWidth}px`;\n        container.style.height = `${container.scrollHeight}px`;\n      }\n\n      stateManager.update({\n        range: {\n          begin: ZOOM_RANGE_MIDDLE - ZOOM_RANGE_DELTA,\n          end: ZOOM_RANGE_MIDDLE + ZOOM_RANGE_DELTA,\n        },\n        focusOn: null,\n      }, true);\n\n      const daysCount = _isZoomed || data.shouldZoomToPie ? data.xLabels.length : data.xLabels.length / 24;\n      const halfDayWidth = (1 / daysCount) / 2;\n\n      let range;\n      let filter;\n\n      if (_isZoomed) {\n        range = {\n          begin: _stateBeforeZoomIn.begin,\n          end: _stateBeforeZoomIn.end,\n        };\n        filter = shouldZoomToLines ? _stateBeforeZoomIn.filter : _stateBeforeZoomOut.filter;\n      } else {\n        if (shouldZoomToLines) {\n          range = {\n            begin: 0,\n            end: 1,\n          };\n          filter = {};\n          data.datasets.forEach(({ key }) => filter[key] = true);\n        } else {\n          range = data.shouldZoomToPie ? {\n            begin: ZOOM_RANGE_MIDDLE - halfDayWidth,\n            end: ZOOM_RANGE_MIDDLE + halfDayWidth,\n          } : newData.minimapRange;\n          filter = _stateBeforeZoomIn.filter;\n        }\n      }\n\n      stateManager.update({\n        range,\n        filter,\n        minimapDelta: _isZoomed ? null : range.end - range.begin,\n      });\n\n      if (zoomInLabel) {\n        header.zoom(getFullLabelDate(zoomInLabel));\n      }\n\n      _isZoomed = !_isZoomed;\n      header.toggleIsZooming(false);\n    }, stateManager.hasAnimations() ? ZOOM_TIMEOUT : 0);\n\n    setTimeout(() => {\n      if (data.shouldZoomToPie) {\n        container.classList.remove('lovely-chart--state-animating');\n      }\n    }, stateManager.hasAnimations() ? 1000 : 0);\n  }\n\n  function _generatePieData(labelIndex) {\n    return Object.assign(\n      {},\n      overviewData,\n      {\n        type: 'pie',\n        labels: overviewData.labels.slice(labelIndex - 3, labelIndex + 4),\n        datasets: overviewData.datasets.map((dataset) => {\n          return {\n            ...dataset,\n            values: dataset.values.slice(labelIndex - 3, labelIndex + 4),\n          };\n        }),\n      },\n    );\n  }\n\n  return { zoomIn, zoomOut, isZoomed };\n}\n"],"names":["DPR","window","devicePixelRatio","DEFAULT_RANGE","begin","end","TRANSITION_DEFAULT_DURATION","GUTTER","PLOT_BARS_WIDTH_SHIFT","AXES_FONT","ZOOM_TIMEOUT","MONTHS","WEEK_DAYS","WEEK_DAYS_SHORT","ANIMATE_PROPS","getMaxMin","array","length","max","min","i","value","mergeArrays","arrays","concat","apply","sumArrays","sums","n","l","j","proxyMerge","obj1","obj2","Proxy","get","obj","prop","undefined","throttle","fn","ms","isPending","args","shouldRunFirst","arguments","interval","_len","_args","Array","_key","setInterval","clearInterval","throttleWithRaf","waiting","_len2","_key2","requestAnimationFrame","SCALE_LEVELS","yScaleLevelToStep","scaleLevel","applyYEdgeOpacity","opacity","xPx","plotWidth","edgeOffset","Math","applyXEdgeOpacity","yPx","getPieRadius","projection","getSize","getSimplificationDelta","pointsLength","calculateState","data","viewportSize","range","filter","focusOn","minimapDelta","prevState","totalXWidth","xLabels","labelFromIndex","ceil","labelToIndex","floor","xAxisScale","step","log2","calculateXAxisScale","width","yRanges","isStacked","filteredValues","datasets","d","key","map","_ref7","values","yMaxMinimap","yMaxViewport","slice","yMinViewport","yMinMinimap","calculateYRangesStacked","secondaryYAxisDataset","hasSecondYAxis","filteredDatasets","calculateYRangesForGroup","yMinViewportSecond","yMaxViewportSecond","yMinMinimapSecond","yMaxMinimapSecond","Object","assign","calculateYRanges","yAxisScale","calculateYAxisScale","height","yAxisScaleSecond","yStep","yStepSecond","datasetsOpacity","forEach","_ref4","yMinMinimapReal","_ref5","yMax","yMin","viewportMaxMin","_ref6","yMinViewportReal","plotHeight","availableHeight","viewportLabelsCount","maxRows","neededStep","findIndex","createElement","tagName","document","addEventListener","element","event","cb","removeEventListener","toggleText","newText","className","inverse","container","parentNode","classList","add","newElement","innerHTML","selector","split","join","oldElements","querySelectorAll","e","remove","insertBefore","nextSibling","toggleElementIn","toggleElementOut","humanize","decimals","keepThreeDigits","toFixed","replace","formatInteger","String","getFullLabelDate","label","isShort","getLabelDate","displayWeekDay","displayYear","displayHours","date","Date","weekDaysArray","string","getUTCDate","getUTCMonth","getUTCDay","getUTCFullYear","getUTCHours","getUTCMinutes","detectSkin","documentElement","contains","skin","COLORS","styleElement","type","appendChild","createTextNode","head","styleSheet","sheet","createColors","datasetColors","colors","baseClass","keys","hexToChannels","addCssRule","getCssColor","_ref","r","g","b","a","buildCssColor","hexWithAlpha","hex","alpha","parseInt","parseFloat","rule","insertRule","cssRules","createProjection","params","availableWidth","xPadding","yPadding","effectiveWidth","xFactor","xOffsetPx","effectiveHeight","yFactor","yOffsetPx","findClosestLabelIndex","round","copy","overrides","cons","getCenter","getParams","getState","toPixels","labelIndex","setupCanvas","canvas","style","context","getContext","scale","clearCanvas","clearRect","preparePoints","visibilities","bounds","pieToArea","from","to","isPie","datasetValues","reduce","sum","prepareSumsByX","points","visibleValue","stackOffset","stackValue","isPercentage","sumsByY","datasetPoints","_ref2","getSumsByY","point","percent","preparePercentage","accum","prepareStacked","simplify","E1","pow","MAXLIMIT","pointToSegmentDistanceSquare","p","v1","v2","dv","dvlen_1","t","vx","vy","indexes","fixedPoints","removed","worker","maximumDelta","len","distances","queue","subdivisionTree","tick","request","pop","result","start","record","currentLimit","usedDistance","usedIndex","vector","fixId","abs","vectorLength_1","segmentDistance","index","distance","push","left","parent","parentProperty","right","delta","precalculate","resultIndexes","delta2","markers","drawDatasets","state","secondaryPoints","secondaryProjection","lineWidth","pieToBar","simplification","hasOwnYAxis","options","color","datasetType","datasetProjection","yHeight","bottomLine","topLine","center","radius","pointerVector","x0","x1","drawDatasetLine","drawDatasetBars","drawDatasetSteps","drawDatasetArea","drawDatasetPie","drawDataset","isBars","isSteps","xCenter","yCenter","x","fillStyle","fillRect","drawBarsMask","beginPath","pixels","simplifierFn","y","lineTo","save","strokeStyle","globalAlpha","lineJoin","lineCap","stroke","restore","yFrom","yTo","rectX","rectY","rectW","rectH","_ref3","fill","percentFactor","beginAngle","PI","endAngle","shift","angle","shiftAngle","directionX","cos","directionY","sin","shiftX","shiftY","moveTo","arc","font","getPieTextSize","textAlign","textBaseline","textShift","log","getPieTextShift","fillText","captureEvents","captureEvent","longPressTimeout","onCapture","onMove","onRelease","pageX","touches","draggingCursor","body","onLongPress","setTimeout","clearTimeout","onDrag","dragOffsetX","createTooltip","plotSize","onZoom","onFocus","_state","_points","_projection","_secondaryPoints","_secondaryProjection","_element","_canvas","_context","_balloon","_offsetX","_offsetY","_clickedOnLabel","_isZoomed","_isZooming","_selectLabelOnRaf","_selectLabel","_throttledUpdateContent","_updateContent","_onMouseMove","target","pageOffset","getBoundingClientRect","clientX","clientY","top","_onDocumentMove","_clear","_onClick","isZoomable","oldLabelIndex","newLabelIndex","_getLabelIndex","_onBalloonClick","isExternal","_hideBalloon","getPointerVector","shouldShowBalloon","getValue","statistics","name","originalIndex","transform","meanLabel","leftOffset","offsetWidth","_getBalloonLeftOffset","tooltipFormatter","toString","match","text","_getTitle","_updateBalloon","isLines","isAreas","pointIndex","strokeColor","fillColor","_drawCircle","_drawCircles","_drawTail","_renderPercentageValue","dataSet","totalValue","percentageValue","percentageElement","querySelector","newPercentageTitle","prepend","title","titleContainer","children","display","currentTitle","_updateTitle","dataSetContainer","setAttribute","finalStatistics","offset","_isPieSectorSelected","statItem","currentDataSet","_updateDataSet","newDataSet","totalText","_insertNewDataSet","newTotalText","_renderTotal","_updateDataSets","atan2","sqrt","_setupCanvas","update","toggleLoading","isLoading","toggle","toggleIsZoomed","isZoomed","analyzeData","labelFormatter","minimapRange","hideCaption","zoomOutLabel","labels","cloneArray","prepareDatasets","totalYMin","Infinity","totalYMax","statsFormatDayHour","getDate","getMonth","statsFormatDay","statsFormatMin","statsFormatText","analyzed","shouldZoomToPie","create","originalData","_stateManager","_plot","_plotSize","_header","_axes","_minimap","_tooltip","_tools","_zoomer","_windowWidth","innerWidth","_data","_colors","_redrawDebounced","shouldRunLast","waitingTimeout","debounce","_setupComponents","_titleElement","_zoomOutElement","_captionElement","zoomOutCallback","setCaptionThrottled","setCaption","caption","zoom","_onZoomOut","toggleIsZooming","isZooming","_setupLayout","createHeader","clientWidth","offsetHeight","_setupPlotCanvas","callback","_range","_filter","_buildDefaultFilter","_transitionConfig","transitionConfig","datasetVisibilities","transition","duration","_buildTransitionConfig","_transitions","onTick","_nextFrame","_testStartedAt","_fps","_testingFps","_slowDetectedAt","_startedAsSlow","isRunning","cancelAnimationFrame","Boolean","isFast","forceCheck","_tick","isSlow","now","startedAt","progress","current","includes","createTransitionManager","_runCallback","_runCallbackOnRaf","static","noTransition","currentTarget","hasAnimations","createStateManager","_onStateUpdate","_drawYAxisScaled","colorKey","isSecondary","firstVisibleValue","lastVisibleValue","textOpacity","drawXAxis","X_AXIS_HEIGHT","topOffset","xScaleLevelToStep","opacityFactor","shiftedI","drawYAxis","yAxisScaleFrom","yAxisScaleTo","yAxisScaleProgress","yMinViewportFrom","yMinViewportTo","yMaxViewportFrom","yMaxViewportTo","yMinViewportSecondFrom","yMinViewportSecondTo","yMaxViewportSecondFrom","yMaxViewportSecondTo","isYChanging","_drawYAxisPercents","yAxisScaleSecondFrom","yAxisScaleSecondTo","yAxisScaleSecondProgress","secondaryColorKey","createAxes","rangeCallback","_canvasSize","_ruler","_slider","_capturedOffset","_updateRulerOnRaf","_onDragCapture","preventDefault","offsetLeft","_onDragRelease","_updateRange","nextRange","_adjustDiscreteRange","MINIMAP_MARGIN","moveEvent","maxX1","newX1","newX2","MINIMAP_EAR_WIDTH","minX2","maxX2","newState","some","_isStateChanged","boundsAndParams","secondaryDataset","find","_drawDatasets","shouldShow","createMinimap","_onRangeChange","_onZoomIn","_onFocus","filterCallback","control","href","dataset","clickPrevented","_updateFilter","button","isLongPress","buttons","getElementsByTagName","isSingleChecked","input","redraw","oldElement","removeChild","createTools","_onFilterChange","overviewData","stateManager","header","minimap","tooltip","tools","_stateBeforeZoomIn","_stateBeforeZoomOut","_replaceData","newRawData","zoomInLabel","labelWidth","labelMiddle","newData","shouldZoomToLines","scrollWidth","scrollHeight","ZOOM_RANGE_MIDDLE","halfDayWidth","zoomIn","dataPromise","Promise","resolve","_generatePieData","then","zoomOut","createZoomer","startIndex","endIndex","labelFrom","labelTo","_getCaption"],"sourceRoot":""}