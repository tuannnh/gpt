{"version":3,"file":"6585.db4da8a3429bb8931e82.js","mappings":"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","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/ChatExtra.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/Picker.tsx","webpack://telegram-t/./src/components/common/PickerSelectedItem.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/common/StickerButton.tsx","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/util/getKeyFromEvent.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/ui/CheckboxGroup.tsx","webpack://telegram-t/./src/components/ui/Notification.tsx","webpack://telegram-t/./src/components/ui/ProgressSpinner.tsx","webpack://telegram-t/./src/components/ui/Radio.tsx","webpack://telegram-t/./src/components/ui/RadioGroup.tsx","webpack://telegram-t/./src/components/ui/RangeSlider.tsx","webpack://telegram-t/./src/components/ui/SearchInput.tsx","webpack://telegram-t/./src/components/ui/ShowTransition.tsx","webpack://telegram-t/./src/components/ui/Skeleton.tsx","webpack://telegram-t/./src/components/ui/Switcher.tsx","webpack://telegram-t/./src/components/ui/Tab.tsx","webpack://telegram-t/./src/components/ui/TabList.tsx","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useDerivedSignal.ts","webpack://telegram-t/./src/hooks/useDerivedState.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useFullscreen.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useUniqueId.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useSignal.ts","webpack://telegram-t/./src/hooks/useSignalEffect.ts","webpack://telegram-t/./src/lib/fastBlur.js","webpack://telegram-t/./src/types/electron.ts","webpack://telegram-t/./src/util/animateHorizontalScroll.ts","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/captureEvents.ts","webpack://telegram-t/./src/util/lethargy.ts","webpack://telegram-t/./src/util/colors.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/isElementInViewport.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/parseEmojiOnlyString.ts","webpack://telegram-t/./src/util/parseMessageInput.ts","webpack://telegram-t/./src/util/selection.ts"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\nimport Avatar from '../../common/Avatar';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  hasPinnedOffset: boolean;\n  className?: string;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  hasPinnedOffset,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants).filter((_, i) => i < 3).map(({ id, isUser }) => {\n      if (isUser) {\n        if (!usersById[id]) {\n          return undefined;\n        }\n        return { user: usersById[id] };\n      } else {\n        if (!chatsById[id]) {\n          return undefined;\n        }\n        return { chat: chatsById[id] };\n      }\n    }).filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  if (!groupCall) return undefined;\n\n  return (\n    <div\n      className={buildClassName(\n        'GroupCallTopPane',\n        hasPinnedOffset && 'has-pinned-offset',\n        !isActive && 'is-hidden',\n        className,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', groupCall.participantsCount || 0, 'i')}</span>\n      </div>\n      <div className=\"avatars\">\n        {fetchedParticipants.map((p) => {\n          if (!p) return undefined;\n\n          return (\n            <Avatar\n              key={p.user ? p.user.id : p.chat.id}\n              chat={p.chat}\n              user={p.user}\n            />\n          );\n        })}\n      </div>\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Tx2CpCmpZZrHnCMUksg2\",\"character-container\":\"LTqDt1MFKRDBjNZxKii4\",\"characterContainer\":\"LTqDt1MFKRDBjNZxKii4\",\"character\":\"o1u1ctUWtWa2FWlC_BuT\",\"character-old\":\"tzggk5evL9EPqVAtvWEu\",\"characterOld\":\"tzggk5evL9EPqVAtvWEu\",\"character-disappear\":\"cQVeR4w2ND9Xwfl0bNJc\",\"characterDisappear\":\"cQVeR4w2ND9Xwfl0bNJc\",\"character-new\":\"q6poDASGW35qQiXsD99c\",\"characterNew\":\"q6poDASGW35qQiXsD99c\",\"character-appear\":\"lsHAt1tY7_VcodncBZKh\",\"characterAppear\":\"lsHAt1tY7_VcodncBZKh\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport useLang from '../../hooks/useLang';\nimport useFlag from '../../hooks/useFlag';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n};\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n}) => {\n  const lang = useLang();\n\n  const prevTextRef = useRef<string>();\n  const [isAnimating, markAnimating, unmarkAnimating] = useFlag(false);\n\n  const shouldAnimate = selectCanAnimateInterface(getGlobal());\n\n  const textElement = useMemo(() => {\n    if (!shouldAnimate) {\n      return text;\n    }\n    if (!isAnimating) {\n      return prevTextRef.current || text;\n    }\n\n    const prevText = prevTextRef.current;\n\n    const elements = [];\n    for (let i = 0; i < text.length; i++) {\n      if (prevText && text[i] !== prevText[i]) {\n        elements.push(\n          <div className={styles.characterContainer}>\n            <div className={styles.character}>{text[i]}</div>\n            <div className={styles.characterOld} onAnimationEnd={unmarkAnimating}>{prevText[i]}</div>\n            <div className={styles.characterNew} onAnimationEnd={unmarkAnimating}>{text[i]}</div>\n          </div>,\n        );\n      } else {\n        elements.push(<span>{text[i]}</span>);\n      }\n    }\n\n    prevTextRef.current = text;\n\n    return elements;\n  }, [shouldAnimate, isAnimating, text]);\n\n  useEffect(() => {\n    markAnimating();\n  }, [text]);\n\n  return (\n    <span className={buildClassName(styles.root, className)} dir={lang.isRtl ? 'rtl' : undefined}>\n      {textElement}\n    </span>\n  );\n};\n\nexport default AnimatedCounter;\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport type { ApiSticker } from '../../api/types';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerPreviewHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean; lastSyncTime?: number };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, lastSyncTime, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && `sticker${sticker.id}`;\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerPreviewHash(sticker.id) : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n    lastSyncTime,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad, undefined, lastSyncTime);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oGmd77AsTbJeJk8CV6gl\",\"preview\":\"gp5OwinzPeHwkesmaEIR\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useFlag from '../../hooks/useFlag';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isPreviewLoaded, markPreviewLoaded] = useFlag(Boolean(thumbDataUri) || loadedPreviewUrls.has(previewUrl));\n  const transitionClassNames = useMediaTransition(isPreviewLoaded);\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewLoaded();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root, transitionClassNames)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={styles.preview} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={styles.preview}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={markAnimationReady} noTransition />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiAudio, ApiMessage, ApiVoice } from '../../api/types';\nimport { ApiMediaFormat } from '../../api/types';\nimport type { ISettings } from '../../types';\nimport { AudioOrigin } from '../../types';\nimport type { LangFn } from '../../hooks/useLang';\n\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\nimport renderText from './helpers/renderText';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport {\n  getMediaDuration,\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { makeTrackId } from '../../util/audioPlayer';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport useBuffering from '../../hooks/useBuffering';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useLang from '../../hooks/useLang';\nimport { captureEvents } from '../../util/captureEvents';\nimport useMedia from '../../hooks/useMedia';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport Button from '../ui/Button';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Link from '../ui/Link';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  lastSyncTime?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay: (messageId: number, chatId: string) => void;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n// eslint-disable-next-line max-len\nconst TRANSCRIBE_SVG = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 24\" class=\"loading-svg\"><rect class=\"loading-rect\" fill=\"transparent\" width=\"32\" height=\"24\" stroke-width=\"3\" stroke-linejoin=\"round\" rx=\"6\" ry=\"6\" stroke=\"var(--accent-color)\" stroke-dashoffset=\"1\" stroke-dasharray=\"32,68\"></rect></svg>';\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  lastSyncTime,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  onHideTranscription,\n  onPlay,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const { cancelMessageMediaDownload, downloadMessageMedia, transcribeAudio } = getActions();\n\n  const { content: { audio, voice, video }, isMediaUnread } = message;\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = (isActivated || PRELOAD) && lastSyncTime;\n  const coverHash = getMessageMediaHash(message, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n\n  const mediaData = useMedia(\n    getMessageMediaHash(message, 'inline'),\n    !shouldLoad,\n    getMessageMediaFormat(message, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    getMessageMediaFormat(message, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    isVoice ? 'voice' : 'audio',\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    isActivated,\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message),\n  );\n\n  const isOwn = isOwnMessage(message);\n  const waveformCanvasRef = useWaveformCanvas(\n    theme, voice, (isMediaUnread && !isOwn) ? 1 : playProgress, isOwn, !noAvatars, isMobile,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n    } else {\n      downloadMessageMedia({ message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek]);\n\n  const transcribeSvgMemo = useMemo(() => (\n    <div dangerouslySetInnerHTML={{ __html: TRANSCRIBE_SVG }} />\n  ), []);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toggle-play'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color={coverBlobUrl ? 'translucent-white' : 'primary'}\n        className={buttonClassNames.join(' ')}\n        ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n        onClick={handleButtonClick}\n        isRtl={lang.isRtl}\n        backgroundImage={coverBlobUrl}\n      >\n        <i className=\"icon icon-play\" />\n        <i className=\"icon icon-pause\" />\n      </Button>\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <i className={buildClassName('icon', isDownloading ? 'icon-close' : 'icon-arrow-down')} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && (voice || video) && renderWithTitle()}\n      {origin === AudioOrigin.Inline && voice && (\n        renderVoice(\n          voice,\n          seekerRef,\n          waveformCanvasRef,\n          playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          transcribeSvgMemo,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: LangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  voice: ApiVoice,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  svgMemo?: React.ReactNode,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <i className={buildClassName(\n              'transcribe-icon',\n              'icon',\n              (isTranscribed || isTranscriptionError) ? 'icon-down' : 'icon-transcribe',\n              (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n            )}\n            />\n            {isTranscribing && svgMemo}\n          </Button>\n        )}\n      </div>\n      <p className={buildClassName('voice-duration', isMediaUnread && 'unread')} dir=\"auto\">\n        {playProgress === 0 ? formatMediaDuration(voice.duration) : formatMediaDuration(voice.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  voice?: ApiVoice,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!voice) {\n      return undefined;\n    }\n\n    const { waveform, duration } = voice;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, voice, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    renderWaveform(canvas, spikes, playProgress, {\n      peak,\n      fillStyle: isOwn ? fillOwnColor : fillColor,\n      progressFillStyle: isOwn ? progressFillOwnColor : progressFillColor,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline no-selection\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\nimport type {\n  ApiChat, ApiCountryCode, ApiUser, ApiUsername,\n} from '../../api/types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport {\n  getChatLink,\n  getTopicLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserId,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport { debounce } from '../../util/schedulers';\nimport stopEvent from '../../util/stopEvent';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLang from '../../hooks/useLang';\n\nimport ListItem from '../ui/ListItem';\nimport Switcher from '../ui/Switcher';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  forceShowSelf?: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    chat?: ApiChat;\n    canInviteUsers?: boolean;\n    isMuted?: boolean;\n    phoneCodeList: ApiCountryCode[];\n    topicId?: number;\n    description?: string;\n    chatInviteLink?: string;\n  }\n  & Pick<GlobalState, 'lastSyncTime'>;\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  lastSyncTime,\n  user,\n  chat,\n  forceShowSelf,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n}) => {\n  const {\n    loadFullUser,\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const lang = useLang();\n\n  const [areNotificationsEnabled, setAreNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setAreNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffect(() => {\n    if (lastSyncTime && userId) {\n      loadFullUser({ userId });\n    }\n  }, [loadFullUser, userId, lastSyncTime]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo\n      ? getTopicLink(chat.id, activeChatUsernames?.[0].username, topicId)\n      : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, activeChatUsernames, topicId, chatInviteLink]);\n\n  const handleNotificationChange = useLastCallback(() => {\n    setAreNotificationsEnabled((current) => {\n      const newAreNotificationsEnabled = !current;\n\n      runDebounced(() => {\n        if (isTopicInfo) {\n          updateTopicMutedState({\n            chatId: chatId!,\n            topicId: topicId!,\n            isMuted: !newAreNotificationsEnabled,\n          });\n        } else {\n          updateChatMutedState({ chatId: chatId!, isMuted: !newAreNotificationsEnabled });\n        }\n      });\n\n      return newAreNotificationsEnabled;\n    });\n  });\n\n  if (!chat || chat.isRestricted || (isSelf && !forceShowSelf)) {\n    return undefined;\n  }\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (lang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map(({ username: nick }, idx) => {\n                const textToCopy = isChat ? `${TME_LINK_PREFIX}${nick}` : `@${nick}`;\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={nick}\n                      href={`${TME_LINK_PREFIX}${nick}`}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        copy(textToCopy, lang(isChat ? 'Link' : 'Username'));\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {`@${nick}`}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    const username = isChat ? `t.me/${mainUsername.username}` : mainUsername.username;\n    const textToCopy = isChat ? `${TME_LINK_PREFIX}${mainUsername.username}` : `@${mainUsername.username}`;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => copy(textToCopy, lang(isChat ? 'Link' : 'Username'))}\n      >\n        <span className=\"title\" dir=\"auto\">{username}</span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {lang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {formattedNumber && Boolean(formattedNumber.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={() => copy(formattedNumber, lang('Phone'))}>\n          <span className=\"title\" dir=\"auto\">{formattedNumber}</span>\n          <span className=\"subtitle\">{lang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n        >\n          <span className=\"title word-break\" dir=\"auto\">\n            {renderText(description, ['br', 'links', 'emoji'])}\n          </span>\n          <span className=\"subtitle\">{lang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, lang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{lang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {!forceShowSelf && (\n        <ListItem icon=\"unmute\" ripple onClick={handleNotificationChange}>\n          <span>{lang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={areNotificationsEnabled}\n            inactive\n          />\n        </ListItem>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId }): StateProps => {\n    const { lastSyncTime, countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isUserId(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum ? threadId : undefined;\n    const chatInviteLink = chat ? selectChatFullInfo(global, chat.id)?.inviteLink : undefined;\n    let description = user ? selectUserFullInfo(global, user.id)?.bio : undefined;\n    if (!description && chat) {\n      description = selectChatFullInfo(global, chat.id)?.about;\n    }\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    return {\n      lastSyncTime,\n      phoneCodeList,\n      chat,\n      user,\n      canInviteUsers,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n    };\n  },\n)(ChatExtra));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useRef, useEffect, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\n\nimport {\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../config';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  isMessageDocumentVideo,\n} from '../../global/helpers';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useMedia from '../../hooks/useMedia';\nimport useFlag from '../../hooks/useFlag';\n\nimport File from './File';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nconst BYTES_PER_MB = 1024 * 1024;\n\nconst Document: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n  isDownloading,\n}) => {\n  const dispatch = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const document = message.content.document!;\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getMessageMediaHash(message, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMessageMediaFormat(message, 'download'), undefined, undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(message, uploadProgress || downloadProgress, shouldDownload && !isLoaded);\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMessageMediaThumbDataUri(message) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && Boolean(document.mediaType) && (\n    SUPPORTED_VIDEO_CONTENT_TYPES.has(document.mimeType) || SUPPORTED_IMAGE_CONTENT_TYPES.has(document.mimeType)\n  );\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      dispatch.cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n    } else {\n      dispatch.downloadMessageMedia({ message });\n    }\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  });\n\n  return (\n    <File\n      ref={ref}\n      name={fileName}\n      extension={extension}\n      size={size}\n      timestamp={withDate ? datetime || timestamp : undefined}\n      thumbnailDataUri={thumbDataUri}\n      previewData={localBlobUrl || previewData}\n      smaller={smaller}\n      isTransferring={isTransferring}\n      isUploading={isUploading}\n      transferProgress={transferProgress}\n      className={className}\n      sender={sender}\n      isSelectable={isSelectable}\n      isSelected={isSelected}\n      actionIcon={withMediaViewer ? (isMessageDocumentVideo(message) ? 'icon-play' : 'icon-eye') : 'icon-download'}\n      onClick={handleClick}\n      onDateClick={onDateClick ? handleDateClick : undefined}\n    />\n  );\n};\n\nexport default memo(Document);\n","import React from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import React, {\n  memo, useRef, useState, useMemo,\n} from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dateFormat';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useLang from '../../hooks/useLang';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Link from '../ui/Link';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: string;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <i\n            className={buildClassName(\n              'action-icon',\n              'icon',\n              actionIcon || 'icon-download',\n              shouldSpinnerRender && 'hidden',\n            )}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { MouseEvent as ReactMouseEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiTopic, ApiThreadInfo, ApiTypingStatus,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport type { LangFn } from '../../hooks/useLang';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { REM } from './helpers/mediaDimensions';\nimport {\n  getChatTypeString,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\nimport TypingStatus from './TypingStatus';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport TopicIcon from './TopicIcon';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: number;\n  className?: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  onClick?: VoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n  }\n  & Pick<GlobalState, 'lastSyncTime'>;\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  lastSyncTime,\n  topic,\n  messagesCount,\n  onClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin && lastSyncTime) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: chatId });\n    }\n  }, [chatId, isMin, lastSyncTime, withFullInfo, loadFullChat, loadProfilePhotos, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: ReactMouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          avatarOwnerId: chat.id,\n          mediaId: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const lang = useLang();\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">{status}</span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          {messagesCount ? lang('messages', messagesCount, 'i') : renderText(chat.title)}\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <Avatar\n          key={chat.id}\n          size={avatarSize}\n          chat={chat}\n          onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n        />\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : <FullNameTitle peer={chat} />}\n        {renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nfunction getGroupStatus(lang: LangFn, chat: ApiChat) {\n  const chatTypeString = lang(getChatTypeString(chat));\n  const { membersCount } = chat;\n\n  if (chat.isRestricted) {\n    return chatTypeString === 'Channel' ? 'channel is inaccessible' : 'group is inaccessible';\n  }\n\n  if (!membersCount) {\n    return chatTypeString;\n  }\n\n  return chatTypeString === 'Channel'\n    ? lang('Subscribers', membersCount, 'i')\n    : lang('Members', membersCount, 'i');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const { lastSyncTime } = global;\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? chat?.topics?.[threadId] : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n\n    return {\n      lastSyncTime,\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n    };\n  },\n)(GroupChatInfo));\n","import React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport stopEvent from '../../util/stopEvent';\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransition(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MbgQHglBDZLEAHDebnxc\",\"mask-animation\":\"zFmCa6knHOC8UhmcYHq8\",\"maskAnimation\":\"zFmCa6knHOC8UhmcYHq8\",\"circle-cut\":\"oeh0t6JqYOZTcblRUc6a\",\"circleCut\":\"oeh0t6JqYOZTcblRUc6a\",\"dots\":\"leAfUrALDfdpl4i8VEmv\",\"canvas\":\"oQmroREXWSylQXgjAdIB\",\"opacity-breath\":\"FKjJw0kaOB4ibkNp2I6S\",\"opacityBreath\":\"FKjJw0kaOB4ibkNp2I6S\"};","import React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransition(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    ref.current.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas ref={canvasRef} className={styles.canvas} width={width} height={height} />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <i className=\"icon icon-message-failed\" />\n          </div>\n        ) : <i className={`icon icon-message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useLang();\n  const { transitionClassNames } = useShowTransition(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import React, {\n  useRef, useEffect, memo, useMemo,\n} from '../../lib/teact/teact';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport { isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\n\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport PrivateChatInfo from './PrivateChatInfo';\nimport GroupChatInfo from './GroupChatInfo';\nimport PickerSelectedItem from './PickerSelectedItem';\n\nimport Loading from '../ui/Loading';\n\nimport './Picker.scss';\n\ntype OwnProps = {\n  itemIds: string[];\n  selectedIds: string[];\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  isRoundCheckbox?: boolean;\n  lockedIds?: string[];\n  onSelectedIdsChange?: (ids: string[]) => void;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string) => void;\n  onLoadMore?: () => void;\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst Picker: FC<OwnProps> = ({\n  itemIds,\n  selectedIds,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  isRoundCheckbox,\n  lockedIds,\n  onSelectedIdsChange,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return;\n    setTimeout(() => {\n      requestMutation(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, [isSearchable]);\n\n  const [lockedSelectedIds, unlockedSelectedIds] = useMemo(() => {\n    if (!lockedIds?.length) return [MEMO_EMPTY_ARRAY, selectedIds];\n    const unlockedIds = selectedIds.filter((id) => !lockedIds.includes(id));\n    return [lockedIds, unlockedIds];\n  }, [selectedIds, lockedIds]);\n\n  const lockedIdsSet = useMemo(() => new Set(lockedIds), [lockedIds]);\n\n  const sortedItemIds = useMemo(() => {\n    return itemIds.sort((a, b) => {\n      const aIsLocked = lockedIdsSet.has(a);\n      const bIsLocked = lockedIdsSet.has(b);\n      if (aIsLocked && !bIsLocked) {\n        return -1;\n      }\n      if (!aIsLocked && bIsLocked) {\n        return 1;\n      }\n      return 0;\n    });\n  }, [itemIds, lockedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedIdsSet.has(id)) {\n      onDisabledClick?.(id);\n      return;\n    }\n\n    const newSelectedIds = selectedIds.slice();\n    if (newSelectedIds.includes(id)) {\n      newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n    } else {\n      newSelectedIds.push(id);\n    }\n    onSelectedIdsChange?.(newSelectedIds);\n    onFilterChange?.('');\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(onLoadMore, sortedItemIds, Boolean(filterValue));\n\n  const lang = useLang();\n\n  return (\n    <div className=\"Picker\">\n      {isSearchable && (\n        <div className=\"picker-header custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              chatOrUserId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              chatOrUserId={id}\n              isMinimized={\n                shouldMinimize && i + lockedSelectedIds.length < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className=\"picker-list custom-scroll\"\n          items={viewportIds}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => {\n            const renderCheckbox = () => {\n              return (\n                <Checkbox\n                  label=\"\"\n                  disabled={lockedIdsSet.has(id)}\n                  checked={selectedIds.includes(id)}\n                  round={isRoundCheckbox}\n                />\n              );\n            };\n            return (\n              <ListItem\n                key={id}\n                className={buildClassName('chat-item-clickable picker-list-item', isRoundCheckbox && 'chat-item')}\n                disabled={lockedIdsSet.has(id)}\n                allowDisabledClick={Boolean(onDisabledClick)}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleItemClick(id)}\n                ripple\n              >\n                {!isRoundCheckbox ? renderCheckbox() : undefined}\n                {isUserId(id) ? (\n                  <PrivateChatInfo userId={id} />\n                ) : (\n                  <GroupChatInfo chatId={id} />\n                )}\n                {isRoundCheckbox ? renderCheckbox() : undefined}\n              </ListItem>\n            );\n          })}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\">{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(Picker);\n","import React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { selectChat, selectUser } from '../../global/selectors';\nimport { getChatTitle, getUserFirstOrLastName, isUserId } from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport './PickerSelectedItem.scss';\n\ntype OwnProps = {\n  chatOrUserId?: string;\n  icon?: string;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  onClick: (arg: any) => void;\n  clickArg: any;\n  className?: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  currentUserId?: string;\n};\n\nconst PickerSelectedItem: FC<OwnProps & StateProps> = ({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  clickArg,\n  chat,\n  user,\n  className,\n  currentUserId,\n  onClick,\n}) => {\n  const lang = useLang();\n\n  let iconElement: TeactNode | undefined;\n  let titleText: any;\n\n  if (icon && title) {\n    iconElement = (\n      <div className=\"item-icon\">\n        <i className={buildClassName('icon', `icon-${icon}`)} />\n      </div>\n    );\n\n    titleText = title;\n  } else if (chat || user) {\n    iconElement = (\n      <Avatar\n        chat={chat}\n        user={user}\n        size=\"small\"\n        isSavedMessages={user?.isSelf}\n      />\n    );\n\n    const name = !chat || (user && !user.isSelf)\n      ? getUserFirstOrLastName(user)\n      : getChatTitle(lang, chat, chat.id === currentUserId);\n\n    titleText = name ? renderText(name) : undefined;\n  }\n\n  const fullClassName = buildClassName(\n    'PickerSelectedItem',\n    className,\n    chat?.isForum && 'forum-avatar',\n    isMinimized && 'minimized',\n    canClose && 'closeable',\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick(clickArg)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className=\"item-name\" dir=\"auto\">\n          {titleText}\n        </div>\n      )}\n      {canClose && (\n        <div className=\"item-remove\">\n          <i className=\"icon icon-close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId }): StateProps => {\n    if (!chatOrUserId) {\n      return {};\n    }\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isUserId(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n\n    return {\n      chat,\n      user,\n      currentUserId: global.currentUserId,\n    };\n  },\n)(PickerSelectedItem));\n","import React, { useEffect, memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type {\n  ApiUser, ApiTypingStatus, ApiUserStatus, ApiChatMember,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  selectChatMessages,\n  selectUser,\n  selectUserStatus,\n} from '../../global/selectors';\nimport { getMainUsername, getUserStatus, isUserOnline } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\nimport TypingStatus from './TypingStatus';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\n\ntype OwnProps = {\n  userId: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n  }\n  & Pick<GlobalState, 'lastSyncTime'>;\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noRtl,\n  user,\n  userStatus,\n  isSavedMessages,\n  areMessagesLoaded,\n  lastSyncTime,\n  adminMember,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId && lastSyncTime) {\n      if (withFullInfo) loadFullUser({ userId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: userId });\n    }\n  }, [userId, loadFullUser, loadProfilePhotos, lastSyncTime, withFullInfo, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          avatarOwnerId: user.id,\n          mediaId: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const lang = useLang();\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <i className={`icon ${statusIcon} status-icon`} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus) && 'online')}>\n        {mainUsername && <span className=\"handle\">{mainUsername}</span>}\n        <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus)}</span>\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={user!}\n        withEmojiStatus\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n      />\n    );\n  }\n\n  return (\n    <div className=\"ChatInfo\" dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      <Avatar\n        key={user.id}\n        size={avatarSize}\n        user={user}\n        isSavedMessages={isSavedMessages}\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { lastSyncTime } = global;\n    const user = selectUser(global, userId);\n    const userStatus = selectUserStatus(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, userId));\n\n    return {\n      lastSyncTime,\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n    };\n  },\n)(PrivateChatInfo));\n","import React, { memo, useEffect, useRef } from '../../lib/teact/teact';\n\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getUserColorKey,\n  getUserFullName,\n  isUserId,\n  isChatWithRepliesBot,\n  isDeletedUser, getVideoAvatarMediaHash,\n} from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport useMedia from '../../hooks/useMedia';\nimport useLang from '../../hooks/useLang';\nimport useFlag from '../../hooks/useFlag';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport Spinner from '../ui/Spinner';\nimport OptimizedVideo from '../ui/OptimizedVideo';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  photo?: ApiPhoto;\n  lastSyncTime?: number;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  canPlayVideo,\n  lastSyncTime,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const userOrChat = user || chat;\n  const canHaveMedia = userOrChat && !isSavedMessages && !isDeleted && !isRepliesChat;\n  const { isVideo } = photo || {};\n\n  const avatarHash = canHaveMedia && getChatAvatarHash(userOrChat, 'normal');\n  const avatarBlobUrl = useMedia(avatarHash, undefined, undefined, lastSyncTime);\n\n  const photoHash = canHaveMedia && photo && !isVideo && `photo${photo.id}?size=c`;\n  const photoBlobUrl = useMedia(photoHash, undefined, undefined, lastSyncTime);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoAvatarMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash, undefined, undefined, lastSyncTime);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransition(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !avatarBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || avatarBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  let content: TeactNode | undefined;\n\n  if (isSavedMessages) {\n    content = <i className=\"icon icon-avatar-saved-messages\" />;\n  } else if (isDeleted) {\n    content = <i className=\"icon icon-avatar-deleted-account\" />;\n  } else if (isRepliesChat) {\n    content = <i className=\"icon icon-reply-filled\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={avatarBlobUrl} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    `color-bg-${getUserColorKey(user || chat)}`,\n    isSavedMessages && 'saved-messages',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"self\":\"M4GWpBd7i7ViA2xNTvH4\",\"info\":\"uHKuP7J67YWxko9FiDo9\",\"status\":\"DwTvYuXwYiyH8P8HGyEw\",\"fallbackPhoto\":\"a_azkhZzdtjRO5pWnNno\",\"fallbackPhotoContents\":\"NVXGZpj7iFHkn7HaGsey\",\"fallbackPhotoVisible\":\"zPvRR0bFn0HFuXDjj1wU\",\"fallbackPhotoAvatar\":\"IG9hcS9__jiZjU59BA1U\",\"photoWrapper\":\"YvztuUsksHhhNiXGWWbN\",\"photoDashes\":\"UXIlP1uQpXVG_DNB26iC\",\"photoDash\":\"Ay_dhoiSuGWjH2hVOy7i\",\"photoDash_current\":\"xWzV6TAYO756R70Pzfmb\",\"photoDashCurrent\":\"xWzV6TAYO756R70Pzfmb\",\"navigation\":\"rcKy8wQruH_z84yRjAry\",\"navigation_prev\":\"IrGNErqISNgGY687XP5I\",\"navigationPrev\":\"IrGNErqISNgGY687XP5I\",\"navigation_next\":\"mERrfFjC7wKBhpVCjGgg\",\"navigationNext\":\"mERrfFjC7wKBhpVCjGgg\",\"topicContainer\":\"Dlmqly7y8H7bCtaGNFIO\",\"topicTitle\":\"eMDgnAzVXSNlBUAgdBPK\",\"topicIcon\":\"Bv321I_wzF0fdNw63dxB\",\"topicIconTitle\":\"MwfYq2acbtWIp8pGf9kI\",\"topicMessagesCounter\":\"YrvPEuAvDVR3BLU68aIN\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, memo, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiUser, ApiChat, ApiUserStatus, ApiTopic, ApiPhoto,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectUser,\n  selectUserFullInfo,\n  selectUserStatus,\n} from '../../global/selectors';\nimport {\n  getUserStatus, isChatChannel, isUserId, isUserOnline,\n} from '../../global/helpers';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePhotosPreload from './hooks/usePhotosPreload';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport Transition from '../ui/Transition';\nimport TopicIcon from './TopicIcon';\nimport Avatar from './Avatar';\n\nimport './ProfileInfo.scss';\n\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  userId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    isSavedMessages?: boolean;\n    mediaId?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    userPersonalPhoto?: ApiPhoto;\n    userProfilePhoto?: ApiPhoto;\n    userFallbackPhoto?: ApiPhoto;\n    chatProfilePhoto?: ApiPhoto;\n  }\n  & Pick<GlobalState, 'connectionState'>;\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  isSavedMessages,\n  connectionState,\n  mediaId,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  userPersonalPhoto,\n  userProfilePhoto,\n  userFallbackPhoto,\n  chatProfilePhoto,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    openPremiumModal,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n  const { id: chatId } = chat || {};\n  const photos = user?.photos || chat?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaId = usePrevious(mediaId);\n  const prevAvatarOwnerId = usePrevious(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  const slideAnimation = hasSlideAnimation\n    ? (lang.isRtl ? 'slideOptimizedRtl' : 'slideOptimized')\n    : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = isSavedMessages || photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = isSavedMessages || photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaId !== undefined && mediaId === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaId);\n    }\n  }, [mediaId, prevMediaId, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  useEffect(() => {\n    if (connectionState === 'connectionStateReady' && userId && !forceShowSelf) {\n      loadFullUser({ userId });\n    }\n  }, [userId, loadFullUser, connectionState, forceShowSelf]);\n\n  usePhotosPreload(user || chat, photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      avatarOwnerId: userId || chatId,\n      mediaId: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleClickPremium = useLastCallback(() => {\n    if (!user) return;\n\n    openPremiumModal({ fromUserId: user.id });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    if (isSavedMessages || !photos || photos.length <= 1) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.photoDashes}>\n        {photos.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === currentPhotoIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = !isSavedMessages && photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n    const profilePhoto = photo || userPersonalPhoto || userProfilePhoto || chatProfilePhoto || userFallbackPhoto;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={profilePhoto}\n        isSavedMessages={isSavedMessages}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    if (user) {\n      return (\n        <div className={buildClassName(styles.status, 'status', isUserOnline(user, userStatus) && 'online')}>\n          <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus)}</span>\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo', forceShowSelf && styles.self)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && userPersonalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(userPersonalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && userFallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={userFallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(userFallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            isSavedMessages={isSavedMessages}\n            onEmojiStatusClick={handleClickPremium}\n            noLoopLimit\n          />\n        )}\n        {!isSavedMessages && renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { connectionState } = global;\n    const user = selectUser(global, userId);\n    const isPrivate = isUserId(userId);\n    const userStatus = selectUserStatus(global, userId);\n    const chat = selectChat(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const { mediaId, avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? chat?.topics?.[currentTopicId] : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, userId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, userId) : undefined;\n\n    return {\n      connectionState,\n      user,\n      userStatus,\n      chat,\n      userPersonalPhoto: userFullInfo?.personalPhoto,\n      userProfilePhoto: userFullInfo?.profilePhoto,\n      userFallbackPhoto: userFullInfo?.fallbackPhoto,\n      chatProfilePhoto: chatFullInfo?.profilePhoto,\n      isSavedMessages,\n      mediaId,\n      avatarOwnerId,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, userId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import type { ApiChat, ApiPhoto, ApiUser } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { useEffect } from '../../../lib/teact/teact';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  profile: ApiUser | ApiChat | undefined,\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaData = mediaLoader.getFromMemory(`photo${photo.id}?size=c`);\n      if (!mediaData) {\n        mediaLoader.fetch(`photo${photo.id}?size=c`, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { isSameReaction } from '../../global/helpers';\n\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useMedia from '../../hooks/useMedia';\n\nimport CustomEmoji from './CustomEmoji';\n\nimport blankUrl from '../../assets/blank.png';\nimport './ReactionStaticEmoji.scss';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  observeIntersection,\n}) => {\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaData = useMedia(`document${staticIconId}`, !staticIconId, ApiMediaFormat.BlobUrl);\n\n  const transitionClassNames = useMediaTransition(mediaData);\n\n  if (isCustom) {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName('ReactionStaticEmoji', transitionClassNames, className)}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import type { MouseEvent as ReactMouseEvent, ReactNode } from 'react';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiBotInlineMediaResult, ApiSticker } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { getServerTimeOffset } from '../../util/serverTime';\n\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useMenuPosition from '../../hooks/useMenuPosition';\nimport useDynamicColorListener from '../../hooks/stickers/useDynamicColorListener';\n\nimport StickerView from './StickerView';\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport './StickerButton.scss';\n\ntype OwnProps<T> = {\n  sticker: ApiSticker;\n  size: number;\n  noPlay?: boolean;\n  title?: string;\n  className?: string;\n  noContextMenu?: boolean;\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  canViewSet?: boolean;\n  isSelected?: boolean;\n  isCurrentUserPremium?: boolean;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  withTranslucentThumb?: boolean;\n  observeIntersection: ObserveFn;\n  observeIntersectionForShowing?: ObserveFn;\n  noShowPremium?: boolean;\n  onClick?: (arg: OwnProps<T>['clickArg'], isSilent?: boolean, shouldSchedule?: boolean) => void;\n  clickArg: T;\n  onFaveClick?: (sticker: ApiSticker) => void;\n  onUnfaveClick?: (sticker: ApiSticker) => void;\n  onRemoveRecentClick?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\nconst contentForStatusMenuContext = [\n  { title: 'SetTimeoutFor.Hours', value: 1, arg: 3600 },\n  { title: 'SetTimeoutFor.Hours', value: 2, arg: 7200 },\n  { title: 'SetTimeoutFor.Hours', value: 8, arg: 28800 },\n  { title: 'SetTimeoutFor.Days', value: 1, arg: 86400 },\n  { title: 'SetTimeoutFor.Days', value: 2, arg: 172800 },\n];\n\nconst StickerButton = <T extends number | ApiSticker | ApiBotInlineMediaResult | undefined = undefined>({\n  sticker,\n  size,\n  noPlay,\n  title,\n  className,\n  noContextMenu,\n  isSavedMessages,\n  isStatusPicker,\n  canViewSet,\n  observeIntersection,\n  observeIntersectionForShowing,\n  isSelected,\n  isCurrentUserPremium,\n  noShowPremium,\n  sharedCanvasRef,\n  withTranslucentThumb,\n  onClick,\n  clickArg,\n  onFaveClick,\n  onUnfaveClick,\n  onRemoveRecentClick,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}: OwnProps<T>) => {\n  const { openStickerSet, openPremiumModal, setEmojiStatus } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const hasCustomColor = sticker.shouldUseTextColor;\n  const customColor = useDynamicColorListener(ref, !hasCustomColor);\n\n  const {\n    id, isCustomEmoji, hasEffect: isPremium, stickerSetInfo,\n  } = sticker;\n  const isLocked = !isCurrentUserPremium && isPremium;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const shouldLoad = isIntersecting;\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const isIntesectingForShowing = useIsIntersecting(ref, observeIntersectionForShowing);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const shouldRenderContextMenu = Boolean(!noContextMenu && contextMenuPosition);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => {\n    return isStatusPicker ? menuRef.current : ref.current!.querySelector('.sticker-context-menu .bubble');\n  });\n\n  const getLayout = () => ({ withPortal: isStatusPicker, shouldAvoidNegativePosition: true });\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onContextMenuOpen?.();\n    } else {\n      onContextMenuClose?.();\n    }\n  }, [isContextMenuOpen, onContextMenuClose, onContextMenuOpen]);\n\n  useEffect(() => {\n    if (!isIntersecting) handleContextMenuClose();\n  }, [handleContextMenuClose, isIntersecting]);\n\n  const handleClick = () => {\n    if (isContextMenuOpen) return;\n    if (isLocked) {\n      openPremiumModal({ initialSection: 'premium_stickers' });\n      return;\n    }\n    onClick?.(clickArg);\n  };\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleRemoveClick = useLastCallback((e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextRemoveRecent = useLastCallback(() => {\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextUnfave = useLastCallback(() => {\n    onUnfaveClick!(sticker);\n  });\n\n  const handleContextFave = useLastCallback(() => {\n    onFaveClick!(sticker);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick?.(clickArg, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick?.(clickArg, undefined, true);\n  });\n\n  const handleOpenSet = useLastCallback(() => {\n    openStickerSet({ stickerSetInfo });\n  });\n\n  const handleEmojiStatusExpiresClick = useLastCallback((e: React.SyntheticEvent, duration = 0) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    handleContextMenuClose();\n    onContextMenuClick?.();\n    setEmojiStatus({\n      emojiStatus: sticker,\n      expires: Date.now() / 1000 + duration + getServerTimeOffset(),\n    });\n  });\n\n  const shouldShowCloseButton = !IS_TOUCH_ENV && onRemoveRecentClick;\n\n  const fullClassName = buildClassName(\n    'StickerButton',\n    onClick && 'interactive',\n    isSelected && 'selected',\n    isCustomEmoji && 'custom-emoji',\n    className,\n  );\n\n  const contextMenuItems = useMemo(() => {\n    if (!shouldRenderContextMenu || noContextMenu || (isCustomEmoji && !isStatusPicker)) return [];\n\n    const items: ReactNode[] = [];\n\n    if (isCustomEmoji) {\n      contentForStatusMenuContext.forEach((item) => {\n        items.push(\n          <MenuItem onClick={handleEmojiStatusExpiresClick} clickArg={item.arg}>\n            {lang(item.title, item.value, 'i')}\n          </MenuItem>,\n        );\n      });\n\n      return items;\n    }\n\n    if (onUnfaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextUnfave}>\n          {lang('Stickers.RemoveFromFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (onFaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextFave}>\n          {lang('Stickers.AddToFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (!isLocked && onClick) {\n      if (!isSavedMessages) {\n        items.push(<MenuItem onClick={handleSendQuiet} icon=\"muted\">{lang('SendWithoutSound')}</MenuItem>);\n      }\n      items.push(\n        <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n          {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n        </MenuItem>,\n      );\n    }\n\n    if (canViewSet) {\n      items.push(\n        <MenuItem onClick={handleOpenSet} icon=\"stickers\">\n          {lang('ViewPackPreview')}\n        </MenuItem>,\n      );\n    }\n    if (onRemoveRecentClick) {\n      items.push(\n        <MenuItem icon=\"delete\" onClick={handleContextRemoveRecent}>\n          {lang('DeleteFromRecent')}\n        </MenuItem>,\n      );\n    }\n    return items;\n  }, [\n    shouldRenderContextMenu, noContextMenu, isCustomEmoji, isStatusPicker, onUnfaveClick, onFaveClick, isLocked,\n    onClick, canViewSet, onRemoveRecentClick, handleEmojiStatusExpiresClick, lang, handleContextUnfave,\n    handleContextFave, isSavedMessages, handleSendScheduled, handleSendQuiet, handleOpenSet, handleContextRemoveRecent,\n  ]);\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      title={title || (sticker?.emoji)}\n      data-sticker-id={id}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {isIntesectingForShowing && (\n        <StickerView\n          containerRef={ref}\n          sticker={sticker}\n          isSmall\n          size={size}\n          shouldLoop\n          shouldPreloadPreview\n          noLoad={!shouldLoad}\n          noPlay={!shouldPlay}\n          withSharedAnimation\n          sharedCanvasRef={sharedCanvasRef}\n          withTranslucentThumb={withTranslucentThumb}\n          customColor={customColor}\n        />\n      )}\n      {!noShowPremium && isLocked && (\n        <div\n          className=\"sticker-locked\"\n        >\n          <i className=\"icon icon-lock-badge\" />\n        </div>\n      )}\n      {!noShowPremium && isPremium && !isLocked && (\n        <div className=\"sticker-premium\">\n          <i className=\"icon icon-premium\" />\n        </div>\n      )}\n      {shouldShowCloseButton && (\n        <Button\n          className=\"sticker-remove-button\"\n          color=\"dark\"\n          round\n          noFastClick\n          onClick={handleRemoveClick}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      )}\n      {Boolean(contextMenuItems.length) && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"sticker-context-menu\"\n          autoClose\n          withPortal={isStatusPicker}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {contextMenuItems}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerButton);\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { ApiTopic } from '../../api/types';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiUser, ApiTypingStatus } from '../../api/types';\n\nimport { selectUser } from '../../global/selectors';\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport trimText from '../../util/trimText';\nimport renderText from './helpers/renderText';\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport { renderMessageSummary } from './helpers/renderMessageText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLang from '../../hooks/useLang';\n\nimport Media from './Media';\nimport Link from '../ui/Link';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (messageId: number, chatId: string) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message.id, message.chatId);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { ApiMessage } from '../../../api/types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\nimport type { TextPart } from '../../../types';\nimport type { LangFn } from '../../../hooks/useLang';\n\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  getMessageText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\nimport trimText from '../../../util/trimText';\n\nexport function renderMessageText(\n  message: ApiMessage,\n  highlight?: string,\n  emojiSize?: number,\n  isSimple?: boolean,\n  truncateLength?: number,\n  isProtected?: boolean,\n  shouldRenderAsHtml?: boolean,\n) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message);\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    messageId: message.id,\n    isSimple,\n    isProtected,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: LangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText(message, highlight, undefined, true, truncateLength);\n  const description = getMessageSummaryDescription(lang, message, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport {\n  getChatTitle,\n  getSenderTitle,\n  isUserId,\n  isChatGroup,\n} from '../../../../global/helpers';\nimport type { LangFn } from '../../../../hooks/useLang';\n\nexport function getSenderName(\n  lang: LangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getSenderTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if (isUserId(senderId) && (sender as ApiUser).isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport type { OwnProps } from './HeaderMenuContainer';\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default memo(HeaderMenuContainerAsync);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../lib/teact/teact';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport type { IAnchorPosition } from '../../types';\nimport { ManagementScreens } from '../../types';\n\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/windowEnvironment';\nimport {\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n} from '../../global/selectors';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLang from '../../hooks/useLang';\nimport { useHotkeys } from '../../hooks/useHotkeys';\n\nimport Button from '../ui/Button';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: number;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  withForumActions?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  withForumActions,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openLocalTextSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (withForumActions) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openLocalTextSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      const searchInput = document.querySelector<HTMLInputElement>('#MobileSearch input')!;\n      searchInput.focus();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId, threadId: MAIN_THREAD_ID });\n  });\n\n  function handleRequestCall() {\n    requestMasterAndRequestCall({ userId: chatId });\n  }\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  useHotkeys({\n    'Mod+F': handleHotkeySearchClick,\n  });\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel=\"Search in this chat\"\n            >\n              <i className=\"icon icon-search\" />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <i className=\"icon icon-phone\" />\n            </Button>\n          )}\n        </>\n      )}\n      {!withForumActions && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <i className=\"icon icon-user\" />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n      {menuPosition && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuPosition}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canRestartBot={canRestartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={withForumActions}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isUserId(chatId) ? selectChatFullInfo(global, chatId) : undefined;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const canRestartBot = Boolean(bot && selectIsUserBlocked(global, bot.id));\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isChatSuperGroup(chat)) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot;\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isMainThread && !canSubscribe;\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('.RightHeader .SearchInput input');\n  searchInput?.focus();\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport useFlag from '../../../hooks/useFlag';\nimport buildClassName from '../../../util/buildClassName';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport buildClassName from '../../../util/buildClassName';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePrevious(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerId=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { getGlobal } from '../../../../global';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport { REM } from '../../../common/helpers/mediaDimensions';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useBackgroundMode from '../../../../hooks/useBackgroundMode';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { RefObject, ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect, useRef, memo, useState, useLayoutEffect,\n} from '../../../lib/teact/teact';\nimport { requestMutation, requestForcedReflow } from '../../../lib/fasterdom/fasterdom';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { IAnchorPosition, ISettings } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/windowEnvironment';\nimport { selectCanPlayAnimatedEmojis, selectIsInSelectMode, selectReplyingToId } from '../../../global/selectors';\nimport { debounce } from '../../../util/schedulers';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/parseEmojiOnlyString';\nimport { isSelectionInsideInput } from './helpers/selection';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useFlag from '../../../hooks/useFlag';\nimport { isHeavyAnimating } from '../../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../../hooks/useLang';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\n\nimport TextFormatter from './TextFormatter';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: number;\n  isAttachmentModalInput?: boolean;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: string;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n};\n\ntype StateProps = {\n  replyingToId?: number;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyingToId,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    isAttachmentModalInput ? 'attachment' : 'composer',\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    requestForcedReflow(() => {\n      const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n      const currentHeight = Number(scroller.style.height.replace('px', ''));\n      const clone = scrollerCloneRef.current!;\n      const { scrollHeight } = clone;\n      const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n      if (newHeight === currentHeight) {\n        return undefined;\n      }\n\n      const isOverflown = scrollHeight > maxInputHeight;\n\n      function exec() {\n        const transitionDuration = Math.round(\n          TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n        );\n        scroller.style.height = `${newHeight}px`;\n        scroller.style.transitionDuration = `${transitionDuration}ms`;\n        scroller.classList.toggle('overflown', isOverflown);\n      }\n\n      if (willSend) {\n        // Delay to next frame to sync with sending animation\n        requestMutation(exec);\n        return undefined;\n      } else {\n        return exec;\n      }\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (isHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText) return;\n    showAllowedMessageTypesNotification({ chatId });\n  }\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyingToId, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS)}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className=\"input-scroller-content\">\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <i className=\"icon icon-lock-badge placeholder-icon\" />}\n              {placeholder}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div ref={scrollerCloneRef} className={buildClassName('custom-scroll', SCROLLER_CLASS, 'clone')}>\n        <div className=\"input-scroller-content\">\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyingToId: chatId && threadId ? selectReplyingToId(global, chatId, threadId) : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport getKeyFromEvent from '../../../util/getKeyFromEvent';\nimport { INPUT_CUSTOM_EMOJI_SELECTOR } from './helpers/customEmoji';\nimport stopEvent from '../../../util/stopEvent';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  setSelectedRange: (range: Range) => void;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n  spoiler?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n  SPAN: 'spoiler',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  setSelectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n    true,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  const restoreSelection = useLastCallback(() => {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  });\n\n  const updateSelectedRange = useLastCallback(() => {\n    const selection = window.getSelection();\n    if (selection) {\n      setSelectedRange(selection.getRangeAt(0));\n    }\n  });\n\n  const getSelectedText = useLastCallback((shouldDropCustomEmoji?: boolean) => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.replaceChildren(selectedRange.cloneContents());\n    if (shouldDropCustomEmoji) {\n      fragmentEl.querySelectorAll(INPUT_CUSTOM_EMOJI_SELECTOR).forEach((el) => {\n        el.replaceWith(el.getAttribute('alt')!);\n      });\n    }\n    return fragmentEl.innerHTML;\n  });\n\n  const getSelectedElement = useLastCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  });\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && Boolean(selectedTextFormats[fKey as keyof ISelectedTextFormats]),\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleSpoilerText = useLastCallback(() => {\n    if (selectedTextFormats.spoiler) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.dataset.entityType !== ApiMessageEntityTypes.Spoiler\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        spoiler: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand(\n      'insertHTML', false, `<span class=\"spoiler\" data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">${text}</span>`,\n    );\n    onClose();\n  });\n\n  const handleBoldText = useLastCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && Boolean(selectedFormats[key])) {\n          document.execCommand(key);\n        }\n      });\n\n      updateSelectedRange();\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  });\n\n  const handleItalicText = useLastCallback(() => {\n    document.execCommand('italic');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  });\n\n  const handleUnderlineText = useLastCallback(() => {\n    document.execCommand('underline');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  });\n\n  const handleStrikethroughText = useLastCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  });\n\n  const handleMonospaceText = useLastCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  });\n\n  const handleLinkUrlConfirm = useLastCallback(() => {\n    const formattedLinkUrl = (ensureProtocol(linkUrl) || '').split('%').map(encodeURI).join('%');\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  });\n\n  const handleKeyDown = useLastCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY: Record<string, AnyToVoidFunction> = {\n      k: openLinkControl,\n      b: handleBoldText,\n      u: handleUnderlineText,\n      i: handleItalicText,\n      m: handleMonospaceText,\n      s: handleStrikethroughText,\n      p: handleSpoilerText,\n    };\n\n    const handler = HANDLERS_BY_KEY[getKeyFromEvent(e)];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    Boolean(linkUrl.length) && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n      // Prevents focus loss when clicking on the toolbar\n      onMouseDown={stopEvent}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Spoiler text\"\n          className={getFormatButtonClassName('spoiler')}\n          onClick={handleSpoilerText}\n        >\n          <i className=\"icon icon-eye-closed\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <i className=\"icon icon-bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <i className=\"icon icon-italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <i className=\"icon icon-underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <i className=\"icon icon-strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <i className=\"icon icon-monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <i className=\"icon icon-link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <i className=\"icon icon-arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <i className=\"icon icon-check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","export default function getKeyFromEvent(e: KeyboardEvent) {\n  const key = e.key || e.code;\n\n  return key.startsWith('Key') ? key.slice(3).toLowerCase() : key;\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { getActions } from '../../../../global';\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji';\nimport { uncompressEmoji } from '../../../../util/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useFlag from '../../../../hooks/useFlag';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { ApiMessageEntityTypes } from '../../../../api/types';\nimport { filterUsersByName, getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useFlag from '../../../../hooks/useFlag';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterUsersByName(unique([\n      ...((getWithInlineBots() && topInlineBotIds) || []),\n      ...(memberIds || []),\n    ]), usersById, filter);\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useSyncEffect from '../../../hooks/useSyncEffect';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo, useState } from '../../lib/teact/teact';\n\nimport Checkbox from './Checkbox';\n\nexport type IRadioOption = {\n  label: string;\n  subLabel?: string;\n  disabled?: boolean;\n  value: string;\n};\n\ntype OwnProps = {\n  id?: string;\n  options: IRadioOption[];\n  selected?: string[];\n  disabled?: boolean;\n  round?: boolean;\n  loadingOptions?: string[];\n  onChange: (value: string[]) => void;\n};\n\nconst CheckboxGroup: FC<OwnProps> = ({\n  id,\n  options,\n  selected = [],\n  disabled,\n  round,\n  loadingOptions,\n  onChange,\n}) => {\n  const [values, setValues] = useState<string[]>(selected || []);\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value, checked } = event.currentTarget;\n    let newValues: string[];\n    if (checked) {\n      newValues = [...values, value];\n    } else {\n      newValues = values.filter((v) => v !== value);\n    }\n\n    setValues(newValues);\n    onChange(newValues);\n  }, [onChange, values]);\n\n  return (\n    <div id={id} className=\"radio-group\">\n      {options.map((option) => (\n        <Checkbox\n          label={option.label}\n          subLabel={option.subLabel}\n          value={option.value}\n          checked={selected.indexOf(option.value) !== -1}\n          disabled={option.disabled || disabled}\n          round={round}\n          isLoading={loadingOptions ? loadingOptions.indexOf(option.value) !== -1 : undefined}\n          onChange={handleChange}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(CheckboxGroup);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TextPart } from '../../types';\nimport type { CallbackAction } from '../../global/types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport buildClassName from '../../util/buildClassName';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\n\nimport Portal from './Portal';\nimport Button from './Button';\n\nimport './Notification.scss';\n\ntype OwnProps = {\n  title?: TextPart[];\n  containerId?: string;\n  message: TextPart[];\n  duration?: number;\n  onDismiss: () => void;\n  action?: CallbackAction;\n  actionText?: string;\n  className?: string;\n};\n\nconst DEFAULT_DURATION = 3000;\nconst ANIMATION_DURATION = 150;\n\nconst Notification: FC<OwnProps> = ({\n  title, className,\n  message, duration = DEFAULT_DURATION, containerId, onDismiss,\n  action, actionText,\n}) => {\n  const actions = getActions();\n\n  const [isOpen, setIsOpen] = useState(true);\n  // eslint-disable-next-line no-null/no-null\n  const timerRef = useRef<number | undefined>(null);\n  const { transitionClassNames } = useShowTransition(isOpen);\n\n  const closeAndDismiss = useCallback(() => {\n    setIsOpen(false);\n    setTimeout(onDismiss, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [onDismiss]);\n\n  const handleClick = useCallback(() => {\n    if (action) {\n      // @ts-ignore\n      actions[action.action](action.payload);\n    }\n    closeAndDismiss();\n  }, [action, actions, closeAndDismiss]);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(closeAndDismiss) : undefined), [isOpen, closeAndDismiss]);\n\n  useEffect(() => {\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n\n    return () => {\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n        timerRef.current = undefined;\n      }\n    };\n  }, [duration, closeAndDismiss]);\n\n  const handleMouseEnter = useCallback(() => {\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n      timerRef.current = undefined;\n    }\n  }, []);\n\n  const handleMouseLeave = useCallback(() => {\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n  }, [duration, closeAndDismiss]);\n\n  return (\n    <Portal className=\"Notification-container\" containerId={containerId}>\n      <div\n        className={buildClassName('Notification', transitionClassNames, className)}\n        onClick={handleClick}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        <div className=\"content\">\n          {title && <div className=\"notification-title\">{title}</div>}\n          {message}\n        </div>\n        {action && actionText && (\n          <Button\n            color=\"translucent-white\"\n            onClick={handleClick}\n            className=\"Notification-button\"\n          >\n            {actionText}\n          </Button>\n        )}\n      </div>\n    </Portal>\n  );\n};\n\nexport default Notification;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useRef, memo, useLayoutEffect } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './ProgressSpinner.scss';\n\nconst RADIUSES = {\n  s: 22, m: 25, l: 28, xl: 20,\n};\nconst STROKE_WIDTH = 2;\nconst MIN_PROGRESS = 0.05;\nconst MAX_PROGRESS = 1;\n\nconst ProgressSpinner: FC<{\n  progress?: number;\n  size?: 's' | 'm' | 'l' | 'xl';\n  square?: boolean;\n  transparent?: boolean;\n  noCross?: boolean;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n}> = ({\n  progress = 0,\n  size = 'l',\n  square,\n  transparent,\n  noCross,\n  onClick,\n}) => {\n  const radius = RADIUSES[size];\n  const circleRadius = radius - STROKE_WIDTH * 2;\n  const borderRadius = radius - 1;\n  const circumference = circleRadius * 2 * Math.PI;\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  useLayoutEffect(() => {\n    const container = containerRef.current!;\n    const svg = container.firstElementChild;\n    const strokeDashOffset = circumference - Math.min(Math.max(MIN_PROGRESS, progress), MAX_PROGRESS) * circumference;\n\n    if (!svg) {\n      container.innerHTML = `<svg\n        viewBox=\"0 0 ${borderRadius * 2} ${borderRadius * 2}\"\n        height=\"${borderRadius * 2}\"\n        width=\"${borderRadius * 2}\"\n      >\n        <circle\n          stroke=\"white\"\n          fill=\"transparent\"\n          stroke-width=${STROKE_WIDTH}\n          stroke-dasharray=\"${circumference} ${circumference}\"}\n          stroke-dashoffset=\"${strokeDashOffset}\"\n          stroke-linecap=\"round\"\n          r=${circleRadius}\n          cx=${borderRadius}\n          cy=${borderRadius}\n        />\n      </svg>`;\n    } else {\n      (svg.firstElementChild as SVGElement).setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n    }\n  }, [containerRef, circumference, borderRadius, circleRadius, progress]);\n\n  const className = buildClassName(\n    `ProgressSpinner size-${size}`,\n    transparent && 'transparent',\n    square && 'square',\n    noCross && 'no-cross',\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(ProgressSpinner);\n","import type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Spinner from './Spinner';\n\nimport './Radio.scss';\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  label: TeactNode;\n  subLabel?: string;\n  value: string;\n  checked: boolean;\n  disabled?: boolean;\n  hidden?: boolean;\n  isLoading?: boolean;\n  onChange: (e: ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst Radio: FC<OwnProps> = ({\n  id,\n  label,\n  subLabel,\n  value,\n  name,\n  checked,\n  disabled,\n  hidden,\n  isLoading,\n  onChange,\n}) => {\n  const lang = useLang();\n  const className = buildClassName(\n    'Radio',\n    disabled && 'disabled',\n    hidden && 'hidden-widget',\n    isLoading && 'loading',\n  );\n\n  return (\n    <label className={className} dir={lang.isRtl ? 'rtl' : undefined}>\n      <input\n        type=\"radio\"\n        name={name}\n        value={value}\n        id={id}\n        checked={checked}\n        onChange={onChange}\n        disabled={disabled || hidden}\n      />\n      <div className=\"Radio-main\">\n        <span className=\"label\" dir={lang.isRtl ? 'auto' : undefined}>{label}</span>\n        {subLabel && <span className=\"subLabel\" dir={lang.isRtl ? 'auto' : undefined}>{subLabel}</span>}\n      </div>\n      {isLoading && <Spinner />}\n    </label>\n  );\n};\n\nexport default memo(Radio);\n","import type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { useCallback, memo } from '../../lib/teact/teact';\n\nimport Radio from './Radio';\n\nexport type IRadioOption = {\n  label: TeactNode;\n  subLabel?: string;\n  value: string;\n  hidden?: boolean;\n};\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  options: IRadioOption[];\n  selected?: string;\n  disabled?: boolean;\n  loadingOption?: string;\n  onChange: (value: string, event: ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst RadioGroup: FC<OwnProps> = ({\n  id,\n  name,\n  options,\n  selected,\n  disabled,\n  loadingOption,\n  onChange,\n}) => {\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.currentTarget;\n    onChange(value, event);\n  }, [onChange]);\n\n  return (\n    <div id={id} className=\"radio-group\">\n      {options.map((option) => (\n        <Radio\n          name={name}\n          label={option.label}\n          subLabel={option.subLabel}\n          value={option.value}\n          checked={option.value === selected}\n          hidden={option.hidden}\n          disabled={disabled}\n          isLoading={loadingOption ? loadingOption === option.value : undefined}\n          onChange={handleChange}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(RadioGroup);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, useMemo, memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport './RangeSlider.scss';\n\ntype OwnProps = {\n  options?: string[];\n  min?: number;\n  max?: number;\n  step?: number;\n  label?: string;\n  value: number;\n  disabled?: boolean;\n  bold?: boolean;\n  className?: string;\n  renderValue?: (value: number) => string;\n  onChange: (value: number) => void;\n};\n\nconst RangeSlider: FC<OwnProps> = ({\n  options,\n  min = 0,\n  max = options ? options.length - 1 : 100,\n  step = 1,\n  label,\n  value,\n  disabled,\n  bold,\n  className,\n  renderValue,\n  onChange,\n}) => {\n  const lang = useLang();\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    onChange(Number(event.currentTarget.value));\n  }, [onChange]);\n\n  const mainClassName = buildClassName(\n    className,\n    'RangeSlider',\n    disabled && 'disabled',\n    bold && 'bold',\n  );\n\n  const trackWidth = useMemo(() => {\n    if (options) {\n      return (value / (options.length - 1)) * 100;\n    } else {\n      const possibleValuesLength = (max - min) / step;\n      return ((value - min) / possibleValuesLength) * 100;\n    }\n  }, [options, value, max, min, step]);\n\n  return (\n    <div className={mainClassName}>\n      {label && (\n        <div className=\"slider-top-row\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <span className=\"label\" dir=\"auto\">{label}</span>\n          {!options && (\n            <span className=\"value\" dir=\"auto\">{renderValue ? renderValue(value) : value}</span>\n          )}\n        </div>\n      )}\n      <div className=\"slider-main\">\n        <div\n          className=\"slider-fill-track\"\n          style={`width: ${trackWidth}%`}\n        />\n        <input\n          min={min}\n          max={max}\n          value={value}\n          step={step}\n          type=\"range\"\n          className=\"RangeSlider__input\"\n          onChange={handleChange}\n        />\n        {options && (\n          <div className=\"slider-options\">\n            {options.map((option, index) => (\n              <div\n                className={buildClassName('slider-option no-selection', index === value && 'active')}\n                onClick={() => onChange(index)}\n              >\n                {option}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(RangeSlider);\n","import type { RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  useRef, useEffect, memo, useCallback,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useInputFocusOnOpen from '../../hooks/useInputFocusOnOpen';\n\nimport Loading from './Loading';\nimport Button from './Button';\nimport ShowTransition from './ShowTransition';\n\nimport './SearchInput.scss';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLInputElement>;\n  children?: React.ReactNode;\n  parentContainerClassName?: string;\n  className?: string;\n  inputId?: string;\n  value?: string;\n  focused?: boolean;\n  isLoading?: boolean;\n  spinnerColor?: 'yellow';\n  spinnerBackgroundColor?: 'light';\n  placeholder?: string;\n  disabled?: boolean;\n  autoComplete?: string;\n  canClose?: boolean;\n  autoFocusSearch?: boolean;\n  onChange: (value: string) => void;\n  onReset?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  onSpinnerClick?: NoneToVoidFunction;\n};\n\nconst SearchInput: FC<OwnProps> = ({\n  ref,\n  children,\n  parentContainerClassName,\n  value,\n  inputId,\n  className,\n  focused,\n  isLoading,\n  spinnerColor,\n  spinnerBackgroundColor,\n  placeholder,\n  disabled,\n  autoComplete,\n  canClose,\n  autoFocusSearch,\n  onChange,\n  onReset,\n  onFocus,\n  onBlur,\n  onSpinnerClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLInputElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  const [isInputFocused, markInputFocused, unmarkInputFocused] = useFlag(focused);\n\n  useInputFocusOnOpen(inputRef, autoFocusSearch, unmarkInputFocused);\n\n  useEffect(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (focused) {\n      inputRef.current.focus();\n    } else {\n      inputRef.current.blur();\n    }\n  }, [focused, placeholder]); // Trick for setting focus when selecting a contact to search for\n\n  const lang = useLang();\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const { currentTarget } = event;\n    onChange(currentTarget.value);\n  }\n\n  function handleFocus() {\n    markInputFocused();\n    if (onFocus) {\n      onFocus();\n    }\n  }\n\n  function handleBlur() {\n    unmarkInputFocused();\n    if (onBlur) {\n      onBlur();\n    }\n  }\n\n  const handleKeyDown = useCallback((e: React.KeyboardEvent) => {\n    if (e.key === 'ArrowDown' || e.key === 'Enter') {\n      const element = document.querySelector(`.${parentContainerClassName} .ListItem-button`) as HTMLElement;\n      if (element) {\n        element.focus();\n      }\n    }\n  }, [parentContainerClassName]);\n\n  return (\n    <div\n      className={buildClassName('SearchInput', className, isInputFocused && 'has-focus')}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {children}\n      <input\n        ref={inputRef}\n        id={inputId}\n        type=\"text\"\n        dir=\"auto\"\n        placeholder={placeholder || lang('Search')}\n        className=\"form-control\"\n        value={value}\n        disabled={disabled}\n        autoComplete={autoComplete}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        onKeyDown={handleKeyDown}\n      />\n      <i className=\"icon icon-search\" />\n      <ShowTransition isOpen={Boolean(isLoading)} className=\"slow\">\n        <Loading color={spinnerColor} backgroundColor={spinnerBackgroundColor} onClick={onSpinnerClick} />\n      </ShowTransition>\n      {!isLoading && (value || canClose) && onReset && (\n        <Button\n          round\n          size=\"tiny\"\n          color=\"translucent\"\n          onClick={onReset}\n        >\n          <span className=\"icon icon-close\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SearchInput);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useRef } from '../../lib/teact/teact';\n\nimport useShowTransition from '../../hooks/useShowTransition';\nimport usePrevious from '../../hooks/usePrevious';\nimport buildClassName from '../../util/buildClassName';\n\ntype OwnProps = {\n  isOpen: boolean;\n  isCustom?: boolean;\n  isHidden?: boolean;\n  id?: string;\n  className?: string;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  noCloseTransition?: boolean;\n  shouldAnimateFirstRender?: boolean;\n  style?: string;\n  children: React.ReactNode;\n  ref?: React.LegacyRef<HTMLDivElement>;\n};\n\nconst ShowTransition: FC<OwnProps> = ({\n  isOpen,\n  isHidden,\n  isCustom,\n  id,\n  className,\n  onClick,\n  children,\n  noCloseTransition,\n  shouldAnimateFirstRender,\n  style,\n  ref,\n}) => {\n  const prevIsOpen = usePrevious(isOpen);\n  const prevChildren = usePrevious(children);\n  const fromChildrenRef = useRef<React.ReactNode>();\n  const isFirstRender = prevIsOpen === undefined;\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(\n    isOpen && !isHidden,\n    undefined,\n    isFirstRender && !shouldAnimateFirstRender,\n    isCustom ? false : undefined,\n    noCloseTransition,\n  );\n\n  if (prevIsOpen && !isOpen) {\n    fromChildrenRef.current = prevChildren;\n  }\n\n  return (\n    (shouldRender || isHidden) && (\n      <div\n        id={id}\n        ref={ref}\n        className={buildClassName(className, transitionClassNames)}\n        onClick={onClick}\n        style={style}\n      >\n        {isOpen ? children : fromChildrenRef.current!}\n      </div>\n    )\n  );\n};\n\nexport default ShowTransition;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport './Skeleton.scss';\n\ntype OwnProps = {\n  variant?: 'rectangular' | 'rounded-rect' | 'round';\n  animation?: 'wave' | 'pulse';\n  width?: number;\n  height?: number;\n  forceAspectRatio?: boolean;\n  inline?: boolean;\n  className?: string;\n};\n\nconst Skeleton: FC<OwnProps> = ({\n  variant = 'rectangular',\n  animation = 'wave',\n  width,\n  height,\n  forceAspectRatio,\n  inline,\n  className,\n}) => {\n  const classNames = buildClassName('Skeleton', variant, animation, className, inline && 'inline');\n  const aspectRatio = (width && height) ? `aspect-ratio: ${width}/${height}` : undefined;\n  const style = forceAspectRatio ? aspectRatio\n    : buildStyle(Boolean(width) && `width: ${width}px`, Boolean(height) && `height: ${height}px`);\n  return (\n    <div className={classNames} style={style}>{inline && '\\u00A0'}</div>\n  );\n};\n\nexport default Skeleton;\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './Switcher.scss';\n\ntype OwnProps = {\n  id?: string;\n  name?: string;\n  value?: string;\n  label: string;\n  checked?: boolean;\n  disabled?: boolean;\n  inactive?: boolean;\n  noAnimation?: boolean;\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  onCheck?: (isChecked: boolean) => void;\n};\n\nconst Switcher: FC<OwnProps> = ({\n  id,\n  name,\n  value,\n  label,\n  checked = false,\n  disabled,\n  inactive,\n  noAnimation,\n  onChange,\n  onCheck,\n}) => {\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (onCheck) {\n      onCheck(e.currentTarget.checked);\n    }\n  }, [onChange, onCheck]);\n\n  const className = buildClassName(\n    'Switcher',\n    disabled && 'disabled',\n    inactive && 'inactive',\n    noAnimation && 'no-animation',\n  );\n\n  return (\n    <label className={className} title={label}>\n      <input\n        type=\"checkbox\"\n        id={id}\n        name={name}\n        value={value}\n        checked={checked}\n        disabled={disabled}\n        onChange={handleChange}\n      />\n      <span className=\"widget\" />\n    </label>\n  );\n};\n\nexport default memo(Switcher);\n","import React, {\n  useRef,\n  memo,\n  useEffect,\n  useLayoutEffect,\n} from '../../lib/teact/teact';\nimport { requestForcedReflow, requestMutation } from '../../lib/fasterdom/fasterdom';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { MenuItemContextAction } from './ListItem';\n\nimport { MouseButton } from '../../util/windowEnvironment';\nimport forceReflow from '../../util/forceReflow';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from '../common/helpers/renderText';\nimport useMenuPosition from '../../hooks/useMenuPosition';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useFastClick } from '../../hooks/useFastClick';\n\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\n\nimport MenuSeparator from './MenuSeparator';\nimport './Tab.scss';\nimport useLastCallback from '../../hooks/useLastCallback';\n\ntype OwnProps = {\n  className?: string;\n  title: string;\n  isActive?: boolean;\n  isBlocked?: boolean;\n  badgeCount?: number;\n  isBadgeActive?: boolean;\n  previousActiveTab?: number;\n  onClick?: (arg: number) => void;\n  clickArg?: number;\n  contextActions?: MenuItemContextAction[];\n  contextRootElementSelector?: string;\n};\n\nconst classNames = {\n  active: 'Tab--active',\n  badgeActive: 'Tab__badge--active',\n};\n\nconst Tab: FC<OwnProps> = ({\n  className,\n  title,\n  isActive,\n  isBlocked,\n  badgeCount,\n  isBadgeActive,\n  previousActiveTab,\n  onClick,\n  clickArg,\n  contextActions,\n  contextRootElementSelector,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const tabRef = useRef<HTMLDivElement>(null);\n\n  useLayoutEffect(() => {\n    // Set initial active state\n    if (isActive && previousActiveTab === undefined && tabRef.current) {\n      tabRef.current!.classList.add(classNames.active);\n    }\n  }, [isActive, previousActiveTab]);\n\n  useEffect(() => {\n    if (!isActive || previousActiveTab === undefined) {\n      return;\n    }\n\n    const tabEl = tabRef.current!;\n    const prevTabEl = tabEl.parentElement!.children[previousActiveTab];\n    if (!prevTabEl) {\n      // The number of tabs in the parent component has decreased. It is necessary to add the active tab class name.\n      if (isActive && !tabEl.classList.contains(classNames.active)) {\n        requestMutation(() => {\n          tabEl.classList.add(classNames.active);\n        });\n      }\n      return;\n    }\n\n    const platformEl = tabEl.querySelector<HTMLElement>('.platform')!;\n    const prevPlatformEl = prevTabEl.querySelector<HTMLElement>('.platform')!;\n\n    // We move and resize the platform, so it repeats the position and size of the previous one\n    const shiftLeft = prevPlatformEl.parentElement!.offsetLeft - platformEl.parentElement!.offsetLeft;\n    const scaleFactor = prevPlatformEl.clientWidth / platformEl.clientWidth;\n\n    requestMutation(() => {\n      prevPlatformEl.classList.remove('animate');\n      platformEl.classList.remove('animate');\n      platformEl.style.transform = `translate3d(${shiftLeft}px, 0, 0) scale3d(${scaleFactor}, 1, 1)`;\n\n      requestForcedReflow(() => {\n        forceReflow(platformEl);\n\n        return () => {\n          platformEl.classList.add('animate');\n          platformEl.style.transform = 'none';\n\n          prevTabEl.classList.remove(classNames.active);\n          tabEl.classList.add(classNames.active);\n        };\n      });\n    });\n  }, [isActive, previousActiveTab]);\n\n  const {\n    contextMenuPosition, handleContextMenu, handleBeforeContextMenu, handleContextMenuClose,\n    handleContextMenuHide, isContextMenuOpen,\n  } = useContextMenuHandlers(tabRef, !contextActions);\n\n  const { handleClick, handleMouseDown } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (contextActions && (e.button === MouseButton.Secondary || !onClick)) {\n      handleBeforeContextMenu(e);\n    }\n\n    if (e.type === 'mousedown' && e.button !== MouseButton.Main) {\n      return;\n    }\n\n    onClick?.(clickArg!);\n  });\n\n  const getTriggerElement = useLastCallback(() => tabRef.current);\n  const getRootElement = useLastCallback(\n    () => (contextRootElementSelector ? tabRef.current!.closest(contextRootElementSelector) : document.body),\n  );\n  const getMenuElement = useLastCallback(\n    () => document.querySelector('#portals')!.querySelector('.Tab-context-menu .bubble'),\n  );\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  return (\n    <div\n      className={buildClassName('Tab', onClick && 'Tab--interactive', className)}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n      onContextMenu={handleContextMenu}\n      ref={tabRef}\n    >\n      <span className=\"Tab_inner\">\n        {renderText(title)}\n        {Boolean(badgeCount) && (\n          <span className={buildClassName('badge', isBadgeActive && classNames.badgeActive)}>{badgeCount}</span>\n        )}\n        {isBlocked && <i className=\"icon icon-lock-badge blocked\" />}\n        <i className=\"platform\" />\n      </span>\n\n      {contextActions && contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"Tab-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          withPortal\n        >\n          {contextActions.map((action) => (\n            ('isSeparator' in action) ? (\n              <MenuSeparator key={action.key || 'separator'} />\n            ) : (\n              <MenuItem\n                key={action.title}\n                icon={action.icon}\n                destructive={action.destructive}\n                disabled={!action.handler}\n                onClick={action.handler}\n              >\n                {action.title}\n              </MenuItem>\n            )\n          ))}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Tab);\n","import React, { memo, useRef, useEffect } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { MenuItemContextAction } from './ListItem';\n\nimport { ALL_FOLDER_ID } from '../../config';\nimport { IS_ANDROID, IS_IOS } from '../../util/windowEnvironment';\nimport animateHorizontalScroll from '../../util/animateHorizontalScroll';\n\nimport usePrevious from '../../hooks/usePrevious';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\n\nimport Tab from './Tab';\n\nimport './TabList.scss';\n\nexport type TabWithProperties = {\n  id?: number;\n  title: string;\n  badgeCount?: number;\n  isBlocked?: boolean;\n  isBadgeActive?: boolean;\n  contextActions?: MenuItemContextAction[];\n};\n\ntype OwnProps = {\n  tabs: readonly TabWithProperties[];\n  areFolders?: boolean;\n  activeTab: number;\n  big?: boolean;\n  onSwitchTab: (index: number) => void;\n  contextRootElementSelector?: string;\n};\n\nconst TAB_SCROLL_THRESHOLD_PX = 16;\n// Should match duration from `--slide-transition` CSS variable\nconst SCROLL_DURATION = IS_IOS ? 450 : IS_ANDROID ? 400 : 300;\n\nconst TabList: FC<OwnProps> = ({\n  tabs, areFolders, activeTab, big, onSwitchTab,\n  contextRootElementSelector,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const previousActiveTab = usePrevious(activeTab);\n\n  useHorizontalScroll(containerRef, undefined, true);\n\n  // Scroll container to place active tab in the center\n  useEffect(() => {\n    const container = containerRef.current!;\n    const { scrollWidth, offsetWidth, scrollLeft } = container;\n    if (scrollWidth <= offsetWidth) {\n      return;\n    }\n\n    const activeTabElement = container.childNodes[activeTab] as HTMLElement | null;\n    if (!activeTabElement) {\n      return;\n    }\n\n    const { offsetLeft: activeTabOffsetLeft, offsetWidth: activeTabOffsetWidth } = activeTabElement;\n    const newLeft = activeTabOffsetLeft - (offsetWidth / 2) + (activeTabOffsetWidth / 2);\n\n    // Prevent scrolling by only a couple of pixels, which doesn't look smooth\n    if (Math.abs(newLeft - scrollLeft) < TAB_SCROLL_THRESHOLD_PX) {\n      return;\n    }\n\n    animateHorizontalScroll(container, newLeft, SCROLL_DURATION);\n  }, [activeTab]);\n\n  const lang = useLang();\n\n  return (\n    <div\n      className={`TabList no-selection no-scrollbar ${big ? 'big' : ''}`}\n      ref={containerRef}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {tabs.map((tab, i) => (\n        <Tab\n          key={tab.id ?? tab.title}\n          // TODO Remove dependency on usage context\n          title={(!areFolders || tab.id === ALL_FOLDER_ID) ? lang(tab.title) : tab.title}\n          isActive={i === activeTab}\n          isBlocked={tab.isBlocked}\n          badgeCount={tab.badgeCount}\n          isBadgeActive={tab.isBadgeActive}\n          previousActiveTab={previousActiveTab}\n          onClick={onSwitchTab}\n          clickArg={i}\n          contextActions={tab.contextActions}\n          contextRootElementSelector={contextRootElementSelector}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(TabList);\n","import type { Signal } from '../util/signals';\nimport type { Scheduler } from '../util/schedulers';\n\nimport useThrottledCallback from './useThrottledCallback';\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import { useEffect, useRef, useState } from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport { register } from '../util/audioPlayer';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { selectTabState } from '../global/selectors';\n\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useSyncEffect from './useSyncEffect';\nimport useLastCallback from './useLastCallback';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n\n          registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current!;\n  const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n\n  // RAF progress\n  useEffect(() => {\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy.src && proxy.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy.src, proxy.paused]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime(time);\n    if (duration) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useEffect, useRef } from '../lib/teact/teact';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/windowEnvironment';\nimport fastBlur from '../lib/fastBlur';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import type { Signal } from '../util/signals';\n\nimport useSyncEffect from './useSyncEffect';\nimport useSignal from './useSignal';\nimport { useStateRef } from './useStateRef';\nimport { useSignalEffect } from './useSignalEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedSignal<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): Signal<T>;\nfunction useDerivedSignal<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): Signal<T>;\nfunction useDerivedSignal<T>(dependency: T): Signal<T>;\n\nfunction useDerivedSignal<T>(resolverOrDependency: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrDependency as Resolver<T> : () => (resolverOrDependency as T);\n  dependencies ??= [resolverOrDependency];\n\n  const [getValue, setValue] = useSignal<T>();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver() {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)(setValue);\n    } else {\n      setValue((currentResolver as SyncResolver<T>)());\n    }\n  }\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSyncEffect(runCurrentResolver, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return getValue as Signal<T>;\n}\n\nexport default useDerivedSignal;\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useForceUpdate from './useForceUpdate';\nimport useSyncEffect from './useSyncEffect';\nimport { useStateRef } from './useStateRef';\nimport { useSignalEffect } from './useSignalEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedState<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): T;\nfunction useDerivedState<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): T;\nfunction useDerivedState<T>(signal: Signal<T>): T;\n\nfunction useDerivedState<T>(resolverOrSignal: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrSignal as Resolver<T> : () => ((resolverOrSignal as Signal<T>)());\n  dependencies ??= [resolverOrSignal];\n\n  const valueRef = useRef<T>();\n  const forceUpdate = useForceUpdate();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver(isSync = false) {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)((newValue) => {\n        if (valueRef.current !== newValue) {\n          valueRef.current = newValue;\n          forceUpdate();\n        }\n      });\n    } else {\n      const newValue = (currentResolver as SyncResolver<T>)();\n      if (valueRef.current !== newValue) {\n        valueRef.current = newValue;\n\n        if (!isSync) {\n          forceUpdate();\n        }\n      }\n    }\n  }\n\n  useSyncEffect(() => {\n    runCurrentResolver(true);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return valueRef.current as T;\n}\n\nexport default useDerivedState;\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst useEnsureMessage = (\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n) => {\n  const { loadMessage } = getActions();\n  const loadMessageThrottled = useMemo(() => {\n    const throttled = throttle(loadMessage, 500, true);\n    return () => {\n      throttled({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    };\n  }, [loadMessage, chatId, messageId, replyOriginForId]);\n\n  useEffect(() => {\n    if (messageId && !message) {\n      loadMessageThrottled();\n    }\n  });\n};\n\nexport default useEnsureMessage;\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  getOrderedIds,\n  getUnreadCounters,\n  getChatsCount,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  addChatsCountCallback,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useLayoutEffect, useState, useEffect } from '../lib/teact/teact';\nimport { IS_IOS } from '../util/windowEnvironment';\n\nimport { ElectronEvent } from '../types/electron';\n\ntype RefType = {\n  current: HTMLVideoElement | null;\n};\n\ntype ReturnType = [boolean, () => void, () => void] | [false];\ntype CallbackType = (isPlayed: boolean) => void;\n\nconst prop = getBrowserFullscreenElementProp();\n\nexport default function useFullscreen(elRef: RefType, setIsPlayed: CallbackType): ReturnType {\n  const [isFullscreen, setIsFullscreen] = useState(Boolean(prop && document[prop]));\n\n  const setFullscreen = () => {\n    if (!elRef.current || !(prop || IS_IOS)) {\n      return;\n    }\n    safeRequestFullscreen(elRef.current);\n    setIsFullscreen(true);\n  };\n\n  const exitFullscreen = () => {\n    if (!elRef.current) {\n      return;\n    }\n    safeExitFullscreen();\n    setIsFullscreen(false);\n  };\n\n  useLayoutEffect(() => {\n    const video = elRef.current;\n    const listener = () => {\n      const isEnabled = Boolean(prop && document[prop]);\n      setIsFullscreen(isEnabled);\n      // In Firefox fullscreen video controls are not visible by default, so we force them manually\n      video!.controls = isEnabled;\n    };\n    const listenerEnter = () => { setIsFullscreen(true); };\n    const listenerExit = () => {\n      setIsFullscreen(false);\n      setIsPlayed(false);\n    };\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    if (video) {\n      video.addEventListener('webkitbeginfullscreen', listenerEnter, false);\n      video.addEventListener('webkitendfullscreen', listenerExit, false);\n    }\n\n    return () => {\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n      if (video) {\n        video.removeEventListener('webkitbeginfullscreen', listenerEnter, false);\n        video.removeEventListener('webkitendfullscreen', listenerExit, false);\n      }\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  if (!prop && !IS_IOS) {\n    return [false];\n  }\n\n  return [isFullscreen, setFullscreen, exitFullscreen];\n}\n\nexport const useFullscreenStatus = () => {\n  const [isFullscreen, setIsFullscreen] = useState(false);\n\n  useEffect(() => {\n    const listener = () => {\n      setIsFullscreen(checkIfFullscreen());\n    };\n\n    const removeElectronListener = window.electron?.on(ElectronEvent.FULLSCREEN_CHANGE, setIsFullscreen);\n    window.electron?.isFullscreen().then(setIsFullscreen);\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    return () => {\n      removeElectronListener?.();\n\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n    };\n  }, []);\n\n  return isFullscreen;\n};\n\nfunction getBrowserFullscreenElementProp() {\n  if (typeof document.fullscreenElement !== 'undefined') {\n    return 'fullscreenElement';\n  } else if (typeof document.mozFullScreenElement !== 'undefined') {\n    return 'mozFullScreenElement';\n  } else if (typeof document.webkitFullscreenElement !== 'undefined') {\n    return 'webkitFullscreenElement';\n  }\n  return '';\n}\n\nexport function checkIfFullscreen() {\n  const fullscreenProp = getBrowserFullscreenElementProp();\n  return Boolean(fullscreenProp && document[fullscreenProp]);\n}\n\nexport function safeRequestFullscreen(video: HTMLVideoElement) {\n  if (video.requestFullscreen) {\n    video.requestFullscreen();\n  } else if (video.webkitRequestFullscreen) {\n    video.webkitRequestFullscreen();\n  } else if (video.webkitEnterFullscreen) {\n    video.webkitEnterFullscreen();\n  } else if (video.mozRequestFullScreen) {\n    video.mozRequestFullScreen();\n  }\n}\n\nexport function safeExitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitCancelFullScreen) {\n    document.webkitCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport useSignal from './useSignal';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container!.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import { useEffect } from '../lib/teact/teact';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\nimport { createCallbackManager } from '../util/callbacks';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\n\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import { useRef } from '../lib/teact/teact';\nimport generateIdFor from '../util/generateIdFor';\n\nconst store: Record<string, boolean> = {};\n\nconst useUniqueId = () => {\n  const idRef = useRef<string>();\n\n  if (!idRef.current) {\n    idRef.current = generateIdFor(store);\n    store[idRef.current] = true;\n  }\n\n  return idRef.current;\n};\n\nexport default useUniqueId;\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/windowEnvironment';\nimport { ApiMediaFormat } from '../api/types';\nimport { throttle } from '../util/schedulers';\nimport * as mediaLoader from '../util/mediaLoader';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  cacheBuster?: number,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = mediaFormat === ApiMediaFormat.Stream || (\n    IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive\n  );\n  const forceUpdate = useForceUpdate();\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, cacheBuster, forceUpdate, isStreaming, delay, handleProgress,\n    isHtmlAllowed, id,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport usePrevious from './usePrevious';\nimport useForceUpdate from './useForceUpdate';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number) {\n  const prev = usePrevious(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return !timeoutRef.current || !duration || isCurrentPresent ? current : prev;\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport type { OwnProps } from './CalendarModal';\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default memo(CalendarModalAsync);\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\n\nimport useLastCallback from './useLastCallback';\nimport useLang from './useLang';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: number) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import { useRef } from '../lib/teact/teact';\nimport { createSignal } from '../util/signals';\n\nexport default function useSignal<T>(initial?: T) {\n  const signalRef = useRef<ReturnType<typeof createSignal<T>>>();\n  signalRef.current ??= createSignal<T>(initial);\n  return signalRef.current;\n}\n","import { useRef } from '../lib/teact/teact';\nimport { cleanupEffect, isSignal } from '../util/signals';\nimport useEffectOnce from './useEffectOnce';\n\nexport function useSignalEffect(effect: NoneToVoidFunction, dependencies: readonly any[]) {\n  // The is extracted from `useEffectOnce` to run before all effects\n  const isFirstRun = useRef(true);\n  if (isFirstRun.current) {\n    isFirstRun.current = false;\n\n    dependencies?.forEach((dependency) => {\n      if (isSignal(dependency)) {\n        dependency.subscribe(effect);\n      }\n    });\n  }\n\n  useEffectOnce(() => {\n    return () => {\n      cleanupEffect(effect);\n    };\n  });\n}\n","/* eslint-disable no-nested-ternary */\n/* eslint-disable no-bitwise */\n/* eslint-disable no-multi-assign */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-param-reassign */\n/* eslint-disable prefer-const */\n/* eslint-disable eqeqeq */\n/* eslint-disable @typescript-eslint/naming-convention */\n\n/*\nSuperfast Blur - a fast Box Blur For Canvas\n\nVersion:     0.5\nAuthor:        Mario Klingemann\nContact:     mario@quasimondo.com\nWebsite:    http://www.quasimondo.com/BoxBlurForCanvas\nTwitter:    @quasimondo\n\nIn case you find this class useful - especially in commercial projects -\nI am not totally unhappy for a small donation to my PayPal account\nmario@quasimondo.de\n\nOr support me on flattr:\nhttps://flattr.com/thing/140066/Superfast-Blur-a-pretty-fast-Box-Blur-Effect-for-CanvasJavascript\n\nCopyright (c) 2011 Mario Klingemann\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n*/\n\n// eslint-disable-next-line max-len\nconst mul_table = [1, 57, 41, 21, 203, 34, 97, 73, 227, 91, 149, 62, 105, 45, 39, 137, 241, 107, 3, 173, 39, 71, 65, 238, 219, 101, 187, 87, 81, 151, 141, 133, 249, 117, 221, 209, 197, 187, 177, 169, 5, 153, 73, 139, 133, 127, 243, 233, 223, 107, 103, 99, 191, 23, 177, 171, 165, 159, 77, 149, 9, 139, 135, 131, 253, 245, 119, 231, 224, 109, 211, 103, 25, 195, 189, 23, 45, 175, 171, 83, 81, 79, 155, 151, 147, 9, 141, 137, 67, 131, 129, 251, 123, 30, 235, 115, 113, 221, 217, 53, 13, 51, 50, 49, 193, 189, 185, 91, 179, 175, 43, 169, 83, 163, 5, 79, 155, 19, 75, 147, 145, 143, 35, 69, 17, 67, 33, 65, 255, 251, 247, 243, 239, 59, 29, 229, 113, 111, 219, 27, 213, 105, 207, 51, 201, 199, 49, 193, 191, 47, 93, 183, 181, 179, 11, 87, 43, 85, 167, 165, 163, 161, 159, 157, 155, 77, 19, 75, 37, 73, 145, 143, 141, 35, 138, 137, 135, 67, 33, 131, 129, 255, 63, 250, 247, 61, 121, 239, 237, 117, 29, 229, 227, 225, 111, 55, 109, 216, 213, 211, 209, 207, 205, 203, 201, 199, 197, 195, 193, 48, 190, 47, 93, 185, 183, 181, 179, 178, 176, 175, 173, 171, 85, 21, 167, 165, 41, 163, 161, 5, 79, 157, 78, 154, 153, 19, 75, 149, 74, 147, 73, 144, 143, 71, 141, 140, 139, 137, 17, 135, 134, 133, 66, 131, 65, 129, 1];\n// eslint-disable-next-line max-len\nconst shg_table = [0, 9, 10, 10, 14, 12, 14, 14, 16, 15, 16, 15, 16, 15, 15, 17, 18, 17, 12, 18, 16, 17, 17, 19, 19, 18, 19, 18, 18, 19, 19, 19, 20, 19, 20, 20, 20, 20, 20, 20, 15, 20, 19, 20, 20, 20, 21, 21, 21, 20, 20, 20, 21, 18, 21, 21, 21, 21, 20, 21, 17, 21, 21, 21, 22, 22, 21, 22, 22, 21, 22, 21, 19, 22, 22, 19, 20, 22, 22, 21, 21, 21, 22, 22, 22, 18, 22, 22, 21, 22, 22, 23, 22, 20, 23, 22, 22, 23, 23, 21, 19, 21, 21, 21, 23, 23, 23, 22, 23, 23, 21, 23, 22, 23, 18, 22, 23, 20, 22, 23, 23, 23, 21, 22, 20, 22, 21, 22, 24, 24, 24, 24, 24, 22, 21, 24, 23, 23, 24, 21, 24, 23, 24, 22, 24, 24, 22, 24, 24, 22, 23, 24, 24, 24, 20, 23, 22, 23, 24, 24, 24, 24, 24, 24, 24, 23, 21, 23, 22, 23, 24, 24, 24, 22, 24, 24, 24, 23, 22, 24, 24, 25, 23, 25, 25, 23, 24, 25, 25, 24, 22, 25, 25, 25, 24, 23, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 23, 25, 23, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 24, 22, 25, 25, 23, 25, 25, 20, 24, 25, 24, 25, 25, 22, 24, 25, 24, 25, 24, 25, 25, 24, 25, 25, 25, 25, 22, 25, 25, 25, 24, 25, 24, 25, 18];\n\nexport default function boxBlurCanvasRGB(context, top_x, top_y, width, height, radius, iterations) {\n  if (Number.isNaN(radius) || radius < 1) return;\n\n  radius |= 0;\n\n  if (Number.isNaN(iterations)) iterations = 1;\n  iterations |= 0;\n  if (iterations > 3) iterations = 3;\n  if (iterations < 1) iterations = 1;\n\n  const imageData = context.getImageData(top_x, top_y, width, height);\n\n  const pixels = imageData.data;\n\n  let rsum;\n  let gsum;\n  let bsum;\n  let x;\n  let y;\n  let i;\n  let p;\n  let p1;\n  let p2;\n  let yp;\n  let yi;\n  let yw;\n  let wm = width - 1;\n  let hm = height - 1;\n  let rad1 = radius + 1;\n\n  let r = [];\n  let g = [];\n  let b = [];\n\n  let mul_sum = mul_table[radius];\n  let shg_sum = shg_table[radius];\n\n  let vmin = [];\n  let vmax = [];\n\n  while (iterations-- > 0) {\n    yw = yi = 0;\n\n    for (y = 0; y < height; y++) {\n      rsum = pixels[yw] * rad1;\n      gsum = pixels[yw + 1] * rad1;\n      bsum = pixels[yw + 2] * rad1;\n\n      for (i = 1; i <= radius; i++) {\n        p = yw + (((i > wm ? wm : i)) << 2);\n        rsum += pixels[p++];\n        gsum += pixels[p++];\n        bsum += pixels[p++];\n      }\n\n      for (x = 0; x < width; x++) {\n        r[yi] = rsum;\n        g[yi] = gsum;\n        b[yi] = bsum;\n\n        if (y == 0) {\n          vmin[x] = ((p = x + rad1) < wm ? p : wm) << 2;\n          vmax[x] = ((p = x - radius) > 0 ? p << 2 : 0);\n        }\n\n        p1 = yw + vmin[x];\n        p2 = yw + vmax[x];\n\n        rsum += pixels[p1++] - pixels[p2++];\n        gsum += pixels[p1++] - pixels[p2++];\n        bsum += pixels[p1++] - pixels[p2++];\n\n        yi++;\n      }\n      yw += (width << 2);\n    }\n\n    for (x = 0; x < width; x++) {\n      yp = x;\n      rsum = r[yp] * rad1;\n      gsum = g[yp] * rad1;\n      bsum = b[yp] * rad1;\n\n      for (i = 1; i <= radius; i++) {\n        yp += (i > hm ? 0 : width);\n        rsum += r[yp];\n        gsum += g[yp];\n        bsum += b[yp];\n      }\n\n      yi = x << 2;\n      for (y = 0; y < height; y++) {\n        pixels[yi] = (rsum * mul_sum) >>> shg_sum;\n        pixels[yi + 1] = (gsum * mul_sum) >>> shg_sum;\n        pixels[yi + 2] = (bsum * mul_sum) >>> shg_sum;\n\n        if (x == 0) {\n          vmin[y] = ((p = y + rad1) < hm ? p : hm) * width;\n          vmax[y] = ((p = y - radius) > 0 ? p * width : 0);\n        }\n\n        p1 = x + vmin[y];\n        p2 = x + vmax[y];\n\n        rsum += r[p1] - r[p2];\n        gsum += g[p1] - g[p2];\n        bsum += b[p1] - b[p2];\n\n        yi += width << 2;\n      }\n    }\n  }\n\n  context.putImageData(imageData, top_x, top_y);\n}\n","export enum ElectronEvent {\n  FULLSCREEN_CHANGE = 'fullscreen-change',\n  UPDATE_ERROR = 'update-error',\n  UPDATE_DOWNLOADED = 'update-downloaded',\n}\n\nexport enum ElectronAction {\n  GET_IS_FULLSCREEN = 'get-is-fullscreen',\n  INSTALL_UPDATE = 'install-update',\n  HANDLE_DOUBLE_CLICK = 'handle-double-click',\n  OPEN_NEW_WINDOW = 'open-new-window',\n}\n\nexport interface ElectronApi {\n  isFullscreen: () => Promise<boolean>;\n  installUpdate: () => Promise<void>;\n  handleDoubleClick: () => Promise<void>;\n  openNewWindow: (url: string) => Promise<void>;\n  on: (eventName: ElectronEvent, callback: any) => VoidFunction;\n}\n\ndeclare global {\n  interface Window {\n    electron?: ElectronApi;\n  }\n}\n","import { getGlobal } from '../global';\n\nimport { animate } from './animation';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      animate(() => {\n        if (isStopped) return false;\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          container.style.scrollSnapType = '';\n          delete container.dataset.scrollId;\n          stopById.delete(id);\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { getGlobal } from '../global';\n\nimport { FocusDirection } from '../types';\n\nimport {\n  FAST_SMOOTH_MIN_DURATION,\n  FAST_SMOOTH_MAX_DURATION,\n  FAST_SMOOTH_MAX_DISTANCE,\n  FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { IS_ANDROID } from './windowEnvironment';\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\nimport { animateSingle, cancelSingleAnimation } from './animation';\nimport { selectCanAnimateInterface } from '../global/selectors';\n\ntype Params = Parameters<typeof createMutateFunction>;\n\nlet isAnimating = false;\nlet currentArgs: Parameters<typeof createMutateFunction> | undefined;\n\nexport default function animateScroll(...args: Params | [...Params, boolean]) {\n  currentArgs = args.slice(0, 8) as Params;\n\n  const mutate = createMutateFunction(...currentArgs);\n\n  const shouldReturnMutationFn = args[8];\n  if (shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(...currentArgs!));\n  });\n}\n\nfunction createMutateFunction(\n  container: HTMLElement,\n  element: HTMLElement,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    isAnimating = true;\n\n    const transition = absPath <= FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      FAST_SMOOTH_MIN_DURATION\n      + (absPath / FAST_SMOOTH_MAX_DISTANCE) * (FAST_SMOOTH_MAX_DURATION - FAST_SMOOTH_MIN_DURATION)\n    );\n    const startAt = Date.now();\n    const onHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n        onHeavyAnimationStop();\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6.5);\n}\n","import { getActions, getGlobal } from '../global';\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\n\nimport { AudioOrigin, GlobalSearchContent } from '../types';\nimport type { ApiMessage } from '../api/types';\n\nimport { IS_SAFARI } from './windowEnvironment';\nimport safePlay from './safePlay';\nimport { patchSafariProgressiveAudio, isSafariPatchInProgress } from './patchSafariProgressiveAudio';\nimport type { MessageKey } from '../global/helpers';\nimport { getMessageKey, parseMessageKey } from '../global/helpers';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId {\n  return `${getMessageKey(message)}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","import { IS_IOS } from './windowEnvironment';\nimport { Lethargy } from './lethargy';\nimport { clamp, round } from './math';\nimport { debounce } from './schedulers';\nimport windowSize from './windowSize';\n\nexport enum SwipeDirection {\n  Up,\n  Down,\n  Left,\n  Right,\n}\n\ninterface CaptureOptions {\n  onCapture?: (e: MouseEvent | TouchEvent | WheelEvent) => void;\n  onRelease?: (e: MouseEvent | TouchEvent | WheelEvent) => void;\n  onDrag?: (\n    e: MouseEvent | TouchEvent | WheelEvent,\n    captureEvent: MouseEvent | TouchEvent | WheelEvent,\n    params: {\n      dragOffsetX: number;\n      dragOffsetY: number;\n    },\n    cancelDrag?: (x: boolean, y: boolean) => void,\n  ) => void;\n  onSwipe?: (e: Event, direction: SwipeDirection) => boolean;\n  onZoom?: (e: TouchEvent | WheelEvent, params: {\n    // Absolute zoom level\n    zoom?: number;\n    // Relative zoom factor\n    zoomFactor?: number;\n\n    // center coordinate of the initial pinch\n    initialCenterX: number;\n    initialCenterY: number;\n\n    // offset of the pinch center (current from initial)\n    dragOffsetX: number;\n    dragOffsetY: number;\n\n    // center coordinate of the current pinch\n    currentCenterX: number;\n    currentCenterY: number;\n  }) => void;\n  onClick?: (e: MouseEvent | TouchEvent) => void;\n  onDoubleClick?: (e: MouseEvent | RealTouchEvent | WheelEvent, params: { centerX: number; centerY: number }) => void;\n  excludedClosestSelector?: string;\n  selectorToPreventScroll?: string;\n  withNativeDrag?: boolean;\n  maxZoom?: number;\n  minZoom?: number;\n  doubleTapZoom?: number;\n  initialZoom?: number;\n  isNotPassive?: boolean;\n  withCursor?: boolean;\n}\n\n// https://stackoverflow.com/questions/11287877/how-can-i-get-e-offsetx-on-mobile-ipad\n// Android does not have this value, and iOS has it but as read-only\nexport interface RealTouchEvent extends TouchEvent {\n  pageX?: number;\n  pageY?: number;\n}\n\ntype TSwipeAxis =\n  'x'\n  | 'y'\n  | undefined;\n\nexport const IOS_SCREEN_EDGE_THRESHOLD = 20;\nconst MOVED_THRESHOLD = 15;\nconst SWIPE_THRESHOLD = 50;\nconst RELEASE_WHEEL_ZOOM_DELAY = 150;\nconst RELEASE_WHEEL_DRAG_DELAY = 150;\n\nfunction getDistance(a: Touch, b?: Touch) {\n  if (!b) return 0;\n  return Math.hypot((b.pageX - a.pageX), (b.pageY - a.pageY));\n}\n\nfunction getTouchCenter(a: Touch, b: Touch) {\n  return {\n    x: (a.pageX + b.pageX) / 2,\n    y: (a.pageY + b.pageY) / 2,\n  };\n}\n\nlet lastClickTime = 0;\nconst lethargy = new Lethargy({\n  stability: 5,\n  sensitivity: 25,\n  tolerance: 0.6,\n  delay: 150,\n});\n\nexport function captureEvents(element: HTMLElement, options: CaptureOptions) {\n  let captureEvent: MouseEvent | RealTouchEvent | WheelEvent | undefined;\n  let hasMoved = false;\n  let hasSwiped = false;\n  let isZooming = false;\n  let initialDistance = 0;\n  let wheelZoom = options.initialZoom ?? 1;\n  let initialDragOffset = {\n    x: 0,\n    y: 0,\n  };\n  let isDragCanceled = {\n    x: false,\n    y: false,\n  };\n  const currentWindowSize = windowSize.get();\n  let initialTouchCenter = {\n    x: currentWindowSize.width / 2,\n    y: currentWindowSize.height / 2,\n  };\n  let initialSwipeAxis: TSwipeAxis | undefined;\n  const minZoom = options.minZoom ?? 1;\n  const maxZoom = options.maxZoom ?? 4;\n\n  function onCapture(e: MouseEvent | RealTouchEvent) {\n    if (options.excludedClosestSelector && (\n      (e.target as HTMLElement).matches(options.excludedClosestSelector)\n      || (e.target as HTMLElement).closest(options.excludedClosestSelector)\n    )) {\n      return;\n    }\n\n    captureEvent = e;\n\n    if (e.type === 'mousedown') {\n      if (!options.withNativeDrag && options.onDrag) {\n        e.preventDefault();\n      }\n\n      document.addEventListener('mousemove', onMove);\n      document.addEventListener('mouseup', onRelease);\n    } else if (e.type === 'touchstart') {\n      // We need to always listen on `touchstart` target:\n      // https://stackoverflow.com/questions/33298828/touch-move-event-dont-fire-after-touch-start-target-is-removed\n      const target = e.target as HTMLElement;\n      target.addEventListener('touchmove', onMove, { passive: true });\n      target.addEventListener('touchend', onRelease);\n      target.addEventListener('touchcancel', onRelease);\n\n      if ('touches' in e) {\n        if (e.pageX === undefined) {\n          e.pageX = e.touches[0].pageX;\n        }\n\n        if (e.pageY === undefined) {\n          e.pageY = e.touches[0].pageY;\n        }\n\n        if (e.touches.length === 2) {\n          initialDistance = getDistance(e.touches[0], e.touches[1]);\n          initialTouchCenter = getTouchCenter(e.touches[0], e.touches[1]);\n        }\n      }\n    }\n\n    if (options.withCursor) {\n      document.body.classList.add('cursor-grabbing');\n    }\n\n    if (options.onCapture) {\n      options.onCapture(e);\n    }\n  }\n\n  function onRelease(e?: MouseEvent | TouchEvent) {\n    if (captureEvent) {\n      if (options.withCursor) {\n        document.body.classList.remove('cursor-grabbing');\n      }\n\n      document.removeEventListener('mouseup', onRelease);\n      document.removeEventListener('mousemove', onMove);\n      (captureEvent.target as HTMLElement).removeEventListener('touchcancel', onRelease);\n      (captureEvent.target as HTMLElement).removeEventListener('touchend', onRelease);\n      (captureEvent.target as HTMLElement).removeEventListener('touchmove', onMove);\n\n      if (IS_IOS && options.selectorToPreventScroll) {\n        Array.from(document.querySelectorAll<HTMLElement>(options.selectorToPreventScroll))\n          .forEach((scrollable) => {\n            scrollable.style.overflow = '';\n          });\n      }\n\n      if (e) {\n        if (hasMoved) {\n          if (options.onRelease) {\n            options.onRelease(e);\n          }\n        } else if (e.type === 'mouseup') {\n          if (options.onDoubleClick && Date.now() - lastClickTime < 300) {\n            options.onDoubleClick(e, {\n              centerX: captureEvent!.pageX!,\n              centerY: captureEvent!.pageY!,\n            });\n          } else if (options.onClick && (!('button' in e) || e.button === 0)) {\n            options.onClick(e);\n          }\n          lastClickTime = Date.now();\n        }\n      }\n    }\n\n    hasMoved = false;\n    hasSwiped = false;\n    isZooming = false;\n    initialDistance = 0;\n    wheelZoom = clamp(wheelZoom, minZoom, maxZoom);\n    initialSwipeAxis = undefined;\n    initialDragOffset = {\n      x: 0,\n      y: 0,\n    };\n    isDragCanceled = {\n      x: false,\n      y: false,\n    };\n    const newWindowSize = windowSize.get();\n    initialTouchCenter = {\n      x: newWindowSize.width / 2,\n      y: newWindowSize.height / 2,\n    };\n    captureEvent = undefined;\n  }\n\n  function onMove(e: MouseEvent | RealTouchEvent) {\n    if (captureEvent) {\n      if (e.type === 'touchmove' && ('touches' in e)) {\n        if (e.pageX === undefined) {\n          e.pageX = e.touches[0].pageX;\n        }\n\n        if (e.pageY === undefined) {\n          e.pageY = e.touches[0].pageY;\n        }\n\n        if (options.onZoom && initialDistance > 0 && e.touches.length === 2) {\n          const endDistance = getDistance(e.touches[0], e.touches[1]);\n          const touchCenter = getTouchCenter(e.touches[0], e.touches[1]);\n          const dragOffsetX = touchCenter.x - initialTouchCenter.x;\n          const dragOffsetY = touchCenter.y - initialTouchCenter.y;\n          const zoomFactor = endDistance / initialDistance;\n          options.onZoom(e, {\n            zoomFactor,\n            initialCenterX: initialTouchCenter.x,\n            initialCenterY: initialTouchCenter.y,\n            dragOffsetX,\n            dragOffsetY,\n            currentCenterX: touchCenter.x,\n            currentCenterY: touchCenter.y,\n          });\n          if (zoomFactor !== 1) hasMoved = true;\n        }\n      }\n\n      const dragOffsetX = e.pageX! - captureEvent.pageX!;\n      const dragOffsetY = e.pageY! - captureEvent.pageY!;\n\n      if (Math.abs(dragOffsetX) >= MOVED_THRESHOLD || Math.abs(dragOffsetY) >= MOVED_THRESHOLD) {\n        hasMoved = true;\n      }\n\n      let shouldPreventScroll = false;\n\n      if (options.onDrag) {\n        options.onDrag(e, captureEvent, {\n          dragOffsetX,\n          dragOffsetY,\n        });\n        shouldPreventScroll = true;\n      }\n\n      if (options.onSwipe && !hasSwiped) {\n        hasSwiped = onSwipe(e, dragOffsetX, dragOffsetY);\n        shouldPreventScroll = hasSwiped;\n      }\n\n      if (IS_IOS && shouldPreventScroll && options.selectorToPreventScroll) {\n        Array.from(document.querySelectorAll<HTMLElement>(options.selectorToPreventScroll))\n          .forEach((scrollable) => {\n            scrollable.style.overflow = 'hidden';\n          });\n      }\n    }\n  }\n\n  function onSwipe(e: MouseEvent | RealTouchEvent, dragOffsetX: number, dragOffsetY: number) {\n    // Avoid conflicts with swipe-to-back gestures\n    if (IS_IOS) {\n      const x = (e as RealTouchEvent).touches[0].pageX;\n      if (x <= IOS_SCREEN_EDGE_THRESHOLD || x >= windowSize.get().width - IOS_SCREEN_EDGE_THRESHOLD) {\n        return false;\n      }\n    }\n\n    const xAbs = Math.abs(dragOffsetX);\n    const yAbs = Math.abs(dragOffsetY);\n\n    if (dragOffsetX && dragOffsetY) {\n      const ratio = Math.max(xAbs, yAbs) / Math.min(xAbs, yAbs);\n      // Diagonal swipe\n      if (ratio < 2) {\n        return false;\n      }\n    }\n\n    let axis: TSwipeAxis | undefined;\n    if (xAbs >= SWIPE_THRESHOLD) {\n      axis = 'x';\n    } else if (yAbs >= SWIPE_THRESHOLD) {\n      axis = 'y';\n    }\n\n    if (!axis) {\n      return false;\n    }\n\n    if (!initialSwipeAxis) {\n      initialSwipeAxis = axis;\n    } else if (initialSwipeAxis !== axis) {\n      // Prevent horizontal swipe after vertical to prioritize scroll\n      return false;\n    }\n\n    return processSwipe(e, axis, dragOffsetX, dragOffsetY, options.onSwipe!);\n  }\n\n  const releaseWheelDrag = debounce(onRelease, RELEASE_WHEEL_DRAG_DELAY, false);\n  const releaseWheelZoom = debounce(onRelease, RELEASE_WHEEL_ZOOM_DELAY, false);\n\n  function onWheelCapture(e: WheelEvent) {\n    if (hasMoved) return;\n    onCapture(e);\n    hasMoved = true;\n    initialTouchCenter = { x: e.x, y: e.y };\n  }\n\n  function onWheelZoom(e: WheelEvent) {\n    if (!options.onZoom) return;\n    onWheelCapture(e);\n    const dragOffsetX = e.x - initialTouchCenter.x;\n    const dragOffsetY = e.y - initialTouchCenter.y;\n    const delta = clamp(e.deltaY, -25, 25);\n    wheelZoom -= delta * 0.01;\n    wheelZoom = clamp(wheelZoom, minZoom * 0.5, maxZoom * 3);\n    isZooming = true;\n    options.onZoom(e, {\n      zoom: round(wheelZoom, 2),\n      initialCenterX: initialTouchCenter.x,\n      initialCenterY: initialTouchCenter.y,\n      dragOffsetX,\n      dragOffsetY,\n      currentCenterX: e.x,\n      currentCenterY: e.y,\n    });\n    releaseWheelZoom(e);\n  }\n\n  function onWheelDrag(e: WheelEvent) {\n    if (!options.onDrag) return;\n    onWheelCapture(e);\n    // Ignore wheel inertia if drag is canceled in this direction\n    if (!isDragCanceled.x || Math.sign(initialDragOffset.x) === Math.sign(e.deltaX)) {\n      initialDragOffset.x -= e.deltaX;\n    }\n    if (!isDragCanceled.y || Math.sign(initialDragOffset.y) === Math.sign(e.deltaY)) {\n      initialDragOffset.y -= e.deltaY;\n    }\n    const { x, y } = initialDragOffset;\n    options.onDrag(e, captureEvent!, {\n      dragOffsetX: x,\n      dragOffsetY: y,\n    }, (dx, dy) => {\n      isDragCanceled = { x: dx, y: dy };\n    });\n    releaseWheelDrag(e);\n  }\n\n  function onWheel(e: WheelEvent) {\n    if (!options.onZoom && !options.onDrag) return;\n    if (options.excludedClosestSelector && (\n      (e.target as HTMLElement).matches(options.excludedClosestSelector)\n      || (e.target as HTMLElement).closest(options.excludedClosestSelector)\n    )) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    const { doubleTapZoom = 3 } = options;\n    if (options.onDoubleClick && Object.is(e.deltaX, -0) && Object.is(e.deltaY, -0) && e.ctrlKey) {\n      onWheelCapture(e);\n      wheelZoom = wheelZoom > 1 ? 1 : doubleTapZoom;\n      options.onDoubleClick(e, { centerX: e.pageX, centerY: e.pageY });\n      hasMoved = false;\n      return;\n    }\n    const metaKeyPressed = e.metaKey || e.ctrlKey || e.shiftKey;\n    if (metaKeyPressed) {\n      onWheelZoom(e);\n    }\n    if (!metaKeyPressed && !isZooming) {\n      // Check if this event produced by user scroll and not by inertia\n      const isUserEvent = lethargy.check(e);\n      if (wheelZoom !== 1 || isUserEvent) {\n        onWheelDrag(e);\n      }\n    }\n  }\n\n  element.addEventListener('wheel', onWheel);\n  element.addEventListener('mousedown', onCapture);\n  element.addEventListener('touchstart', onCapture, { passive: !options.isNotPassive });\n\n  return () => {\n    onRelease();\n    element.removeEventListener('wheel', onWheel);\n    element.removeEventListener('touchstart', onCapture);\n    element.removeEventListener('mousedown', onCapture);\n  };\n}\n\nfunction processSwipe(\n  e: Event,\n  currentSwipeAxis: TSwipeAxis,\n  dragOffsetX: number,\n  dragOffsetY: number,\n  onSwipe: (e: Event, direction: SwipeDirection) => boolean,\n) {\n  if (currentSwipeAxis === 'x') {\n    if (dragOffsetX < 0) {\n      return onSwipe(e, SwipeDirection.Left);\n    } else {\n      return onSwipe(e, SwipeDirection.Right);\n    }\n  } else if (currentSwipeAxis === 'y') {\n    if (dragOffsetY < 0) {\n      return onSwipe(e, SwipeDirection.Up);\n    } else {\n      return onSwipe(e, SwipeDirection.Down);\n    }\n  }\n\n  return false;\n}\n","/**\n * Lethargy help distinguish between scroll events initiated by the user, and those by inertial scrolling.\n * Lethargy does not have external dependencies.\n *\n * @param stability - Specifies the length of the rolling average.\n * In effect, the larger the value, the smoother the curve will be.\n * This attempts to prevent anomalies from firing 'real' events. Valid values are all positive integers,\n * but in most cases, you would need to stay between 5 and around 30.\n *\n * @param sensitivity - Specifies the minimum value for wheelDelta for it to register as a valid scroll event.\n * Because the tail of the curve have low wheelDelta values,\n * this will stop them from registering as valid scroll events.\n * The unofficial standard wheelDelta is 120, so valid values are positive integers below 120.\n *\n * @param tolerance - Prevent small fluctuations from affecting results.\n * Valid values are decimals from 0, but should ideally be between 0.05 and 0.3.\n *\n * Based on https://github.com/d4nyll/lethargy\n */\n\nexport type LethargyConfig = {\n  stability?: number;\n  sensitivity?: number;\n  tolerance?: number;\n  delay?: number;\n};\n\nexport class Lethargy {\n  stability: number;\n\n  sensitivity: number;\n\n  tolerance: number;\n\n  delay: number;\n\n  lastUpDeltas: Array<number>;\n\n  lastDownDeltas: Array<number>;\n\n  deltasTimestamp: Array<number>;\n\n  constructor({\n    stability = 8,\n    sensitivity = 100,\n    tolerance = 1.1,\n    delay = 150,\n  }: LethargyConfig = {}) {\n    this.stability = stability;\n    this.sensitivity = sensitivity;\n    this.tolerance = tolerance;\n    this.delay = delay;\n    this.lastUpDeltas = new Array(this.stability * 2).fill(0);\n    this.lastDownDeltas = new Array(this.stability * 2).fill(0);\n    this.deltasTimestamp = new Array(this.stability * 2).fill(0);\n  }\n\n  check(e: any) {\n    let lastDelta;\n    e = e.originalEvent || e;\n    if (e.wheelDelta !== undefined) {\n      lastDelta = e.wheelDelta;\n    } else if (e.deltaY !== undefined) {\n      lastDelta = e.deltaY * -40;\n    } else if (e.detail !== undefined || e.detail === 0) {\n      lastDelta = e.detail * -40;\n    }\n    this.deltasTimestamp.push(Date.now());\n    this.deltasTimestamp.shift();\n    if (lastDelta > 0) {\n      this.lastUpDeltas.push(lastDelta);\n      this.lastUpDeltas.shift();\n      return this.isInertia(1);\n    } else {\n      this.lastDownDeltas.push(lastDelta);\n      this.lastDownDeltas.shift();\n      return this.isInertia(-1);\n    }\n  }\n\n  isInertia(direction: number) {\n    const lastDeltas = direction === -1 ? this.lastDownDeltas : this.lastUpDeltas;\n    if (lastDeltas[0] === undefined) return direction;\n    if (\n      this.deltasTimestamp[this.stability * 2 - 2] + this.delay > Date.now()\n      && lastDeltas[0] === lastDeltas[this.stability * 2 - 1]\n    ) {\n      return false;\n    }\n    const lastDeltasOld = lastDeltas.slice(0, this.stability);\n    const lastDeltasNew = lastDeltas.slice(this.stability, this.stability * 2);\n    const oldSum = lastDeltasOld.reduce((t, s) => t + s);\n    const newSum = lastDeltasNew.reduce((t, s) => t + s);\n    const oldAverage = oldSum / lastDeltasOld.length;\n    const newAverage = newSum / lastDeltasNew.length;\n    return Math.abs(oldAverage) < Math.abs(newAverage * this.tolerance)\n      && this.sensitivity < Math.abs(newAverage);\n  }\n}\n","/* eslint-disable eqeqeq */\n/* eslint-disable prefer-template */\n/* eslint-disable prefer-const */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable one-var */\n/* eslint-disable one-var-declaration-per-line */\n\nimport { preloadImage } from './files';\n\n/**\n * HEX > RGB\n * input: 'xxxxxx' (ex. 'ed15fa') case-insensitive\n * output: [r, g, b] ([0-255, 0-255, 0-255])\n */\nexport function hex2rgb(param: string): [number, number, number] {\n  return [\n    parseInt(param.substring(0, 2), 16),\n    parseInt(param.substring(2, 4), 16),\n    parseInt(param.substring(4, 6), 16),\n  ];\n}\n\n/**\n * RGB > HEX\n * input: [r, g, b] ([0-255, 0-255, 0-255])\n * output: 'xxxxxx' (ex. 'ff0000')\n */\nexport function rgb2hex(param: [number, number, number]) {\n  const p0 = param[0].toString(16);\n  const p1 = param[1].toString(16);\n  const p2 = param[2].toString(16);\n  return (p0.length == 1 ? '0' + p0 : p0) + (p1.length == 1 ? '0' + p1 : p1) + (p2.length == 1 ? '0' + p2 : p2);\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\nexport function rgb2hsb([r, g, b]: [number, number, number]): [number, number, number] {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h!: number, s: number, v: number = max;\n\n  let d = max - min;\n  s = max == 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return [h, s, v];\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  v       The value\n * @return  Array           The RGB representation\n */\nexport function hsb2rgb([h, s, v]: [number, number, number]): [number, number, number] {\n  let r!: number, g!: number, b!: number;\n\n  let i = Math.floor(h * 6);\n  let f = h * 6 - i;\n  let p = v * (1 - s);\n  let q = v * (1 - f * s);\n  let t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      r = v;\n      g = t;\n      b = p;\n      break;\n    case 1:\n      r = q;\n      g = v;\n      b = p;\n      break;\n    case 2:\n      r = p;\n      g = v;\n      b = t;\n      break;\n    case 3:\n      r = p;\n      g = q;\n      b = v;\n      break;\n    case 4:\n      r = t;\n      g = p;\n      b = v;\n      break;\n    case 5:\n      r = v;\n      g = p;\n      b = q;\n      break;\n  }\n\n  return [\n    Math.round(r * 255),\n    Math.round(g * 255),\n    Math.round(b * 255),\n  ];\n}\n\nexport async function getAverageColor(url: string): Promise<[number, number, number]> {\n  // Only visit every 5 pixels\n  const blockSize = 5;\n  const defaultRGB: [number, number, number] = [0, 0, 0];\n  let data;\n  let width;\n  let height;\n  let i = -4;\n  let length;\n  let rgb: [number, number, number] = [0, 0, 0];\n  let count = 0;\n\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext && canvas.getContext('2d');\n  if (!context) {\n    return defaultRGB;\n  }\n\n  const image = await preloadImage(url);\n  height = image.naturalHeight || image.offsetHeight || image.height;\n  width = image.naturalWidth || image.offsetWidth || image.width;\n  canvas.height = height;\n  canvas.width = width;\n\n  context.drawImage(image, 0, 0);\n\n  try {\n    data = context.getImageData(0, 0, width, height);\n  } catch (e) {\n    return defaultRGB;\n  }\n\n  length = data.data.length;\n\n  // eslint-disable-next-line no-cond-assign\n  while ((i += blockSize * 4) < length) {\n    if (data.data[i + 3] === 0) continue; // Ignore fully transparent pixels\n    ++count;\n    rgb[0] += data.data[i];\n    rgb[1] += data.data[i + 1];\n    rgb[2] += data.data[i + 2];\n  }\n\n  rgb[0] = Math.floor(rgb[0] / count);\n  rgb[1] = Math.floor(rgb[1] / count);\n  rgb[2] = Math.floor(rgb[2] / count);\n\n  return rgb;\n}\n\nexport function getColorLuma(rgbColor: [number, number, number]) {\n  const [r, g, b] = rgbColor;\n  const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  return luma;\n}\n\n// Function was adapted from https://github.com/telegramdesktop/tdesktop/blob/35ff621b5b52f7e3553fb0f990ea13ade7101b8e/Telegram/SourceFiles/data/data_wall_paper.cpp#L518\nexport function getPatternColor(rgbColor: [number, number, number]) {\n  let [hue, saturation, value] = rgb2hsb(rgbColor);\n\n  saturation = Math.min(1, saturation + 0.05 + 0.1 * (1 - saturation));\n  value = value > 0.5\n    ? Math.max(0, value * 0.65)\n    : Math.max(0, Math.min(1, 1 - value * 0.65));\n\n  return `hsla(${hue * 360}, ${saturation * 100}%, ${value * 100}%, .4)`;\n}\n","import { IS_TOUCH_ENV } from './windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import windowSize from './windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import twemojiRegex from '../lib/twemojiRegex';\n\nconst DETECT_UP_TO = 100;\nconst MAX_LENGTH = DETECT_UP_TO * 8; // Maximum 8 per one emoji.\nconst RE_EMOJI_ONLY = new RegExp(`^(?:${twemojiRegex.source})+$`, '');\n\nconst parseEmojiOnlyString = (text: string): number | false => {\n  const lines = text.split('\\n');\n  const textWithoutNewlines = lines.join('');\n  if (textWithoutNewlines.length > MAX_LENGTH) {\n    return false;\n  }\n\n  const isEmojiOnly = Boolean(textWithoutNewlines.match(RE_EMOJI_ONLY));\n  if (!isEmojiOnly) {\n    return false;\n  }\n  const countPerLine = lines.map((line) => {\n    let emojiCount = 0;\n    while (twemojiRegex.exec(line)) {\n      emojiCount++;\n\n      if (emojiCount > DETECT_UP_TO) {\n        twemojiRegex.lastIndex = 0;\n        return -1;\n      }\n    }\n\n    return emojiCount;\n  });\n\n  let max = lines.length;\n  for (let i = 0; i < countPerLine.length; i++) {\n    if (countPerLine[i] === -1) {\n      return false;\n    }\n    if (countPerLine[i] > max) {\n      max = countPerLine[i];\n    }\n  }\n\n  return max;\n};\n\nexport default parseEmojiOnlyString;\n","import type { ApiMessageEntity, ApiFormattedText } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseMessageInput(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `http://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n"],"names":["memo","withGlobal","global","_ref3","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","_ref","className","hasPinnedOffset","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","filter","_","i","map","_ref2","isUser","user","useEffect","subscribed","React","buildClassName","onClick","p","Avatar","key","Button","round","text","prevTextRef","useRef","isAnimating","markAnimating","unmarkAnimating","useFlag","shouldAnimate","selectCanAnimateInterface","textElement","current","prevText","elements","length","push","onAnimationEnd","dir","isRtl","props","sticker","noLoad","forcePreview","lastSyncTime","otherProps","thumbDataUri","thumbnail","dataUri","localMediaHash","previewBlobUrl","useMedia","getStickerPreviewHash","ApiMediaFormat","tgsUrl","AnimatedIconWithPreview","_extends","previewUrl","loadedPreviewUrls","Set","isPreviewLoaded","markPreviewLoaded","has","transitionClassNames","useMediaTransition","isAnimationReady","markAnimationReady","handlePreviewLoad","useLastCallback","add","size","style","buildStyle","src","styles","onLoad","AnimatedIcon","noTransition","renderWaveform","canvas","spikes","progress","peak","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","Math","max","x","y","radius","beginPath","moveTo","arcTo","closePath","roundedRectangle","fill","decodeWaveform","encoded5bit","bitsCount","valuesCount","floor","result","Array","bitsData","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","interpolateArray","data","fitCount","newData","springFactor","leftFiller","rightFiller","_data","_data$idx","_data2","idx","val","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","getSeeklineSpikeAmounts","isMobile","withAvatar","MIN_SPIKES","matches","MAX_SPIKES","renderSeekline","playProgress","bufferedRanges","seekerRef","ref","start","end","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","onHideTranscription","onPlay","onReadMedia","onCancelUpload","onDateClick","cancelMessageMediaDownload","downloadMessageMedia","transcribeAudio","content","audio","voice","video","isMediaUnread","isVoice","isSeeking","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMessageMediaHash","coverBlobUrl","mediaData","getMessageMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","isOwn","isOwnMessage","waveformCanvasRef","arguments","canvasRef","waveform","min","durationFactor","spikesCount","Uint8Array","useLayoutEffect","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRender","shouldRenderSpinner","spinnerClassNames","useShowTransition","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","captureEvents","onCapture","onRelease","onDrag","transcribeSvgMemo","dangerouslySetInnerHTML","__html","renderFirstLine","title","fileName","fullClassName","AudioOrigin","buttonClassNames","contentClassName","renderWithTitle","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","ripple","color","join","ariaLabel","backgroundImage","ProgressSpinner","transparent","noCross","showProgress","showSeekline","getFileSizeString","formatMediaDateTime","renderAudio","svgMemo","onClickTranscribe","draggable","renderVoice","runDebounced","debounce","cb","chatOrUserId","countryList","phoneCodes","phoneCodeList","isUserId","selectUser","isForum","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","threadId","selectCurrentMessageList","topicId","chatInviteLink","selectChatFullInfo","inviteLink","description","selectUserFullInfo","bio","about","canInviteUsers","isChatChannel","isUserRightBanned","getHasAdminRight","forceShowSelf","loadFullUser","showNotification","updateChatMutedState","updateTopicMutedState","userId","usernames","phoneNumber","isSelf","chatUsernames","areNotificationsEnabled","setAreNotificationsEnabled","isTopicInfo","MAIN_THREAD_ID","activeUsernames","u","activeChatUsernames","link","getTopicLink","username","getChatLink","handleNotificationChange","newAreNotificationsEnabled","isRestricted","copy","entity","copyTextToClipboard","formattedNumber","formatPhoneNumberWithCode","renderUsernames","usernameList","isChat","mainUsername","otherUsernames","usernameLinks","split","s","nick","textToCopy","TME_LINK_PREFIX","href","stopEvent","ListItem","icon","multiline","narrow","isStatic","Switcher","label","checked","inactive","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","sender","onMediaClick","dispatch","document","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","hasPreview","getDocumentHasPreview","getMessageMediaThumbDataUri","localBlobUrl","previewData","withMediaViewer","mediaType","SUPPORTED_VIDEO_CONTENT_TYPES","mimeType","SUPPORTED_IMAGE_CONTENT_TYPES","handleClick","File","name","thumbnailDataUri","actionIcon","isMessageDocumentVideo","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","thumbClassNames","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","alt","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","topics","messagesCount","selectThreadMessagesCount","typingStatus","avatarSize","noAvatar","status","withDots","withUsername","withFullInfo","withUpdatingStatus","withChatType","noRtl","loadFullChat","openMediaViewer","loadProfilePhotos","isSuperGroup","isChatSuperGroup","isTopic","isMin","profileId","handleAvatarViewerOpen","hasMedia","avatarOwnerId","mediaId","MediaViewerOrigin","getMainUsername","TopicIcon","FullNameTitle","peer","DotAnimation","TypingStatus","getChatTypeString","groupStatus","chatTypeString","membersCount","getGroupStatus","onlineStatus","renderStatusOrTyping","idPrefix","isProtected","mediaBlobUrl","getMessageVideo","hasSpoiler","getMessageIsSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","onContextMenu","MediaSpoiler","isVisible","isGif","withAnimation","rect","currentTarget","clientY","top","shiftX","shiftY","setAttribute","Keys","Transition","activeKey","DEFAULT_TEXT","itemIds","selectedIds","filterValue","filterPlaceholder","notFoundText","searchInputId","isLoading","noScrollRestore","isSearchable","isRoundCheckbox","lockedIds","onSelectedIdsChange","onFilterChange","onDisabledClick","onLoadMore","inputRef","shouldMinimize","setTimeout","requestMutation","focus","lockedSelectedIds","unlockedSelectedIds","MEMO_EMPTY_ARRAY","unlockedIds","includes","lockedIdsSet","sortedItemIds","sort","a","b","aIsLocked","bIsLocked","handleItemClick","newSelectedIds","slice","splice","indexOf","handleFilterChange","viewportIds","getMore","useInfiniteScroll","PickerSelectedItem","isMinimized","clickArg","canClose","InputText","onChange","placeholder","InfiniteScroll","items","renderCheckbox","Checkbox","disabled","allowDisabledClick","PrivateChatInfo","GroupChatInfo","Loading","currentUserId","iconElement","titleText","isSavedMessages","getUserFirstOrLastName","getChatTitle","userStatus","selectUserStatus","statusIcon","emojiStatusSize","noStatusOrTyping","adminMember","customTitle","isOwner","withEmojiStatus","isUserOnline","getUserStatus","photo","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","userOrChat","canHaveMedia","isVideo","avatarHash","getChatAvatarHash","avatarBlobUrl","photoHash","photoBlobUrl","videoHash","getVideoAvatarMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","blurredThumbCanvasRef","currentTime","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","Spinner","getUserColorKey","connectionState","isPrivate","mediaViewer","currentTopicId","userFullInfo","chatFullInfo","userPersonalPhoto","personalPhoto","userProfilePhoto","profilePhoto","userFallbackPhoto","fallbackPhoto","chatProfilePhoto","openPremiumModal","photos","prevMediaId","usePrevious","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","profile","currentIndex","mediaLoader","usePhotosPreload","handleProfilePhotoClick","handleClickPremium","fromUserId","selectPreviousMedia","selectNextMedia","_membersCount","_membersCount2","element","querySelector","selectorToPreventScroll","onSwipe","IS_TOUCH_ENV","direction","SwipeDirection","letterClassName","noLoopLimit","renderPhotoTabs","renderPhoto","type","onEmojiStatusClick","ProfilePhoto","reaction","availableReactions","isCustom","availableReaction","find","available","isSameReaction","staticIconId","staticIcon","CustomEmoji","documentId","observeIntersectionForPlaying","blankUrl","contentForStatusMenuContext","arg","noPlay","noContextMenu","isStatusPicker","canViewSet","observeIntersectionForShowing","isCurrentUserPremium","noShowPremium","sharedCanvasRef","withTranslucentThumb","onFaveClick","onUnfaveClick","onRemoveRecentClick","onContextMenuOpen","onContextMenuClose","onContextMenuClick","openStickerSet","setEmojiStatus","menuRef","hasCustomColor","shouldUseTextColor","customColor","useDynamicColorListener","isCustomEmoji","hasEffect","isPremium","stickerSetInfo","isLocked","shouldPlay","isIntesectingForShowing","isContextMenuOpen","contextMenuPosition","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","shouldRenderContextMenu","getTriggerElement","getRootElement","closest","getMenuElement","positionX","positionY","transformOriginX","transformOriginY","menuStyle","useMenuPosition","getLayout","withPortal","shouldAvoidNegativePosition","handleRemoveClick","preventDefault","handleContextRemoveRecent","handleContextUnfave","handleContextFave","handleSendQuiet","handleSendScheduled","handleOpenSet","handleEmojiStatusExpiresClick","emojiStatus","expires","Date","now","getServerTimeOffset","shouldShowCloseButton","contextMenuItems","MenuItem","emoji","onMouseDown","preventMessageInputBlurWithBubbling","initialSection","StickerView","containerRef","isSmall","shouldLoop","shouldPreloadPreview","withSharedAnimation","noFastClick","Menu","isOpen","autoClose","onClose","onCloseAnimationEnd","iconEmojiId","loopLimit","TopicDefaultIcon","iconColor","typingUser","typingUserName","action","replace","trim","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","url","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","handleMessageClick","displayUrl","truncatedDescription","trimText","safeLinkContent","Media","SafeLink","renderMessageText","highlight","emojiSize","isSimple","truncateLength","shouldRenderAsHtml","entities","contentNotSupportedText","renderTextWithEntities","noEmoji","TRUNCATED_SUMMARY_LENGTH","hasSpoilers","some","ApiMessageEntityTypes","hasCustomEmoji","getMessageSummaryText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","isArray","getSenderName","senderId","senderName","getSenderTitle","isChatGroup","HeaderMenuContainer","useModuleLoader","Bundles","messageListType","isChannel","selectIsInSelectMode","noMenu","bot","selectBot","isChatWithSelf","selectIsChatWithSelf","isMainThread","isDiscussionThread","isRightColumnShown","selectIsRightColumnShown","canRestartBot","selectIsUserBlocked","canStartBot","selectIsChatBotNotStarted","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","adminRights","manageCall","isCreator","isChatBasicGroup","canViewStatistics","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","withForumActions","canExpandActions","onTopicSearch","joinChannel","sendBotCommand","openLocalTextSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","openChat","menuButtonRef","isMenuOpen","setIsMenuOpen","menuPosition","setMenuPosition","handleHeaderMenuOpen","right","bottom","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","command","handleRestartBot","handleJoinRequestsClick","screen","ManagementScreens","handleSearchClick","requestMeasure","requestNextMutation","setFocusInSearchInput","handleAsMessagesClick","handleHotkeySearchClick","IS_APP","shiftKey","useHotkeys","fluid","anchor","withExtraActions","onJoinRequestsClick","onSubscribeChannel","onSearchClick","onAsMessagesClick","isQuick","isGeneric","onFileSelect","isHovered","markHovered","unmarkHovered","onDrop","onDragEnter","onDragLeave","relatedTarget","toTarget","DropAreaState","withQuick","onHide","hideTimeoutRef","prevWithQuick","captureEscKeyListener","handleFilesDrop","async","dataTransfer","dt","files","folderFiles","getFilesFromDataTransferItems","concat","from","handleQuickFilesDrop","handleDragLeave","target","fromTarget","shouldRenderQuick","Portal","containerId","onDragOver","handleDragOver","clearTimeout","DropTarget","AbsoluteVideo","constructor","videoUrl","container","options","_defineProperty","this","createElement","position","load","noLoop","appendChild","recalculatePositionAndSize","play","paused","safePlay","pause","destroy","remove","updatePosition","SIZE","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","settings","byKey","replyingToId","selectReplyingToId","isSelectModeActive","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","captionLimit","isAttachmentModalInput","editableInputId","isReady","getHtml","forcedPlaceholder","canSendPlainText","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","onSend","onScroll","editLastMessage","replyToNextMessage","showAllowedMessageTypesNotification","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_IOS","IS_ANDROID","prefixId","colorFilter","useColorFilter","playersById","Map","clearPlayers","ids","player","get","delete","synchronizeElements","playerIdsToClear","keys","querySelectorAll","dataset","uniqueId","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","customEmoji","customEmojis","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","textColor","isLottie","hexToRgb","lottie","ensureRLottie","init","coords","isLowPriority","r","g","removeView","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","then","animation","set","addCustomEmojiInputRenderCallback","documentElement","setProperty","useEffectWithPrevDeps","prevCustomColor","throttledSynchronizeElements","useThrottledCallback","useResizeObserver","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useBackgroundMode","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","requestForcedReflow","scroller","currentHeight","Number","clone","scrollHeight","newHeight","isOverflown","exec","transitionDuration","log","abs","classList","toggle","htmlRef","html","innerHTML","focusInput","isHeavyAnimating","focusEditableElement","handleCloseTextFormatter","selection","getSelection","removeAllRanges","empty","clearSelection","checkSelection","rangeCount","selectionRange","getRangeAt","selectedText","toString","isSelectionInsideInput","EDITABLE_INPUT_ID","parseEmojiOnlyString","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleDocumentKeyDown","getIsDirectTextInputDisabled","input","isSelectionCollapsed","isCollapsed","startsWith","code","ctrlKey","metaKey","tagName","isContentEditable","newEvent","KeyboardEvent","dispatchEvent","addEventListener","removeEventListener","captureFirstTab","captureKeyboardListeners","onTab","suppressFocus","blur","isTouched","useDerivedState","contentEditable","role","tabIndex","textContent","IS_EMOJI_SUPPORTED","onKeyDown","isComposing","targetIndexDelta","altKey","once","handleCloseContextMenu","e2","onTouchCancel","TextFormatter","anchorPosition","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","SPAN","fragmentEl","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","linkUrl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","parentElement","commonAncestorContainer","textFormat","restoreSelection","addRange","updateSelectedRange","getSelectedText","shouldDropCustomEmoji","replaceChildren","cloneContents","INPUT_CUSTOM_EMOJI_SELECTOR","el","replaceWith","getAttribute","getSelectedElement","updateInputStyles","offsetWidth","scrollWidth","scrollLeft","getFormatButtonClassName","fKey","monospace","strikethrough","handleSpoilerText","spoiler","entityType","execCommand","handleBoldText","bold","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","ensureProtocol","encodeURI","handleKeyDown","handler","k","m","toLowerCase","getKeyFromEvent","linkUrlConfirmClassName","autoComplete","inputMode","dataTransferItems","traverseFileTreePromise","entry","Promise","resolve","isFile","itemFile","getAsFile","file","isDirectory","createReader","readEntries","entries","entriesPromises","all","kind","webkitGetAsEntry","validateFiles","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","prepareForRegExp","inputId","parentNode","iterations","RE_ENDS_ON_EMOJI","RegExp","twemojiRegex","RE_ENDS_ON_EMOJI_IMG","EMOJI_IMG_REGEX","useCustomEmojiTooltip","isEnabled","setHtml","getSelectionRange","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","extractLastEmojiThrottled","useThrottledResolver","collapsed","match","getHtmlBeforeSelection","getLastEmoji","useDerivedSignal","hasCustomEmojis","lastEmoji","insertCustomEmoji","inputEl","htmlBeforeSelection","regexText","regex","count","newHtml","buildCustomEmojiHtml","repeat","htmlAfterSelection","substring","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","prepareRecentEmojisMemo","memoized","recentEmojiIds","limit","pickTruthy","prepareLibraryMemo","baseEmojiKeywords","emojiKeywords","emojis","byNative","buildCollectionByKey","baseEmojisByKeyword","mapValues","natives","emojisByKeyword","byKeyword","keywords","byName","reduce","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","unique","useEmojiTooltip","setById","filteredEmojis","setFilteredEmojis","filteredCustomEmojis","setFilteredCustomEmojis","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","insertEmoji","isForce","atIndex","lastIndexOf","emojiHtml","messageInput","EDITABLE_INPUT_CSS_SELECTOR","getElementById","emojiCode","newShouldAutoInsert","endsWith","test","isEmojiTooltipOpen","closeEmojiTooltip","default","uncompressEmoji","RE_USERNAME_SEARCH","useMentionTooltip","groupChatMembers","topInlineBotIds","filteredUsers","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","acc","member","filteredIds","filterUsersByName","insertMention","forceFocus","userFirstOrLastName","htmlToInsert","fixedHtmlBeforeSelection","cleanWebkitNewLines","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","isMentionTooltipOpen","closeMentionTooltip","mentionFilteredUsers","useAsyncRendering","dependencies","delay","isDisabled","shouldRenderRef","timeoutRef","forceUpdate","useForceUpdate","useSyncEffect","selected","loadingOptions","setValues","handleChange","event","newValues","v","option","subLabel","DEFAULT_DURATION","onDismiss","actionText","actions","setIsOpen","timerRef","closeAndDismiss","ANIMATION_END_DELAY","payload","handleMouseEnter","handleMouseLeave","onMouseEnter","onMouseLeave","RADIUSES","xl","square","circleRadius","STROKE_WIDTH","borderRadius","circumference","PI","svg","firstElementChild","strokeDashOffset","hidden","loadingOption","Radio","step","renderValue","mainClassName","trackWidth","index","children","parentContainerClassName","focused","spinnerColor","spinnerBackgroundColor","autoFocusSearch","onReset","onFocus","onBlur","onSpinnerClick","isInputFocused","markInputFocused","unmarkInputFocused","useInputFocusOnOpen","ShowTransition","backgroundColor","isHidden","noCloseTransition","shouldAnimateFirstRender","prevIsOpen","prevChildren","fromChildrenRef","isFirstRender","variant","forceAspectRatio","inline","classNames","onCheck","isBlocked","badgeCount","isBadgeActive","previousActiveTab","contextActions","contextRootElementSelector","tabRef","tabEl","prevTabEl","contains","platformEl","prevPlatformEl","shiftLeft","offsetLeft","scaleFactor","clientWidth","transform","forceReflow","handleMouseDown","useFastClick","MouseButton","body","MenuSeparator","destructive","SCROLL_DURATION","tabs","areFolders","activeTab","big","onSwitchTab","useHorizontalScroll","activeTabElement","childNodes","activeTabOffsetLeft","activeTabOffsetWidth","newLeft","animateHorizontalScroll","tab","_tab$id","Tab","ALL_FOLDER_ID","resolver","deps","msOrSchedulerFn","noFirst","setValue","useThrottledSignal","getValue","ms","throttledResolver","useDebouncedResolver","noLast","useDebouncedCallback","useDebouncedSignal","debouncedResolver","makeMediaHandlers","controllerRef","mediaHandlers","proxy","requestNextTrack","requestPreviousTrack","stop","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","trackId","originalDuration","trackType","handlers","metadata","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","setIsPlaying","isPlayingSync","setPlayProgress","register","eventName","setVolume","setPlaybackRate","toggleMuted","registerMediaSession","setPlaybackState","audioPlayer","volume","isFinite","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","withRaf","preferredWidth","preferredHeight","isStarted","img","Image","processBlur","alpha","drawImage","fastBlur","onload","resolverOrDependency","_dependencies","isAsync","useSignal","resolverRef","useStateRef","runCurrentResolver","currentResolver","useSignalEffect","resolverOrSignal","valueRef","isSync","newValue","useEnsureMessage","replyOriginForId","loadMessage","loadMessageThrottled","throttled","throttle","useFolderManagerForOrderedIds","folderId","addOrderedIdsCallback","getOrderedIds","useFolderManagerForUnreadCounters","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","prop","getBrowserFullscreenElementProp","useFullscreen","elRef","setIsPlayed","isFullscreen","setIsFullscreen","listener","controls","listenerEnter","listenerExit","setFullscreen","requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","mozRequestFullScreen","exitFullscreen","mozCancelFullScreen","webkitCancelFullScreen","webkitExitFullscreen","useFullscreenStatus","fullscreenProp","checkIfFullscreen","removeElectronListener","electron","on","ElectronEvent","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","useGetSelectionRange","inputSelector","getRange","setRange","onSelectionChange","range","Element","shouldPreventDefault","handleScroll","deltaX","deltaY","passive","IGNORE_TAGS","createCallbackManager","hotkeys","addCallback","HTMLElement","shouldFireEvent","hotkey","ctrl","meta","mod","shift","pressedKey","isExactHotkey","part","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","isConnected","store","useUniqueId","idRef","generateIdFor","mediaHash","mediaFormat","cacheBuster","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","setLoadProgress","startedAtRef","handleProgress","spentTime","usePrevDuringAnimation","prev","isCurrentPresent","isPrevPresent","useRunDebounced","CalendarModal","useSchedule","canScheduleUntilOnline","onCancel","openAt","onScheduled","setOnScheduled","handleMessageSchedule","isWhenOnline","scheduledAt","getTime","handleMessageScheduleUntilOnline","SCHEDULED_WHEN_ONLINE","handleCloseCalendar","requestCalendar","whenScheduled","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSubmit","onSecondButtonClick","useSendMessageAction","sendMessageAction","SEND_MESSAGE_ACTION_INTERVAL","initial","_signalRef$current","signalRef","createSignal","effect","isFirstRun","dependency","isSignal","subscribe","useEffectOnce","cleanupEffect","mul_table","shg_table","boxBlurCanvasRGB","context","top_x","top_y","isNaN","imageData","getImageData","pixels","rsum","gsum","bsum","p1","p2","yp","yi","yw","wm","hm","rad1","mul_sum","shg_sum","vmin","vmax","putImageData","stopById","containerWidth","scrollId","path","remainingPath","isStopped","random","scrollSnapType","startAt","animate","t","currentPath","transition","currentArgs","animateScroll","_len","args","_key","mutate","createMutateFunction","shouldReturnMutationFn","restartCurrentScrollAnimation","cancelSingleAnimation","margin","maxDistance","FAST_SMOOTH_MAX_DISTANCE","forceDirection","forceDuration","forceNormalContainerHeight","FocusDirection","offsetTop","elementTop","offsetHeight","elementHeight","scrollTop","currentScrollTop","containerHeight","targetContainerHeight","normalHeight","scrollTo","scrollFrom","calculateScrollFrom","absPath","FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","FAST_SMOOTH_MIN_DURATION","FAST_SMOOTH_MAX_DURATION","onHeavyAnimationStop","dispatchHeavyAnimationEvent","animateSingle","newScrollTop","isAnimatingScroll","offset","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","messageKey","nextTrack","stopCurrentAudio","track","Audio","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","preload","IS_SAFARI","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","getTrackQueue","currentId","queue","chatAudio","getMessageKey","pop","one","two","dateOne","keyOne","dateTwo","keyTwo","diff","localeCompare","IOS_SCREEN_EDGE_THRESHOLD","getDistance","hypot","pageX","pageY","getTouchCenter","lastClickTime","lethargy","stability","sensitivity","tolerance","lastUpDeltas","lastDownDeltas","deltasTimestamp","check","lastDelta","originalEvent","wheelDelta","detail","isInertia","lastDeltas","lastDeltasOld","lastDeltasNew","oldSum","newSum","oldAverage","newAverage","_options$initialZoom","_options$minZoom","_options$maxZoom","captureEvent","hasMoved","hasSwiped","isZooming","initialDistance","wheelZoom","initialZoom","initialDragOffset","isDragCanceled","currentWindowSize","windowSize","initialSwipeAxis","initialTouchCenter","minZoom","maxZoom","excludedClosestSelector","withNativeDrag","onMove","touches","withCursor","scrollable","overflow","onDoubleClick","centerX","centerY","clamp","newWindowSize","onZoom","endDistance","touchCenter","dragOffsetX","dragOffsetY","zoomFactor","initialCenterX","initialCenterY","currentCenterX","currentCenterY","shouldPreventScroll","xAbs","yAbs","axis","currentSwipeAxis","Left","Right","Up","Down","processSwipe","releaseWheelDrag","releaseWheelZoom","onWheelCapture","onWheel","doubleTapZoom","is","metaKeyPressed","delta","zoom","onWheelZoom","isUserEvent","sign","dx","dy","onWheelDrag","isNotPassive","hex2rgb","param","parseInt","rgb2hex","p0","rgb2hsb","d","hsb2rgb","f","q","getAverageColor","defaultRGB","rgb","image","preloadImage","naturalHeight","naturalWidth","blockSize","getColorLuma","rgbColor","getPatternColor","hue","saturation","force","forcePlaceCaretAtEnd","activeElement","createRange","lastChild","nodeValue","selectNodeContents","collapse","getMessageIdsForSelectedText","selectedFragments","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","messageIds","node","nodeType","messageEl","firstChild","removeChild","isElementInViewport","display","windowHeight","DEFAULT_HANDLERS","mediaSession","navigator","setMediaSessionHandlers","console","warn","setActionHandler","err","clearMediaSession","playbackState","state","buildMediaMetadata","artist","album","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","RE_EMOJI_ONLY","lines","textWithoutNewlines","DETECT_UP_TO","countPerLine","line","emojiCount","ENTITY_CLASS_BY_NODE_NAME","INS","S","STRIKE","PRE","BLOCKQUOTE","parseMessageInput","withMarkdownLinks","skipMarkdown","fragment","parseMarkdown","parseMarkdownLinks","fixImageContent","innerText","trimShift","textIndex","recursionDeepness","addEntity","Node","COMMENT_NODE","getEntityDataFromNode","hasChildNodes","parsedHtml","RE_LINK_TEMPLATE","rawText","nodeName","getEntityTypeFromNode","rawIndex","language","extractorEl","insertHtmlInSelection","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","setStart","caretRange","setEnd","endContainer","endOffset","TEXT_NODE","removeAllSelections"],"sourceRoot":""}