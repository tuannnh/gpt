{"version":3,"file":"5845.1654301c5b992d27f509.js","mappings":"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","sources":["webpack://telegram-t/./src/components/mediaViewer/helpers/ghostAnimation.ts","webpack://telegram-t/./src/hooks/usePictureInPicture.ts","webpack://telegram-t/./src/hooks/useBlur.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useMediaProps.ts","webpack://telegram-t/./src/hooks/useBlurSync.ts","webpack://telegram-t/./src/components/common/ReportModal.tsx","webpack://telegram-t/./src/components/mediaViewer/hooks/useZoomChangeSignal.ts","webpack://telegram-t/./src/components/common/DeleteMessageModal.tsx","webpack://telegram-t/./src/components/common/DeleteProfilePhotoModal.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerActions.tsx","webpack://telegram-t/./src/hooks/useSignalRef.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useControlsSignal.ts","webpack://telegram-t/./src/components/mediaViewer/MediaViewerFooter.tsx","webpack://telegram-t/./src/components/mediaViewer/hooks/currentTimeSignal.ts","webpack://telegram-t/./src/lib/video-preview/VideoPreview.ts","webpack://telegram-t/./src/components/mediaViewer/SeekLine.module.scss?dc47","webpack://telegram-t/./src/components/mediaViewer/SeekLine.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayerControls.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayer.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerContent.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerSlides.tsx","webpack://telegram-t/./src/components/mediaViewer/SenderInfo.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewer.tsx","webpack://telegram-t/./src/components/common/ChatOrUserPicker.tsx","webpack://telegram-t/./src/components/common/RecipientPicker.tsx","webpack://telegram-t/./src/components/main/ForwardRecipientPicker.tsx","webpack://telegram-t/./src/components/main/DraftRecipientPicker.tsx","webpack://telegram-t/./src/components/main/AttachBotRecipientPicker.tsx","webpack://telegram-t/./src/components/main/Dialogs.tsx","webpack://telegram-t/./src/components/main/Notifications.tsx","webpack://telegram-t/./src/components/main/SafeLinkModal.tsx","webpack://telegram-t/./src/components/main/UrlAuthModal.module.scss?b72e","webpack://telegram-t/./src/components/main/UrlAuthModal.tsx","webpack://telegram-t/./src/components/common/CalendarModal.tsx","webpack://telegram-t/./src/components/main/HistoryCalendar.tsx","webpack://telegram-t/./src/components/main/NewContactModal.tsx","webpack://telegram-t/./src/components/main/hooks/useWebAppFrame.ts","webpack://telegram-t/./src/components/main/WebAppModal.tsx","webpack://telegram-t/./src/components/main/WebAppModal.module.scss?73f6","webpack://telegram-t/./src/components/main/BotTrustModal.tsx","webpack://telegram-t/./src/components/main/AttachBotInstallModal.tsx","webpack://telegram-t/./src/components/main/DeleteFolderDialog.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.module.scss?00e6","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.module.scss?28b4","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.module.scss?0228","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.tsx","webpack://telegram-t/./src/components/common/SliderDots.module.scss?afdd","webpack://telegram-t/./src/components/common/SliderDots.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.module.scss?0900","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.module.scss?b65b","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.module.scss?7431","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.tsx","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.module.scss?323f","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.tsx","webpack://telegram-t/./src/components/main/premium/GiftOption.module.scss?a171","webpack://telegram-t/./src/components/main/premium/GiftOption.tsx","webpack://telegram-t/./src/components/main/premium/GiftPremiumModal.tsx","webpack://telegram-t/./src/components/main/premium/GiftPremiumModal.module.scss?1c3e","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.module.scss?434e","webpack://telegram-t/./src/components/common/hooks/useStickerPickerObservers.ts","webpack://telegram-t/./src/hooks/useScrolledState.ts","webpack://telegram-t/./src/components/common/ReactionEmoji.module.scss?b399","webpack://telegram-t/./src/components/common/ReactionEmoji.tsx","webpack://telegram-t/./src/components/common/StickerSet.tsx","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.module.scss?4629","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.tsx","webpack://telegram-t/./src/components/middle/composer/StickerPicker.module.scss?0978","webpack://telegram-t/./src/components/common/CustomEmojiPicker.tsx","webpack://telegram-t/./src/components/common/CustomEmojiPicker.module.scss?b9fd","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.tsx","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.module.scss?d7cd","webpack://telegram-t/./src/components/ui/Badge.module.scss?a5a8","webpack://telegram-t/./src/components/ui/Badge.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.module.scss?f731","webpack://telegram-t/./src/components/modals/chatlist/ChatlistNew.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistAlready.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistDelete.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.tsx","webpack://telegram-t/./src/components/common/AboutAdsModal.tsx","webpack://telegram-t/./src/components/common/PinMessageModal.tsx","webpack://telegram-t/./src/components/common/UnpinAllMessagesModal.tsx","webpack://telegram-t/./src/components/middle/hooks/useCopySelectedMessages.ts","webpack://telegram-t/./src/components/middle/DeleteSelectedMessageModal.tsx","webpack://telegram-t/./src/components/middle/MessageSelectToolbar.tsx","webpack://telegram-t/./src/components/common/SeenByModal.tsx","webpack://telegram-t/./src/components/common/SeenByModal.module.scss?1d45","webpack://telegram-t/./src/components/middle/ReactorListModal.tsx","webpack://telegram-t/./src/components/middle/EmojiInteractionAnimation.tsx","webpack://telegram-t/./src/components/middle/MessageLanguageModal.tsx","webpack://telegram-t/./src/components/middle/MessageLanguageModal.module.scss?f702","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useSelectWithEnter.ts","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/search/LeftSearchResultChat.tsx","webpack://telegram-t/./src/components/left/search/RecentContacts.tsx","webpack://telegram-t/./src/components/left/search/ChatMessage.tsx","webpack://telegram-t/./src/components/left/search/DateSuggest.tsx","webpack://telegram-t/./src/components/left/search/ChatResults.tsx","webpack://telegram-t/./src/components/left/search/LeftSearchResultTopic.tsx","webpack://telegram-t/./src/components/left/search/ChatMessageResults.tsx","webpack://telegram-t/./src/components/left/search/helpers/createMapStateToProps.ts","webpack://telegram-t/./src/components/left/search/MediaResults.tsx","webpack://telegram-t/./src/components/left/search/LinkResults.tsx","webpack://telegram-t/./src/components/left/search/FileResults.tsx","webpack://telegram-t/./src/components/left/search/AudioResults.tsx","webpack://telegram-t/./src/components/left/search/LeftSearch.tsx","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/reducers/useTwoFaReducer.ts","webpack://telegram-t/./src/components/left/settings/SettingsHeader.tsx","webpack://telegram-t/./src/hooks/useMultiClick.ts","webpack://telegram-t/./src/components/left/settings/SettingsMain.tsx","webpack://telegram-t/./src/components/common/UsernameInput.tsx","webpack://telegram-t/./src/components/ui/TextArea.tsx","webpack://telegram-t/./src/components/ui/Draggable.tsx","webpack://telegram-t/./src/components/ui/Draggable.module.scss?804f","webpack://telegram-t/./src/components/common/ManageUsernames.module.scss?3086","webpack://telegram-t/./src/components/common/ManageUsernames.tsx","webpack://telegram-t/./src/components/left/settings/SettingsEditProfile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDataStorage.tsx","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersMain.tsx","webpack://telegram-t/./src/components/ui/ShowMoreButton.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersEdit.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersChatsPicker.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersChatFilters.tsx","webpack://telegram-t/./src/components/common/InviteLink.module.scss?000d","webpack://telegram-t/./src/components/common/InviteLink.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsShareChatlist.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFolders.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneral.tsx","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/components/left/settings/WallpaperTile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackground.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackgroundColor.tsx","webpack://telegram-t/./src/components/left/settings/SettingsNotifications.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacy.tsx","webpack://telegram-t/./src/components/left/settings/SettingsLanguage.tsx","webpack://telegram-t/./src/components/left/settings/helpers/privacy.ts","webpack://telegram-t/./src/components/ui/SelectAvatar.module.scss?3384","webpack://telegram-t/./src/components/ui/SelectAvatar.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicProfilePhoto.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicPhoto.module.scss?04c5","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibility.tsx","webpack://telegram-t/./src/components/left/settings/helpers/getSessionIcon.ts","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.module.scss?ead4","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveSessions.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.module.scss?99ae","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.module.scss?28f4","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.tsx","webpack://telegram-t/./src/components/left/settings/BlockUserModal.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyBlockedUsers.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEnabled.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPasswordForm.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaStart.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaSkippableForm.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEmailCode.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFa.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibilityExceptionList.tsx","webpack://telegram-t/./src/components/left/settings/SettingsQuickReaction.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeStart.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeEnabled.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscode.tsx","webpack://telegram-t/./src/components/common/StickerSetCard.tsx","webpack://telegram-t/./src/components/left/settings/SettingsStickers.tsx","webpack://telegram-t/./src/components/left/settings/SettingsCustomEmoji.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.module.scss?24c7","webpack://telegram-t/./src/components/left/settings/SettingsExperimental.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPerformance.tsx","webpack://telegram-t/./src/components/left/settings/Settings.tsx","webpack://telegram-t/./src/components/left/main/ContactList.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep1.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep2.tsx","webpack://telegram-t/./src/components/left/newChat/NewChat.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/left/main/AvatarBadge.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/ArchivedChats.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/components/left/ChatFolderModal.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.tsx","webpack://telegram-t/./src/components/middle/message/helpers/copyOptions.ts","webpack://telegram-t/./src/util/scrollLock.ts","webpack://telegram-t/./src/components/middle/message/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/ReactionSelector.tsx","webpack://telegram-t/./src/components/middle/message/MessageContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredMessageContextMenuContainer.tsx","webpack://telegram-t/./src/components/common/StickerSetModal.tsx","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.module.scss?b138","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.tsx","webpack://telegram-t/./src/components/middle/MobileSearch.tsx","webpack://telegram-t/./src/components/middle/message/ReactionPickerLimited.tsx","webpack://telegram-t/./src/components/middle/message/ReactionPickerLimited.module.scss?8334","webpack://telegram-t/./src/components/middle/message/ReactionPicker.tsx","webpack://telegram-t/./src/components/middle/message/ReactionPicker.module.scss?e7ab","webpack://telegram-t/./src/components/middle/composer/helpers/getHtmlTextLength.ts","webpack://telegram-t/./src/util/findInViewport.ts","webpack://telegram-t/./src/util/isFullyVisible.ts","webpack://telegram-t/./src/util/setTooltipItemVisible.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useKeyboardNavigation.ts","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.module.scss?41a0","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.tsx","webpack://telegram-t/./src/components/ui/ResponsiveHoverButton.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.module.scss?23ea","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.tsx","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/components/middle/composer/EmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiCategory.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiPicker.tsx","webpack://telegram-t/./src/components/middle/composer/StickerPicker.tsx","webpack://telegram-t/./src/components/common/GifButton.tsx","webpack://telegram-t/./src/components/middle/composer/GifPicker.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuFooter.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommand.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.module.scss?c44f","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/BaseResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/MediaResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/ArticleResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/GifResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/StickerResult.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.tsx","webpack://telegram-t/./src/components/right/RightSearch.tsx","webpack://telegram-t/./src/components/right/StickerSetResult.tsx","webpack://telegram-t/./src/components/right/StickerSearch.tsx","webpack://telegram-t/./src/components/right/GifSearch.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentMessage.tsx","webpack://telegram-t/./src/components/right/statistics/Statistics.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsPublicForward.tsx","webpack://telegram-t/./src/components/right/statistics/MessageStatistics.tsx","webpack://telegram-t/./src/components/right/PollAnswerResults.tsx","webpack://telegram-t/./src/components/right/PollResults.tsx","webpack://telegram-t/./src/components/right/ManageTopic.module.scss?04dd","webpack://telegram-t/./src/components/right/CreateTopic.tsx","webpack://telegram-t/./src/components/right/EditTopic.tsx","webpack://telegram-t/./src/components/right/management/ManageUser.tsx","webpack://telegram-t/./src/components/right/management/ManageGroup.tsx","webpack://telegram-t/./src/components/right/hooks/useManagePermissions.ts","webpack://telegram-t/./src/components/right/management/ManageGroupPermissions.tsx","webpack://telegram-t/./src/components/right/management/RemoveGroupUserModal.tsx","webpack://telegram-t/./src/components/right/management/ManageChatRemovedUsers.tsx","webpack://telegram-t/./src/components/right/management/ManageChannel.tsx","webpack://telegram-t/./src/components/right/management/ManageChatPrivacyType.tsx","webpack://telegram-t/./src/components/right/management/ManageDiscussion.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageChatAdministrators.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupAdminRights.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupMembers.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissionsCreate.tsx","webpack://telegram-t/./src/components/right/management/ManageInvites.tsx","webpack://telegram-t/./src/components/right/management/ManageInvite.tsx","webpack://telegram-t/./src/components/right/management/ManageReactions.tsx","webpack://telegram-t/./src/components/right/management/ManageInviteInfo.tsx","webpack://telegram-t/./src/components/right/management/JoinRequest.tsx","webpack://telegram-t/./src/components/right/management/ManageJoinRequests.tsx","webpack://telegram-t/./src/components/right/management/Management.tsx","webpack://telegram-t/./src/components/common/helpers/detectCardType.ts","webpack://telegram-t/./src/hooks/reducers/usePaymentReducer.ts","webpack://telegram-t/./src/hooks/useFocusAfterAnimation.tsx","webpack://telegram-t/./src/components/ui/Select.tsx","webpack://telegram-t/./src/components/payment/ShippingInfo.tsx","webpack://telegram-t/./src/components/payment/Shipping.tsx","webpack://telegram-t/./src/components/payment/Checkout.module.scss?4e47","webpack://telegram-t/./src/components/payment/Checkout.tsx","webpack://telegram-t/./src/components/payment/ExpiryInput.tsx","webpack://telegram-t/./src/components/middle/helpers/inputFormatters.ts","webpack://telegram-t/./src/components/payment/CardInput.tsx","webpack://telegram-t/./src/components/payment/PaymentInfo.tsx","webpack://telegram-t/./src/components/payment/ConfirmPayment.tsx","webpack://telegram-t/./src/components/payment/SavedPaymentCredentials.tsx","webpack://telegram-t/./src/components/payment/PasswordConfirm.tsx","webpack://telegram-t/./src/components/payment/PaymentModal.tsx","webpack://telegram-t/./src/components/payment/ReceiptModal.tsx"],"sourcesContent":["import { requestMutation } from '../../../lib/fasterdom/fasterdom';\n\nimport type { ApiDimensions, ApiMessage } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport {\n  calculateDimensions,\n  getMediaViewerAvailableDimensions,\n  MEDIA_VIEWER_MEDIA_QUERY,\n  REM,\n} from '../../common/helpers/mediaDimensions';\nimport windowSize from '../../../util/windowSize';\nimport stopEvent from '../../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { getMessageHtmlId } from '../../../global/helpers';\nimport { isElementInViewport } from '../../../util/isElementInViewport';\n\nconst ANIMATION_DURATION = 200;\n\nexport function animateOpening(\n  hasFooter: boolean,\n  origin: MediaViewerOrigin,\n  bestImageData: string,\n  dimensions: ApiDimensions,\n  isVideo: boolean,\n  message?: ApiMessage,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, message);\n  if (!fromImage) {\n    return;\n  }\n\n  const { width: windowWidth } = windowSize.get();\n  const {\n    width: availableWidth, height: availableHeight,\n  } = getMediaViewerAvailableDimensions(hasFooter, isVideo);\n  const { width: toWidth, height: toHeight } = calculateDimensions(\n    availableWidth, availableHeight, dimensions.width, dimensions.height,\n  );\n  const toLeft = (windowWidth - toWidth) / 2;\n  const toTop = getTopOffset(hasFooter) + (availableHeight - toHeight) / 2;\n\n  let {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    const uncovered = uncover(toWidth, toHeight, fromTop, fromLeft, fromWidth, fromHeight);\n    fromTop = uncovered.top;\n    fromLeft = uncovered.left;\n    fromWidth = uncovered.width;\n    fromHeight = uncovered.height;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || fromImage);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n    applyShape(ghost, origin);\n\n    document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      ghost.style.transform = '';\n      clearShape(ghost);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(origin: MediaViewerOrigin, bestImageData: string, message?: ApiMessage) {\n  const { container, mediaEl: toImage } = getNodes(origin, message);\n  if (!toImage) {\n    return;\n  }\n\n  const fromImage = document.getElementById('MediaViewer')!.querySelector<HTMLImageElement>(\n    '.MediaViewerSlide--active img, .MediaViewerSlide--active video',\n  );\n  if (!fromImage || !toImage) {\n    return;\n  }\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: targetTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  let toTop = targetTop;\n  if (!isElementInViewport(container)) {\n    const { height: windowHeight } = windowSize.get();\n    toTop = targetTop < fromTop ? -toHeight : windowHeight;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  let fromScaleX = fromWidth / toWidth;\n  let fromScaleY = fromHeight / toHeight;\n\n  const shouldFadeOut = (\n    [MediaViewerOrigin.Inline, MediaViewerOrigin.ScheduledInline].includes(origin)\n    && !isMessageImageFullyVisible(container, toImage)\n  ) || (\n    [MediaViewerOrigin.Album, MediaViewerOrigin.ScheduledAlbum].includes(origin)\n    && !isMessageImageFullyVisible(container, toImage)\n  );\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    if (fromScaleX > fromScaleY) {\n      fromScaleX = fromScaleY;\n    } else if (fromScaleY > fromScaleX) {\n      fromScaleY = fromScaleX;\n    }\n  }\n\n  const existingGhost = document.getElementsByClassName('ghost')[0] as HTMLDivElement;\n  const ghost = existingGhost || createGhost(bestImageData || toImage, origin);\n\n  let styles: Record<string, string>;\n  if (existingGhost) {\n    const {\n      top, left, width, height,\n    } = existingGhost.getBoundingClientRect();\n    const scaleX = width / toWidth;\n    const scaleY = height / toHeight;\n\n    styles = {\n      transition: 'none',\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      transformOrigin: 'top left',\n      transform: `translate3d(${left - toLeft}px, ${top - toTop}px, 0) scale(${scaleX}, ${scaleY})`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n    };\n  } else {\n    styles = {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    };\n  }\n\n  requestMutation(() => {\n    applyStyles(ghost, styles);\n    if (!existingGhost) document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      if (existingGhost) {\n        existingGhost.style.transition = '';\n      }\n\n      ghost.style.transform = '';\n\n      if (shouldFadeOut) {\n        ghost.style.opacity = '0';\n      }\n\n      applyShape(ghost, origin);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nfunction createGhost(source: string | HTMLImageElement | HTMLVideoElement, origin?: MediaViewerOrigin) {\n  const ghost = document.createElement('div');\n  ghost.classList.add('ghost');\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n\n  if (typeof source === 'string') {\n    img.src = source;\n  } else if (source instanceof HTMLVideoElement) {\n    img.src = source.poster;\n  } else {\n    img.src = source.src;\n  }\n\n  ghost.appendChild(img);\n\n  if (origin === MediaViewerOrigin.ProfileAvatar || origin === MediaViewerOrigin.SettingsAvatar) {\n    ghost.classList.add('ProfileInfo');\n    if (origin === MediaViewerOrigin.SettingsAvatar) {\n      ghost.classList.add('self');\n    }\n    const profileInfo = document.querySelector(\n      origin === MediaViewerOrigin.ProfileAvatar\n        ? '#RightColumn .ProfileInfo .info'\n        : '#Settings .ProfileInfo .info',\n    );\n    if (profileInfo) {\n      ghost.appendChild(profileInfo.cloneNode(true));\n    }\n  }\n\n  return ghost;\n}\n\nfunction uncover(realWidth: number, realHeight: number, top: number, left: number, width: number, height: number) {\n  if (realWidth === realHeight) {\n    const size = Math.max(width, height) * (realWidth / realHeight);\n    left -= (size - width) / 2;\n    top -= (size - height) / 2;\n    width = size;\n    height = size;\n  } else if (realWidth > realHeight) {\n    const srcWidth = width;\n    width = height * (realWidth / realHeight);\n    left -= (width - srcWidth) / 2;\n  } else if (realHeight > realWidth) {\n    const srcHeight = height;\n    height = width * (realHeight / realWidth);\n    top -= (height - srcHeight) / 2;\n  }\n\n  return {\n    top, left, width, height,\n  };\n}\n\nfunction isMessageImageFullyVisible(container: HTMLElement, imageEl: HTMLElement) {\n  const messageListElement = document.querySelector<HTMLDivElement>('.Transition_slide-active > .MessageList')!;\n  let imgOffsetTop = container.offsetTop + imageEl.closest<HTMLDivElement>('.content-inner, .WebPage')!.offsetTop;\n  if (container.id.includes('album-media-')) {\n    imgOffsetTop += container.parentElement!.offsetTop + container.closest<HTMLDivElement>('.Message')!.offsetTop;\n  }\n\n  return imgOffsetTop > messageListElement.scrollTop\n    && imgOffsetTop + imageEl.offsetHeight < messageListElement.scrollTop + messageListElement.offsetHeight;\n}\n\nfunction getTopOffset(hasFooter: boolean) {\n  const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n  let topOffsetRem = 4.125;\n  if (hasFooter && !IS_TOUCH_ENV) {\n    topOffsetRem += mql.matches ? 0.875 : 2.125;\n  }\n\n  return topOffsetRem * REM;\n}\n\nfunction applyStyles(element: HTMLElement, styles: Record<string, string>) {\n  Object.assign(element.style, styles);\n}\n\nfunction getNodes(origin: MediaViewerOrigin, message?: ApiMessage) {\n  let containerSelector;\n  let mediaSelector;\n\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n      containerSelector = `.Transition_slide-active > .MessageList #album-media-${getMessageHtmlId(message!.id)}`;\n      mediaSelector = '.full-media';\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n      containerSelector = `#shared-media${getMessageHtmlId(message!.id)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.SearchResult:\n      containerSelector = `#search-media${getMessageHtmlId(message!.id)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo .Avatar';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.SettingsAvatar:\n      containerSelector = '#Settings .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.ProfileAvatar:\n      containerSelector = '#RightColumn .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.SuggestedAvatar:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id)}`;\n      mediaSelector = '.Avatar img';\n      break;\n\n    case MediaViewerOrigin.ScheduledInline:\n    case MediaViewerOrigin.Inline:\n    default:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id)}`;\n      mediaSelector = `${MESSAGE_CONTENT_SELECTOR} .full-media,${MESSAGE_CONTENT_SELECTOR} .thumbnail:not(.blurred-bg)`;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = container && container.querySelectorAll<HTMLImageElement | HTMLVideoElement>(mediaSelector);\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n\nfunction applyShape(ghost: HTMLDivElement, origin: MediaViewerOrigin) {\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n    case MediaViewerOrigin.Inline:\n    case MediaViewerOrigin.ScheduledInline:\n      ghost.classList.add('rounded-corners');\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n    case MediaViewerOrigin.SettingsAvatar:\n    case MediaViewerOrigin.ProfileAvatar:\n    case MediaViewerOrigin.SearchResult:\n      (ghost.firstChild as HTMLElement).style.objectFit = 'cover';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n    case MediaViewerOrigin.SuggestedAvatar:\n      ghost.classList.add('circle');\n      if (origin === MediaViewerOrigin.SuggestedAvatar) {\n        ghost.classList.add('transition-circle');\n      }\n      break;\n  }\n}\n\nfunction clearShape(ghost: HTMLDivElement) {\n  (ghost.firstChild as HTMLElement).style.objectFit = 'default';\n  ghost.classList.remove('rounded-corners', 'circle');\n}\n","import { useLayoutEffect, useCallback, useState } from '../lib/teact/teact';\nimport { DEBUG } from '../config';\nimport { IS_IOS, IS_PWA } from '../util/windowEnvironment';\nimport safePlay, { getIsVideoPlaying } from '../util/safePlay';\nimport { createSignal } from '../util/signals';\n\ntype RefType = {\n  current: HTMLVideoElement | null;\n};\n\ntype ReturnType = [boolean, () => void, boolean] | [false];\ntype CallbackType = () => void;\n\nconst signal = createSignal(false);\nconst setIsPictureInPicture = signal[1];\n\nexport function usePictureInPictureSignal() {\n  return signal;\n}\n\nexport default function usePictureInPicture(\n  elRef: RefType,\n  onEnter: CallbackType,\n  onLeave: CallbackType,\n): ReturnType {\n  const [isSupported, setIsSupported] = useState(false);\n  const [isActive, setIsActive] = useState(false);\n\n  useLayoutEffect(() => {\n    // PIP is not supported in PWA on iOS, despite being detected\n    if ((IS_IOS && IS_PWA) || !elRef.current) return undefined;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    const isEnabled = (document.pictureInPictureEnabled && !elRef.current?.disablePictureInPicture)\n      || setMode !== undefined;\n    if (!isEnabled) return undefined;\n    // @ts-ignore\n    video.autoPictureInPicture = true;\n    setIsSupported(true);\n    const onEnterInternal = () => {\n      onEnter();\n      setIsActive(true);\n      setIsPictureInPicture(true);\n    };\n    const onLeaveInternal = () => {\n      setIsPictureInPicture(false);\n      setIsActive(false);\n      onLeave();\n    };\n    video.addEventListener('enterpictureinpicture', onEnterInternal);\n    video.addEventListener('leavepictureinpicture', onLeaveInternal);\n    return () => {\n      video.removeEventListener('enterpictureinpicture', onEnterInternal);\n      video.removeEventListener('leavepictureinpicture', onLeaveInternal);\n    };\n  }, [elRef, onEnter, onLeave]);\n\n  const exitPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('inline');\n    } else {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [elRef]);\n\n  const enterPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    exitPictureInPicture();\n    const video = elRef.current;\n    const isPlaying = getIsVideoPlaying(video);\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('picture-in-picture');\n    } else {\n      requestPictureInPicture(video);\n    }\n    // Muted video stops in PiP mode, so we need to play it again\n    if (isPlaying) {\n      safePlay(video);\n    }\n  }, [elRef, exitPictureInPicture]);\n\n  if (!isSupported) {\n    return [false];\n  }\n\n  return [isSupported, enterPictureInPicture, isActive];\n}\n\nfunction getSetPresentationMode(video: HTMLVideoElement) {\n  // @ts-ignore\n  if (video.webkitSupportsPresentationMode && typeof video.webkitSetPresentationMode === 'function') {\n    // @ts-ignore\n    return video.webkitSetPresentationMode.bind(video);\n  }\n  return undefined;\n}\n\nfunction requestPictureInPicture(video: HTMLVideoElement) {\n  if (video.requestPictureInPicture) {\n    try {\n      video.requestPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n\nexport function exitPictureInPictureIfNeeded() {\n  if (document.pictureInPictureElement) {\n    try {\n      document.exitPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useForceUpdate from './useForceUpdate';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\nconst MAX_CACHE_SIZE = 1000;\n\nconst cache = new Map<string, string>();\n\nexport default function useBlur(dataUri?: string, isDisabled = false, delay?: number) {\n  const blurredRef = useRef<string | undefined>(dataUri ? cache.get(dataUri) : undefined);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  if (timeoutRef.current && isDisabled) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useEffect(() => {\n    if (!dataUri || blurredRef.current || isDisabled) {\n      return;\n    }\n\n    const img = new Image();\n\n    img.onload = () => {\n      const canvas = imgToCanvas(img);\n      fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n      const blurredDataUri = canvas.toDataURL();\n\n      blurredRef.current = blurredDataUri;\n      forceUpdate();\n\n      if (cache.size >= MAX_CACHE_SIZE) {\n        cache.clear();\n      }\n      cache.set(dataUri, blurredDataUri);\n    };\n\n    if (delay) {\n      timeoutRef.current = window.setTimeout(() => {\n        img.src = dataUri;\n      }, delay);\n    } else {\n      img.src = dataUri;\n    }\n  }, [dataUri, delay, forceUpdate, isDisabled]);\n\n  return blurredRef.current;\n}\n","import type {\n  ApiMessage, ApiChat, ApiUser,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport {\n  getVideoAvatarMediaHash,\n  getChatAvatarHash,\n  getMessageMediaHash,\n  getMessagePhoto,\n  getMessageVideo,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  isMessageDocumentPhoto,\n  isMessageDocumentVideo,\n  getMessageMediaFormat,\n  getMessageMediaThumbDataUri,\n  getMessageFileName,\n  getMessageDocument,\n  getPhotoFullDimensions,\n  getVideoDimensions,\n  getMessageFileSize,\n  getMessageActionPhoto,\n} from '../../../global/helpers';\nimport { useMemo } from '../../../lib/teact/teact';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport useBlurSync from '../../../hooks/useBlurSync';\nimport { MediaViewerOrigin } from '../../../types';\nimport { VIDEO_AVATAR_FULL_DIMENSIONS, AVATAR_FULL_DIMENSIONS } from '../../common/helpers/mediaDimensions';\n\ntype UseMediaProps = {\n  mediaId?: number;\n  message?: ApiMessage;\n  avatarOwner?: ApiChat | ApiUser;\n  origin?: MediaViewerOrigin;\n  lastSyncTime?: number;\n  delay: number | false;\n};\n\nexport const useMediaProps = ({\n  message,\n  mediaId = 0,\n  avatarOwner,\n  origin,\n  delay,\n}: UseMediaProps) => {\n  const photo = message ? getMessagePhoto(message) : undefined;\n  const actionPhoto = message ? getMessageActionPhoto(message) : undefined;\n  const video = message ? getMessageVideo(message) : undefined;\n  const webPagePhoto = message ? getMessageWebPagePhoto(message) : undefined;\n  const webPageVideo = message ? getMessageWebPageVideo(message) : undefined;\n  const isDocumentPhoto = message ? isMessageDocumentPhoto(message) : false;\n  const isDocumentVideo = message ? isMessageDocumentVideo(message) : false;\n  const videoSize = message ? getMessageFileSize(message) : undefined;\n  const avatarMedia = avatarOwner?.photos?.[mediaId];\n  const isVideoAvatar = Boolean(avatarMedia?.isVideo || actionPhoto?.isVideo);\n  const isVideo = Boolean(video || webPageVideo || isDocumentVideo);\n  const isPhoto = Boolean(!isVideo && (photo || webPagePhoto || isDocumentPhoto || actionPhoto));\n  const { isGif } = video || webPageVideo || {};\n  const isFromSharedMedia = origin === MediaViewerOrigin.SharedMedia;\n  const isFromSearch = origin === MediaViewerOrigin.SearchResult;\n\n  const getMediaHash = useMemo(() => (isFull?: boolean) => {\n    if (avatarOwner) {\n      if (avatarMedia) {\n        if (avatarMedia.isVideo && isFull) {\n          return getVideoAvatarMediaHash(avatarMedia);\n        } else if (mediaId === 0) {\n          // Show preloaded avatar if this is the first media (when user clicks on profile info avatar)\n          return getChatAvatarHash(avatarOwner, isFull ? 'big' : 'normal');\n        } else {\n          return `photo${avatarMedia.id}?size=c`;\n        }\n      } else {\n        return getChatAvatarHash(avatarOwner, isFull ? 'big' : 'normal');\n      }\n    }\n    if (actionPhoto && isVideoAvatar && isFull) {\n      return `videoAvatar${actionPhoto.id}?size=u`;\n    }\n    return message && getMessageMediaHash(message, isFull ? 'full' : 'preview');\n  }, [avatarOwner, actionPhoto, isVideoAvatar, message, avatarMedia, mediaId]);\n\n  const pictogramBlobUrl = useMedia(\n    message\n    // Only use pictogram if it's already loaded\n    && (isFromSharedMedia || isFromSearch || isDocumentPhoto || isDocumentVideo)\n    && getMessageMediaHash(message, 'pictogram'),\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    undefined,\n    delay,\n  );\n  const previewMediaHash = getMediaHash();\n  const previewBlobUrl = useMedia(\n    previewMediaHash,\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    undefined,\n    delay,\n  );\n  const {\n    mediaData: fullMediaBlobUrl,\n    loadProgress,\n  } = useMediaWithLoadProgress(\n    getMediaHash(true),\n    undefined,\n    message && getMessageMediaFormat(message, 'full'),\n    undefined,\n    delay,\n  );\n\n  const localBlobUrl = (photo || video) ? (photo || video)!.blobUrl : undefined;\n  let bestImageData = (!isVideo && (localBlobUrl || fullMediaBlobUrl)) || previewBlobUrl || pictogramBlobUrl;\n  const thumbDataUri = useBlurSync(!bestImageData && message && getMessageMediaThumbDataUri(message));\n  if (!bestImageData && origin !== MediaViewerOrigin.SearchResult) {\n    bestImageData = thumbDataUri;\n  }\n  if (isVideoAvatar && previewBlobUrl) {\n    bestImageData = previewBlobUrl;\n  }\n  const bestData = localBlobUrl || fullMediaBlobUrl || (\n    !isVideo ? previewBlobUrl || pictogramBlobUrl || bestImageData : undefined\n  );\n  const isLocal = Boolean(localBlobUrl);\n  const fileName = message\n    ? getMessageFileName(message)\n    : avatarOwner\n      ? `avatar${avatarOwner!.id}.${avatarOwner?.hasVideoAvatar ? 'mp4' : 'jpg'}`\n      : undefined;\n\n  const dimensions = useMemo(() => {\n    if (message) {\n      if (isDocumentPhoto || isDocumentVideo) {\n        return getMessageDocument(message)!.mediaSize!;\n      } else if (photo || webPagePhoto || actionPhoto) {\n        return getPhotoFullDimensions((photo || webPagePhoto || actionPhoto)!)!;\n      } else if (video || webPageVideo) {\n        return getVideoDimensions((video || webPageVideo)!)!;\n      }\n    } else {\n      return isVideoAvatar ? VIDEO_AVATAR_FULL_DIMENSIONS : AVATAR_FULL_DIMENSIONS;\n    }\n    return undefined;\n  }, [\n    isDocumentPhoto,\n    isDocumentVideo,\n    isVideoAvatar,\n    message,\n    photo,\n    video,\n    actionPhoto,\n    webPagePhoto,\n    webPageVideo,\n  ]);\n\n  return {\n    getMediaHash,\n    photo,\n    video,\n    webPagePhoto,\n    actionPhoto,\n    webPageVideo,\n    isVideo,\n    isPhoto,\n    isGif,\n    isDocumentPhoto,\n    isDocumentVideo,\n    fileName,\n    bestImageData,\n    bestData,\n    dimensions,\n    isFromSharedMedia,\n    avatarPhoto: avatarMedia,\n    isVideoAvatar,\n    isLocal,\n    loadProgress,\n    videoSize,\n  };\n};\n","import { useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport useSyncEffect from './useSyncEffect';\nimport useBlur from './useBlur';\nimport { imgToCanvas } from '../util/files';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useBlurSync(dataUri: string | false | undefined) {\n  const blurredRef = useRef<string>();\n\n  let isChanged = false;\n\n  useSyncEffect(() => {\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    isChanged = true;\n\n    blurredRef.current = undefined;\n\n    if (!dataUri) {\n      return;\n    }\n\n    const img = new Image();\n    img.src = dataUri;\n    if (!img.width) {\n      return;\n    }\n\n    const canvas = imgToCanvas(img);\n    fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n\n    blurredRef.current = canvas.toDataURL();\n  }, [dataUri]);\n\n  // Sometimes `Image` do not manage to load synchronously,\n  // so we fall back the non-blurred variant and prepare the async one at least for the next time\n  const blurredAsync = useBlur(dataUri || undefined, Boolean(blurredRef.current));\n\n  return blurredRef.current || (!isChanged && blurredAsync) || dataUri || undefined;\n}\n","import type { ChangeEvent } from 'react';\n\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLang from '../../hooks/useLang';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\nimport RadioGroup from '../ui/RadioGroup';\nimport InputText from '../ui/InputText';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  subject?: 'peer' | 'messages' | 'media';\n  chatId?: string;\n  photo?: ApiPhoto;\n  messageIds?: number[];\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportModal: FC<OwnProps> = ({\n  isOpen,\n  subject = 'messages',\n  chatId,\n  photo,\n  messageIds,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    reportMessages,\n    reportPeer,\n    reportProfilePhoto,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useLastCallback(() => {\n    switch (subject) {\n      case 'messages':\n        reportMessages({ messageIds: messageIds!, reason: selectedReason, description });\n        exitMessageSelectMode();\n        break;\n      case 'peer':\n        reportPeer({ chatId, reason: selectedReason, description });\n        break;\n      case 'media':\n        reportProfilePhoto({\n          chatId, photo, reason: selectedReason, description,\n        });\n        break;\n    }\n    onClose();\n  });\n\n  const handleSelectReason = useLastCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  });\n\n  const handleDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  });\n\n  const lang = useLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (\n    (subject === 'messages' && !messageIds)\n    || (subject === 'peer' && !chatId)\n    || (subject === 'media' && (!chatId || !photo))\n  ) {\n    return undefined;\n  }\n\n  const title = subject === 'messages'\n    ? lang('lng_report_message_title')\n    : lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className=\"narrow\"\n      title={title}\n    >\n      <RadioGroup\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n          {lang('lng_report_button')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","import { createSignal } from '../../../util/signals';\nimport { useEffect } from '../../../lib/teact/teact';\n\nconst [getZoomChange, setZoomChange] = createSignal(1);\n\nexport default function useZoomChange() {\n  useEffect(() => {\n    return () => {\n      setZoomChange(1);\n    };\n  }, []);\n\n  return [getZoomChange, setZoomChange] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { IAlbum } from '../../types';\n\nimport {\n  selectAllowedMessageActions,\n  selectBot,\n  selectChat,\n  selectCurrentMessageList,\n  selectUser,\n} from '../../global/selectors';\nimport {\n  isUserId,\n  getUserFirstOrLastName,\n  getPrivateChatUserId,\n  isChatBasicGroup,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isSchedule: boolean;\n  message: ApiMessage;\n  album?: IAlbum;\n  onClose: NoneToVoidFunction;\n  onConfirm?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  willDeleteForCurrentUserOnly?: boolean;\n  willDeleteForAll?: boolean;\n};\n\nconst DeleteMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  isSchedule,\n  message,\n  album,\n  canDeleteForAll,\n  contactName,\n  willDeleteForCurrentUserOnly,\n  willDeleteForAll,\n  onConfirm,\n  onClose,\n}) => {\n  const {\n    deleteMessages,\n    deleteScheduledMessages,\n  } = getActions();\n\n  const handleDeleteMessageForAll = useCallback(() => {\n    onConfirm?.();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message.id];\n    deleteMessages({ messageIds, shouldDeleteForAll: true });\n    onClose();\n  }, [onConfirm, album, message.id, deleteMessages, onClose]);\n\n  const handleDeleteMessageForSelf = useCallback(() => {\n    onConfirm?.();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message.id];\n    if (isSchedule) {\n      deleteScheduledMessages({ messageIds });\n    } else {\n      deleteMessages({\n        messageIds,\n        shouldDeleteForAll: false,\n      });\n    }\n    onClose();\n  }, [onConfirm, album, message.id, isSchedule, onClose, deleteScheduledMessages, deleteMessages]);\n\n  const lang = useLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen && !canDeleteForAll ? handleDeleteMessageForSelf : undefined}\n      className=\"delete\"\n      title={lang('DeleteSingleMessagesTitle')}\n    >\n      <p>{lang('AreYouSureDeleteSingleMessage')}</p>\n      {willDeleteForCurrentUserOnly && (\n        <p>{lang('lng_delete_for_me_chat_hint', 1, 'i')}</p>\n      )}\n      {willDeleteForAll && (\n        <p>{lang('lng_delete_for_everyone_hint', 1, 'i')}</p>\n      )}\n      <div className={canDeleteForAll ? 'dialog-buttons-column' : 'dialog-buttons'}>\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForAll}>\n            {contactName && renderText(lang('Conversation.DeleteMessagesFor', contactName))}\n            {!contactName && lang('Conversation.DeleteMessagesForEveryone')}\n          </Button>\n        )}\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForSelf}>\n          {lang(canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, isSchedule }): StateProps => {\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const { canDeleteForAll } = (threadId && selectAllowedMessageActions(global, message, threadId)) || {};\n    const chat = selectChat(global, message.chatId);\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n    const isChatWithBot = Boolean(selectBot(global, message.chatId));\n\n    const willDeleteForCurrentUserOnly = (chat && isChatBasicGroup(chat) && !canDeleteForAll) || isChatWithBot;\n    const willDeleteForAll = chat && isChatSuperGroup(chat);\n\n    return {\n      canDeleteForAll: !isSchedule && canDeleteForAll,\n      contactName,\n      willDeleteForCurrentUserOnly,\n      willDeleteForAll,\n    };\n  },\n)(DeleteMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto } from '../../api/types';\nimport useLang from '../../hooks/useLang';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\nimport { isUserId } from '../../global/helpers';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  photo: ApiPhoto;\n  profileId: string;\n  onConfirm?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\nconst DeleteProfilePhotoModal: FC<OwnProps> = ({\n  isOpen,\n  photo,\n  profileId,\n  onClose,\n  onConfirm,\n}) => {\n  const {\n    deleteProfilePhoto,\n    deleteChatPhoto,\n  } = getActions();\n\n  const handleDeletePhoto = useCallback(() => {\n    onConfirm?.();\n    if (isUserId(profileId)) {\n      deleteProfilePhoto({ photo });\n    } else {\n      deleteChatPhoto({\n        photo,\n        chatId: profileId,\n      });\n    }\n    onClose();\n  }, [onConfirm, profileId, onClose, deleteProfilePhoto, photo, deleteChatPhoto]);\n\n  const lang = useLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={handleDeletePhoto}\n      className=\"delete dialog-buttons-column\"\n      title={lang('AreYouSure')}\n    >\n      <div className=\"dialog-buttons mt-2\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeletePhoto}>\n          {lang('Preview.DeletePhoto')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(DeleteProfilePhotoModal);\n","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type {\n  ApiMessage, ApiPhoto, ApiChat, ApiUser,\n} from '../../api/types';\nimport type { MessageListType } from '../../global/types';\nimport type { MenuItemProps } from '../ui/MenuItem';\n\nimport {\n  selectIsDownloading,\n  selectIsMessageProtected,\n  selectAllowedMessageActions,\n  selectCurrentMessageList,\n  selectIsChatProtected,\n} from '../../global/selectors';\nimport { getMessageMediaFormat, getMessageMediaHash, isUserId } from '../../global/helpers';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLang from '../../hooks/useLang';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useFlag from '../../hooks/useFlag';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport DeleteMessageModal from '../common/DeleteMessageModal';\nimport DeleteProfilePhotoModal from '../common/DeleteProfilePhotoModal';\n\nimport './MediaViewerActions.scss';\n\ntype StateProps = {\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isChatProtected?: boolean;\n  canDelete?: boolean;\n  canUpdate?: boolean;\n  messageListType?: MessageListType;\n  avatarOwnerId?: string;\n};\n\ntype OwnProps = {\n  mediaData?: string;\n  isVideo: boolean;\n  message?: ApiMessage;\n  canUpdateMedia?: boolean;\n  isSingleMedia?: boolean;\n  avatarPhoto?: ApiPhoto;\n  avatarOwner?: ApiChat | ApiUser;\n  fileName?: string;\n  canReport?: boolean;\n  selectMedia: (mediaId?: number) => void;\n  onReport: NoneToVoidFunction;\n  onBeforeDelete: NoneToVoidFunction;\n  onCloseMediaViewer: NoneToVoidFunction;\n  onForward: NoneToVoidFunction;\n};\n\nconst MediaViewerActions: FC<OwnProps & StateProps> = ({\n  mediaData,\n  isVideo,\n  message,\n  avatarPhoto,\n  avatarOwnerId,\n  fileName,\n  isChatProtected,\n  isDownloading,\n  isProtected,\n  canReport,\n  canDelete,\n  canUpdate,\n  messageListType,\n  selectMedia,\n  onReport,\n  onCloseMediaViewer,\n  onBeforeDelete,\n  onForward,\n}) => {\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n  const [getZoomChange, setZoomChange] = useZoomChange();\n  const { isMobile } = useAppLayout();\n\n  const {\n    downloadMessageMedia,\n    cancelMessageMediaDownload,\n    updateProfilePhoto,\n    updateChatPhoto,\n  } = getActions();\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    message && getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    message && getMessageMediaFormat(message, 'download'),\n  );\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message: message! });\n    } else {\n      downloadMessageMedia({ message: message! });\n    }\n  });\n\n  const handleZoomOut = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange < 0 ? zoomChange : 0;\n    setZoomChange(change - 1);\n  });\n\n  const handleZoomIn = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange > 0 ? zoomChange : 0;\n    setZoomChange(change + 1);\n  });\n\n  const handleUpdate = useLastCallback(() => {\n    if (!avatarPhoto || !avatarOwnerId) return;\n    if (isUserId(avatarOwnerId)) {\n      updateProfilePhoto({ photo: avatarPhoto });\n    } else {\n      updateChatPhoto({ chatId: avatarOwnerId, photo: avatarPhoto });\n    }\n    selectMedia(0);\n  });\n\n  const lang = useLang();\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : undefined}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, []);\n\n  function renderDeleteModals() {\n    return message\n      ? (\n        <DeleteMessageModal\n          isOpen={isDeleteModalOpen}\n          isSchedule={messageListType === 'scheduled'}\n          onClose={closeDeleteModal}\n          onConfirm={onBeforeDelete}\n          message={message}\n        />\n      )\n      : (avatarOwnerId && avatarPhoto) ? (\n        <DeleteProfilePhotoModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onConfirm={onBeforeDelete}\n          profileId={avatarOwnerId}\n          photo={avatarPhoto}\n        />\n      ) : undefined;\n  }\n\n  function renderDownloadButton() {\n    if (isProtected) {\n      return undefined;\n    }\n\n    return isVideo ? (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n        onClick={handleDownloadClick}\n      >\n        {isDownloading ? (\n          <ProgressSpinner progress={downloadProgress} size=\"s\" onClick={handleDownloadClick} />\n        ) : (\n          <i className=\"icon icon-download\" />\n        )}\n      </Button>\n    ) : (\n      <Button\n        href={mediaData}\n        download={fileName}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n      >\n        <i className=\"icon icon-download\" />\n      </Button>\n    );\n  }\n\n  if (isMobile) {\n    const menuItems: MenuItemProps[] = [];\n    if (message?.isForwardingAllowed && !isChatProtected) {\n      menuItems.push({\n        icon: 'forward',\n        onClick: onForward,\n        children: lang('Forward'),\n      });\n    }\n    if (!isProtected) {\n      if (isVideo) {\n        menuItems.push({\n          icon: isDownloading ? 'cancel' : 'download',\n          onClick: handleDownloadClick,\n          children: isDownloading ? `${Math.round(downloadProgress * 100)}% Downloading...` : 'Download',\n        });\n      } else {\n        menuItems.push({\n          icon: 'download',\n          href: mediaData,\n          download: fileName,\n          children: lang('AccActionDownload'),\n        });\n      }\n    }\n\n    if (canReport) {\n      menuItems.push({\n        icon: 'flag',\n        onClick: onReport,\n        children: lang('ReportPeer.Report'),\n      });\n    }\n\n    if (canUpdate) {\n      menuItems.push({\n        icon: 'copy-media',\n        onClick: handleUpdate,\n        children: lang('ProfilePhoto.SetMainPhoto'),\n      });\n    }\n\n    if (canDelete) {\n      menuItems.push({\n        icon: 'delete',\n        onClick: openDeleteModal,\n        children: lang('Delete'),\n        destructive: true,\n      });\n    }\n\n    if (menuItems.length === 0) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"MediaViewerActions-mobile\">\n        <DropdownMenu\n          trigger={MenuButton}\n          positionX=\"right\"\n        >\n          {menuItems.map(({\n            icon, onClick, href, download, children, destructive,\n          }) => (\n            <MenuItem\n              key={icon}\n              icon={icon}\n              href={href}\n              download={download}\n              onClick={onClick}\n              destructive={destructive}\n            >\n              {children}\n            </MenuItem>\n          ))}\n        </DropdownMenu>\n        {isDownloading && <ProgressSpinner progress={downloadProgress} size=\"s\" noCross />}\n        {canDelete && renderDeleteModals()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"MediaViewerActions\">\n      {message?.isForwardingAllowed && !isChatProtected && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Forward')}\n          onClick={onForward}\n        >\n          <i className=\"icon icon-forward\" />\n        </Button>\n      )}\n      {renderDownloadButton()}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomOut')}\n        onClick={handleZoomOut}\n      >\n        <i className=\"icon icon-zoom-out\" />\n      </Button>\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomIn')}\n        onClick={handleZoomIn}\n      >\n        <i className=\"icon icon-zoom-in\" />\n      </Button>\n      {canReport && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang(isVideo ? 'PeerInfo.ReportProfileVideo' : 'PeerInfo.ReportProfilePhoto')}\n          onClick={onReport}\n        >\n          <i className=\"icon icon-flag\" />\n        </Button>\n      )}\n      {canUpdate && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('ProfilePhoto.SetMainPhoto')}\n          onClick={handleUpdate}\n        >\n          <i className=\"icon icon-copy-media\" />\n        </Button>\n      )}\n      {canDelete && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Delete')}\n          onClick={openDeleteModal}\n        >\n          <i className=\"icon icon-delete\" />\n        </Button>\n      )}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={onCloseMediaViewer}\n      >\n        <i className=\"icon icon-close\" />\n      </Button>\n      {canDelete && renderDeleteModals()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    message, canUpdateMedia, avatarPhoto, avatarOwner,\n  }): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const isDownloading = message ? selectIsDownloading(global, message) : false;\n    const isProtected = selectIsMessageProtected(global, message);\n    const isChatProtected = message && selectIsChatProtected(global, message?.chatId);\n    const { canDelete: canDeleteMessage } = (threadId\n      && message && selectAllowedMessageActions(global, message, threadId)) || {};\n    const isCurrentAvatar = avatarPhoto && (avatarPhoto.id === avatarOwner?.avatarHash);\n    const canDeleteAvatar = canUpdateMedia && !!avatarPhoto;\n    const canDelete = canDeleteMessage || canDeleteAvatar;\n    const canUpdate = canUpdateMedia && !!avatarPhoto && !isCurrentAvatar;\n    const messageListType = currentMessageList?.type;\n\n    return {\n      isDownloading,\n      isProtected,\n      isChatProtected,\n      canDelete,\n      canUpdate,\n      messageListType,\n      avatarOwnerId: avatarOwner?.id,\n    };\n  },\n)(MediaViewerActions));\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useEffectOnce from './useEffectOnce';\n\n// Allows to use signal value as \"silent\" dependency in hooks (not causing updates)\nexport function useSignalRef<T>(getValue: Signal<T>) {\n  const ref = useRef<T>(getValue());\n\n  useEffectOnce(() => {\n    return getValue.subscribe(() => {\n      ref.current = getValue();\n    });\n  });\n\n  return ref;\n}\n","import { createSignal } from '../../../util/signals';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\n\nconst [getControlsVisible, setControlsVisible] = createSignal(false);\nconst [getIsLocked, setIsLocked] = createSignal(false);\n\nexport default function useControlsSignal() {\n  const getVisible = useDerivedSignal(\n    () => getControlsVisible() && !getIsLocked(),\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    [getControlsVisible, getIsLocked],\n  );\n\n  return [getVisible, setControlsVisible, setIsLocked] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, useState } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { REM } from '../common/helpers/mediaDimensions';\nimport { throttle } from '../../util/schedulers';\nimport buildClassName from '../../util/buildClassName';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useDerivedState from '../../hooks/useDerivedState';\n\nimport './MediaViewerFooter.scss';\n\nconst RESIZE_THROTTLE_MS = 500;\n\ntype OwnProps = {\n  text: TextPart | TextPart[];\n  onClick: () => void;\n  isForVideo: boolean;\n  isForceMobileVersion?: boolean;\n  isProtected?: boolean;\n};\n\nconst MediaViewerFooter: FC<OwnProps> = ({\n  text = '', isForVideo, onClick, isProtected, isForceMobileVersion,\n}) => {\n  const [isMultiline, setIsMultiline] = useState(false);\n  const { isMobile } = useAppLayout();\n  const [getIsVisible] = useControlsSignal();\n  const isHidden = useDerivedState(() => (IS_TOUCH_ENV ? !getIsVisible() : false), [getIsVisible]);\n\n  useEffect(() => {\n    const footerContent = document.querySelector('.MediaViewerFooter .media-text') as HTMLDivElement | null;\n\n    const checkIsMultiline = () => {\n      const height = footerContent ? footerContent.clientHeight : 0;\n\n      setIsMultiline(height > REM * 2);\n    };\n\n    // First run for initial detection of multiline footer text\n    checkIsMultiline();\n\n    const handleResize = throttle(checkIsMultiline, RESIZE_THROTTLE_MS, true);\n\n    window.addEventListener('resize', handleResize, false);\n\n    return () => {\n      window.removeEventListener('resize', handleResize, false);\n    };\n  }, []);\n\n  function stopEvent(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (text) {\n      e.stopPropagation();\n    }\n  }\n\n  const classNames = buildClassName(\n    'MediaViewerFooter',\n    isForVideo && 'is-for-video',\n    isHidden && 'is-hidden',\n    isProtected && 'is-protected',\n    isForceMobileVersion && 'mobile',\n  );\n\n  return (\n    <div className={classNames} onClick={stopEvent}>\n      {Boolean(text) && (\n        <div className=\"media-viewer-footer-content\" onClick={!isMobile ? onClick : undefined}>\n          <p className={`media-text custom-scroll ${isMultiline ? 'multiline' : ''}`} dir=\"auto\">{text}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MediaViewerFooter;\n","import { createSignal } from '../../../util/signals';\nimport { useEffect } from '../../../lib/teact/teact';\n\nexport const [getCurrentTime, setCurrentTime] = createSignal(0);\n\nexport default function useCurrentTimeSignal() {\n  useEffect(() => {\n    return () => {\n      setCurrentTime(0);\n    };\n  }, []);\n  return [getCurrentTime, setCurrentTime] as const;\n}\n","import { requestMutation } from '../fasterdom/fasterdom';\n\nimport { callApi } from '../../api/gramjs';\nimport { ApiMediaFormat } from '../../api/types';\nimport { IS_ANDROID, IS_IOS, ARE_WEBCODECS_SUPPORTED } from '../../util/windowEnvironment';\nimport launchMediaWorkers, { MAX_WORKERS } from '../../util/launchMediaWorkers';\n\nconst IS_MOBILE = IS_ANDROID || IS_IOS;\nconst PREVIEW_SIZE_RATIO = (IS_ANDROID || IS_IOS) ? 0.3 : 0.25;\nconst MAX_FRAMES = ARE_WEBCODECS_SUPPORTED && !IS_MOBILE ? 80 : 40;\nconst PREVIEW_MAX_SIDE = 200;\n\nconst connections = launchMediaWorkers();\n\nlet videoPreview: VideoPreview | undefined;\n\nexport class VideoPreview {\n  frames: Map<number, ImageBitmap> = new Map();\n\n  currentTime = 0;\n\n  canvas: HTMLCanvasElement;\n\n  constructor(url: string, canvas: HTMLCanvasElement) {\n    this.canvas = canvas;\n    connections.forEach(({ connector }, index) => {\n      void connector.request({\n        name: 'video-preview:init',\n        args: [\n          url,\n          MAX_FRAMES,\n          index,\n          MAX_WORKERS,\n          this.onFrame.bind(this),\n        ],\n      });\n    });\n  }\n\n  private onFrame(time: number, frame: ImageBitmap) {\n    this.frames.set(time, frame);\n    if (time === this.currentTime) {\n      this.render(time);\n    }\n  }\n\n  private clearCache() {\n    this.frames.forEach((frame) => {\n      frame.close();\n    });\n    this.frames.clear();\n  }\n\n  render(time: number) {\n    this.currentTime = time;\n    const frame = this.frames.get(time);\n    if (!frame) return false;\n    requestMutation(() => {\n      this.canvas.width = frame.width;\n      this.canvas.height = frame.height;\n      const ctx = this.canvas.getContext('2d')!;\n      ctx.drawImage(frame, 0, 0, this.canvas.width, this.canvas.height);\n    });\n    return true;\n  }\n\n  destroy() {\n    this.clearCache();\n    connections.forEach(({ connector }) => {\n      void connector.request({\n        name: 'video-preview:destroy',\n        args: [],\n      });\n    });\n  }\n}\n\nexport function getPreviewDimensions(width: number, height: number) {\n  width = Math.round(width * PREVIEW_SIZE_RATIO);\n  height = Math.round(height * PREVIEW_SIZE_RATIO);\n  const ratio = width / height;\n  if (width > PREVIEW_MAX_SIDE) {\n    width = PREVIEW_MAX_SIDE;\n    height = Math.round(width / ratio);\n  }\n  if (height > PREVIEW_MAX_SIDE) {\n    height = PREVIEW_MAX_SIDE;\n    width = Math.round(height * ratio);\n  }\n  return { width, height };\n}\n\nconnections.forEach(({ worker }) => {\n  worker.addEventListener('message', async (e) => {\n    const { type, messageId, params } = e.data as {\n      type: string;\n      messageId: string;\n      params: { url: string; start: number; end: number };\n    };\n\n    if (type !== 'requestPart') {\n      return;\n    }\n\n    const result = await callApi('downloadMedia', { mediaFormat: ApiMediaFormat.Progressive, ...params });\n    if (!result) {\n      return;\n    }\n\n    const { arrayBuffer } = result;\n\n    worker.postMessage({\n      type: 'partResponse',\n      messageId,\n      result: arrayBuffer,\n    }, [arrayBuffer!]);\n  });\n});\n\nexport function createVideoPreviews(url: string, canvas: HTMLCanvasElement) {\n  if (videoPreview) {\n    videoPreview.destroy();\n  }\n  videoPreview = new VideoPreview(url, canvas);\n  return () => videoPreview?.destroy();\n}\n\nexport function renderVideoPreview(time: number) {\n  if (!videoPreview) return false;\n  return videoPreview.render(time);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"FWH9e05HHn4BJrkuqmgL\",\"preview\":\"PmR9chdfbwrolc8FOkNB\",\"previewCanvas\":\"O7IGkaF5yzopTKVImH2v\",\"previewTime\":\"R85IB61J5InMMYwLQWxU\",\"previewTimeText\":\"QBMgsZDdCiXJzzHzd8rg\",\"track\":\"YiY5CtrarIYsGovxCo1b\",\"buffered\":\"s3rSBAeNFQimTK3eRl8t\",\"played\":\"sQTcQShWx8rMXJFKN2hO\",\"seeking\":\"pNanY7hqtTLHXdRob0qg\"};","import React, {\n  useRef, useState, useEffect, memo, useMemo, useLayoutEffect,\n} from '../../lib/teact/teact';\n\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { ApiDimensions } from '../../api/types';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useSignal from '../../hooks/useSignal';\nimport useCurrentTimeSignal from './hooks/currentTimeSignal';\n\nimport { captureEvents } from '../../util/captureEvents';\nimport { IS_TOUCH_ENV, IS_VIDEO_PREVIEW_SUPPORTED } from '../../util/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport { clamp, round } from '../../util/math';\n\nimport { createVideoPreviews, renderVideoPreview, getPreviewDimensions } from '../../lib/video-preview/VideoPreview';\n\nimport ShowTransition from '../ui/ShowTransition';\n\nimport styles from './SeekLine.module.scss';\n\ntype OwnProps = {\n  url?: string;\n  duration: number;\n  bufferedRanges: BufferedRange[];\n  isActive?: boolean;\n  isPreviewDisabled?: boolean;\n  isReady: boolean;\n  posterSize?: ApiDimensions;\n  onSeek: (position: number) => void;\n  onSeekStart: () => void;\n};\n\nconst SeekLine: React.FC<OwnProps> = ({\n  duration,\n  bufferedRanges,\n  isReady,\n  posterSize,\n  url,\n  isActive,\n  isPreviewDisabled,\n  onSeek,\n  onSeekStart,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const [getCurrentTime] = useCurrentTimeSignal();\n  const [getSelectedTime, setSelectedTime] = useSignal(getCurrentTime());\n  const [getPreviewOffset, setPreviewOffset] = useSignal(0);\n  const [getPreviewTime, setPreviewTime] = useSignal(0);\n  const isLockedRef = useRef<boolean>(false);\n  const [isPreviewVisible, setPreviewVisible] = useState(false);\n  const [isSeeking, setIsSeeking] = useState(false);\n  // eslint-disable-next-line no-null/no-null\n  const previewCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const progressRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewTimeRef = useRef<HTMLDivElement>(null);\n\n  const previewSize = useMemo(() => {\n    return getPreviewDimensions(posterSize?.width || 0, posterSize?.height || 0);\n  }, [posterSize]);\n\n  const setPreview = useLastCallback((time: number) => {\n    if (!IS_VIDEO_PREVIEW_SUPPORTED) return;\n    time = Math.floor(time);\n    setPreviewTime(time);\n    renderVideoPreview(time);\n  });\n\n  useEffect(() => {\n    if (!IS_VIDEO_PREVIEW_SUPPORTED || isPreviewDisabled || !url || !isReady) return undefined;\n    return createVideoPreviews(url, previewCanvasRef.current!);\n  }, [url, isReady, isPreviewDisabled]);\n\n  useEffect(() => {\n    setPreviewVisible(false);\n  }, [isActive]);\n\n  useEffect(() => {\n    if (!isLockedRef.current && !isSeeking) {\n      setSelectedTime(getCurrentTime());\n    }\n  }, [getCurrentTime, isSeeking, setSelectedTime]);\n\n  useLayoutEffect(() => {\n    if (!progressRef.current) return;\n    const progress = round((getSelectedTime() / duration) * 100, 2);\n    progressRef.current.style.width = `${progress}%`;\n  }, [getSelectedTime, duration]);\n\n  useLayoutEffect(() => {\n    if (!previewRef.current) return;\n    previewRef.current.style.left = `${getPreviewOffset()}px`;\n  }, [getPreviewOffset]);\n\n  useLayoutEffect(() => {\n    if (!previewTimeRef.current) return;\n    previewTimeRef.current.innerText = formatMediaDuration(getPreviewTime());\n  }, [getPreviewTime]);\n\n  useEffect(() => {\n    if (!seekerRef.current || !isActive) return undefined;\n    const seeker = seekerRef.current;\n    let seekerSize = seeker.getBoundingClientRect();\n\n    let time = 0;\n    let offset = 0;\n\n    const getPreviewProps = (e: MouseEvent | TouchEvent) => {\n      const pageX = e instanceof MouseEvent ? e.pageX : e.touches[0].pageX;\n      const t = clamp(duration * ((pageX - seekerSize.left) / seekerSize.width), 0, duration);\n      if (isPreviewDisabled) return [t, 0];\n      if (!seekerSize.width) seekerSize = seeker.getBoundingClientRect();\n      const preview = previewRef.current!;\n      const o = clamp(\n        pageX - seekerSize.left - preview.clientWidth / 2, -4, seekerSize.width - preview.clientWidth + 4,\n      );\n      return [t, o];\n    };\n\n    const handleSeek = (e: MouseEvent | TouchEvent) => {\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      void setPreview(time);\n      setPreviewOffset(offset);\n      setSelectedTime(time);\n    };\n\n    const handleStartSeek = () => {\n      setPreviewVisible(true);\n      setIsSeeking(true);\n      onSeekStart();\n    };\n\n    const handleStopSeek = () => {\n      isLockedRef.current = true;\n      setPreviewVisible(false);\n      setIsSeeking(false);\n      setSelectedTime(time);\n      onSeek(time);\n      // Prevent current time updates from overriding the selected time\n      setTimeout(() => {\n        isLockedRef.current = false;\n      }, 500);\n    };\n\n    const cleanup = captureEvents(seeker, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n\n    if (IS_TOUCH_ENV || isPreviewDisabled) {\n      return cleanup;\n    }\n\n    const handleSeekMouseMove = (e: MouseEvent) => {\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      setPreviewOffset(offset);\n      void setPreview(time);\n    };\n\n    const handleSeekMouseLeave = () => {\n      setPreviewVisible(false);\n    };\n\n    seeker.addEventListener('mousemove', handleSeekMouseMove);\n    seeker.addEventListener('mouseenter', handleSeekMouseMove);\n    seeker.addEventListener('mouseleave', handleSeekMouseLeave);\n\n    return () => {\n      cleanup();\n      seeker.removeEventListener('mousemove', handleSeekMouseMove);\n      seeker.removeEventListener('mouseenter', handleSeekMouseMove);\n      seeker.removeEventListener('mouseleave', handleSeekMouseLeave);\n    };\n  }, [\n    duration,\n    setPreview,\n    isActive,\n    onSeek,\n    onSeekStart,\n    setPreviewOffset,\n    setSelectedTime,\n    setIsSeeking,\n    isPreviewDisabled,\n  ]);\n\n  return (\n    <div className={styles.container} ref={seekerRef}>\n      {!isPreviewDisabled && (\n        <ShowTransition\n          isOpen\n          isHidden={!isPreviewVisible}\n          className={styles.preview}\n          style={`width: ${previewSize.width}px; height: ${previewSize.height}px`}\n          ref={previewRef}\n        >\n          <canvas className={styles.previewCanvas} ref={previewCanvasRef} />\n          <div className={styles.previewTime}>\n            <span className={styles.previewTimeText} ref={previewTimeRef} />\n          </div>\n        </ShowTransition>\n      )}\n      <div className={styles.track}>\n        {bufferedRanges.map(({\n          start,\n          end,\n        }) => (\n          <div\n            key={`${start}-${end}`}\n            className={styles.buffered}\n            style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n          />\n        ))}\n      </div>\n      <div className={styles.track}>\n        <div\n          ref={progressRef}\n          className={buildClassName(styles.played, isSeeking && styles.seeking)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SeekLine);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useLayoutEffect,\n} from '../../lib/teact/teact';\n\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { ApiDimensions } from '../../api/types';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLang from '../../hooks/useLang';\nimport useFlag from '../../hooks/useFlag';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useSignal from '../../hooks/useSignal';\nimport useCurrentTimeSignal from './hooks/currentTimeSignal';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport buildClassName from '../../util/buildClassName';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport { formatFileSize } from '../../util/textFormat';\n\nimport SeekLine from './SeekLine';\nimport Button from '../ui/Button';\nimport RangeSlider from '../ui/RangeSlider';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport './VideoPlayerControls.scss';\n\ntype OwnProps = {\n  url?: string;\n  bufferedRanges: BufferedRange[];\n  bufferedProgress: number;\n  duration: number;\n  isReady: boolean;\n  fileSize: number;\n  isForceMobileVersion?: boolean;\n  isPlaying: boolean;\n  isFullscreenSupported: boolean;\n  isPictureInPictureSupported: boolean;\n  isFullscreen: boolean;\n  isPreviewDisabled?: boolean;\n  isBuffered: boolean;\n  volume: number;\n  isMuted: boolean;\n  playbackRate: number;\n  posterSize?: ApiDimensions;\n  onChangeFullscreen: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onPictureInPictureChange?: () => void;\n  onVolumeClick: () => void;\n  onVolumeChange: (volume: number) => void;\n  onPlaybackRateChange: (playbackRate: number) => void;\n  onPlayPause: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onSeek: (position: number) => void;\n};\n\nconst stopEvent = (e: React.MouseEvent<HTMLElement>) => {\n  e.stopPropagation();\n};\n\nconst PLAYBACK_RATES = [\n  0.5,\n  1,\n  1.5,\n  2,\n];\n\nconst HIDE_CONTROLS_TIMEOUT_MS = 3000;\n\nconst VideoPlayerControls: FC<OwnProps> = ({\n  url,\n  bufferedRanges,\n  bufferedProgress,\n  duration,\n  isReady,\n  fileSize,\n  isForceMobileVersion,\n  isPlaying,\n  isFullscreenSupported,\n  isFullscreen,\n  isBuffered,\n  isPreviewDisabled,\n  volume,\n  isMuted,\n  playbackRate,\n  posterSize,\n  onChangeFullscreen,\n  onVolumeClick,\n  onVolumeChange,\n  onPlaybackRateChange,\n  isPictureInPictureSupported,\n  onPictureInPictureChange,\n  onPlayPause,\n  onSeek,\n}) => {\n  const [isPlaybackMenuOpen, openPlaybackMenu, closePlaybackMenu] = useFlag();\n  const [getCurrentTime] = useCurrentTimeSignal();\n  const currentTime = useDerivedState(() => Math.trunc(getCurrentTime()), [getCurrentTime]);\n  const [getIsSeeking, setIsSeeking] = useSignal(false);\n\n  const { isMobile } = useAppLayout();\n  const [getIsVisible, setVisibility] = useControlsSignal();\n  const isVisible = useDerivedState(getIsVisible);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && !isForceMobileVersion) return undefined;\n    let timeout: number | undefined;\n    if (!isVisible || !isPlaying || isPlaybackMenuOpen || getIsSeeking()) {\n      if (timeout) window.clearTimeout(timeout);\n      return undefined;\n    }\n    timeout = window.setTimeout(() => {\n      setVisibility(false);\n    }, HIDE_CONTROLS_TIMEOUT_MS);\n    return () => {\n      if (timeout) window.clearTimeout(timeout);\n    };\n  }, [isPlaying, isVisible, setVisibility, isPlaybackMenuOpen, getIsSeeking, isForceMobileVersion]);\n\n  useLayoutEffect(() => {\n    if (isVisible) {\n      document.body.classList.add('video-controls-visible');\n    } else {\n      document.body.classList.remove('video-controls-visible');\n    }\n    return () => {\n      document.body.classList.remove('video-controls-visible');\n    };\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (!isVisible) {\n      closePlaybackMenu();\n    }\n  }, [closePlaybackMenu, isVisible]);\n\n  const lang = useLang();\n\n  const handleSeek = useLastCallback((position: number) => {\n    setIsSeeking(false);\n    onSeek(position);\n  });\n\n  const handleSeekStart = useLastCallback(() => {\n    setIsSeeking(true);\n  });\n\n  const volumeIcon = useMemo(() => {\n    if (volume === 0 || isMuted) return 'icon-muted';\n    if (volume < 0.3) return 'icon-volume-1';\n    if (volume < 0.6) return 'icon-volume-2';\n    return 'icon-volume-3';\n  }, [volume, isMuted]);\n\n  return (\n    <div\n      className={buildClassName('VideoPlayerControls', isForceMobileVersion && 'mobile', isVisible && 'active')}\n      onClick={stopEvent}\n    >\n      <SeekLine\n        url={url}\n        duration={duration}\n        isReady={isReady}\n        isPreviewDisabled={isPreviewDisabled}\n        posterSize={posterSize}\n        bufferedRanges={bufferedRanges}\n        onSeek={handleSeek}\n        onSeekStart={handleSeekStart}\n        isActive={isVisible}\n      />\n      <div className=\"buttons\">\n        <Button\n          ariaLabel={lang('AccActionPlay')}\n          size=\"tiny\"\n          ripple={!isMobile}\n          color=\"translucent-white\"\n          className=\"play\"\n          round\n          onClick={onPlayPause}\n        >\n          <i className={buildClassName('icon', isPlaying ? 'icon-pause' : 'icon-play')} />\n        </Button>\n        <Button\n          ariaLabel=\"Volume\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"volume\"\n          round\n          onClick={onVolumeClick}\n        >\n          <i className={buildClassName('icon', volumeIcon)} />\n        </Button>\n        {!IS_IOS && (\n          <RangeSlider bold className=\"volume-slider\" value={isMuted ? 0 : volume * 100} onChange={onVolumeChange} />\n        )}\n        {renderTime(currentTime, duration)}\n        {!isBuffered && (\n          <div className=\"player-file-size\">\n            {`${formatFileSize(lang, fileSize * bufferedProgress)} / ${formatFileSize(lang, fileSize)}`}\n          </div>\n        )}\n        <div className=\"spacer\" />\n        <Button\n          ariaLabel=\"Playback rate\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"playback-rate\"\n          round\n          onClick={openPlaybackMenu}\n        >\n          {`${playbackRate}x`}\n        </Button>\n        {isPictureInPictureSupported && (\n          <Button\n            ariaLabel=\"Picture in picture\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onPictureInPictureChange}\n          >\n            <i className=\"icon icon-pip\" />\n          </Button>\n        )}\n        {isFullscreenSupported && (\n          <Button\n            ariaLabel=\"Fullscreen\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onChangeFullscreen}\n          >\n            <i className={buildClassName('icon ', isFullscreen ? 'icon-smallscreen' : 'icon-fullscreen')} />\n          </Button>\n        )}\n      </div>\n      <Menu\n        isOpen={isPlaybackMenuOpen}\n        className={buildClassName(\n          'playback-rate-menu',\n          !isFullscreenSupported && 'no-fullscreen',\n          !isPictureInPictureSupported && 'no-pip',\n        )}\n        positionX=\"right\"\n        positionY=\"bottom\"\n        autoClose\n        onClose={closePlaybackMenu}\n      >\n        {PLAYBACK_RATES.map((rate) => (\n          // eslint-disable-next-line react/jsx-no-bind\n          <MenuItem disabled={playbackRate === rate} onClick={() => onPlaybackRateChange(rate)}>\n            {`${rate}x`}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nfunction renderTime(currentTime: number, duration: number) {\n  return (\n    <div className=\"player-time\">\n      {`${formatMediaDuration(currentTime)} / ${formatMediaDuration(duration)}`}\n    </div>\n  );\n}\n\nexport default memo(VideoPlayerControls);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDimensions } from '../../api/types';\n\nimport { IS_IOS, IS_TOUCH_ENV, IS_YA_BROWSER } from '../../util/windowEnvironment';\nimport safePlay from '../../util/safePlay';\nimport stopEvent from '../../util/stopEvent';\nimport { clamp } from '../../util/math';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useBuffering from '../../hooks/useBuffering';\nimport useFullscreen from '../../hooks/useFullscreen';\nimport usePictureInPicture from '../../hooks/usePictureInPicture';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useVideoCleanup from '../../hooks/useVideoCleanup';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentTimeSignal from './hooks/currentTimeSignal';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport Button from '../ui/Button';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport VideoPlayerControls from './VideoPlayerControls';\n\nimport './VideoPlayer.scss';\n\ntype OwnProps = {\n  url?: string;\n  isGif?: boolean;\n  posterData?: string;\n  posterSize?: ApiDimensions;\n  loadProgress?: number;\n  fileSize: number;\n  isPreviewDisabled?: boolean;\n  isMediaViewerOpen?: boolean;\n  noPlay?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n  isProtected?: boolean;\n  shouldCloseOnClick?: boolean;\n  isForceMobileVersion?: boolean;\n  onClose: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  isClickDisabled?: boolean;\n};\n\nconst MAX_LOOP_DURATION = 30; // Seconds\nconst MIN_READY_STATE = 4;\nconst REWIND_STEP = 5; // Seconds\n\nconst VideoPlayer: FC<OwnProps> = ({\n  url,\n  isGif,\n  posterData,\n  posterSize,\n  loadProgress,\n  fileSize,\n  isMediaViewerOpen,\n  noPlay,\n  volume,\n  isMuted,\n  playbackRate,\n  onClose,\n  isForceMobileVersion,\n  shouldCloseOnClick,\n  isProtected,\n  isClickDisabled,\n  isPreviewDisabled,\n}) => {\n  const {\n    setMediaViewerVolume,\n    setMediaViewerMuted,\n    setMediaViewerPlaybackRate,\n    setMediaViewerHidden,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const [isPlaying, setIsPlaying] = useState(!IS_TOUCH_ENV || !IS_IOS);\n  const [isFullscreen, setFullscreen, exitFullscreen] = useFullscreen(videoRef, setIsPlaying);\n  const { isMobile } = useAppLayout();\n  const duration = videoRef.current?.duration || 0;\n  const isLooped = isGif || duration <= MAX_LOOP_DURATION;\n\n  const handleEnterFullscreen = useLastCallback(() => {\n    // Yandex browser doesn't support PIP when video is hidden\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: true });\n  });\n\n  const handleLeaveFullscreen = useLastCallback(() => {\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: false });\n  });\n\n  const [\n    isPictureInPictureSupported,\n    enterPictureInPicture,\n    isInPictureInPicture,\n  ] = usePictureInPicture(videoRef, handleEnterFullscreen, handleLeaveFullscreen);\n\n  const [, toggleControls, lockControls] = useControlsSignal();\n\n  const handleVideoMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  const handleVideoLeave = useLastCallback((e) => {\n    const bounds = videoRef.current?.getBoundingClientRect();\n    if (!bounds) return;\n    if (e.clientX < bounds.left || e.clientX > bounds.right || e.clientY < bounds.top || e.clientY > bounds.bottom) {\n      toggleControls(false);\n    }\n  });\n\n  const {\n    isReady, isBuffered, bufferedRanges, bufferingHandlers, bufferedProgress,\n  } = useBuffering();\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(!isBuffered, undefined, undefined, 'slow');\n  const {\n    shouldRender: shouldRenderPlayButton,\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransition(IS_IOS && !isPlaying && !shouldRenderSpinner, undefined, undefined, 'slow');\n\n  useEffect(() => {\n    lockControls(shouldRenderSpinner);\n  }, [lockControls, shouldRenderSpinner]);\n\n  useEffect(() => {\n    if (noPlay || !isMediaViewerOpen) {\n      videoRef.current!.pause();\n    } else if (url && !IS_TOUCH_ENV) {\n      // Chrome does not automatically start playing when `url` becomes available (even with `autoPlay`),\n      // so we force it here. Contrary, iOS does not allow to call `play` without mouse event,\n      // so we need to use `autoPlay` instead to allow pre-buffering.\n      safePlay(videoRef.current!);\n    }\n  }, [noPlay, isMediaViewerOpen, url, setMediaViewerMuted]);\n\n  useEffect(() => {\n    videoRef.current!.volume = volume;\n  }, [volume]);\n\n  useEffect(() => {\n    videoRef.current!.playbackRate = playbackRate;\n  }, [playbackRate]);\n\n  const togglePlayState = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent> | KeyboardEvent) => {\n    e.stopPropagation();\n    if (isPlaying) {\n      videoRef.current!.pause();\n      setIsPlaying(false);\n    } else {\n      safePlay(videoRef.current!);\n      setIsPlaying(true);\n    }\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLVideoElement, MouseEvent>) => {\n    if (isClickDisabled) {\n      return;\n    }\n    if (shouldCloseOnClick) {\n      onClose(e);\n    } else {\n      togglePlayState(e);\n    }\n  });\n\n  useVideoCleanup(videoRef, []);\n  const [, setCurrentTime] = useCurrentTimeSignal();\n\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= MIN_READY_STATE) {\n      setCurrentTime(video.currentTime);\n    }\n    if (!isLooped && video.currentTime === video.duration) {\n      setCurrentTime(0);\n      setIsPlaying(false);\n    }\n  });\n\n  const handleEnded = useLastCallback(() => {\n    if (isLooped) return;\n    setCurrentTime(0);\n    setIsPlaying(false);\n    toggleControls(true);\n  });\n\n  const handleFullscreenChange = useLastCallback(() => {\n    if (isFullscreen && exitFullscreen) {\n      exitFullscreen();\n    } else if (!isFullscreen && setFullscreen) {\n      setFullscreen();\n    }\n  });\n\n  const handleSeek = useLastCallback((position: number) => {\n    videoRef.current!.currentTime = position;\n  });\n\n  const handleVolumeChange = useLastCallback((newVolume: number) => {\n    setMediaViewerVolume({ volume: newVolume / 100 });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setMediaViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handlePlaybackRateChange = useLastCallback((newPlaybackRate: number) => {\n    setMediaViewerPlaybackRate({ playbackRate: newPlaybackRate });\n  });\n\n  useEffect(() => {\n    if (!isMediaViewerOpen) return undefined;\n    const rewind = (dir: number) => {\n      if (!isFullscreen) return;\n      const video = videoRef.current!;\n      const newTime = clamp(video.currentTime + dir * REWIND_STEP, 0, video.duration);\n      if (Number.isFinite(newTime)) {\n        video.currentTime = newTime;\n      }\n    };\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (isInPictureInPicture) return;\n      switch (e.key) {\n        case ' ':\n        case 'Enter':\n          e.preventDefault();\n          togglePlayState(e);\n          break;\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          e.preventDefault();\n          rewind(-1);\n          break;\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          e.preventDefault();\n          rewind(1);\n          break;\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown, false);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  }, [togglePlayState, isMediaViewerOpen, isFullscreen, isInPictureInPicture]);\n\n  const wrapperStyle = posterSize && `width: ${posterSize.width}px; height: ${posterSize.height}px`;\n  const videoStyle = `background-image: url(${posterData})`;\n  const shouldToggleControls = !IS_TOUCH_ENV && !isForceMobileVersion;\n\n  return (\n    // eslint-disable-next-line jsx-a11y/mouse-events-have-key-events\n    <div\n      className=\"VideoPlayer\"\n      onMouseMove={shouldToggleControls ? handleVideoMove : undefined}\n      onMouseOut={shouldToggleControls ? handleVideoLeave : undefined}\n    >\n      <div\n        style={wrapperStyle}\n      >\n        {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n        {isProtected && (\n          <div\n            onContextMenu={stopEvent}\n            onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n            onClick={!isMobile ? togglePlayState : undefined}\n            className=\"protector\"\n          />\n        )}\n        <video\n          ref={videoRef}\n          autoPlay={IS_TOUCH_ENV}\n          controlsList=\"nodownload\"\n          playsInline\n          loop={isLooped}\n          // This is to force autoplaying on mobiles\n          muted={isGif || isMuted}\n          id=\"media-viewer-video\"\n          style={videoStyle}\n          onPlay={() => setIsPlaying(true)}\n          onEnded={handleEnded}\n          onClick={!isMobile && !isFullscreen ? handleClick : undefined}\n          onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n          onPause={(e) => {\n            setIsPlaying(false);\n            bufferingHandlers.onPause(e);\n          }}\n          onTimeUpdate={handleTimeUpdate}\n        >\n          {url && <source src={url} />}\n        </video>\n      </div>\n      {shouldRenderPlayButton && (\n        <Button round className={`play-button ${playButtonClassNames}`} onClick={togglePlayState}>\n          <i className=\"icon icon-play\" />\n        </Button>\n      )}\n      {shouldRenderSpinner && (\n        <div className={['spinner-container', spinnerClassNames].join(' ')}>\n          {!isBuffered && <div className=\"buffering\">Buffering...</div>}\n          <ProgressSpinner\n            size=\"xl\"\n            progress={isBuffered ? 1 : loadProgress}\n            square\n            onClick={onClose}\n          />\n        </div>\n      )}\n      {!isGif && (\n        <VideoPlayerControls\n          url={url}\n          isPlaying={isPlaying}\n          bufferedRanges={bufferedRanges}\n          bufferedProgress={bufferedProgress}\n          isBuffered={isBuffered}\n          isFullscreenSupported={Boolean(setFullscreen)}\n          isPictureInPictureSupported={isPictureInPictureSupported}\n          isFullscreen={isFullscreen}\n          isPreviewDisabled={isPreviewDisabled}\n          fileSize={fileSize}\n          duration={duration}\n          isReady={isReady}\n          posterSize={posterSize}\n          isForceMobileVersion={isForceMobileVersion}\n          onSeek={handleSeek}\n          onChangeFullscreen={handleFullscreenChange}\n          onPictureInPictureChange={enterPictureInPicture}\n          onPlayPause={togglePlayState}\n          volume={volume}\n          playbackRate={playbackRate}\n          isMuted={isMuted}\n          onVolumeClick={handleVolumeMuted}\n          onVolumeChange={handleVolumeChange}\n          onPlaybackRateChange={handlePlaybackRateChange}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(VideoPlayer);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiDimensions, ApiMessage, ApiUser,\n} from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  IS_TOUCH_ENV, IS_IOS, IS_ANDROID, ARE_WEBCODECS_SUPPORTED,\n} from '../../util/windowEnvironment';\nimport {\n  selectChat, selectChatMessage, selectTabState, selectIsMessageProtected, selectScheduledMessage, selectUser,\n} from '../../global/selectors';\nimport { calculateMediaViewerDimensions } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\nimport stopEvent from '../../util/stopEvent';\nimport buildClassName from '../../util/buildClassName';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport Spinner from '../ui/Spinner';\nimport MediaViewerFooter from './MediaViewerFooter';\nimport VideoPlayer from './VideoPlayer';\n\nimport './MediaViewerContent.scss';\n\ntype OwnProps = {\n  mediaId?: number;\n  chatId?: string;\n  threadId?: number;\n  avatarOwnerId?: string;\n  origin?: MediaViewerOrigin;\n  isActive?: boolean;\n  withAnimation?: boolean;\n  onClose: () => void;\n  onFooterClick: () => void;\n  isMoving?: boolean;\n};\n\ntype StateProps = {\n  chatId?: string;\n  mediaId?: number;\n  senderId?: string;\n  threadId?: number;\n  avatarOwner?: ApiChat | ApiUser;\n  message?: ApiMessage;\n  origin?: MediaViewerOrigin;\n  isProtected?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n};\n\nconst ANIMATION_DURATION = 350;\nconst MOBILE_VERSION_CONTROL_WIDTH = 350;\nconst IS_PREVIEW_DISABLED = (IS_IOS || IS_ANDROID) && !ARE_WEBCODECS_SUPPORTED;\n\nconst MediaViewerContent: FC<OwnProps & StateProps> = (props) => {\n  const {\n    mediaId,\n    isActive,\n    avatarOwner,\n    chatId,\n    message,\n    origin,\n    withAnimation,\n    isProtected,\n    volume,\n    playbackRate,\n    isMuted,\n    isHidden,\n    onClose,\n    onFooterClick,\n    isMoving,\n  } = props;\n\n  const lang = useLang();\n\n  const {\n    isVideo,\n    isPhoto,\n    actionPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isLocal,\n    isVideoAvatar,\n    videoSize,\n    loadProgress,\n  } = useMediaProps({\n    message, avatarOwner, mediaId, origin, delay: withAnimation ? ANIMATION_DURATION : false,\n  });\n\n  const [, toggleControls] = useControlsSignal();\n\n  const isOpen = Boolean(avatarOwner || mediaId);\n  const { isMobile } = useAppLayout();\n\n  const toggleControlsOnMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  if (avatarOwner || actionPhoto) {\n    if (!isVideoAvatar) {\n      return (\n        <div key={chatId} className=\"MediaViewerContent\">\n          {renderPhoto(\n            bestData,\n            calculateMediaViewerDimensions(dimensions!, false),\n            !isMobile && !isProtected,\n            isProtected,\n          )}\n        </div>\n      );\n    } else {\n      return (\n        <div key={chatId} className=\"MediaViewerContent\">\n          <VideoPlayer\n            key={mediaId}\n            url={bestData}\n            isGif\n            posterData={bestImageData}\n            posterSize={calculateMediaViewerDimensions(dimensions!, false, true)}\n            loadProgress={loadProgress}\n            fileSize={videoSize!}\n            isMediaViewerOpen={isOpen && isActive}\n            isProtected={isProtected}\n            isPreviewDisabled={IS_PREVIEW_DISABLED || isLocal}\n            noPlay={!isActive}\n            onClose={onClose}\n            isMuted\n            shouldCloseOnClick\n            volume={0}\n            isClickDisabled={isMoving}\n            playbackRate={1}\n          />\n        </div>\n      );\n    }\n  }\n\n  if (!message) return undefined;\n  const textParts = message.content.action?.type === 'suggestProfilePhoto'\n    ? lang('Conversation.SuggestedPhotoTitle')\n    : renderMessageText(message);\n\n  const hasFooter = Boolean(textParts);\n  const posterSize = message && calculateMediaViewerDimensions(dimensions!, hasFooter, isVideo);\n  const isForceMobileVersion = isMobile || shouldForceMobileVersion(posterSize);\n\n  return (\n    <div\n      className={buildClassName('MediaViewerContent', hasFooter && 'has-footer')}\n      onMouseMove={isForceMobileVersion && !IS_TOUCH_ENV ? toggleControlsOnMove : undefined}\n    >\n      {isPhoto && renderPhoto(\n        bestData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      )}\n      {isVideo && (!isActive ? renderVideoPreview(\n        bestImageData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      ) : (\n        <VideoPlayer\n          key={mediaId}\n          url={bestData}\n          isGif={isGif}\n          posterData={bestImageData}\n          posterSize={posterSize}\n          loadProgress={loadProgress}\n          fileSize={videoSize!}\n          isMediaViewerOpen={isOpen && isActive}\n          noPlay={!isActive}\n          isPreviewDisabled={IS_PREVIEW_DISABLED || isLocal}\n          onClose={onClose}\n          isMuted={isMuted}\n          isHidden={isHidden}\n          isForceMobileVersion={isForceMobileVersion}\n          isProtected={isProtected}\n          volume={volume}\n          isClickDisabled={isMoving}\n          playbackRate={playbackRate}\n        />\n      ))}\n      {textParts && (\n        <MediaViewerFooter\n          text={textParts}\n          onClick={onFooterClick}\n          isProtected={isProtected}\n          isForceMobileVersion={isForceMobileVersion}\n          isForVideo={isVideo && !isGif}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, ownProps): StateProps => {\n    const {\n      chatId,\n      threadId,\n      mediaId,\n      avatarOwnerId,\n      origin,\n    } = ownProps;\n\n    const {\n      volume,\n      isMuted,\n      playbackRate,\n      isHidden,\n    } = selectTabState(global).mediaViewer;\n\n    if (origin === MediaViewerOrigin.SearchResult) {\n      if (!(chatId && mediaId)) {\n        return { volume, isMuted, playbackRate };\n      }\n\n      const message = selectChatMessage(global, chatId, mediaId);\n      if (!message) {\n        return { volume, isMuted, playbackRate };\n      }\n\n      return {\n        chatId,\n        mediaId,\n        senderId: message.senderId,\n        origin,\n        message,\n        isProtected: selectIsMessageProtected(global, message),\n        volume,\n        isMuted,\n        isHidden,\n        playbackRate,\n      };\n    }\n\n    if (avatarOwnerId) {\n      const sender = selectUser(global, avatarOwnerId) || selectChat(global, avatarOwnerId);\n\n      return {\n        mediaId,\n        senderId: avatarOwnerId,\n        avatarOwner: sender,\n        origin,\n        volume,\n        isMuted,\n        isHidden,\n        playbackRate,\n      };\n    }\n\n    if (!(chatId && threadId && mediaId)) {\n      return { volume, isMuted, playbackRate };\n    }\n\n    let message: ApiMessage | undefined;\n    if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n      message = selectScheduledMessage(global, chatId, mediaId);\n    } else {\n      message = selectChatMessage(global, chatId, mediaId);\n    }\n\n    if (!message) {\n      return { volume, isMuted, playbackRate };\n    }\n\n    return {\n      chatId,\n      threadId,\n      mediaId,\n      senderId: message.senderId,\n      origin,\n      message,\n      isProtected: selectIsMessageProtected(global, message),\n      volume,\n      isMuted,\n      isHidden,\n      playbackRate,\n    };\n  },\n)(MediaViewerContent));\n\nfunction renderPhoto(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  return blobUrl\n    ? (\n      <div style=\"position: relative;\">\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <img\n          src={blobUrl}\n          alt=\"\"\n          className={buildClassName(isProtected && 'is-protected')}\n          style={imageSize ? `width: ${imageSize.width}px` : ''}\n          draggable={Boolean(canDrag)}\n        />\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction renderVideoPreview(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  const wrapperStyle = imageSize && `width: ${imageSize.width}px; height: ${imageSize.height}px`;\n  const videoStyle = `background-image: url(${blobUrl})`;\n  return blobUrl\n    ? (\n      <div\n        className=\"VideoPlayer\"\n      >\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <div\n          style={wrapperStyle}\n        >\n          {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n          <video\n            style={videoStyle}\n            className={buildClassName(isProtected && 'is-protected')}\n            draggable={Boolean(canDrag)}\n          />\n        </div>\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction shouldForceMobileVersion(posterSize?: { width: number; height: number }) {\n  if (!posterSize) return false;\n  return posterSize.width < MOBILE_VERSION_CONTROL_WIDTH;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { MediaViewerOrigin } from '../../types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\n\nimport { animateNumber, timingFunctions } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, IOS_SCREEN_EDGE_THRESHOLD } from '../../util/captureEvents';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { clamp, isBetween, round } from '../../util/math';\nimport { debounce } from '../../util/schedulers';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useLang from '../../hooks/useLang';\nimport useTimeout from '../../hooks/useTimeout';\nimport useWindowSize from '../../hooks/useWindowSize';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useSignal from '../../hooks/useSignal';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport { useFullscreenStatus } from '../../hooks/useFullscreen';\nimport useZoomChange from './hooks/useZoomChangeSignal';\nimport { useSignalRef } from '../../hooks/useSignalRef';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport MediaViewerContent from './MediaViewerContent';\n\nimport './MediaViewerSlides.scss';\n\nconst { easeOutCubic, easeOutQuart } = timingFunctions;\n\ntype OwnProps = {\n  mediaId?: number;\n  getMediaId: (fromId?: number, direction?: number) => number | undefined;\n  isVideo?: boolean;\n  isGif?: boolean;\n  isPhoto?: boolean;\n  isOpen?: boolean;\n  selectMedia: (id?: number) => void;\n  chatId?: string;\n  threadId?: number;\n  avatarOwnerId?: string;\n  origin?: MediaViewerOrigin;\n  withAnimation?: boolean;\n  onClose: () => void;\n  isHidden?: boolean;\n  hasFooter?: boolean;\n  onFooterClick: () => void;\n};\n\nconst SWIPE_X_THRESHOLD = 50;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SLIDES_GAP = IS_TOUCH_ENV ? 40 : 0;\nconst ANIMATION_DURATION = 350;\nconst DEBOUNCE_SELECT_MEDIA = 350;\nconst DEBOUNCE_SWIPE = 500;\nconst DEBOUNCE_ACTIVE = 800;\nconst DOUBLE_TAP_ZOOM = 3;\nconst CLICK_Y_THRESHOLD = 80;\nconst HEADER_HEIGHT = 60;\nconst MAX_ZOOM = 4;\nconst MIN_ZOOM = 1;\nlet cancelAnimation: Function | undefined;\nlet cancelZoomAnimation: Function | undefined;\n\ntype Transform = {\n  x: number;\n  y: number;\n  scale: number;\n};\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nconst MediaViewerSlides: FC<OwnProps> = ({\n  mediaId,\n  getMediaId,\n  selectMedia,\n  isVideo,\n  isGif,\n  isPhoto,\n  isOpen,\n  hasFooter,\n  withAnimation,\n  isHidden,\n  ...rest\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const activeSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const leftSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const rightSlideRef = useRef<HTMLDivElement>(null);\n  const lastTransformRef = useRef<Transform>({ x: 0, y: 0, scale: 1 });\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const initialContentRectRef = useRef<DOMRect | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const [isActive, setIsActive] = useState(true);\n  const [getZoomChange] = useZoomChange();\n  const prevZoomChangeRef = useRef(getZoomChange());\n  const isFullscreen = useFullscreenStatus();\n  const [isMouseDown, setIsMouseDown] = useState(false);\n  const [getTransform, setTransform] = useSignal<Transform>({ x: 0, y: 0, scale: 1 });\n  const transformRef = useSignalRef(getTransform);\n  const [getActiveMediaId, setActiveMediaId] = useSignal<number | undefined>(mediaId);\n  const activeMediaIdRef = useSignalRef(getActiveMediaId);\n  const isScaled = useDerivedState(() => getTransform().scale !== 1, [getTransform]);\n  const activeMediaId = useDerivedState(getActiveMediaId);\n  const { height: windowHeight, width: windowWidth, isResizing } = useWindowSize();\n  const [getControlsVisible, setControlsVisible, lockControls] = useControlsSignal();\n  const { onClose } = rest;\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  const selectMediaDebounced = useDebouncedCallback(selectMedia, [selectMedia], DEBOUNCE_SELECT_MEDIA, true);\n  const clearSwipeDirectionDebounced = useDebouncedCallback(() => {\n    swipeDirectionRef.current = undefined;\n  }, [], DEBOUNCE_SWIPE, true);\n\n  const setIsActiveDebounced = useDebouncedCallback((value) => setIsActive(value), [], DEBOUNCE_ACTIVE, true);\n\n  const shouldCloseOnVideo = Boolean(isGif && !IS_IOS);\n  const clickXThreshold = IS_TOUCH_ENV ? 40 : windowWidth / 10;\n\n  const handleControlsVisibility = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (!IS_TOUCH_ENV) return;\n    const isFooter = windowHeight - e.pageY < CLICK_Y_THRESHOLD;\n    if (!isFooter && e.pageX < clickXThreshold) return;\n    if (!isFooter && e.pageX > windowWidth - clickXThreshold) return;\n    setControlsVisible(!getControlsVisible());\n  });\n\n  useTimeout(() => setControlsVisible(true), ANIMATION_DURATION);\n\n  useEffect(() => {\n    const { scale, x, y } = transformRef.current;\n    // Only update active media if slide is in default position\n    if (x === 0 && y === 0 && scale === 1) {\n      setActiveMediaId(mediaId);\n    }\n  }, [mediaId, setActiveMediaId, transformRef]);\n\n  useLayoutEffect(() => {\n    const { x, y, scale } = getTransform();\n    lockControls(scale !== 1);\n    if (leftSlideRef.current) {\n      leftSlideRef.current.style.transform = getTransformStyle(-windowWidth + x - SLIDES_GAP);\n    }\n    if (activeSlideRef.current) {\n      activeSlideRef.current.style.transform = getTransformStyle(x, y, scale);\n    }\n    if (rightSlideRef.current) {\n      rightSlideRef.current.style.transform = getTransformStyle(windowWidth + x + SLIDES_GAP);\n    }\n  }, [getTransform, lockControls, windowWidth]);\n\n  useEffect(() => {\n    if (!containerRef.current || activeMediaIdRef.current === undefined || isHidden || isFullscreen) {\n      return undefined;\n    }\n    let lastTransform = lastTransformRef.current;\n    const lastDragOffset = {\n      x: 0,\n      y: 0,\n    };\n    const lastZoomCenter = {\n      x: 0,\n      y: 0,\n    };\n    const panDelta = {\n      x: 0,\n      y: 0,\n    };\n    let lastGestureTime = Date.now();\n    let content: HTMLElement | null;\n    const setLastGestureTime = debounce(() => {\n      lastGestureTime = Date.now();\n    }, 500, false, true);\n\n    const changeSlide = (direction: number) => {\n      const mId = getMediaId(activeMediaIdRef.current, direction);\n      if (mId !== undefined) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        const transform = transformRef.current;\n        const x = transform.x + offset;\n        setIsActive(false);\n        setActiveMediaId(mId);\n        selectMediaDebounced(mId);\n        setIsActiveDebounced(true);\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        if (!withAnimation) {\n          setTransform(lastTransform);\n          return true;\n        }\n        cancelAnimation = animateNumber({\n          from: x,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            y: 0,\n            x: value,\n            scale: 1,\n          }),\n        });\n        return true;\n      }\n      return false;\n    };\n\n    const changeSlideOnClick = (e: MouseEvent): [boolean, boolean] => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return [false, false];\n      if ((e.target as HTMLElement).closest('div.VideoPlayerControls')) {\n        return [false, false];\n      }\n      let direction = 0;\n      if (windowHeight - e.pageY < CLICK_Y_THRESHOLD) {\n        return [false, false];\n      }\n      if (e.pageX < clickXThreshold) {\n        direction = -1;\n      } else if (e.pageX > windowWidth - clickXThreshold) {\n        direction = 1;\n      }\n      const hasNextSlide = changeSlide(direction);\n      const isInThreshold = direction !== 0;\n      return [isInThreshold, hasNextSlide];\n    };\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return;\n      switch (e.key) {\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          changeSlide(-1);\n          break;\n\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          changeSlide(1);\n          break;\n      }\n    };\n\n    const calculateOffsetBoundaries = (\n      { x, y, scale }: Transform,\n      offsetTop = 0,\n    ): [Transform, boolean, boolean] => {\n      const initialContentRect = initialContentRectRef.current;\n      if (!initialContentRect) return [{ x, y, scale }, true, true];\n      // Get current content boundaries\n      let inBoundsX = true;\n      let inBoundsY = true;\n\n      const centerX = (windowWidth - windowWidth * scale) / 2;\n      const centerY = (windowHeight - windowHeight * scale) / 2;\n\n      // If content is outside window we calculate offset boundaries\n      // based on initial content rect and current scale\n      const minOffsetX = Math.max(-initialContentRect.left * scale, centerX);\n      const maxOffsetX = windowWidth - initialContentRect.right * scale;\n      inBoundsX = isBetween(x, maxOffsetX, minOffsetX);\n      x = clamp(x, maxOffsetX, minOffsetX);\n\n      const minOffsetY = Math.max(-initialContentRect.top * scale + offsetTop, centerY);\n      const maxOffsetY = windowHeight - initialContentRect.bottom * scale;\n      inBoundsY = isBetween(y, maxOffsetY, minOffsetY);\n      y = clamp(y, maxOffsetY, minOffsetY);\n\n      return [{ x, y, scale }, inBoundsX, inBoundsY];\n    };\n\n    const onRelease = (e: MouseEvent | RealTouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      if (e.type === 'mouseup') {\n        setIsMouseDown(false);\n      }\n      const transform = transformRef.current;\n      const { y, scale } = transform;\n      let x = transform.x;\n      const absX = Math.abs(x);\n      const absY = Math.abs(y);\n\n      clearSwipeDirectionDebounced();\n      setIsActiveDebounced(true);\n\n      // If scale is less than 1 we need to bounce back\n      if (scale < 1) {\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [0, 0, 1],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      if (scale > 1) {\n        // Get current content boundaries\n        const s1 = Math.min(scale, MAX_ZOOM);\n        const scaleFactor = s1 / scale;\n\n        // Calculate new position based on the last zoom center to keep the zoom center\n        // at the same position when bouncing back from max zoom\n        let x1 = x * scaleFactor + (lastZoomCenter.x - scaleFactor * lastZoomCenter.x);\n        let y1 = y * scaleFactor + (lastZoomCenter.y - scaleFactor * lastZoomCenter.y);\n\n        // Arbitrary pan velocity coefficient\n        const k = 0.15;\n\n        // If scale didn't change, we need to add inertia to pan gesture\n        if (e.type !== 'wheel' && lastTransform.scale === scale) {\n          // Calculate user gesture velocity\n          const Vx = Math.abs(lastDragOffset.x) / (Date.now() - lastGestureTime);\n          const Vy = Math.abs(lastDragOffset.y) / (Date.now() - lastGestureTime);\n\n          // Add extra distance based on gesture velocity and last pan delta\n          x1 -= Math.abs(lastDragOffset.x) * Vx * k * panDelta.x;\n          y1 -= Math.abs(lastDragOffset.y) * Vy * k * panDelta.y;\n        }\n\n        [lastTransform] = calculateOffsetBoundaries({ x: x1, y: y1, scale: s1 }, HEADER_HEIGHT);\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      lastTransform = {\n        x,\n        y,\n        scale,\n      };\n      if (absY >= SWIPE_Y_THRESHOLD) {\n        onClose();\n        return;\n      }\n      // Bounce back if vertical swipe is below threshold\n      if (absY > 0) {\n        cancelAnimation = animateNumber({\n          from: y,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: 0,\n            y: value,\n            scale,\n          }),\n        });\n        return;\n      }\n      // Get horizontal swipe direction\n      const direction = x < 0 ? 1 : -1;\n      const mId = getMediaId(activeMediaIdRef.current, x < 0 ? 1 : -1);\n      // Get the direction of the last pan gesture.\n      // Could be different from the total horizontal swipe direction\n      // if user starts a swipe in one direction and then changes the direction\n      // we need to cancel slide transition\n      const dirX = panDelta.x < 0 ? -1 : 1;\n      if (mId !== undefined && absX >= SWIPE_X_THRESHOLD && direction === dirX) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        // If image is shifted by more than SWIPE_X_THRESHOLD,\n        // We shift everything by one screen width and then set new active message id\n        x += offset;\n        setActiveMediaId(mId);\n        selectMediaDebounced(mId);\n      }\n      // Then we always return to the original position\n      cancelAnimation = animateNumber({\n        from: x,\n        to: 0,\n        duration: ANIMATION_DURATION,\n        timing: easeOutCubic,\n        onUpdate: (value) => setTransform({\n          y: 0,\n          x: value,\n          scale: scale ?? 1,\n        }),\n      });\n    };\n\n    const cleanup = captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      excludedClosestSelector: '.MediaViewerFooter, .ZoomControls, .VideoPlayerControls',\n      minZoom: MIN_ZOOM,\n      maxZoom: MAX_ZOOM,\n      doubleTapZoom: DOUBLE_TAP_ZOOM,\n      onCapture: (e) => {\n        if (checkIfControlTarget(e)) return;\n        const { x, y, scale } = transformRef.current;\n        if (e.type === 'mousedown') {\n          setIsMouseDown(true);\n          if (scale !== 1) {\n            e.preventDefault();\n            return;\n          }\n        }\n        lastGestureTime = Date.now();\n        if (x === 0 && y === 0 && scale === 1) {\n          if (!activeSlideRef.current) return;\n          content = activeSlideRef.current.querySelector('img, video');\n          if (!content) return;\n          // Store initial content rect, without transformations\n          initialContentRectRef.current = content.getBoundingClientRect();\n        }\n      },\n      onDrag: (event, captureEvent, {\n        dragOffsetX,\n        dragOffsetY,\n      }, cancelDrag) => {\n        if (isReleasedRef.current || checkIfControlTarget(event)) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (cancelAnimation) {\n          cancelAnimation();\n          cancelAnimation = undefined;\n        }\n        panDelta.x = lastDragOffset.x - dragOffsetX;\n        panDelta.y = lastDragOffset.y - dragOffsetY;\n        lastDragOffset.x = dragOffsetX;\n        lastDragOffset.y = dragOffsetY;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const { x, y, scale } = transformRef.current;\n        const threshold = 10;\n        const tolerance = 1.5;\n\n        // If user is inactive but is still touching the screen\n        // we reset last gesture time\n        setLastGestureTime();\n\n        // If image is scaled we just need to pan it\n        if (scale !== 1) {\n          const x1 = lastTransform.x + dragOffsetX;\n          const y1 = lastTransform.y + dragOffsetY;\n          if (['wheel', 'mousemove'].includes(event.type)) {\n            const [transform, inBoundsX, inBoundsY] = calculateOffsetBoundaries({ x: x1, y: y1, scale }, HEADER_HEIGHT);\n            if (cancelDrag) cancelDrag(!inBoundsX, !inBoundsY);\n            setTransform(transform);\n            return;\n          }\n          if ('touches' in event && event.touches.length === 1) {\n            setTransform({\n              x: x1,\n              y: y1,\n              scale,\n            });\n          }\n          return;\n        }\n        if (event.type === 'mousemove') return;\n        if (swipeDirectionRef.current !== SwipeDirection.Vertical) {\n          // If user is swiping horizontally or horizontal shift is dominant\n          // we change only horizontal position\n          if (swipeDirectionRef.current === SwipeDirection.Horizontal\n            || Math.abs(x) > threshold || absOffsetX / absOffsetY > tolerance) {\n            swipeDirectionRef.current = SwipeDirection.Horizontal;\n            setIsActive(false);\n            const limit = windowWidth + SLIDES_GAP;\n            const x1 = clamp(dragOffsetX, -limit, limit);\n            setTransform({\n              x: x1,\n              y: 0,\n              scale,\n            });\n            // We know that at this point onRelease will trigger slide change,\n            // We can trigger onRelease directly instead of waiting for the debounced callback\n            // to avoid a delay\n            if (event.type === 'wheel' && Math.abs(x1) > SWIPE_X_THRESHOLD * 2) {\n              onRelease(event);\n              isReleasedRef.current = true;\n            }\n            return;\n          }\n        }\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(y) > threshold || absOffsetY / absOffsetX > tolerance) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          const y1 = clamp(dragOffsetY, -limit, limit);\n          setTransform({\n            x: 0,\n            y: y1,\n            scale,\n          });\n          if (event.type === 'wheel' && Math.abs(y1) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onZoom: (e, {\n        zoom,\n        zoomFactor,\n        initialCenterX,\n        initialCenterY,\n        dragOffsetX,\n        dragOffsetY,\n        currentCenterX,\n        currentCenterY,\n      }) => {\n        if (cancelAnimation) cancelAnimation();\n        initialCenterX = initialCenterX || windowWidth / 2;\n        initialCenterY = initialCenterY || windowHeight / 2;\n        currentCenterX = currentCenterX || windowWidth / 2;\n        currentCenterY = currentCenterY || windowHeight / 2;\n\n        // Calculate current scale based on zoom factor and limits, add zoom margin for bounce back effect\n        const scale = zoom ?? clamp(lastTransform.scale * zoomFactor!, MIN_ZOOM * 0.5, MAX_ZOOM * 3);\n        const scaleFactor = scale / lastTransform.scale;\n        const offsetX = Math.abs(Math.min(lastTransform.x, 0));\n        const offsetY = Math.abs(Math.min(lastTransform.y, 0));\n\n        // Save last zoom center for bounce back effect\n        lastZoomCenter.x = currentCenterX;\n        lastZoomCenter.y = currentCenterY;\n\n        // Calculate new center relative to the shifted image\n        const scaledCenterX = offsetX + initialCenterX;\n        const scaledCenterY = offsetY + initialCenterY;\n\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (scaledCenterX - scaleFactor * scaledCenterX);\n        const scaleOffsetY = (scaledCenterY - scaleFactor * scaledCenterY);\n\n        const [transform] = calculateOffsetBoundaries({\n          x: lastTransform.x + scaleOffsetX + dragOffsetX,\n          y: lastTransform.y + scaleOffsetY + dragOffsetY,\n          scale,\n        });\n\n        setTransform(transform);\n      },\n      onClick(e) {\n        setIsMouseDown(false);\n        const [isInThreshold, hasNextSlide] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          if (IS_TOUCH_ENV) return;\n          if (!hasNextSlide) onClose();\n          return;\n        }\n        if (lastTransform.scale !== 1 || IS_TOUCH_ENV) return;\n        if (shouldCloseOnVideo || !checkIfInsideSelector(e.target as HTMLElement, '.VideoPlayer')) {\n          onClose();\n        }\n      },\n      onDoubleClick(e, {\n        centerX,\n        centerY,\n      }) {\n        const [isInThreshold] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          return;\n        }\n        if (!IS_TOUCH_ENV && e.type !== 'wheel') return;\n        const { x, y, scale } = transformRef.current;\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (centerX - DOUBLE_TAP_ZOOM * centerX);\n        const scaleOffsetY = (centerY - DOUBLE_TAP_ZOOM * centerY);\n        if (scale === 1) {\n          if (x !== 0 || y !== 0) return;\n          lastTransform = calculateOffsetBoundaries({\n            x: scaleOffsetX,\n            y: scaleOffsetY,\n            scale: DOUBLE_TAP_ZOOM,\n          })[0];\n        } else {\n          lastTransform = {\n            x: 0,\n            y: 0,\n            scale: 1,\n          };\n        }\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => {\n            const transform = {\n              x: value[0],\n              y: value[1],\n              scale: value[2],\n            };\n            setTransform(transform);\n          },\n        });\n      },\n      onRelease,\n    });\n    document.addEventListener('keydown', handleKeyDown, false);\n    return () => {\n      cleanup();\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  },\n  [\n    onClose,\n    setTransform,\n    getMediaId,\n    windowWidth,\n    windowHeight,\n    clickXThreshold,\n    shouldCloseOnVideo,\n    selectMediaDebounced,\n    setIsActiveDebounced,\n    clearSwipeDirectionDebounced,\n    withAnimation,\n    setIsMouseDown,\n    setIsActive,\n    isHidden,\n    isFullscreen,\n    transformRef,\n    setActiveMediaId,\n    activeMediaIdRef,\n  ]);\n\n  useEffect(() => {\n    const zoomChange = getZoomChange();\n    const hasZoomChanged = prevZoomChangeRef.current !== undefined\n      && prevZoomChangeRef.current !== zoomChange;\n    if (!containerRef.current || !hasZoomChanged || isHidden || isFullscreen) return;\n    prevZoomChangeRef.current = zoomChange;\n    const { scale } = transformRef.current;\n    const dir = zoomChange > 0 ? -1 : +1;\n    const minZoom = MIN_ZOOM * 0.6;\n    const maxZoom = MAX_ZOOM * 3;\n    let steps = 100;\n    let prevValue = 0;\n    if (scale <= minZoom && dir > 0) return;\n    if (scale >= maxZoom && dir < 0) return;\n    if (scale === 1 && dir > 0) steps = 20;\n    if (cancelZoomAnimation) cancelZoomAnimation();\n    cancelZoomAnimation = animateNumber({\n      from: dir,\n      to: dir * steps,\n      duration: ANIMATION_DURATION,\n      timing: easeOutQuart,\n      onUpdate: (value) => {\n        if (!containerRef.current) return;\n        const delta = round(value - prevValue, 2);\n        prevValue = value;\n        // To reuse existing logic we trigger wheel event for zoom buttons\n        const wheelEvent = new WheelEvent('wheel', {\n          deltaY: delta,\n          ctrlKey: true,\n        });\n        containerRef.current.dispatchEvent(wheelEvent);\n      },\n    });\n  }, [getZoomChange, isHidden, isFullscreen, transformRef]);\n\n  if (activeMediaId === undefined) return undefined;\n\n  const nextMediaId = getMediaId(activeMediaId, 1);\n  const prevMediaId = getMediaId(activeMediaId, -1);\n  const hasPrev = prevMediaId !== undefined;\n  const hasNext = nextMediaId !== undefined;\n  const isMoving = isMouseDown && isScaled;\n\n  return (\n    <div className=\"MediaViewerSlides\" ref={containerRef}>\n      <div className=\"MediaViewerSlide\" ref={leftSlideRef}>\n        {hasPrev && !isScaled && !isResizing && (\n          <MediaViewerContent\n            /* eslint-disable-next-line react/jsx-props-no-spreading */\n            {...rest}\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            mediaId={prevMediaId}\n          />\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'MediaViewerSlide',\n          'MediaViewerSlide--active',\n          isMoving && 'MediaViewerSlide--moving',\n        )}\n        onClick={handleControlsVisibility}\n        ref={activeSlideRef}\n      >\n        <MediaViewerContent\n          /* eslint-disable-next-line react/jsx-props-no-spreading */\n          {...rest}\n          mediaId={activeMediaId}\n          withAnimation={withAnimation}\n          isActive={isActive}\n          isMoving={isMoving}\n        />\n      </div>\n      <div className=\"MediaViewerSlide\" ref={rightSlideRef}>\n        {hasNext && !isScaled && !isResizing && (\n          <MediaViewerContent\n            /* eslint-disable-next-line react/jsx-props-no-spreading */\n            {...rest}\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            mediaId={nextMediaId}\n          />\n        )}\n      </div>\n      {hasPrev && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation prev ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('AccDescrPrevious')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n      {hasNext && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation next ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('Next')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaViewerSlides);\n\nfunction getTransformStyle(x = 0, y = 0, scale = 1) {\n  return `translate3d(${x.toFixed(3)}px, ${y.toFixed(3)}px, 0px) scale(${scale.toFixed(3)})`;\n}\n\nfunction checkIfInsideSelector(element: HTMLElement, selector: string) {\n  if (!element) return false;\n  if (element.matches(selector)) return true;\n  return Boolean(element.closest(selector));\n}\n\nfunction checkIfControlTarget(e: TouchEvent | MouseEvent) {\n  const target = e.target as HTMLElement;\n  if (checkIfInsideSelector(target, '.VideoPlayerControls')) {\n    if (checkIfInsideSelector(\n      target,\n      '.play, .fullscreen, .volume, .volume-slider, .playback-rate, .playback-rate-menu, .SeekLine',\n    )) {\n      return true;\n    }\n    e.preventDefault();\n    return true;\n  }\n  return false;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiMessage, ApiUser } from '../../api/types';\n\nimport { getSenderTitle, isUserId } from '../../global/helpers';\nimport { formatMediaDateTime } from '../../util/dateFormat';\nimport renderText from '../common/helpers/renderText';\nimport {\n  selectChat,\n  selectChatMessage,\n  selectSender,\n  selectUser,\n} from '../../global/selectors';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLang from '../../hooks/useLang';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport Avatar from '../common/Avatar';\n\nimport './SenderInfo.scss';\n\ntype OwnProps = {\n  chatId?: string;\n  messageId?: number;\n  isAvatar?: boolean;\n  isFallbackAvatar?: boolean;\n};\n\ntype StateProps = {\n  sender?: ApiUser | ApiChat;\n  message?: ApiMessage;\n};\n\nconst ANIMATION_DURATION = 350;\n\nconst SenderInfo: FC<OwnProps & StateProps> = ({\n  chatId,\n  messageId,\n  sender,\n  isFallbackAvatar,\n  isAvatar,\n  message,\n}) => {\n  const {\n    closeMediaViewer,\n    focusMessage,\n    toggleChatInfo,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const handleFocusMessage = useLastCallback(() => {\n    closeMediaViewer();\n\n    if (!chatId || !messageId) return;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId, messageId });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId, messageId });\n    }\n  });\n\n  const lang = useLang();\n\n  if (!sender || (!message && !isAvatar)) {\n    return undefined;\n  }\n\n  const senderTitle = getSenderTitle(lang, sender);\n\n  return (\n    <div className=\"SenderInfo\" onClick={handleFocusMessage}>\n      {isUserId(sender.id) ? (\n        <Avatar key={sender.id} size=\"medium\" user={sender as ApiUser} />\n      ) : (\n        <Avatar key={sender.id} size=\"medium\" chat={sender as ApiChat} />\n      )}\n      <div className=\"meta\">\n        <div className=\"title\" dir=\"auto\">\n          {senderTitle && renderText(senderTitle)}\n        </div>\n        <div className=\"date\" dir=\"auto\">\n          {isAvatar\n            ? lang(isFallbackAvatar ? 'lng_mediaview_profile_public_photo' : 'lng_mediaview_profile_photo')\n            : formatMediaDateTime(lang, message!.date * 1000, true)}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  (global, { chatId, messageId, isAvatar }): StateProps => {\n    if (isAvatar && chatId) {\n      return {\n        sender: isUserId(chatId) ? selectUser(global, chatId) : selectChat(global, chatId),\n      };\n    }\n\n    if (!messageId || !chatId) {\n      return {};\n    }\n\n    const message = selectChatMessage(global, chatId, messageId);\n\n    return {\n      message,\n      sender: message && selectSender(global, message),\n    };\n  },\n)(SenderInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type {\n  ApiChat, ApiMessage, ApiPhoto, ApiUser,\n} from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { getActions, withGlobal } from '../../global';\nimport { getChatMediaMessageIds, isChatAdmin, isUserId } from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessage,\n  selectChatMessages,\n  selectChatScheduledMessages,\n  selectCurrentMediaSearch, selectTabState,\n  selectIsChatWithSelf,\n  selectListedIds,\n  selectScheduledMessage,\n  selectUser,\n  selectOutlyingListByMessageId,\n  selectUserFullInfo,\n  selectPerformanceSettingsValue,\n} from '../../global/selectors';\nimport { stopCurrentAudio } from '../../util/audioPlayer';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { ANIMATION_END_DELAY } from '../../config';\nimport { MEDIA_VIEWER_MEDIA_QUERY } from '../common/helpers/mediaDimensions';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\n\nimport useFlag from '../../hooks/useFlag';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport { exitPictureInPictureIfNeeded, usePictureInPictureSignal } from '../../hooks/usePictureInPicture';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport { useMediaProps } from './hooks/useMediaProps';\nimport useElectronDrag from '../../hooks/useElectronDrag';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport { useStateRef } from '../../hooks/useStateRef';\n\nimport ReportModal from '../common/ReportModal';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport Transition from '../ui/Transition';\nimport MediaViewerActions from './MediaViewerActions';\nimport MediaViewerSlides from './MediaViewerSlides';\nimport SenderInfo from './SenderInfo';\n\nimport './MediaViewer.scss';\nimport useLastCallback from '../../hooks/useLastCallback';\n\ntype StateProps = {\n  chatId?: string;\n  threadId?: number;\n  mediaId?: number;\n  senderId?: string;\n  isChatWithSelf?: boolean;\n  canUpdateMedia?: boolean;\n  origin?: MediaViewerOrigin;\n  avatarOwner?: ApiChat | ApiUser;\n  avatarOwnerFallbackPhoto?: ApiPhoto;\n  message?: ApiMessage;\n  chatMessages?: Record<number, ApiMessage>;\n  collectionIds?: number[];\n  isHidden?: boolean;\n  withAnimation?: boolean;\n  shouldSkipHistoryAnimations?: boolean;\n};\n\nconst ANIMATION_DURATION = 350;\n\nconst MediaViewer: FC<StateProps> = ({\n  chatId,\n  threadId,\n  mediaId,\n  senderId,\n  isChatWithSelf,\n  canUpdateMedia,\n  origin,\n  avatarOwner,\n  avatarOwnerFallbackPhoto,\n  message,\n  chatMessages,\n  collectionIds,\n  withAnimation,\n  isHidden,\n  shouldSkipHistoryAnimations,\n}) => {\n  const {\n    openMediaViewer,\n    closeMediaViewer,\n    openForwardMenu,\n    focusMessage,\n    toggleChatInfo,\n  } = getActions();\n\n  const isOpen = Boolean(avatarOwner || mediaId);\n  const { isMobile } = useAppLayout();\n\n  /* Animation */\n  const animationKey = useRef<number>();\n  const prevSenderId = usePrevious<string | undefined>(senderId);\n  const headerAnimation = withAnimation ? 'slideFade' : 'none';\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  /* Controls */\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n\n  const {\n    webPagePhoto,\n    webPageVideo,\n    isVideo,\n    actionPhoto,\n    isPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isFromSharedMedia,\n    avatarPhoto,\n    fileName,\n  } = useMediaProps({\n    message, avatarOwner, mediaId, origin, delay: isGhostAnimation && ANIMATION_DURATION,\n  });\n\n  const canReport = !!avatarPhoto && !isChatWithSelf;\n  const isVisible = !isHidden && isOpen;\n\n  /* Navigation */\n  const singleMediaId = webPagePhoto || webPageVideo || actionPhoto ? mediaId : undefined;\n\n  const mediaIds = useMemo(() => {\n    if (singleMediaId) {\n      return [singleMediaId];\n    } else if (avatarOwner) {\n      return avatarOwner.photos?.map((p, i) => i) || [];\n    } else {\n      return getChatMediaMessageIds(chatMessages || {}, collectionIds || [], isFromSharedMedia);\n    }\n  }, [singleMediaId, avatarOwner, chatMessages, collectionIds, isFromSharedMedia]);\n\n  const selectedMediaIndex = mediaId ? mediaIds.indexOf(mediaId) : -1;\n\n  if (isOpen && (!prevSenderId || prevSenderId !== senderId || !animationKey.current)) {\n    animationKey.current = selectedMediaIndex;\n  }\n\n  const [getIsPictureInPicture] = usePictureInPictureSignal();\n\n  useEffect(() => {\n    if (!isOpen || getIsPictureInPicture()) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      stopPriorityPlayback();\n      enableDirectTextInput();\n    };\n  }, [isOpen, getIsPictureInPicture]);\n\n  useEffect(() => {\n    if (isVisible) {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (isMobile) {\n      document.body.classList.toggle('is-media-viewer-open', isOpen);\n    }\n    // Disable user selection if media viewer is open, to prevent accidental text selection\n    if (IS_TOUCH_ENV) {\n      document.body.classList.toggle('no-selection', isOpen);\n    }\n  }, [isMobile, isOpen]);\n\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  useElectronDrag(headerRef);\n\n  const forceUpdate = useForceUpdate();\n  useEffect(() => {\n    const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n    if (typeof mql.addEventListener === 'function') {\n      mql.addEventListener('change', forceUpdate);\n    } else if (typeof mql.addListener === 'function') {\n      mql.addListener(forceUpdate);\n    }\n\n    return () => {\n      if (typeof mql.removeEventListener === 'function') {\n        mql.removeEventListener('change', forceUpdate);\n      } else if (typeof mql.removeListener === 'function') {\n        mql.removeListener(forceUpdate);\n      }\n    };\n  }, [forceUpdate]);\n\n  const prevMessage = usePrevious<ApiMessage | undefined>(message);\n  const prevIsHidden = usePrevious<boolean | undefined>(isHidden);\n  const prevOrigin = usePrevious(origin);\n  const prevMediaId = usePrevious(mediaId);\n  const prevAvatarOwner = usePrevious<ApiChat | ApiUser | undefined>(avatarOwner);\n  const prevBestImageData = usePrevious(bestImageData);\n  const textParts = message ? renderMessageText(message) : undefined;\n  const hasFooter = Boolean(textParts);\n  const shouldAnimateOpening = prevIsHidden && prevMediaId !== mediaId;\n\n  useEffect(() => {\n    if (isGhostAnimation && isOpen && (!prevMessage || shouldAnimateOpening) && !prevAvatarOwner) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(hasFooter, origin!, bestImageData!, dimensions!, isVideo, message);\n    }\n\n    if (isGhostAnimation && !isOpen && (prevMessage || prevAvatarOwner)) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevOrigin!, prevBestImageData!, prevMessage || undefined);\n    }\n  }, [\n    isGhostAnimation, isOpen, shouldAnimateOpening, origin, prevOrigin, message, prevMessage, prevAvatarOwner,\n    bestImageData, prevBestImageData, dimensions, isVideo, hasFooter,\n  ]);\n\n  const handleClose = useLastCallback(() => closeMediaViewer());\n\n  const mediaIdRef = useStateRef(mediaId);\n  const handleFooterClick = useLastCallback(() => {\n    handleClose();\n\n    const currentMediaId = mediaIdRef.current;\n\n    if (!chatId || !currentMediaId) return;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId, threadId, messageId: currentMediaId });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId, threadId, messageId: currentMediaId });\n    }\n  });\n\n  const handleForward = useLastCallback(() => {\n    openForwardMenu({\n      fromChatId: chatId!,\n      messageIds: [mediaId!],\n    });\n  });\n\n  const selectMedia = useLastCallback((id?: number) => {\n    openMediaViewer({\n      chatId,\n      threadId,\n      mediaId: id,\n      avatarOwnerId: avatarOwner?.id,\n      origin: origin!,\n    }, {\n      forceOnHeavyAnimation: true,\n    });\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isVideo && !isGif) {\n      stopCurrentAudio();\n    }\n  }, [isGif, isVideo]);\n\n  const mediaIdsRef = useStateRef(mediaIds);\n\n  const getMediaId = useLastCallback((fromId?: number, direction?: number): number | undefined => {\n    if (fromId === undefined) return undefined;\n    const mIds = mediaIdsRef.current;\n    const index = mIds.indexOf(fromId);\n    if ((direction === -1 && index > 0) || (direction === 1 && index < mIds.length - 1)) {\n      return mIds[index + direction];\n    }\n    return undefined;\n  });\n\n  const handleBeforeDelete = useLastCallback(() => {\n    if (mediaIds.length <= 1) {\n      handleClose();\n      return;\n    }\n    let index = mediaId ? mediaIds.indexOf(mediaId) : -1;\n    // Before deleting, select previous media or the first one\n    index = index > 0 ? index - 1 : 0;\n    selectMedia(mediaIds[index]);\n  });\n\n  const lang = useLang();\n\n  function renderSenderInfo() {\n    return avatarOwner ? (\n      <SenderInfo\n        key={mediaId}\n        chatId={avatarOwner.id}\n        isAvatar\n        isFallbackAvatar={isUserId(avatarOwner.id)\n          && (avatarOwner as ApiUser).photos?.[mediaId!].id === avatarOwnerFallbackPhoto?.id}\n      />\n    ) : (\n      <SenderInfo\n        key={mediaId}\n        chatId={chatId}\n        messageId={mediaId}\n      />\n    );\n  }\n\n  return (\n    <ShowTransition\n      id=\"MediaViewer\"\n      isOpen={isOpen}\n      isHidden={isHidden}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className=\"media-viewer-head\" dir={lang.isRtl ? 'rtl' : undefined} ref={headerRef}>\n        {isMobile && (\n          <Button\n            className=\"media-viewer-close\"\n            round\n            size=\"smaller\"\n            color=\"translucent-white\"\n            ariaLabel={lang('Close')}\n            onClick={handleClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n        )}\n        <Transition activeKey={animationKey.current!} name={headerAnimation}>\n          {renderSenderInfo()}\n        </Transition>\n        <MediaViewerActions\n          mediaData={bestData}\n          isVideo={isVideo}\n          message={message}\n          canUpdateMedia={canUpdateMedia}\n          avatarPhoto={avatarPhoto}\n          avatarOwner={avatarOwner}\n          fileName={fileName}\n          canReport={canReport}\n          selectMedia={selectMedia}\n          onBeforeDelete={handleBeforeDelete}\n          onReport={openReportModal}\n          onCloseMediaViewer={handleClose}\n          onForward={handleForward}\n        />\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          subject=\"media\"\n          photo={avatarPhoto}\n          chatId={avatarOwner?.id}\n        />\n      </div>\n      <MediaViewerSlides\n        mediaId={mediaId}\n        getMediaId={getMediaId}\n        chatId={chatId}\n        isPhoto={isPhoto}\n        isGif={isGif}\n        threadId={threadId}\n        avatarOwnerId={avatarOwner?.id}\n        origin={origin}\n        isOpen={isOpen}\n        hasFooter={hasFooter}\n        isVideo={isVideo}\n        withAnimation={withAnimation}\n        onClose={handleClose}\n        selectMedia={selectMedia}\n        isHidden={isHidden}\n        onFooterClick={handleFooterClick}\n      />\n    </ShowTransition>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { mediaViewer, shouldSkipHistoryAnimations } = selectTabState(global);\n    const {\n      chatId,\n      threadId,\n      mediaId,\n      avatarOwnerId,\n      origin,\n      isHidden,\n    } = mediaViewer;\n    const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n    const { currentUserId } = global;\n    let isChatWithSelf = !!chatId && selectIsChatWithSelf(global, chatId);\n\n    if (origin === MediaViewerOrigin.SearchResult) {\n      if (!(chatId && mediaId)) {\n        return { withAnimation, shouldSkipHistoryAnimations };\n      }\n\n      const message = selectChatMessage(global, chatId, mediaId);\n      if (!message) {\n        return { withAnimation, shouldSkipHistoryAnimations };\n      }\n\n      return {\n        chatId,\n        mediaId,\n        senderId: message.senderId,\n        isChatWithSelf,\n        origin,\n        message,\n        withAnimation,\n        isHidden,\n        shouldSkipHistoryAnimations,\n      };\n    }\n\n    if (avatarOwnerId) {\n      const user = selectUser(global, avatarOwnerId);\n      const chat = selectChat(global, avatarOwnerId);\n      let canUpdateMedia = false;\n      if (user) {\n        canUpdateMedia = avatarOwnerId === currentUserId;\n      } else if (chat) {\n        canUpdateMedia = isChatAdmin(chat);\n      }\n\n      isChatWithSelf = selectIsChatWithSelf(global, avatarOwnerId);\n\n      return {\n        mediaId,\n        senderId: avatarOwnerId,\n        avatarOwner: user || chat,\n        avatarOwnerFallbackPhoto: user ? selectUserFullInfo(global, avatarOwnerId)?.fallbackPhoto : undefined,\n        isChatWithSelf,\n        canUpdateMedia,\n        withAnimation,\n        origin,\n        shouldSkipHistoryAnimations,\n        isHidden,\n      };\n    }\n\n    if (!(chatId && threadId && mediaId)) {\n      return { withAnimation, shouldSkipHistoryAnimations };\n    }\n\n    let message: ApiMessage | undefined;\n    if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n      message = selectScheduledMessage(global, chatId, mediaId);\n    } else {\n      message = selectChatMessage(global, chatId, mediaId);\n    }\n\n    if (!message) {\n      return { withAnimation, shouldSkipHistoryAnimations };\n    }\n\n    let chatMessages: Record<number, ApiMessage> | undefined;\n\n    if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n      chatMessages = selectChatScheduledMessages(global, chatId);\n    } else {\n      chatMessages = selectChatMessages(global, chatId);\n    }\n    let collectionIds: number[] | undefined;\n\n    if (origin === MediaViewerOrigin.Inline\n      || origin === MediaViewerOrigin.Album) {\n      collectionIds = selectOutlyingListByMessageId(global, chatId, threadId, message.id)\n        || selectListedIds(global, chatId, threadId);\n    } else if (origin === MediaViewerOrigin.SharedMedia) {\n      const currentSearch = selectCurrentMediaSearch(global);\n      const { foundIds } = (currentSearch && currentSearch.resultsByType && currentSearch.resultsByType.media) || {};\n      collectionIds = foundIds;\n    }\n\n    return {\n      chatId,\n      threadId,\n      mediaId,\n      senderId: message.senderId,\n      isChatWithSelf,\n      origin,\n      message,\n      chatMessages,\n      collectionIds,\n      withAnimation,\n      isHidden,\n      shouldSkipHistoryAnimations,\n    };\n  },\n)(MediaViewer));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useRef, useState, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat, ApiTopic } from '../../api/types';\n\nimport { REM } from './helpers/mediaDimensions';\nimport { CHAT_HEIGHT_PX } from '../../config';\nimport renderText from './helpers/renderText';\nimport { getCanPostInChat, isUserId } from '../../global/helpers';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\nimport useInputFocusOnOpen from '../../hooks/useInputFocusOnOpen';\n\nimport Loading from '../ui/Loading';\nimport Modal from '../ui/Modal';\nimport InputText from '../ui/InputText';\nimport Button from '../ui/Button';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport GroupChatInfo from './GroupChatInfo';\nimport PrivateChatInfo from './PrivateChatInfo';\nimport Transition from '../ui/Transition';\nimport TopicIcon from './TopicIcon';\n\nimport './ChatOrUserPicker.scss';\n\nexport type OwnProps = {\n  currentUserId?: string;\n  chatOrUserIds: string[];\n  chatsById?: Record<string, ApiChat>;\n  isOpen: boolean;\n  searchPlaceholder: string;\n  search: string;\n  loadMore?: NoneToVoidFunction;\n  onSearchChange: (search: string) => void;\n  onSelectChatOrUser: (chatOrUserId: string, threadId?: number) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\nconst CHAT_LIST_SLIDE = 0;\nconst TOPIC_LIST_SLIDE = 1;\nconst TOPIC_ICON_SIZE = 2.75 * REM;\n\nconst ChatOrUserPicker: FC<OwnProps> = ({\n  isOpen,\n  currentUserId,\n  chatOrUserIds,\n  chatsById,\n  search,\n  searchPlaceholder,\n  loadMore,\n  onSearchChange,\n  onSelectChatOrUser,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { loadTopics } = getActions();\n\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicContainerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const searchRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicSearchRef = useRef<HTMLInputElement>(null);\n  const [viewportIds, getMore] = useInfiniteScroll(loadMore, chatOrUserIds, Boolean(search));\n  const [forumId, setForumId] = useState<string | undefined>(undefined);\n  const [topicSearch, setTopicSearch] = useState<string>('');\n  const activeKey = forumId ? TOPIC_LIST_SLIDE : CHAT_LIST_SLIDE;\n  const viewportOffset = chatOrUserIds!.indexOf(viewportIds![0]);\n\n  const resetSearch = useLastCallback(() => {\n    onSearchChange('');\n  });\n  useInputFocusOnOpen(searchRef, isOpen && activeKey === CHAT_LIST_SLIDE, resetSearch);\n  useInputFocusOnOpen(topicSearchRef, isOpen && activeKey === TOPIC_LIST_SLIDE);\n\n  const [topicIds, topics] = useMemo(() => {\n    const topicsResult = forumId ? chatsById?.[forumId].topics : undefined;\n    if (!topicsResult) {\n      return [undefined, undefined];\n    }\n\n    const searchTitle = topicSearch.toLowerCase();\n\n    const result = topicsResult\n      ? Object.values(topicsResult).reduce((acc, topic) => {\n        if (\n          getCanPostInChat(chatsById![forumId!], topic.id)\n          && (!searchTitle || topic.title.toLowerCase().includes(searchTitle))\n        ) {\n          acc[topic.id] = topic;\n        }\n\n        return acc;\n      }, {} as Record<number, ApiTopic>)\n      : topicsResult;\n\n    return [Object.keys(result).map(Number), result];\n  }, [chatsById, forumId, topicSearch]);\n\n  const handleHeaderBackClick = useLastCallback(() => {\n    setForumId(undefined);\n    setTopicSearch('');\n  });\n\n  const handleSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    onSearchChange(e.currentTarget.value);\n  });\n\n  const handleTopicSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTopicSearch(e.currentTarget.value);\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      const chatId = viewportIds[index === -1 ? 0 : index];\n      const chat = chatsById?.[chatId];\n      if (chat?.isForum) {\n        if (!chat.topics) loadTopics({ chatId });\n        setForumId(chatId);\n      } else {\n        onSelectChatOrUser(chatId);\n      }\n    }\n  }, '.ListItem-button', true);\n\n  const handleTopicKeyDown = useKeyboardListNavigation(topicContainerRef, isOpen, (index) => {\n    if (topicIds?.length) {\n      onSelectChatOrUser(forumId!, topicIds[index === -1 ? 0 : index]);\n    }\n  }, '.ListItem-button', true);\n\n  const handleClick = useLastCallback((e: React.MouseEvent, chatId: string) => {\n    const chat = chatsById?.[chatId];\n    if (chat?.isForum) {\n      if (!chat.topics) loadTopics({ chatId });\n      setForumId(chatId);\n      resetSearch();\n    } else {\n      onSelectChatOrUser(chatId);\n    }\n  });\n\n  const handleTopicClick = useLastCallback((e: React.MouseEvent, topicId: number) => {\n    onSelectChatOrUser(forumId!, topicId);\n  });\n\n  function renderTopicList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Back')} onClick={handleHeaderBackClick}>\n            <i className=\"icon icon-arrow-left\" />\n          </Button>\n          <InputText\n            ref={topicSearchRef}\n            value={topicSearch}\n            onChange={handleTopicSearchChange}\n            onKeyDown={handleTopicKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        <InfiniteScroll\n          ref={topicContainerRef}\n          className=\"picker-list custom-scroll\"\n          items={topicIds}\n          withAbsolutePositioning\n          maxHeight={!topicIds ? 0 : topicIds.length * CHAT_HEIGHT_PX}\n          onKeyDown={handleTopicKeyDown}\n        >\n          {topicIds\n            ? topicIds.map((topicId, i) => (\n              <ListItem\n                key={`${forumId}_${topicId}`}\n                className=\"chat-item-clickable force-rounded-corners small-icon topic-item\"\n                style={`top: ${i * CHAT_HEIGHT_PX}px;`}\n                onClick={handleTopicClick}\n                clickArg={topicId}\n              >\n                <TopicIcon\n                  size={TOPIC_ICON_SIZE}\n                  topic={topics[topicId]}\n                  className=\"topic-icon\"\n                  letterClassName=\"topic-icon-letter\"\n                />\n                <div dir=\"auto\" className=\"fullName\">{renderText(topics[topicId].title)}</div>\n              </ListItem>\n            ))\n            : <Loading />}\n        </InfiniteScroll>\n      </>\n    );\n  }\n\n  function renderChatList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n          <InputText\n            ref={searchRef}\n            value={search}\n            onChange={handleSearchChange}\n            onKeyDown={handleKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            ref={containerRef}\n            className=\"picker-list custom-scroll\"\n            items={viewportIds}\n            onLoadMore={getMore}\n            withAbsolutePositioning\n            maxHeight={chatOrUserIds!.length * CHAT_HEIGHT_PX}\n            onKeyDown={handleKeyDown}\n          >\n            {viewportIds.map((id, i) => (\n              <ListItem\n                key={id}\n                className=\"chat-item-clickable force-rounded-corners small-icon\"\n                style={`height: ${CHAT_HEIGHT_PX}px; top: ${(viewportOffset + i) * CHAT_HEIGHT_PX}px;`}\n                onClick={handleClick}\n                clickArg={id}\n              >\n                {isUserId(id) ? (\n                  <PrivateChatInfo\n                    status={id === currentUserId ? lang('SavedMessagesInfo') : undefined}\n                    userId={id}\n                  />\n                ) : (\n                  <GroupChatInfo chatId={id} />\n                )}\n              </ListItem>\n            ))}\n          </InfiniteScroll>\n        ) : viewportIds && !viewportIds.length ? (\n          <p className=\"no-results\">{lang('lng_blocked_list_not_found')}</p>\n        ) : (\n          <Loading />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"ChatOrUserPicker\"\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      <Transition activeKey={activeKey} name=\"slideFade\" slideClassName=\"ChatOrUserPicker_slide\">\n        {() => {\n          return activeKey === TOPIC_LIST_SLIDE ? renderTopicList() : renderChatList();\n        }}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ChatOrUserPicker);\n","import React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiChat, ApiChatType } from '../../api/types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { API_CHAT_TYPES } from '../../config';\nimport { unique } from '../../util/iteratees';\nimport {\n  filterChatsByName,\n  filterUsersByName,\n  getCanPostInChat,\n  isDeletedUser,\n  sortChatIds,\n} from '../../global/helpers';\n\nimport useLang from '../../hooks/useLang';\n\nimport ChatOrUserPicker from './ChatOrUserPicker';\nimport { filterChatIdsByType } from '../../global/selectors';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  searchPlaceholder: string;\n  filter?: ApiChatType[];\n  loadMore?: NoneToVoidFunction;\n  onSelectRecipient: (peerId: string, threadId?: number) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  chatsById: Record<string, ApiChat>;\n  activeListIds?: string[];\n  archivedListIds?: string[];\n  pinnedIds?: string[];\n  contactIds?: string[];\n};\n\nconst RecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  chatsById,\n  activeListIds,\n  archivedListIds,\n  pinnedIds,\n  contactIds,\n  filter = API_CHAT_TYPES,\n  searchPlaceholder,\n  loadMore,\n  onSelectRecipient,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const lang = useLang();\n  const [search, setSearch] = useState('');\n  const ids = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    let priorityIds = pinnedIds || [];\n    if (currentUserId) {\n      priorityIds = unique([currentUserId, ...priorityIds]);\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const global = getGlobal();\n    const usersById = global.users.byId;\n\n    const chatIds = [\n      ...(activeListIds || []),\n      ...((search && archivedListIds) || []),\n    ].filter((id) => {\n      const chat = chatsById[id];\n      const user = usersById[id];\n      if (user && isDeletedUser(user)) return false;\n\n      return chat && getCanPostInChat(chat, MAIN_THREAD_ID);\n    });\n\n    const sorted = sortChatIds(unique([\n      ...filterChatsByName(lang, chatIds, chatsById, search, currentUserId),\n      ...(contactIds && filter.includes('users') ? filterUsersByName(contactIds, usersById, search) : []),\n    ]), chatsById, undefined, priorityIds);\n\n    return filterChatIdsByType(global, sorted, filter);\n  }, [pinnedIds, currentUserId, activeListIds, search, archivedListIds, lang, chatsById, contactIds, filter, isOpen]);\n\n  const renderingIds = useCurrentOrPrev(ids, true)!;\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={renderingIds}\n      chatsById={chatsById}\n      searchPlaceholder={searchPlaceholder}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMore}\n      onSelectChatOrUser={onSelectRecipient}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        byId: chatsById,\n        listIds,\n        orderedPinnedIds,\n      },\n      currentUserId,\n    } = global;\n\n    return {\n      chatsById,\n      activeListIds: listIds.active,\n      archivedListIds: listIds.archived,\n      pinnedIds: orderedPinnedIds.active,\n      contactIds: global.contactList?.userIds,\n      currentUserId,\n    };\n  },\n)(RecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectTabState } from '../../global/selectors';\nimport useLang from '../../hooks/useLang';\nimport useFlag from '../../hooks/useFlag';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  currentUserId?: string;\n  isManyMessages?: boolean;\n}\n\nconst ForwardRecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  isManyMessages,\n}) => {\n  const {\n    setForwardChatOrTopic,\n    exitForwardMode,\n    forwardToSavedMessages,\n    showNotification,\n  } = getActions();\n\n  const lang = useLang();\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: number) => {\n    if (recipientId === currentUserId) {\n      forwardToSavedMessages();\n      showNotification({\n        message: lang(isManyMessages\n          ? 'Conversation.ForwardTooltip.SavedMessages.Many'\n          : 'Conversation.ForwardTooltip.SavedMessages.One'),\n      });\n    } else {\n      setForwardChatOrTopic({ chatId: recipientId, topicId: threadId });\n    }\n  }, [currentUserId, forwardToSavedMessages, isManyMessages, lang, setForwardChatOrTopic, showNotification]);\n\n  const handleClose = useCallback(() => {\n    exitForwardMode();\n  }, [exitForwardMode]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('ForwardTo')}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    currentUserId: global.currentUserId,\n    isManyMessages: (selectTabState(global).forwardMessages.messageIds?.length || 0) > 1,\n  };\n})(ForwardRecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\n\nimport useLang from '../../hooks/useLang';\nimport useFlag from '../../hooks/useFlag';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedDraft?: TabState['requestedDraft'];\n};\n\nconst DraftRecipientPicker: FC<OwnProps> = ({\n  requestedDraft,\n}) => {\n  const isOpen = Boolean(requestedDraft && !requestedDraft.chatId);\n  const {\n    openChatWithDraft,\n    resetOpenChatWithDraft,\n  } = getActions();\n\n  const lang = useLang();\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: number) => {\n    openChatWithDraft({\n      chatId: recipientId,\n      threadId,\n      text: requestedDraft!.text,\n      files: requestedDraft!.files,\n    });\n  }, [openChatWithDraft, requestedDraft]);\n\n  const handleClose = useCallback(() => {\n    resetOpenChatWithDraft();\n  }, [resetOpenChatWithDraft]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('ForwardTo')}\n      filter={requestedDraft?.filter}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(DraftRecipientPicker);\n","import React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { TabState } from '../../global/types';\n\nimport useLang from '../../hooks/useLang';\nimport useFlag from '../../hooks/useFlag';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedAttachBotInChat?: TabState['requestedAttachBotInChat'];\n};\n\nconst AttachBotRecipientPicker: FC<OwnProps> = ({\n  requestedAttachBotInChat,\n}) => {\n  const { cancelAttachBotInChat, callAttachBot } = getActions();\n  const lang = useLang();\n\n  const isOpen = Boolean(requestedAttachBotInChat);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const { bot, filter, startParam } = requestedAttachBotInChat || {};\n\n  const handlePeerRecipient = useCallback((recipientId: string) => {\n    callAttachBot({ bot: bot!, chatId: recipientId, startParam });\n    cancelAttachBotInChat();\n  }, [bot, callAttachBot, cancelAttachBotInChat, startParam]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('Search')}\n      filter={filter}\n      onSelectRecipient={handlePeerRecipient}\n      onClose={cancelAttachBotInChat}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(AttachBotRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiContact, ApiError, ApiInviteInfo, ApiPhoto,\n} from '../../api/types';\nimport type { MessageList } from '../../global/types';\n\nimport { selectCurrentMessageList, selectTabState } from '../../global/selectors';\nimport getReadableErrorText from '../../util/getReadableErrorText';\nimport { pick } from '../../util/iteratees';\nimport renderText from '../common/helpers/renderText';\nimport useLang from '../../hooks/useLang';\nimport useFlag from '../../hooks/useFlag';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\nimport Avatar from '../common/Avatar';\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  dialogs: (ApiError | ApiInviteInfo | ApiContact)[];\n};\n\nconst Dialogs: FC<StateProps> = ({ dialogs, currentMessageList }) => {\n  const {\n    dismissDialog,\n    acceptInviteConfirmation,\n    sendMessage,\n    showNotification,\n  } = getActions();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const lang = useLang();\n\n  useEffect(() => {\n    if (dialogs.length > 0) {\n      openModal();\n    }\n  }, [dialogs, openModal]);\n\n  if (!dialogs.length) {\n    return undefined;\n  }\n\n  function renderInviteHeader(title: string, photo?: ApiPhoto) {\n    return (\n      <div className=\"modal-header\">\n        {photo && <Avatar size=\"small\" photo={photo} withVideo />}\n        <div className=\"modal-title\">\n          {renderText(title)}\n        </div>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={closeModal}>\n          <i className=\"icon icon-close\" />\n        </Button>\n      </div>\n    );\n  }\n\n  const renderInvite = (invite: ApiInviteInfo) => {\n    const {\n      hash, title, about, participantsCount, isChannel, photo, isRequestNeeded,\n    } = invite;\n\n    const handleJoinClick = () => {\n      acceptInviteConfirmation({\n        hash,\n      });\n      if (isRequestNeeded) {\n        showNotification({\n          message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n        });\n      }\n      closeModal();\n    };\n\n    const participantsText = isChannel\n      ? lang('Subscribers', participantsCount, 'i')\n      : lang('Members', participantsCount, 'i');\n\n    const joinText = isChannel ? lang('ChannelJoin') : lang('JoinGroup');\n    const requestToJoinText = isChannel\n      ? lang('MemberRequests.RequestToJoinChannel') : lang('MemberRequests.RequestToJoinGroup');\n\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        className=\"error\"\n        header={renderInviteHeader(title, photo)}\n        onCloseAnimationEnd={dismissDialog}\n      >\n        {participantsCount !== undefined && <p className=\"modal-help\">{participantsText}</p>}\n        {about && <p className=\"modal-about\">{renderText(about, ['br'])}</p>}\n        {isRequestNeeded && (\n          <p className=\"modal-help\">\n            {isChannel\n              ? lang('MemberRequests.RequestToJoinDescriptionChannel')\n              : lang('MemberRequests.RequestToJoinDescriptionGroup')}\n          </p>\n        )}\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            className=\"confirm-dialog-button\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleJoinClick}\n          >\n            {isRequestNeeded ? requestToJoinText : joinText}\n          </Button>\n          <Button isText className=\"confirm-dialog-button\" onClick={closeModal}>{lang('Cancel')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderContactRequest = (contactRequest: ApiContact) => {\n    const handleConfirm = () => {\n      if (!currentMessageList) {\n        return;\n      }\n\n      sendMessage({\n        contact: pick(contactRequest, ['firstName', 'lastName', 'phoneNumber']),\n        messageList: currentMessageList,\n      });\n      closeModal();\n    };\n\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        className=\"confirm\"\n        title={lang('ShareYouPhoneNumberTitle')}\n        onCloseAnimationEnd={dismissDialog}\n      >\n        {lang('AreYouSureShareMyContactInfoBot')}\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleConfirm}\n          >\n            {lang('OK')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={closeModal}>{lang('Cancel')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderError = (error: ApiError) => {\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={dismissDialog}\n        className=\"error\"\n        title={getErrorHeader(error)}\n      >\n        {error.hasErrorKey ? getReadableErrorText(error)\n          : renderText(error.message!, ['simple_markdown', 'emoji', 'br'])}\n        <div className=\"dialog-buttons mt-2\">\n          <Button isText onClick={closeModal}>{lang('OK')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderDialog = (dialog: ApiError | ApiInviteInfo | ApiContact) => {\n    if ('hash' in dialog) {\n      return renderInvite(dialog);\n    }\n\n    if ('phoneNumber' in dialog) {\n      return renderContactRequest(dialog);\n    }\n\n    return renderError(dialog);\n  };\n\n  return Boolean(dialogs.length) && renderDialog(dialogs[dialogs.length - 1]);\n};\n\nfunction getErrorHeader(error: ApiError) {\n  if (error.isSlowMode) {\n    return 'Slowmode enabled';\n  }\n\n  if (!error.hasErrorKey) {\n    return 'Telegram';\n  }\n\n  return 'Something went wrong';\n}\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      dialogs: selectTabState(global).dialogs,\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(Dialogs));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiNotification } from '../../api/types';\n\nimport { selectTabState } from '../../global/selectors';\nimport { pick } from '../../util/iteratees';\nimport renderText from '../common/helpers/renderText';\n\nimport Notification from '../ui/Notification';\n\ntype StateProps = {\n  notifications: ApiNotification[];\n};\n\nconst Notifications: FC<StateProps> = ({ notifications }) => {\n  const { dismissNotification } = getActions();\n\n  if (!notifications.length) {\n    return undefined;\n  }\n\n  return (\n    <div id=\"Notifications\">\n      {notifications.map(({\n        message, className, localId, action, actionText, title,\n      }) => (\n        <Notification\n          title={title ? renderText(title, ['simple_markdown', 'emoji', 'br', 'links']) : undefined}\n          action={action}\n          actionText={actionText}\n          className={className}\n          message={renderText(message, ['simple_markdown', 'emoji', 'br', 'links'])}\n          // eslint-disable-next-line react/jsx-no-bind\n          onDismiss={() => dismissNotification({ localId })}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(selectTabState(global), ['notifications']),\n)(Notifications));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { ensureProtocol } from '../../util/ensureProtocol';\nimport renderText from '../common/helpers/renderText';\nimport useLang from '../../hooks/useLang';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  url?: string;\n};\n\nconst SafeLinkModal: FC<OwnProps> = ({ url }) => {\n  const { toggleSafeLinkModal } = getActions();\n\n  const lang = useLang();\n\n  const handleOpen = useCallback(() => {\n    window.open(ensureProtocol(url), '_blank', 'noopener');\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal, url]);\n\n  const handleDismiss = useCallback(() => {\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal]);\n\n  const renderingUrl = useCurrentOrPrev(url);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      textParts={renderText(lang('OpenUrlAlert2', renderingUrl), ['links'])}\n      confirmLabel={lang('OpenUrlTitle')}\n      confirmHandler={handleOpen}\n    />\n  );\n};\n\nexport default memo(SafeLinkModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"checkbox\":\"XxZ7KIBUQzsSYf8KZiIc\"};","import React, {\n  memo, useCallback, useEffect, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiUser } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { ensureProtocol } from '../../util/ensureProtocol';\nimport renderText from '../common/helpers/renderText';\nimport { getUserFullName } from '../../global/helpers';\n\nimport useLang from '../../hooks/useLang';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Checkbox from '../ui/Checkbox';\n\nimport styles from './UrlAuthModal.module.scss';\n\nexport type OwnProps = {\n  urlAuth?: TabState['urlAuth'];\n  currentUser?: ApiUser;\n};\n\nconst UrlAuthModal: FC<OwnProps> = ({\n  urlAuth, currentUser,\n}) => {\n  const { closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth } = getActions();\n  const [isLoginChecked, setLoginChecked] = useState(true);\n  const [isWriteAccessChecked, setWriteAccessChecked] = useState(true);\n  const currentAuth = useCurrentOrPrev(urlAuth, false);\n  const { domain, botId, shouldRequestWriteAccess } = currentAuth?.request || {};\n  const bot = botId ? getGlobal().users.byId[botId] : undefined;\n\n  const lang = useLang();\n\n  const handleOpen = useCallback(() => {\n    if (urlAuth?.url && isLoginChecked) {\n      const acceptAction = urlAuth.button ? acceptBotUrlAuth : acceptLinkUrlAuth;\n      acceptAction({\n        isWriteAllowed: isWriteAccessChecked,\n      });\n    } else {\n      window.open(ensureProtocol(currentAuth?.url), '_blank', 'noopener');\n    }\n    closeUrlAuthModal();\n  }, [\n    urlAuth, isLoginChecked, closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth, isWriteAccessChecked, currentAuth,\n  ]);\n\n  const handleDismiss = useCallback(() => {\n    closeUrlAuthModal();\n  }, [closeUrlAuthModal]);\n\n  const handleLoginChecked = useCallback((value: boolean) => {\n    setLoginChecked(value);\n    setWriteAccessChecked(value);\n  }, [setLoginChecked]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (domain) {\n      setLoginChecked(true);\n      setWriteAccessChecked(Boolean(shouldRequestWriteAccess));\n    }\n  }, [shouldRequestWriteAccess, domain]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(urlAuth?.url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      confirmLabel={lang('OpenUrlTitle')}\n      confirmHandler={handleOpen}\n    >\n      {renderText(lang('OpenUrlAlert2', currentAuth?.url), ['links'])}\n      {domain && (\n        <Checkbox\n          checked={isLoginChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkLogin', [domain, getUserFullName(currentUser)]),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={handleLoginChecked}\n          className={styles.checkbox}\n        />\n      )}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          checked={isWriteAccessChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkAllowMessages', getUserFullName(bot)),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={setWriteAccessChecked}\n          disabled={!isLoginChecked}\n          className={styles.checkbox}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(UrlAuthModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useState, useEffect, useMemo, useCallback,\n} from '../../lib/teact/teact';\n\nimport { MAX_INT_32 } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { formatTime, formatDateToString, getDayStart } from '../../util/dateFormat';\nimport type { LangFn } from '../../hooks/useLang';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport useFlag from '../../hooks/useFlag';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\n\nimport './CalendarModal.scss';\n\nconst MAX_SAFE_DATE = MAX_INT_32 * 1000;\nconst MIN_SAFE_DATE = 0;\n\nexport type OwnProps = {\n  selectedAt?: number;\n  minAt?: number;\n  maxAt?: number;\n  isFutureMode?: boolean;\n  isPastMode?: boolean;\n  isOpen: boolean;\n  withTimePicker?: boolean;\n  submitButtonLabel?: string;\n  secondButtonLabel?: string;\n  onClose: () => void;\n  onSubmit: (date: Date) => void;\n  onSecondButtonClick?: NoneToVoidFunction;\n};\n\nconst WEEKDAY_LETTERS = [\n  'lng_weekday1',\n  'lng_weekday2',\n  'lng_weekday3',\n  'lng_weekday4',\n  'lng_weekday5',\n  'lng_weekday6',\n  'lng_weekday7',\n];\n\nconst CalendarModal: FC<OwnProps> = ({\n  selectedAt,\n  minAt,\n  maxAt,\n  isFutureMode,\n  isPastMode,\n  isOpen,\n  withTimePicker,\n  submitButtonLabel,\n  secondButtonLabel,\n  onClose,\n  onSubmit,\n  onSecondButtonClick,\n}) => {\n  const lang = useLang();\n  const now = new Date();\n\n  const minDate = useMemo(() => {\n    if (isFutureMode && !minAt) return new Date();\n    return new Date(Math.max(minAt || MIN_SAFE_DATE, MIN_SAFE_DATE));\n  }, [isFutureMode, minAt]);\n  const maxDate = useMemo(() => {\n    if (isPastMode && !maxAt) return new Date();\n    return new Date(Math.min(maxAt || MAX_SAFE_DATE, MAX_SAFE_DATE));\n  }, [isPastMode, maxAt]);\n\n  const passedSelectedDate = useMemo(() => (selectedAt ? new Date(selectedAt) : new Date()), [selectedAt]);\n  const prevIsOpen = usePrevious(isOpen);\n  const [isTimeInputFocused, markTimeInputAsFocused, unmarkTimeInputAsFocused] = useFlag(false);\n\n  const [selectedDate, setSelectedDate] = useState<Date>(passedSelectedDate);\n  const [currentMonthAndYear, setCurrentMonthAndYear] = useState<Date>(\n    new Date(selectedDate.getFullYear(), selectedDate.getMonth(), 1),\n  );\n  const [selectedHours, setSelectedHours] = useState<string>(\n    formatInputTime(passedSelectedDate.getHours()),\n  );\n  const [selectedMinutes, setSelectedMinutes] = useState<string>(\n    formatInputTime(passedSelectedDate.getMinutes()),\n  );\n\n  const selectedDay = formatDay(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate());\n  const currentYear = currentMonthAndYear.getFullYear();\n  const currentMonth = currentMonthAndYear.getMonth();\n\n  useEffect(() => {\n    if (!prevIsOpen && isOpen) {\n      setSelectedDate(passedSelectedDate);\n      setCurrentMonthAndYear(new Date(passedSelectedDate.getFullYear(), passedSelectedDate.getMonth(), 1));\n      if (withTimePicker) {\n        setSelectedHours(formatInputTime(passedSelectedDate.getHours()));\n        setSelectedMinutes(formatInputTime(passedSelectedDate.getMinutes()));\n      }\n    }\n  }, [passedSelectedDate, isOpen, prevIsOpen, withTimePicker]);\n\n  useEffect(() => {\n    if (isFutureMode && !isTimeInputFocused && selectedDate.getTime() < minDate.getTime()) {\n      setSelectedDate(minDate);\n      setSelectedHours(formatInputTime(minDate.getHours()));\n      setSelectedMinutes(formatInputTime(minDate.getMinutes()));\n    }\n  }, [isFutureMode, isTimeInputFocused, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (isPastMode && !isTimeInputFocused && selectedDate.getTime() > maxDate.getTime()) {\n      setSelectedDate(maxDate);\n      setSelectedHours(formatInputTime(maxDate.getHours()));\n      setSelectedMinutes(formatInputTime(maxDate.getMinutes()));\n    }\n  }, [isFutureMode, isPastMode, isTimeInputFocused, maxDate, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (selectedAt) {\n      const newSelectedDate = new Date(selectedAt);\n      setSelectedDate(newSelectedDate);\n      setSelectedHours(formatInputTime(newSelectedDate.getHours()));\n      setSelectedMinutes(formatInputTime(newSelectedDate.getMinutes()));\n    }\n  }, [selectedAt]);\n\n  const shouldDisableNextMonth = (isPastMode && currentYear >= now.getFullYear() && currentMonth >= now.getMonth())\n    || (maxDate && currentYear >= maxDate.getFullYear() && currentMonth >= maxDate.getMonth());\n  const shouldDisablePrevMonth = isFutureMode && currentYear <= now.getFullYear() && currentMonth <= now.getMonth();\n\n  const { prevMonthGrid, currentMonthGrid, nextMonthGrid } = useMemo(() => (\n    buildCalendarGrid(currentYear, currentMonth)\n  ), [currentMonth, currentYear]);\n\n  const submitLabel = useMemo(() => {\n    return submitButtonLabel || formatSubmitLabel(lang, selectedDate);\n  }, [lang, selectedDate, submitButtonLabel]);\n\n  function handlePrevMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() - 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleNextMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() + 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleDateSelect(date: number) {\n    setSelectedDate((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setDate(date);\n      dateCopy.setMonth(currentMonth);\n      dateCopy.setFullYear(currentYear);\n\n      return dateCopy;\n    });\n  }\n\n  const handleSubmit = useCallback(() => {\n    onSubmit(selectedDate);\n  }, [onSubmit, selectedDate]);\n\n  const handleChangeHours = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedHours('');\n      e.target.value = '';\n      return;\n    }\n\n    const hours = Math.max(0, Math.min(Number(value), 23));\n\n    const date = new Date(selectedDate.getTime());\n    date.setHours(hours);\n    setSelectedDate(date);\n\n    const hoursStr = formatInputTime(hours);\n    setSelectedHours(hoursStr);\n    e.target.value = hoursStr;\n  }, [selectedDate]);\n\n  const handleChangeMinutes = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedMinutes('');\n      e.target.value = '';\n      return;\n    }\n\n    const minutes = Math.max(0, Math.min(Number(value), 59));\n\n    const date = new Date(selectedDate.getTime());\n    date.setMinutes(minutes);\n    setSelectedDate(date);\n\n    const minutesStr = formatInputTime(minutes);\n    setSelectedMinutes(minutesStr);\n    e.target.value = minutesStr;\n  }, [selectedDate]);\n\n  function renderTimePicker() {\n    return (\n      <div className=\"timepicker\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedHours}\n          onChange={handleChangeHours}\n          onFocus={markTimeInputAsFocused}\n          onBlur={unmarkTimeInputAsFocused}\n        />\n        :\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedMinutes}\n          onChange={handleChangeMinutes}\n          onFocus={markTimeInputAsFocused}\n          onBlur={unmarkTimeInputAsFocused}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"CalendarModal\"\n      onEnter={handleSubmit}\n    >\n      <div className=\"container\">\n        <div className=\"month-selector\">\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={onClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n\n          <h4>\n            {lang(`lng_month${currentMonth + 1}`)}\n            {' '}\n            {currentYear}\n          </h4>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisablePrevMonth}\n            onClick={!shouldDisablePrevMonth ? handlePrevMonth : undefined}\n          >\n            <i className=\"icon icon-previous\" />\n          </Button>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisableNextMonth}\n            onClick={!shouldDisableNextMonth ? handleNextMonth : undefined}\n          >\n            <i className=\"icon icon-next\" />\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"calendar-wrapper\">\n        <div className=\"calendar-grid\">\n          {WEEKDAY_LETTERS.map((day) => (\n            <div className=\"day-button faded weekday\">\n              <span>{lang(day)}</span>\n            </div>\n          ))}\n          {prevMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n          {currentMonthGrid.map((gridDate) => (\n            <div\n              role=\"button\"\n              tabIndex={0}\n              onClick={() => handleDateSelect(gridDate)}\n              className={buildClassName(\n                'day-button',\n                'div-button',\n                isDisabledDay(\n                  currentYear, currentMonth, gridDate, minDate, maxDate,\n                )\n                  ? 'disabled'\n                  : `${gridDate ? 'clickable' : ''}`,\n                selectedDay === formatDay(currentYear, currentMonth, gridDate) && 'selected',\n              )}\n            >\n              {Boolean(gridDate) && (\n                <span>{gridDate}</span>\n              )}\n            </div>\n          ))}\n          {nextMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n        </div>\n      </div>\n\n      {withTimePicker && renderTimePicker()}\n\n      <div className=\"footer\">\n        <Button onClick={handleSubmit}>\n          {submitLabel}\n        </Button>\n        {secondButtonLabel && (\n          <Button onClick={onSecondButtonClick} isText>\n            {secondButtonLabel}\n          </Button>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nfunction buildCalendarGrid(year: number, month: number) {\n  const prevMonthGrid: number[] = [];\n  const currentMonthGrid: number[] = [];\n  const nextMonthGrid: number[] = [];\n\n  const date = new Date();\n  date.setDate(1);\n  date.setMonth(month);\n  date.setFullYear(year);\n  const firstDay = date.getDay() || 7;\n  const totalDaysInPrevMonth = new Date(year, month, 0).getDate();\n\n  for (let i = 1; i < firstDay; i++) {\n    prevMonthGrid.push(totalDaysInPrevMonth - firstDay + i + 1);\n  }\n\n  while (date.getMonth() === month) {\n    const gridDate = date.getDate();\n    currentMonthGrid.push(gridDate);\n    date.setDate(gridDate + 1);\n  }\n\n  const lastRowDaysCount = (currentMonthGrid.length + prevMonthGrid.length) % 7;\n  if (lastRowDaysCount > 0) {\n    for (let i = 1; i <= 7 - lastRowDaysCount; i++) {\n      nextMonthGrid.push(i);\n    }\n  }\n\n  return { prevMonthGrid, currentMonthGrid, nextMonthGrid };\n}\n\nfunction isDisabledDay(year: number, month: number, day: number, minDate?: Date, maxDate?: Date) {\n  const selectedDay = new Date(year, month, day);\n  const fixedMinDate = minDate && getDayStart(minDate);\n  const fixedMaxDate = maxDate && getDayStart(maxDate);\n\n  if (fixedMaxDate && selectedDay > fixedMaxDate) {\n    return true;\n  } else if (fixedMinDate && selectedDay < fixedMinDate) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction formatInputTime(value: string | number) {\n  return String(value).padStart(2, '0');\n}\n\nfunction formatDay(year: number, month: number, day: number) {\n  return `${year}-${month + 1}-${day}`;\n}\n\nfunction formatSubmitLabel(lang: LangFn, date: Date) {\n  const day = formatDateToString(date, lang.code);\n  const today = formatDateToString(new Date(), lang.code);\n\n  if (day === today) {\n    return lang('Conversation.ScheduleMessage.SendToday', formatTime(lang, date));\n  }\n\n  return lang('Conversation.ScheduleMessage.SendOn', [day, formatTime(lang, date)]);\n}\n\nexport default memo(CalendarModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectTabState } from '../../global/selectors';\nimport useLang from '../../hooks/useLang';\n\nimport CalendarModal from '../common/CalendarModal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ntype StateProps = {\n  selectedAt?: number;\n};\n\nconst HistoryCalendar: FC<OwnProps & StateProps> = ({\n  isOpen, selectedAt,\n}) => {\n  const { searchMessagesByDate, closeHistoryCalendar } = getActions();\n\n  const handleJumpToDate = useCallback((date: Date) => {\n    searchMessagesByDate({ timestamp: date.valueOf() / 1000 });\n    closeHistoryCalendar();\n  }, [closeHistoryCalendar, searchMessagesByDate]);\n\n  const lang = useLang();\n\n  return (\n    <CalendarModal\n      isOpen={isOpen}\n      selectedAt={selectedAt}\n      isPastMode\n      submitButtonLabel={lang('JumpToDate')}\n      onClose={closeHistoryCalendar}\n      onSubmit={handleJumpToDate}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return { selectedAt: selectTabState(global).historyCalendarSelectedAt };\n  },\n)(HistoryCalendar));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiCountryCode, ApiUser, ApiUserStatus } from '../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { getUserStatus } from '../../global/helpers';\nimport { selectUser, selectUserStatus } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport useLang from '../../hooks/useLang';\nimport useFlag from '../../hooks/useFlag';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\n\nimport Modal from '../ui/Modal';\nimport Avatar from '../common/Avatar';\nimport InputText from '../ui/InputText';\nimport Checkbox from '../ui/Checkbox';\nimport Button from '../ui/Button';\n\nimport './NewContactModal.scss';\n\nconst ANIMATION_DURATION = 200;\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  isByPhoneNumber?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst NewContactModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  userId,\n  isByPhoneNumber,\n  user,\n  userStatus,\n  phoneCodeList,\n}) => {\n  const { updateContact, importContact, closeNewContactDialog } = getActions();\n\n  const lang = useLang();\n  const renderingUser = useCurrentOrPrev(user);\n  const renderingIsByPhoneNumber = useCurrentOrPrev(isByPhoneNumber);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  const [firstName, setFirstName] = useState<string>(renderingUser?.firstName ?? '');\n  const [lastName, setLastName] = useState<string>(renderingUser?.lastName ?? '');\n  const [phone, setPhone] = useState<string>(renderingUser?.phoneNumber ?? '');\n  const [shouldSharePhoneNumber, setShouldSharePhoneNumber] = useState<boolean>(true);\n  const canBeSubmitted = Boolean(firstName && (!isByPhoneNumber || phone));\n\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n      setFirstName(renderingUser?.firstName ?? '');\n      setLastName(renderingUser?.lastName ?? '');\n      setPhone(renderingUser?.phoneNumber ?? '');\n      setShouldSharePhoneNumber(true);\n    }\n  }, [isOpen, markIsShown, renderingUser?.firstName, renderingUser?.lastName, renderingUser?.phoneNumber]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && isShown) {\n      setTimeout(() => { inputRef.current?.focus(); }, ANIMATION_DURATION);\n    }\n  }, [isShown]);\n\n  const handleFirstNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n  }, []);\n\n  const handlePhoneChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setPhone(formatPhoneNumberWithCode(phoneCodeList, e.target.value));\n  }, [phoneCodeList]);\n\n  const handleLastNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    closeNewContactDialog();\n    setFirstName('');\n    setLastName('');\n    setPhone('');\n  }, [closeNewContactDialog]);\n\n  const handleSubmit = useCallback(() => {\n    if (isByPhoneNumber || !userId) {\n      importContact({\n        firstName,\n        lastName,\n        phoneNumber: phone,\n      });\n    } else {\n      updateContact({\n        userId,\n        firstName,\n        lastName,\n        shouldSharePhoneNumber,\n      });\n    }\n  }, [firstName, importContact, isByPhoneNumber, lastName, phone, shouldSharePhoneNumber, updateContact, userId]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  function renderAddContact() {\n    return (\n      <>\n        <div className=\"NewContactModal__profile\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Avatar\n            size=\"jumbo\"\n            user={renderingUser}\n            text={`${firstName} ${lastName}`}\n          />\n          <div className=\"NewContactModal__profile-info\">\n            <p className=\"NewContactModal__phone-number\">\n              {renderingUser?.phoneNumber\n                ? formatPhoneNumberWithCode(phoneCodeList, renderingUser.phoneNumber)\n                : lang('MobileHidden')}\n            </p>\n            <span className=\"NewContactModal__user-status\" dir=\"auto\">\n              {getUserStatus(lang, renderingUser!, userStatus)}\n            </span>\n          </div>\n        </div>\n        <InputText\n          ref={inputRef}\n          value={firstName}\n          label={lang('FirstName')}\n          tabIndex={0}\n          onChange={handleFirstNameChange}\n        />\n        <InputText\n          value={lastName}\n          label={lang('LastName')}\n          tabIndex={0}\n          onChange={handleLastNameChange}\n        />\n        <p className=\"NewContactModal__help-text\">\n          {renderText(\n            lang('NewContact.Phone.Hidden.Text', renderingUser?.firstName || ''),\n            ['emoji', 'simple_markdown'],\n          )}\n        </p>\n        <Checkbox\n          checked={shouldSharePhoneNumber}\n          tabIndex={0}\n          onCheck={setShouldSharePhoneNumber}\n          label={lang('lng_new_contact_share')}\n        />\n        <p className=\"NewContactModal__help-text\">\n          {renderText(lang('AddContact.SharedContactExceptionInfo', renderingUser?.firstName))}\n        </p>\n      </>\n    );\n  }\n\n  function renderCreateContact() {\n    return (\n      <div className=\"NewContactModal__new-contact\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar size=\"jumbo\" text={`${firstName} ${lastName}`} />\n        <div className=\"NewContactModal__new-contact-fieldset\">\n          <InputText\n            ref={inputRef}\n            value={phone}\n            inputMode=\"tel\"\n            label={lang('lng_contact_phone')}\n            tabIndex={0}\n            onChange={handlePhoneChange}\n          />\n          <InputText\n            value={firstName}\n            label={lang('FirstName')}\n            tabIndex={0}\n            onChange={handleFirstNameChange}\n          />\n          <InputText\n            value={lastName}\n            label={lang('LastName')}\n            tabIndex={0}\n            onChange={handleLastNameChange}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className=\"NewContactModal\"\n      title={lang('NewContact')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    >\n      {renderingUser && renderAddContact()}\n      {renderingIsByPhoneNumber && renderCreateContact()}\n      <div className=\"dialog-buttons\">\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          onClick={handleClose}\n        >\n          {lang('Cancel')}\n        </Button>\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          disabled={!canBeSubmitted}\n          onClick={handleSubmit}\n        >\n          {lang('Done')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = userId ? selectUser(global, userId) : undefined;\n    return {\n      user,\n      userStatus: userId ? selectUserStatus(global, userId) : undefined,\n      phoneCodeList: global.countryList.phoneCodes,\n    };\n  },\n)(NewContactModal));\n","import { useCallback, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../lib/teact/teactn';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport useWindowSize from '../../../hooks/useWindowSize';\n\nexport type PopupOptions = {\n  title: string;\n  message: string;\n  buttons: {\n    id: string;\n    type: 'default' | 'ok' | 'close' | 'cancel' | 'destructive';\n    text: string;\n  }[];\n};\n\nexport type WebAppInboundEvent = {\n  eventType: 'web_app_data_send';\n  eventData: {\n    data: string;\n  };\n} | {\n  eventType: 'web_app_setup_main_button';\n  eventData: {\n    is_visible: boolean;\n    is_active: boolean;\n    text: string;\n    color: string;\n    text_color: string;\n    is_progress_visible: boolean;\n  };\n} | {\n  eventType: 'web_app_setup_back_button';\n  eventData: {\n    is_visible: boolean;\n  };\n} | {\n  eventType: 'web_app_open_link';\n  eventData: {\n    url: string;\n    try_instant_view?: boolean;\n  };\n} | {\n  eventType: 'web_app_open_tg_link';\n  eventData: {\n    path_full: string;\n  };\n} | {\n  eventType: 'web_app_open_invoice';\n  eventData: {\n    slug: string;\n  };\n} | {\n  eventType: 'web_app_trigger_haptic_feedback';\n  eventData: {\n    type: 'impact' | 'notification' | 'selection_change';\n    impact_style?: 'light' | 'medium' | 'heavy';\n    notification_type?: 'error' | 'success' | 'warning';\n  };\n} | {\n  eventType: 'web_app_set_background_color';\n  eventData: {\n    color: string;\n  };\n} | {\n  eventType: 'web_app_set_header_color';\n  eventData: {\n    color_key: 'bg_color' | 'secondary_bg_color';\n  };\n} | {\n  eventType: 'web_app_open_popup';\n  eventData: PopupOptions;\n} | {\n  eventType: 'web_app_setup_closing_behavior';\n  eventData: {\n    need_confirmation: boolean;\n  };\n} | {\n  eventType: 'web_app_open_scan_qr_popup';\n  eventData: {\n    text?: string;\n  };\n} | {\n  eventType: 'web_app_read_text_from_clipboard';\n  eventData: {\n    req_id: string;\n  };\n} | {\n  eventType: 'web_app_switch_inline_query';\n  eventData: {\n    query: string;\n    chat_types: ('users' | 'bots' | 'groups' | 'channels')[];\n  };\n} | {\n  eventType: 'web_app_request_viewport' | 'web_app_request_theme' | 'web_app_ready' | 'web_app_expand'\n  | 'web_app_request_phone' | 'web_app_close' | 'iframe_ready' | 'web_app_close_scan_qr_popup';\n  eventData: null;\n};\n\ntype WebAppOutboundEvent = {\n  eventType: 'viewport_changed';\n  eventData: {\n    height: number;\n    width?: number;\n    is_expanded?: boolean;\n    is_state_stable?: boolean;\n  };\n} | {\n  eventType: 'theme_changed';\n  eventData: {\n    theme_params: {\n      bg_color: string;\n      text_color: string;\n      hint_color: string;\n      link_color: string;\n      button_color: string;\n      button_text_color: string;\n      secondary_bg_color: string;\n    };\n  };\n} | {\n  eventType: 'set_custom_style';\n  eventData: string;\n} | {\n  eventType: 'invoice_closed';\n  eventData: {\n    slug: string;\n    status: 'paid' | 'cancelled' | 'pending' | 'failed';\n  };\n} | {\n  eventType: 'phone_requested';\n  eventData: {\n    phone_number: string;\n  };\n} | {\n  eventType: 'popup_closed';\n  eventData: {\n    button_id?: string;\n  };\n} | {\n  eventType: 'qr_text_received';\n  eventData: {\n    data: string;\n  };\n} | {\n  eventType: 'clipboard_text_received';\n  eventData: {\n    req_id: string;\n    data: string | null;\n  };\n} | {\n  eventType: 'main_button_pressed' | 'back_button_pressed' | 'settings_button_pressed' | 'scan_qr_popup_closed';\n};\n\nconst SCROLLBAR_STYLE = `* {\n  scrollbar-width: thin;\n  scrollbar-color: %SCROLLBAR_COLOR% transparent;\n}\n\n*::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n  background-color: transparent;\n}\n\n*::-webkit-scrollbar-thumb {\n  border-radius: 6px;\n  background-color: %SCROLLBAR_COLOR%;\n}\n\n*::-webkit-scrollbar-corner {\n  background-color: transparent;\n}`;\n\nconst useWebAppFrame = (\n  ref: React.RefObject<HTMLIFrameElement>,\n  isOpen: boolean,\n  isSimpleView: boolean,\n  onEvent: (event: WebAppInboundEvent) => void,\n  onLoad?: () => void,\n) => {\n  const {\n    showNotification,\n  } = getActions();\n\n  const ignoreEventsRef = useRef<boolean>(false);\n  const lastFrameSizeRef = useRef<{ width: number; height: number; isResizing?: boolean }>();\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isOpen) return undefined;\n\n    const handleLoad = () => {\n      onLoad?.();\n    };\n\n    const frame = ref.current;\n    frame.addEventListener('load', handleLoad);\n    return () => {\n      frame.removeEventListener('load', handleLoad);\n    };\n  }, [onLoad, ref, isOpen]);\n\n  const reloadFrame = useCallback((url: string) => {\n    if (!ref.current) return;\n    const frame = ref.current;\n    frame.src = 'about:blank';\n    frame.addEventListener('load', () => {\n      frame.src = url;\n    }, { once: true });\n  }, [ref]);\n\n  const sendEvent = useCallback((event: WebAppOutboundEvent) => {\n    if (!ref.current?.contentWindow) return;\n    ref.current.contentWindow.postMessage(JSON.stringify(event), '*');\n  }, [ref]);\n\n  const sendViewport = useCallback((isNonStable?: boolean) => {\n    if (!ref.current) {\n      return;\n    }\n    const { width, height } = ref.current.getBoundingClientRect();\n    sendEvent({\n      eventType: 'viewport_changed',\n      eventData: {\n        width,\n        height,\n        is_expanded: true,\n        is_state_stable: !isNonStable,\n      },\n    });\n  }, [sendEvent, ref]);\n\n  const sendTheme = useCallback(() => {\n    sendEvent({\n      eventType: 'theme_changed',\n      eventData: {\n        theme_params: extractCurrentThemeParams(),\n      },\n    });\n  }, [sendEvent]);\n\n  const sendCustomStyle = useCallback((style: string) => {\n    sendEvent({\n      eventType: 'set_custom_style',\n      eventData: style,\n    });\n  }, [sendEvent]);\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    if (ignoreEventsRef.current) {\n      return;\n    }\n\n    try {\n      const data = JSON.parse(event.data) as WebAppInboundEvent;\n      // Handle some app requests here to simplify hook usage\n      if (data.eventType === 'web_app_ready') {\n        onLoad?.();\n      }\n\n      if (data.eventType === 'web_app_request_viewport') {\n        sendViewport(windowSize.isResizing);\n      }\n\n      if (data.eventType === 'web_app_request_theme') {\n        sendTheme();\n      }\n\n      if (data.eventType === 'iframe_ready') {\n        const scrollbarColor = getComputedStyle(document.body).getPropertyValue('--color-scrollbar');\n        sendCustomStyle(SCROLLBAR_STYLE.replace(/%SCROLLBAR_COLOR%/g, scrollbarColor));\n      }\n\n      if (data.eventType === 'web_app_data_send') {\n        if (!isSimpleView) return; // Allowed only in simple view\n        ignoreEventsRef.current = true;\n      }\n\n      if (data.eventType === 'web_app_read_text_from_clipboard') {\n        sendEvent({\n          eventType: 'clipboard_text_received',\n          eventData: {\n            req_id: data.eventData.req_id,\n            // eslint-disable-next-line no-null/no-null\n            data: null,\n          },\n        });\n\n        showNotification({\n          message: 'Clipboard access is not supported in this client yet',\n        });\n      }\n      onEvent(data);\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [isSimpleView, sendEvent, onEvent, sendCustomStyle, sendTheme, sendViewport, onLoad, windowSize.isResizing]);\n\n  useEffect(() => {\n    const { width, height, isResizing } = windowSize;\n    if (lastFrameSizeRef.current && lastFrameSizeRef.current.width === width\n      && lastFrameSizeRef.current.height === height && !lastFrameSizeRef.current.isResizing) return;\n    lastFrameSizeRef.current = { width, height, isResizing };\n    sendViewport(isResizing);\n  }, [sendViewport, windowSize]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage]);\n\n  useEffect(() => {\n    if (isOpen && ref.current?.contentWindow) {\n      sendViewport();\n      ignoreEventsRef.current = false;\n    } else {\n      lastFrameSizeRef.current = undefined;\n    }\n  }, [isOpen, sendViewport, ref]);\n\n  return {\n    sendEvent, reloadFrame, sendViewport, sendTheme,\n  };\n};\n\nexport default useWebAppFrame;\n","import React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiAttachBot, ApiChat, ApiUser } from '../../api/types';\nimport type { TabState } from '../../global/types';\nimport type { ThemeKey } from '../../types';\nimport type { PopupOptions, WebAppInboundEvent } from './hooks/useWebAppFrame';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport {\n  selectCurrentChat, selectTabState, selectTheme, selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { extractCurrentThemeParams, validateHexColor } from '../../util/themeStyle';\nimport { convertToApiChatType } from '../../global/helpers';\n\nimport useInterval from '../../hooks/useInterval';\nimport useLang from '../../hooks/useLang';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useWebAppFrame from './hooks/useWebAppFrame';\nimport usePrevious from '../../hooks/usePrevious';\nimport useFlag from '../../hooks/useFlag';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Spinner from '../ui/Spinner';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nimport styles from './WebAppModal.module.scss';\n\ntype WebAppButton = {\n  isVisible: boolean;\n  isActive: boolean;\n  text: string;\n  color: string;\n  textColor: string;\n  isProgressVisible: boolean;\n};\n\nexport type OwnProps = {\n  webApp?: TabState['webApp'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  bot?: ApiUser;\n  attachBot?: ApiAttachBot;\n  theme?: ThemeKey;\n  isPaymentModalOpen?: boolean;\n  paymentStatus?: TabState['payment']['status'];\n};\n\nconst NBSP = '\\u00A0';\n\nconst MAIN_BUTTON_ANIMATION_TIME = 250;\nconst PROLONG_INTERVAL = 45000; // 45s\nconst ANIMATION_WAIT = 400;\nconst SANDBOX_ATTRIBUTES = [\n  'allow-scripts',\n  'allow-same-origin',\n  'allow-popups',\n  'allow-forms',\n  'allow-modals',\n  'allow-storage-access-by-user-activation',\n].join(' ');\n\nconst DEFAULT_BUTTON_TEXT: Record<string, string> = {\n  ok: 'OK',\n  cancel: 'Cancel',\n  close: 'Close',\n};\n\nconst WebAppModal: FC<OwnProps & StateProps> = ({\n  webApp,\n  chat,\n  bot,\n  attachBot,\n  theme,\n  isPaymentModalOpen,\n  paymentStatus,\n}) => {\n  const {\n    closeWebApp,\n    sendWebViewData,\n    prolongWebView,\n    toggleAttachBot,\n    openTelegramLink,\n    openChat,\n    openInvoice,\n    setWebAppPaymentSlug,\n    showNotification,\n    switchBotInline,\n  } = getActions();\n  const [mainButton, setMainButton] = useState<WebAppButton | undefined>();\n  const [isBackButtonVisible, setIsBackButtonVisible] = useState(false);\n  const [backgroundColor, setBackgroundColor] = useState<string>();\n  const [headerColor, setHeaderColor] = useState<string>();\n  const [confirmClose, setConfirmClose] = useState(false);\n  const [isCloseModalOpen, openCloseModal, closeModal] = useFlag(false);\n  const [isLoaded, markLoaded, markUnloaded] = useFlag(false);\n  const [popupParams, setPopupParams] = useState<PopupOptions | undefined>();\n  const { isMobile } = useAppLayout();\n  const prevPopupParams = usePrevious(popupParams);\n  const renderingPopupParams = popupParams || prevPopupParams;\n\n  useEffect(() => {\n    const themeParams = extractCurrentThemeParams();\n    setBackgroundColor(themeParams.bg_color);\n    setHeaderColor(themeParams.bg_color);\n  }, []);\n\n  // eslint-disable-next-line no-null/no-null\n  const frameRef = useRef<HTMLIFrameElement>(null);\n\n  const lang = useLang();\n  const {\n    url, buttonText, queryId, replyToMessageId, threadId,\n  } = webApp || {};\n  const isOpen = Boolean(url);\n  const isSimple = Boolean(buttonText);\n\n  const handleEvent = useCallback((event: WebAppInboundEvent) => {\n    const { eventType, eventData } = event;\n    if (eventType === 'web_app_close') {\n      closeWebApp();\n    }\n\n    if (eventType === 'web_app_open_invoice') {\n      setWebAppPaymentSlug({\n        slug: eventData.slug,\n      });\n      openInvoice({\n        slug: eventData.slug,\n      });\n    }\n\n    if (eventType === 'web_app_open_tg_link' && !isPaymentModalOpen) {\n      const linkUrl = TME_LINK_PREFIX + eventData.path_full;\n      openTelegramLink({ url: linkUrl });\n      closeWebApp();\n    }\n\n    if (eventType === 'web_app_open_link') {\n      const linkUrl = eventData.url;\n      window.open(linkUrl, '_blank', 'noreferrer');\n    }\n\n    if (eventType === 'web_app_setup_back_button') {\n      setIsBackButtonVisible(eventData.is_visible);\n    }\n\n    if (eventType === 'web_app_set_background_color') {\n      const themeParams = extractCurrentThemeParams();\n      const color = validateHexColor(eventData.color) ? eventData.color : themeParams.bg_color;\n      setBackgroundColor(color);\n    }\n\n    if (eventType === 'web_app_set_header_color') {\n      const themeParams = extractCurrentThemeParams();\n      const key = eventData.color_key;\n      const newColor = themeParams[key];\n      const color = validateHexColor(newColor) ? newColor : themeParams.bg_color;\n      setHeaderColor(color);\n    }\n\n    if (eventType === 'web_app_data_send') {\n      closeWebApp();\n      sendWebViewData({\n        bot: bot!,\n        buttonText: buttonText!,\n        data: eventData.data,\n      });\n    }\n\n    if (eventType === 'web_app_setup_main_button') {\n      const themeParams = extractCurrentThemeParams();\n      const color = validateHexColor(eventData.color) ? eventData.color : themeParams.button_color;\n      const textColor = validateHexColor(eventData.text_color) ? eventData.text_color : themeParams.text_color;\n      setMainButton({\n        isVisible: eventData.is_visible && Boolean(eventData.text?.trim().length),\n        isActive: eventData.is_active,\n        text: eventData.text || '',\n        color,\n        textColor,\n        isProgressVisible: eventData.is_progress_visible,\n      });\n    }\n\n    if (eventType === 'web_app_setup_closing_behavior') {\n      setConfirmClose(eventData.need_confirmation);\n    }\n\n    if (eventType === 'web_app_open_popup') {\n      if (!eventData.message.trim().length || !eventData.buttons?.length || eventData.buttons.length > 3) return;\n      setPopupParams(eventData);\n    }\n\n    if (eventType === 'web_app_open_scan_qr_popup') {\n      showNotification({\n        message: 'Scan QR code is not supported in this client yet',\n      });\n    }\n\n    if (eventType === 'web_app_switch_inline_query') {\n      const filter = eventData.chat_types?.map(convertToApiChatType).filter(Boolean);\n      const isSamePeer = !filter?.length;\n\n      switchBotInline({\n        botId: bot!.id,\n        query: eventData.query,\n        filter,\n        isSamePeer,\n      });\n\n      closeWebApp();\n    }\n  }, [\n    bot, buttonText, closeWebApp, openInvoice, openTelegramLink, sendWebViewData, setWebAppPaymentSlug,\n    isPaymentModalOpen, showNotification,\n  ]);\n\n  const {\n    reloadFrame, sendEvent, sendViewport, sendTheme,\n  } = useWebAppFrame(frameRef, isOpen, isSimple, handleEvent, markLoaded);\n\n  const shouldShowMainButton = mainButton?.isVisible && mainButton.text.trim().length > 0;\n\n  useInterval(() => {\n    prolongWebView({\n      botId: bot!.id,\n      queryId: queryId!,\n      peerId: chat!.id,\n      replyToMessageId,\n      threadId,\n    });\n  }, queryId ? PROLONG_INTERVAL : undefined, true);\n\n  const handleMainButtonClick = useCallback(() => {\n    sendEvent({\n      eventType: 'main_button_pressed',\n    });\n  }, [sendEvent]);\n\n  const handleSettingsButtonClick = useCallback(() => {\n    sendEvent({\n      eventType: 'settings_button_pressed',\n    });\n  }, [sendEvent]);\n\n  const handleRefreshClick = useCallback(() => {\n    reloadFrame(webApp!.url);\n  }, [reloadFrame, webApp]);\n\n  const handleClose = useCallback(() => {\n    if (confirmClose) {\n      openCloseModal();\n    } else {\n      closeWebApp();\n    }\n  }, [confirmClose, openCloseModal, closeWebApp]);\n\n  const handlePopupClose = useCallback((buttonId?: string) => {\n    setPopupParams(undefined);\n    sendEvent({\n      eventType: 'popup_closed',\n      eventData: {\n        button_id: buttonId,\n      },\n    });\n  }, [sendEvent]);\n\n  const handlePopupModalClose = useCallback(() => {\n    handlePopupClose();\n  }, [handlePopupClose]);\n\n  // Notify view that height changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendViewport();\n    }, ANIMATION_WAIT);\n  }, [mainButton?.isVisible, sendViewport]);\n\n  // Notify view that theme changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendTheme();\n    }, ANIMATION_WAIT);\n  }, [theme, sendTheme]);\n\n  useSyncEffect(([prevIsPaymentModalOpen]) => {\n    if (isPaymentModalOpen === prevIsPaymentModalOpen) return;\n    if (webApp?.slug && !isPaymentModalOpen && paymentStatus) {\n      sendEvent({\n        eventType: 'invoice_closed',\n        eventData: {\n          slug: webApp.slug,\n          status: paymentStatus,\n        },\n      });\n      setWebAppPaymentSlug({\n        slug: undefined,\n      });\n    }\n  }, [isPaymentModalOpen, paymentStatus, sendEvent, setWebAppPaymentSlug, webApp]);\n\n  const handleToggleClick = useCallback(() => {\n    toggleAttachBot({\n      botId: bot!.id,\n      isEnabled: !attachBot,\n    });\n  }, [bot, attachBot, toggleAttachBot]);\n\n  const handleBackClick = useCallback(() => {\n    if (isBackButtonVisible) {\n      sendEvent({\n        eventType: 'back_button_pressed',\n      });\n    } else {\n      handleClose();\n    }\n  }, [handleClose, isBackButtonVisible, sendEvent]);\n\n  const openBotChat = useCallback(() => {\n    openChat({\n      id: bot!.id,\n    });\n    closeWebApp();\n  }, [bot, closeWebApp, openChat]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setConfirmClose(false);\n      closeModal();\n      setPopupParams(undefined);\n      markUnloaded();\n    }\n  }, [closeModal, isOpen, markUnloaded]);\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const backButtonClassName = buildClassName(\n    styles.closeIcon,\n    isBackButtonVisible && styles.stateBack,\n  );\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" style={`background-color: ${headerColor}`}>\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={lang(isBackButtonVisible ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <div className={backButtonClassName} />\n        </Button>\n        <div className=\"modal-title\">{bot?.firstName}</div>\n        <DropdownMenu\n          className=\"web-app-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          {chat && bot && chat.id !== bot.id && (\n            <MenuItem icon=\"bots\" onClick={openBotChat}>{lang('BotWebViewOpenBot')}</MenuItem>\n          )}\n          <MenuItem icon=\"reload\" onClick={handleRefreshClick}>{lang('WebApp.ReloadPage')}</MenuItem>\n          {attachBot?.hasSettings && (\n            <MenuItem icon=\"settings\" onClick={handleSettingsButtonClick}>\n              {lang('Settings')}\n            </MenuItem>\n          )}\n          {bot?.isAttachBot && (\n            <MenuItem\n              icon={attachBot ? 'stop' : 'install'}\n              onClick={handleToggleClick}\n              destructive={Boolean(attachBot)}\n            >\n              {lang(attachBot ? 'WebApp.RemoveBot' : 'WebApp.AddToAttachmentAdd')}\n            </MenuItem>\n          )}\n        </DropdownMenu>\n      </div>\n    );\n  }\n\n  const prevMainButtonColor = usePrevious(mainButton?.color, true);\n  const prevMainButtonTextColor = usePrevious(mainButton?.textColor, true);\n  const prevMainButtonIsActive = usePrevious(mainButton && Boolean(mainButton.isActive), true);\n  const prevMainButtonText = usePrevious(mainButton?.text, true);\n\n  const mainButtonCurrentColor = mainButton?.color || prevMainButtonColor;\n  const mainButtonCurrentTextColor = mainButton?.textColor || prevMainButtonTextColor;\n  const mainButtonCurrentIsActive = mainButton?.isActive !== undefined ? mainButton.isActive : prevMainButtonIsActive;\n  const mainButtonCurrentText = mainButton?.text || prevMainButtonText;\n\n  useEffect(() => {\n    if (!isOpen) {\n      const themeParams = extractCurrentThemeParams();\n      setMainButton(undefined);\n      setIsBackButtonVisible(false);\n      setBackgroundColor(themeParams.bg_color);\n      setHeaderColor(themeParams.bg_color);\n    }\n  }, [isOpen]);\n\n  const [shouldDecreaseWebFrameSize, setShouldDecreaseWebFrameSize] = useState(false);\n  const [shouldHideButton, setShouldHideButton] = useState(true);\n\n  const buttonChangeTimeout = useRef<ReturnType<typeof setTimeout>>();\n\n  useEffect(() => {\n    if (buttonChangeTimeout.current) clearTimeout(buttonChangeTimeout.current);\n    if (!shouldShowMainButton) {\n      setShouldDecreaseWebFrameSize(false);\n      buttonChangeTimeout.current = setTimeout(() => {\n        setShouldHideButton(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    } else {\n      setShouldHideButton(false);\n      buttonChangeTimeout.current = setTimeout(() => {\n        setShouldDecreaseWebFrameSize(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n  }, [setShouldDecreaseWebFrameSize, shouldShowMainButton]);\n\n  return (\n    <Modal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={handleClose}\n      header={renderHeader()}\n      style={`background-color: ${backgroundColor}`}\n    >\n      <Spinner className={buildClassName(styles.loadingSpinner, isLoaded && styles.hide)} />\n      {isOpen && (\n        <>\n          <iframe\n            className={buildClassName(styles.frame, shouldDecreaseWebFrameSize && styles.withButton)}\n            src={url}\n            title={`${bot?.firstName} Web App`}\n            sandbox={SANDBOX_ATTRIBUTES}\n            allow=\"camera; microphone; geolocation;\"\n            allowFullScreen\n            ref={frameRef}\n          />\n          <Button\n            className={buildClassName(\n              styles.mainButton,\n              shouldShowMainButton && styles.visible,\n              shouldHideButton && styles.hidden,\n            )}\n            style={`background-color: ${mainButtonCurrentColor}; color: ${mainButtonCurrentTextColor}`}\n            disabled={!mainButtonCurrentIsActive}\n            onClick={handleMainButtonClick}\n          >\n            {mainButtonCurrentText}\n            {mainButton?.isProgressVisible && <Spinner className={styles.mainButtonSpinner} color=\"white\" />}\n          </Button>\n        </>\n      )}\n      {confirmClose && (\n        <ConfirmDialog\n          isOpen={isCloseModalOpen}\n          onClose={closeModal}\n          title={lang('lng_bot_close_warning_title')}\n          text={lang('lng_bot_close_warning')}\n          confirmHandler={closeWebApp}\n          confirmIsDestructive\n          confirmLabel={lang('lng_bot_close_warning_sure')}\n        />\n      )}\n      {renderingPopupParams && (\n        <Modal\n          isOpen={Boolean(popupParams)}\n          title={renderingPopupParams.title || NBSP}\n          onClose={handlePopupModalClose}\n          hasCloseButton\n          className={\n            buildClassName(styles.webAppPopup, !renderingPopupParams.title?.trim().length && styles.withoutTitle)\n          }\n        >\n          {renderingPopupParams.message}\n          <div className=\"dialog-buttons mt-2\">\n            {renderingPopupParams.buttons.map((button) => (\n              <Button\n                key={button.id || button.type}\n                className=\"confirm-dialog-button\"\n                color={button.type === 'destructive' ? 'danger' : 'primary'}\n                isText\n                size=\"smaller\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handlePopupClose(button.id)}\n              >\n                {button.text || lang(DEFAULT_BUTTON_TEXT[button.type])}\n              </Button>\n            ))}\n          </div>\n        </Modal>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { webApp }): StateProps => {\n    const { botId } = webApp || {};\n    const attachBot = botId ? global.attachMenu.bots[botId] : undefined;\n    const bot = botId ? selectUser(global, botId) : undefined;\n    const chat = selectCurrentChat(global);\n    const theme = selectTheme(global);\n    const { isPaymentModalOpen, status } = selectTabState(global).payment;\n\n    return {\n      attachBot,\n      bot,\n      chat,\n      theme,\n      isPaymentModalOpen,\n      paymentStatus: status,\n    };\n  },\n)(WebAppModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"U2Fx70_Xnn6MxQAo6lWe\",\"close-icon\":\"E9BBt8AWQ1LGCzqQYN0D\",\"closeIcon\":\"E9BBt8AWQ1LGCzqQYN0D\",\"state-back\":\"Skbl2Bsgn5Ev9sxPJaZ1\",\"stateBack\":\"Skbl2Bsgn5Ev9sxPJaZ1\",\"loading-spinner\":\"iHI2Sy6jZFDHhMiT5K_L\",\"loadingSpinner\":\"iHI2Sy6jZFDHhMiT5K_L\",\"hide\":\"F1D5Dm5CPeMaqWVDpYI1\",\"frame\":\"yFzw6MKed5SilXcABSY5\",\"with-button\":\"O33MOdec2Wd4r1fyRziT\",\"withButton\":\"O33MOdec2Wd4r1fyRziT\",\"main-button\":\"PzPxMQlmpQbPhl8MZSty\",\"mainButton\":\"PzPxMQlmpQbPhl8MZSty\",\"visible\":\"yLdyQH6R0YCJqkmkSvBH\",\"hidden\":\"CB9NVLPnqFkzbneBIuMs\",\"main-button-spinner\":\"z8CBciLaVx2qnhkzZO_c\",\"mainButtonSpinner\":\"z8CBciLaVx2qnhkzZO_c\",\"web-app-popup\":\"ift5IHKU51MeA7p6XdKh\",\"webAppPopup\":\"ift5IHKU51MeA7p6XdKh\",\"without-title\":\"Umnydwi7nysRWdcQItB8\",\"withoutTitle\":\"Umnydwi7nysRWdcQItB8\"};","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiUser } from '../../api/types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  bot?: ApiUser;\n  type?: 'game' | 'webApp' | 'botApp';\n  shouldRequestWriteAccess?: boolean;\n};\n\nconst BotTrustModal: FC<OwnProps> = ({ bot, type, shouldRequestWriteAccess }) => {\n  const { cancelBotTrustRequest, markBotTrusted } = getActions();\n\n  const [isWriteAllowed, setIsWriteAllowed] = useState(shouldRequestWriteAccess || false);\n\n  const lang = useLang();\n  // Keep props a little bit longer, to show correct text on closing animation\n  const previousBot = usePrevious(bot, false);\n  const previousType = usePrevious(type, false);\n  const currentBot = bot || previousBot;\n  const currentType = type || previousType;\n\n  const handleBotTrustAccept = useCallback(() => {\n    markBotTrusted({ botId: bot!.id, isWriteAllowed });\n  }, [markBotTrusted, isWriteAllowed, bot]);\n\n  const handleBotTrustDecline = useCallback(() => {\n    cancelBotTrustRequest();\n  }, []);\n\n  const title = currentType === 'game' ? lang('AppName') : lang('BotOpenPageTitle');\n  const text = useMemo(() => {\n    switch (currentType) {\n      case 'game':\n        return lang('BotPermissionGameAlert', getUserFullName(currentBot));\n      case 'webApp':\n        return lang('BotOpenPageMessage', getUserFullName(currentBot));\n      case 'botApp':\n      default:\n        return lang('BotWebViewStartPermission');\n    }\n  }, [currentBot, currentType, lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={handleBotTrustDecline}\n      title={title}\n      confirmHandler={handleBotTrustAccept}\n    >\n      {renderText(text, ['simple_markdown'])}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={isWriteAllowed}\n          label={renderText(\n            lang('WebApp.AddToAttachmentAllowMessages', currentBot?.firstName),\n            ['simple_markdown'],\n          )}\n          onCheck={setIsWriteAllowed}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(BotTrustModal);\n","import React, {\n  memo, useCallback, useEffect, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiAttachBot } from '../../api/types';\n\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Checkbox from '../ui/Checkbox';\n\nexport type OwnProps = {\n  bot?: ApiAttachBot;\n};\n\nconst AttachBotInstallModal: FC<OwnProps> = ({\n  bot,\n}) => {\n  const { confirmAttachBotInstall, cancelAttachBotInstall } = getActions();\n  const [isWriteAllowed, setIsWriteAllowed] = useState(bot?.shouldRequestWriteAccess || false);\n\n  const lang = useLang();\n\n  const prevBot = usePrevious(bot);\n  const renderingBot = bot || prevBot;\n\n  const handleConfirm = useCallback(() => {\n    confirmAttachBotInstall({\n      isWriteAllowed,\n    });\n  }, [confirmAttachBotInstall, isWriteAllowed]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (bot) {\n      setIsWriteAllowed(bot.shouldRequestWriteAccess ?? false);\n    }\n  }, [bot]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={cancelAttachBotInstall}\n      title={renderingBot?.shortName}\n      confirmHandler={handleConfirm}\n    >\n      {lang('WebApp.AddToAttachmentText', renderingBot?.shortName)}\n      {renderingBot?.shouldRequestWriteAccess && (\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={isWriteAllowed}\n          label={renderText(\n            lang('WebApp.AddToAttachmentAllowMessages', renderingBot?.shortName),\n            ['simple_markdown'],\n          )}\n          onCheck={setIsWriteAllowed}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(AttachBotInstallModal);\n","import React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiChatFolder } from '../../api/types';\n\nimport usePrevious from '../../hooks/usePrevious';\nimport useLang from '../../hooks/useLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  folder?: ApiChatFolder;\n};\n\nconst DeleteFolderDialog: FC<OwnProps> = ({\n  folder,\n}) => {\n  const { closeDeleteChatFolderModal, deleteChatFolder, openDeleteChatFolderModal } = getActions();\n  const lang = useLang();\n\n  const isOpen = Boolean(folder);\n\n  const renderingFolder = usePrevious(folder) || folder;\n  const isMyChatlist = renderingFolder?.hasMyInvites;\n\n  const handleDeleteFolderMessage = useCallback(() => {\n    closeDeleteChatFolderModal();\n    if (isMyChatlist) {\n      openDeleteChatFolderModal({ folderId: renderingFolder!.id, isConfirmedForChatlist: true });\n    } else {\n      deleteChatFolder({ id: renderingFolder!.id });\n    }\n  }, [isMyChatlist, renderingFolder]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={closeDeleteChatFolderModal}\n      text={isMyChatlist ? lang('FilterDeleteAlertLinks') : lang('FilterDeleteAlert')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteFolderMessage}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(DeleteFolderDialog);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qiAkShre9E6R3S_XXL9S\",\"floating-badge\":\"gIcOQgrfw3soP3cK9s5Q\",\"floatingBadge\":\"gIcOQgrfw3soP3cK9s5Q\",\"floating-badge-triangle\":\"Ip5PkcvyMOnN0RLpXLXO\",\"floatingBadgeTriangle\":\"Ip5PkcvyMOnN0RLpXLXO\",\"floating-badge-icon\":\"y7T3FpaFXDsnPGk6dPmg\",\"floatingBadgeIcon\":\"y7T3FpaFXDsnPGk6dPmg\",\"text\":\"X0zFAEpRoPWj1yE904xR\",\"floating-badge-value\":\"rQ6ZdKdWi4HVydX6qhWS\",\"floatingBadgeValue\":\"rQ6ZdKdWi4HVydX6qhWS\",\"left-text\":\"kuq7sjJF6mvCc4Y5CXpv X0zFAEpRoPWj1yE904xR X0zFAEpRoPWj1yE904xR\",\"leftText\":\"kuq7sjJF6mvCc4Y5CXpv X0zFAEpRoPWj1yE904xR X0zFAEpRoPWj1yE904xR\",\"right-text\":\"QWqqObtxZyakBzakEoyh X0zFAEpRoPWj1yE904xR X0zFAEpRoPWj1yE904xR\",\"rightText\":\"QWqqObtxZyakBzakEoyh X0zFAEpRoPWj1yE904xR X0zFAEpRoPWj1yE904xR\",\"right-value\":\"TCdcdr_TxlgpCSBV0ePq X0zFAEpRoPWj1yE904xR X0zFAEpRoPWj1yE904xR\",\"rightValue\":\"TCdcdr_TxlgpCSBV0ePq X0zFAEpRoPWj1yE904xR X0zFAEpRoPWj1yE904xR\",\"left-value\":\"FaVxkFCcMpBfLY74WJZv X0zFAEpRoPWj1yE904xR\",\"leftValue\":\"FaVxkFCcMpBfLY74WJZv X0zFAEpRoPWj1yE904xR\",\"line\":\"slESyAvUqizX4_EIX_yg\",\"left\":\"lQi3xqxjvl2Owb4ES2SM\",\"right\":\"Dcv5uphsn2Sxpg3ROS_u\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport useLang from '../../../../hooks/useLang';\n\nimport styles from './PremiumLimitsCompare.module.scss';\n\n// eslint-disable-next-line max-len\nconst TRIANGLE_SVG = '<svg width=\"26\" height=\"9\" viewBox=\"0 0 26 9\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M0 0H26H24.4853C22.894 0 21.3679 0.632141 20.2426 1.75736L14.4142 7.58579C13.6332 8.36684 12.3668 8.36683 11.5858 7.58579L5.75736 1.75736C4.63214 0.632139 3.10602 0 1.51472 0H0Z\" fill=\"#7E85FF\"/></svg>';\n\ntype OwnProps = {\n  floatingBadgeIcon?: string;\n  leftValue?: string;\n  rightValue?: string;\n  className?: string;\n  rightStyle?: string;\n};\n\nconst PremiumLimitsCompare: FC<OwnProps> = ({\n  leftValue,\n  rightValue,\n  className,\n  floatingBadgeIcon,\n  rightStyle,\n}) => {\n  const lang = useLang();\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      {floatingBadgeIcon && (\n        <div className={styles.floatingBadge}>\n          <i className={buildClassName(styles.floatingBadgeIcon, floatingBadgeIcon, 'icon')} />\n          <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>{leftValue}</div>\n          <div className={styles.floatingBadgeTriangle} dangerouslySetInnerHTML={{ __html: TRIANGLE_SVG }} />\n        </div>\n      )}\n      <div className={buildClassName(styles.line, styles.left)}>\n        <div className={styles.leftText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitFree')}</div>\n        {!floatingBadgeIcon && <div className={styles.leftValue}>{leftValue}</div>}\n      </div>\n      <div className={buildClassName(styles.line, styles.right)} style={rightStyle}>\n        <div className={styles.rightText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitPremium')}</div>\n        <div className={styles.rightValue}>{rightValue}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitsCompare);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../../lib/teact/teact';\n\nimport { lerp } from '../../../../util/math';\n\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitPreview.module.scss';\n\ntype OwnProps = {\n  title: string;\n  description: string;\n  leftValue?: string;\n  rightValue?: string;\n  colorStepProgress: number;\n};\n\nconst COLOR_START = [91, 160, 255];\nconst COLOR_END = [197, 100, 243];\n\nconst PremiumLimitPreview: FC<OwnProps> = ({\n  title,\n  description,\n  leftValue,\n  rightValue,\n  colorStepProgress,\n}) => {\n  const color = useMemo(() => {\n    return COLOR_START.map((start, i) => lerp(start, COLOR_END[i], colorStepProgress));\n  }, [colorStepProgress]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.title}>{title}</div>\n      <div className={styles.description}>{description}</div>\n      <PremiumLimitsCompare\n        leftValue={leftValue}\n        rightValue={rightValue}\n        rightStyle={`background: rgb(${color.join(',')})`}\n      />\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitPreview);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"jeeOV_UYyl50GFLOzjGC\",\"title\":\"SVqE3gr2ekQUWfFT_Mvg\",\"description\":\"mCBNPstzrSlOQsz6rOtE\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"WHiQiGCtWfjSlEysEelB\",\"wrapper\":\"WUpKHfqLbeZmhfYqqiko\",\"down\":\"MiGmL4xqBPkxmLim4Ai0\",\"frame\":\"xuhT9JHpFkVsTcUWeh4L\",\"video\":\"sLLJqCkdSug4bzEQrACs\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiThumbnail } from '../../../../api/types';\n\nimport useMedia from '../../../../hooks/useMedia';\nimport buildClassName from '../../../../util/buildClassName';\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\nimport useMediaTransition from '../../../../hooks/useMediaTransition';\n\nimport DeviceFrame from '../../../../assets/premium/DeviceFrame.svg';\nimport OptimizedVideo from '../../../ui/OptimizedVideo';\n\nimport styles from './PremiumFeaturePreviewVideo.module.scss';\n\ntype OwnProps = {\n  videoId: string;\n  isReverseAnimation: boolean;\n  isDown: boolean;\n  videoThumbnail: ApiThumbnail;\n  index: number;\n  isActive: boolean;\n};\n\nconst PremiumFeaturePreviewVideo: FC<OwnProps> = ({\n  videoId,\n  isReverseAnimation,\n  isDown,\n  videoThumbnail,\n  index,\n  isActive,\n}) => {\n  const mediaData = useMedia(`document${videoId}`);\n  const thumbnailRef = useCanvasBlur(videoThumbnail.dataUri);\n  const transitionClassNames = useMediaTransition(mediaData);\n\n  return (\n    <div className={styles.root}>\n      <div\n        className={buildClassName(\n          styles.wrapper,\n          isReverseAnimation && styles.reverse,\n          isDown && styles.down,\n        )}\n        id={`premium_feature_preview_video_${index}`}\n      >\n        <img src={DeviceFrame} alt=\"\" className={styles.frame} />\n        <canvas ref={thumbnailRef} className={styles.video} />\n        <OptimizedVideo\n          canPlay={isActive}\n          className={buildClassName(styles.video, transitionClassNames)}\n          src={mediaData}\n          disablePictureInPicture\n          playsInline\n          muted\n          loop\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeaturePreviewVideo);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NtJc4bt94t9fklIWC6wF\",\"arrow\":\"_rzXza87NHdAMH2TDKul\",\"right\":\"J4UYbae0Frt01jIavpB0\",\"arrow-hidden\":\"qd3rvhZma3JJmhdt07Ig\",\"arrowHidden\":\"qd3rvhZma3JJmhdt07Ig\",\"dot\":\"eCgEFkp07vgaUGwymYAQ\",\"medium\":\"AIpVWjJc47egZ8ATaC3n\",\"small\":\"MnRKztu0OZTyIywGLMc6\",\"invisible\":\"boSFbatyzatdw70J7mpu\",\"active\":\"nlCmVncFkKVtsawWqcfw\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './SliderDots.module.scss';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport Button from '../ui/Button';\n\ntype OwnProps = {\n  length: number;\n  active: number;\n  onSelectSlide: (index: number) => void;\n};\n\nconst SliderDots: FC<OwnProps> = ({\n  length,\n  active,\n  onSelectSlide,\n}) => {\n  const startFrom = Math.max(0, Math.min(length - 8, active - 4));\n  const isPreLastBatch = startFrom === length - 8 - 1;\n  const isLastBatch = startFrom === length - 8;\n  const isFirstBatch = startFrom === 0;\n  const isPreFirstBatch = startFrom === 1;\n  const shownDotsCount = Math.min(length, 8);\n\n  const handleGoForward = useCallback(() => {\n    onSelectSlide(active + 1);\n  }, [active, onSelectSlide]);\n\n  const handleGoBack = useCallback(() => {\n    onSelectSlide(active - 1);\n  }, [active, onSelectSlide]);\n\n  const count = Math.min(8, length);\n\n  return (\n    <div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === 0 && styles.arrowHidden)}\n          color=\"translucent\"\n          disabled={active === 0}\n          round\n          onClick={handleGoBack}\n        >\n          <i className=\"icon icon-previous\" />\n        </Button>\n      )}\n      <div className={styles.root} style={`--start-from: ${startFrom}; --length: ${length}; --count: ${count};`}>\n        {Array(length).fill(undefined).map((_, i) => {\n          const index = i;\n          const isLast = (i === startFrom + shownDotsCount - 1 && !isLastBatch && !isPreLastBatch);\n          const isPreLast = (i === startFrom + shownDotsCount - 2 && !isPreLastBatch && !isLastBatch)\n            || (i === startFrom + shownDotsCount - 1 && isPreLastBatch);\n          const isFirst = (i === startFrom) && !isFirstBatch && !isPreFirstBatch;\n          const isPreFirst = ((i === startFrom + 1) && !isFirstBatch && !isPreFirstBatch)\n            || (i === startFrom && isPreFirstBatch);\n          const isInvisible = i < startFrom || i >= startFrom + shownDotsCount;\n          return (\n            <div\n              onClick={() => onSelectSlide(i)}\n              className={buildClassName(\n                styles.dot,\n                index === active && styles.active,\n                (isPreLast || isPreFirst) && styles.medium,\n                (isLast || isFirst) && styles.small,\n                isInvisible && styles.invisible,\n              )}\n            />\n          );\n        })}\n      </div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === length - 1 && styles.arrowHidden, styles.right)}\n          color=\"translucent\"\n          round\n          disabled={active === length - 1}\n          onClick={handleGoForward}\n        >\n          <i className=\"icon icon-next\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SliderDots);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"dVn5gk50tXn1EiI4kJFJ\",\"sticker\":\"PIYKt4xxOUBpRjRu0b4q\",\"effect-sticker\":\"JLzWnq8to4W24wBGmbyt PIYKt4xxOUBpRjRu0b4q\",\"effectSticker\":\"JLzWnq8to4W24wBGmbyt PIYKt4xxOUBpRjRu0b4q\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport type { ApiSticker } from '../../../../api/types';\n\nimport cycleRestrict from '../../../../util/cycleRestrict';\nimport useMedia from '../../../../hooks/useMedia';\nimport useFlag from '../../../../hooks/useFlag';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\n\nimport styles from './PremiumFeaturePreviewStickers.module.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  stickers: GlobalState['stickers']['premium']['stickers'];\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 0.8;\nconst MAX_EMOJIS = 15;\nconst ENDED_DELAY = 150;\n\nconst AnimatedCircleSticker: FC<{\n  size: number;\n  realIndex: number;\n  sticker: ApiSticker;\n  index: number;\n  maxLength: number;\n  onClick: (index: number) => void;\n  onEnded: NoneToVoidFunction;\n  canPlay: boolean;\n}> = ({\n  size, realIndex, canPlay,\n  sticker, index, maxLength, onClick, onEnded,\n}) => {\n  const mediaData = useMedia(`sticker${sticker.id}`);\n  const mediaDataAround = useMedia(`sticker${sticker.id}?size=f`);\n\n  const isActivated = index === 0;\n  const [isAnimated, animate, inanimate] = useFlag(isActivated);\n\n  const circleSize = size - size * EMOJI_SIZE_MULTIPLIER;\n  const width = circleSize * 3;\n  const height = circleSize * 3.2;\n\n  const a = index / maxLength;\n\n  const angle = a * (Math.PI * 2);\n  const scale = isActivated ? 1 : 0.66;\n\n  const x = Math.cos(angle) * width - circleSize * 2.8;\n  const y = Math.sin(angle) * height;\n\n  const handleClick = useCallback(() => {\n    onClick(realIndex);\n  }, [onClick, realIndex]);\n\n  const handleEnded = useCallback(() => {\n    inanimate();\n    onEnded();\n  }, [inanimate, onEnded]);\n\n  useEffect(() => {\n    if (isActivated) {\n      animate();\n    }\n  }, [isActivated, animate]);\n\n  return (\n    <>\n      {isActivated && (\n        <AnimatedSticker\n          className={styles.effectSticker}\n          tgsUrl={mediaDataAround}\n          play={canPlay}\n          isLowPriority\n          noLoop\n          size={EFFECT_SIZE_MULTIPLIER * size}\n          style={`--x: calc(${x}px - 10%); --y: ${y}px;`}\n        />\n      )}\n      <AnimatedSticker\n        className={styles.sticker}\n        tgsUrl={mediaData}\n        play={canPlay && isAnimated}\n        noLoop\n        size={EMOJI_SIZE_MULTIPLIER * size}\n        style={`--x: ${x}px; --y: ${y}px; --opacity: ${scale}`}\n        onClick={handleClick}\n        onEnded={handleEnded}\n      />\n    </>\n  );\n};\nconst PremiumFeaturePreviewStickers: FC<OwnProps & StateProps> = ({\n  stickers, isActive,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [offset, setOffset] = useState(0);\n  const [size, setSize] = useState(0);\n\n  const renderedStickers = stickers?.slice(0, MAX_EMOJIS);\n\n  const handleClick = useCallback((i: number) => {\n    setOffset(-i);\n  }, []);\n\n  const handleEnded = useCallback(() => {\n    setTimeout(() => {\n      setOffset((current) => cycleRestrict(renderedStickers.length, current + 1));\n    }, ENDED_DELAY);\n  }, [renderedStickers.length]);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    setSize(container.closest('.modal-dialog')!.clientWidth);\n  }, []);\n\n  return (\n    <div\n      className={styles.root}\n      ref={containerRef}\n    >\n      {renderedStickers?.map((l, i) => {\n        return (\n          <AnimatedCircleSticker\n            size={size}\n            sticker={l}\n            realIndex={i}\n            index={(i + offset + renderedStickers.length) % renderedStickers.length}\n            maxLength={renderedStickers.length}\n            onClick={handleClick}\n            onEnded={handleEnded}\n            canPlay={isActive}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      stickers: global.stickers.premium.stickers,\n    };\n  },\n)(PremiumFeaturePreviewStickers));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QfngIllOc1THaTQiJf7h\",\"button\":\"n8tTb600de2uZKGkyw67\",\"button-content\":\"eZLuJy6dL4ekVllaRcCm\",\"buttonContent\":\"eZLuJy6dL4ekVllaRcCm\",\"back-button\":\"ZTIpWD6Zrj1U7rnGvrlD\",\"backButton\":\"ZTIpWD6Zrj1U7rnGvrlD\",\"white-back-button\":\"E42Dy7DFLAxvj8HE4GAD\",\"whiteBackButton\":\"E42Dy7DFLAxvj8HE4GAD\",\"content\":\"JMdhJYW94Mas4JDye486\",\"frame\":\"fEQZ2fyO9g6L1v8QJUCJ\",\"slide\":\"xkC9BFxv7RkSwbPe4RMb\",\"limits\":\"zngeFAwxdlVJZY876fHc\",\"limits-content\":\"le7Qv9QkHlO3qdK0Hs_g\",\"limitsContent\":\"le7Qv9QkHlO3qdK0Hs_g\",\"header\":\"Mw81cOCIGy8KGn9VokFA\",\"no-header-border\":\"tRvcw256KSHRqgSj5uGX\",\"noHeaderBorder\":\"tRvcw256KSHRqgSj5uGX\",\"preview\":\"EXGFQjwHmQxjvMLbYtS9\",\"title\":\"eEYA2lXPy_DUKe8JKHiP\",\"description\":\"TVO7LjkV_yHUGIu5PXCA\",\"footer\":\"EKr_FVmiDSwhUxouhaqB\",\"no-footer-border\":\"H8z5Q6gsuqeCy82HFlyX\",\"noFooterBorder\":\"H8z5Q6gsuqeCy82HFlyX\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiPremiumPromo } from '../../../api/types';\nimport type { ApiLimitType, GlobalState } from '../../../global/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport useLang from '../../../hooks/useLang';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport useFlag from '../../../hooks/useFlag';\nimport renderText from '../../common/helpers/renderText';\nimport usePrevious from '../../../hooks/usePrevious';\nimport { formatCurrency } from '../../../util/formatCurrency';\n\nimport Button from '../../ui/Button';\nimport PremiumLimitPreview from './common/PremiumLimitPreview';\nimport PremiumFeaturePreviewVideo from './previews/PremiumFeaturePreviewVideo';\nimport SliderDots from '../../common/SliderDots';\nimport PremiumFeaturePreviewStickers from './previews/PremiumFeaturePreviewStickers';\n\nimport styles from './PremiumFeatureModal.module.scss';\n\nexport const PREMIUM_FEATURE_TITLES: Record<string, string> = {\n  double_limits: 'PremiumPreviewLimits',\n  infinite_reactions: 'PremiumPreviewReactions2',\n  premium_stickers: 'PremiumPreviewStickers',\n  animated_emoji: 'PremiumPreviewEmoji',\n  no_ads: 'PremiumPreviewNoAds',\n  voice_to_text: 'PremiumPreviewVoiceToText',\n  profile_badge: 'PremiumPreviewProfileBadge',\n  faster_download: 'PremiumPreviewDownloadSpeed',\n  more_upload: 'PremiumPreviewUploads',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagement',\n  animated_userpics: 'PremiumPreviewAnimatedProfiles',\n  emoji_status: 'PremiumPreviewEmojiStatus',\n};\n\nexport const PREMIUM_FEATURE_DESCRIPTIONS: Record<string, string> = {\n  double_limits: 'PremiumPreviewLimitsDescription',\n  infinite_reactions: 'PremiumPreviewReactions2Description',\n  premium_stickers: 'PremiumPreviewStickersDescription',\n  no_ads: 'PremiumPreviewNoAdsDescription',\n  animated_emoji: 'PremiumPreviewEmojiDescription',\n  voice_to_text: 'PremiumPreviewVoiceToTextDescription',\n  profile_badge: 'PremiumPreviewProfileBadgeDescription',\n  faster_download: 'PremiumPreviewDownloadSpeedDescription',\n  more_upload: 'PremiumPreviewUploadsDescription',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagementDescription',\n  animated_userpics: 'PremiumPreviewAnimatedProfilesDescription',\n  emoji_status: 'PremiumPreviewEmojiStatusDescription',\n};\n\nexport const PREMIUM_FEATURE_SECTIONS = [\n  'double_limits',\n  'more_upload',\n  'faster_download',\n  'voice_to_text',\n  'no_ads',\n  'infinite_reactions',\n  'premium_stickers',\n  'animated_emoji',\n  'advanced_chat_management',\n  'profile_badge',\n  'animated_userpics',\n  'emoji_status',\n];\n\nconst PREMIUM_BOTTOM_VIDEOS: string[] = [\n  'faster_download',\n  'voice_to_text',\n  'advanced_chat_management',\n  'profile_badge',\n  'animated_userpics',\n  'emoji_status',\n];\n\ntype ApiLimitTypeWithoutUpload = Exclude<ApiLimitType, 'uploadMaxFileparts' | 'chatlistInvites' | 'chatlistJoined'>;\n\nconst LIMITS_ORDER: ApiLimitTypeWithoutUpload[] = [\n  'channels',\n  'dialogFolderPinned',\n  'channelsPublic',\n  'savedGifs',\n  'stickersFaved',\n  'aboutLength',\n  'captionLength',\n  'dialogFilters',\n  'dialogFiltersChats',\n];\n\nconst LIMITS_TITLES: Record<ApiLimitTypeWithoutUpload, string> = {\n  channels: 'GroupsAndChannelsLimitTitle',\n  dialogFolderPinned: 'PinChatsLimitTitle',\n  channelsPublic: 'PublicLinksLimitTitle',\n  savedGifs: 'SavedGifsLimitTitle',\n  stickersFaved: 'FavoriteStickersLimitTitle',\n  aboutLength: 'BioLimitTitle',\n  captionLength: 'CaptionsLimitTitle',\n  dialogFilters: 'FoldersLimitTitle',\n  dialogFiltersChats: 'ChatPerFolderLimitTitle',\n};\n\nconst LIMITS_DESCRIPTIONS: Record<ApiLimitTypeWithoutUpload, string> = {\n  channels: 'GroupsAndChannelsLimitSubtitle',\n  dialogFolderPinned: 'PinChatsLimitSubtitle',\n  channelsPublic: 'PublicLinksLimitSubtitle',\n  savedGifs: 'SavedGifsLimitSubtitle',\n  stickersFaved: 'FavoriteStickersLimitSubtitle',\n  aboutLength: 'BioLimitSubtitle',\n  captionLength: 'CaptionsLimitSubtitle',\n  dialogFilters: 'FoldersLimitSubtitle',\n  dialogFiltersChats: 'ChatPerFolderLimitSubtitle',\n};\n\nconst BORDER_THRESHOLD = 20;\n\ntype OwnProps = {\n  onBack: VoidFunction;\n  initialSection: string;\n  promo: ApiPremiumPromo;\n  onClickSubscribe: (startParam?: string) => void;\n  isPremium?: boolean;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n};\n\nconst PremiumFeatureModal: FC<OwnProps> = ({\n  promo,\n  initialSection,\n  onBack,\n  onClickSubscribe,\n  isPremium,\n  limits,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const scrollContainerRef = useRef<HTMLDivElement>(null);\n  const [currentSlideIndex, setCurrentSlideIndex] = useState(PREMIUM_FEATURE_SECTIONS.indexOf(initialSection));\n  const [reverseAnimationSlideIndex, setReverseAnimationSlideIndex] = useState(0);\n  const [isScrolling, startScrolling, stopScrolling] = useFlag();\n\n  const [isScrolledToTop, setIsScrolledToTop] = useState(true);\n  const [isScrolledToBottom, setIsScrolledToBottom] = useState(false);\n\n  const prevInitialSection = usePrevious(initialSection);\n\n  function handleClick() {\n    onClickSubscribe(initialSection);\n  }\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { clientWidth, scrollLeft: scrollLeftOriginal } = e.currentTarget;\n\n    const scrollLeft = Math.round(scrollLeftOriginal);\n\n    const left = scrollLeft % (clientWidth);\n    const progress = left / (clientWidth);\n    e.currentTarget.style.setProperty('--scroll-progress', progress.toString());\n    e.currentTarget.style.setProperty('--abs-scroll-progress', Math.abs(progress).toString());\n    const reverseIndex = Math.ceil((scrollLeft + 1) / clientWidth);\n\n    setReverseAnimationSlideIndex(reverseIndex);\n\n    const prevElement = e.currentTarget.querySelector(`#premium_feature_preview_video_${reverseIndex - 1}`);\n    const reverseElement = e.currentTarget.querySelector(`#premium_feature_preview_video_${reverseIndex}`);\n    prevElement?.classList.toggle('reverse', false);\n    reverseElement?.classList.toggle('reverse', true);\n\n    if (isScrolling) return;\n    const slide = Math.round(scrollLeft / clientWidth);\n    setCurrentSlideIndex(slide);\n  }\n\n  function handleLimitsScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop, clientHeight, scrollHeight } = e.currentTarget;\n    setIsScrolledToTop(scrollTop <= BORDER_THRESHOLD);\n    setIsScrolledToBottom(scrollTop >= scrollHeight - clientHeight - BORDER_THRESHOLD);\n  }\n\n  useEffect(() => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer || (prevInitialSection === initialSection)) return;\n\n    const index = PREMIUM_FEATURE_SECTIONS.indexOf(initialSection);\n    setCurrentSlideIndex(index);\n    startScrolling();\n    animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 0)\n      .then(stopScrolling);\n  }, [currentSlideIndex, initialSection, prevInitialSection, startScrolling, stopScrolling]);\n\n  const handleSelectSlide = useCallback(async (index: number) => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer) return;\n\n    setCurrentSlideIndex(index);\n\n    startScrolling();\n    await animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 800);\n    stopScrolling();\n  }, [startScrolling, stopScrolling]);\n\n  // TODO Support all subscription options\n  const month = promo.options.find((option) => option.months === 1)!;\n\n  return (\n    <div className={styles.root}>\n      <Button\n        round\n        size=\"smaller\"\n        className={buildClassName(styles.backButton, currentSlideIndex !== 0 && styles.whiteBackButton)}\n        color={currentSlideIndex === 0 ? 'translucent' : 'translucent-white'}\n        onClick={onBack}\n        ariaLabel={lang('Back')}\n      >\n        <i className=\"icon icon-arrow-left\" />\n      </Button>\n\n      <div className={styles.preview} />\n\n      <div className={buildClassName(styles.content, 'no-scrollbar')} onScroll={handleScroll} ref={scrollContainerRef}>\n\n        {PREMIUM_FEATURE_SECTIONS.map((section, index) => {\n          if (section === 'double_limits') {\n            return (\n              <div className={buildClassName(styles.slide, styles.limits)}>\n                <h2 className={buildClassName(styles.header, isScrolledToTop && styles.noHeaderBorder)}>\n                  {lang(PREMIUM_FEATURE_TITLES.double_limits)}\n                </h2>\n                <div className={buildClassName(styles.limitsContent, 'custom-scroll')} onScroll={handleLimitsScroll}>\n                  {LIMITS_ORDER.map((limit, i) => {\n                    const defaultLimit = limits?.[limit][0].toString();\n                    const premiumLimit = limits?.[limit][1].toString();\n                    return (\n                      <PremiumLimitPreview\n                        title={lang(LIMITS_TITLES[limit])}\n                        description={lang(LIMITS_DESCRIPTIONS[limit], premiumLimit)}\n                        leftValue={defaultLimit}\n                        rightValue={premiumLimit}\n                        colorStepProgress={i / (LIMITS_ORDER.length - 1)}\n                      />\n                    );\n                  })}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'premium_stickers') {\n            return (\n              <div className={styles.slide}>\n                <div className={styles.frame}>\n                  <PremiumFeaturePreviewStickers isActive={currentSlideIndex === index} />\n                </div>\n                <h1 className={styles.title}>\n                  {lang(PREMIUM_FEATURE_TITLES.premium_stickers)}\n                </h1>\n                <div className={styles.description}>\n                  {renderText(lang(PREMIUM_FEATURE_DESCRIPTIONS.premium_stickers), ['br'])}\n                </div>\n              </div>\n            );\n          }\n\n          const i = promo.videoSections.indexOf(section);\n          if (i === -1) return undefined;\n          return (\n            <div className={styles.slide}>\n              <div className={styles.frame}>\n                <PremiumFeaturePreviewVideo\n                  isActive={currentSlideIndex === index}\n                  videoId={promo.videos[i].id!}\n                  videoThumbnail={promo.videos[i].thumbnail!}\n                  isDown={PREMIUM_BOTTOM_VIDEOS.includes(section)}\n                  index={index}\n                  isReverseAnimation={index === reverseAnimationSlideIndex}\n                />\n              </div>\n              <h1 className={styles.title}>\n                {lang(PREMIUM_FEATURE_TITLES[promo.videoSections[i]!])}\n              </h1>\n              <div className={styles.description}>\n                {renderText(lang(PREMIUM_FEATURE_DESCRIPTIONS[promo.videoSections[i]!]), ['br'])}\n              </div>\n            </div>\n          );\n        })}\n\n      </div>\n\n      <div\n        className={buildClassName(\n          styles.footer,\n          (isScrolledToBottom || currentSlideIndex !== 0) && styles.noFooterBorder,\n        )}\n      >\n        <SliderDots\n          length={PREMIUM_FEATURE_SECTIONS.length}\n          active={currentSlideIndex}\n          onSelectSlide={handleSelectSlide}\n        />\n        <Button\n          className={buildClassName(styles.button)}\n          isShiny={!isPremium}\n          withPremiumGradient={!isPremium}\n          onClick={isPremium ? onBack : handleClick}\n        >\n          {isPremium\n            ? lang('OK')\n            : lang('SubscribeToPremium', formatCurrency(Number(month.amount), month.currency, lang.code))}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeatureModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"PEnE7xWTMwTPGmhubmj6\",\"text\":\"U4UYSH7uHW3k4FlqBefm\",\"header\":\"Jdlm3dtJ8gOIY0x0u2d4\",\"description\":\"cE44My72bdvMJna9mgoc\",\"icon\":\"mxF3NdPgAi_H0ZFgNEtw\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport renderText from '../../common/helpers/renderText';\n\nimport ListItem from '../../ui/ListItem';\n\nimport styles from './PremiumFeatureItem.module.scss';\n\ntype OwnProps = {\n  icon: string;\n  title: string;\n  text: string;\n  onClick: VoidFunction;\n  index: number;\n};\n\nconst COLORS = [\n  '#F2862D', '#EB7B4D', '#E46D72', '#DD6091', '#CC5FBA', '#B464E7',\n  '#9873FF', '#768DFF', '#55A5FC', '#52B0C9', '#4FBC93', '#4CC663',\n];\n\nconst PremiumFeatureItem: FC<OwnProps> = ({\n  icon,\n  title,\n  text,\n  index,\n  onClick,\n}) => {\n  return (\n    <ListItem buttonClassName={styles.root} onClick={onClick}>\n      <img src={icon} className={styles.icon} alt=\"\" style={`--item-color: ${COLORS[index]}`} />\n      <div className={styles.text}>\n        <div className={styles.title}>{renderText(title, ['br'])}</div>\n        <div className={styles.description}>{text}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(PremiumFeatureItem);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"JJNHc_FZuydBNBIHK9xC\",\"transition\":\"Q05gUm0HCMtSoeX2HVGw\",\"button\":\"Fb3VVHNrypZ3lhYfSVI_\",\"main\":\"E9_LJ9RqAHTj8h84EROt\",\"logo\":\"Vaf41aTAoSwl_e_cZhah\",\"header-text\":\"J2z1gqvfQu5kqV_UP8US\",\"headerText\":\"J2z1gqvfQu5kqV_UP8US\",\"description\":\"PXg8sU2cfdeysJXctlpB\",\"list\":\"LlPAfJpL066su4P2NFmh\",\"no-button\":\"wpPtJKCqTdOGkKoh7KTo\",\"noButton\":\"wpPtJKCqTdOGkKoh7KTo\",\"header\":\"Rwuf1efaEfZ13AD5XbCB\",\"hidden-header\":\"NV7fN3j69oFZEJu7ejG8\",\"hiddenHeader\":\"NV7fN3j69oFZEJu7ejG8\",\"close-button\":\"TyuYAZecpI2K_1i3B5XO\",\"closeButton\":\"TyuYAZecpI2K_1i3B5XO\",\"premium-header-text\":\"jA_DV7G5VJo8xGOe0otF\",\"premiumHeaderText\":\"jA_DV7G5VJo8xGOe0otF\",\"footer-text\":\"yVkdTScCEhH3EQMQiA42\",\"footerText\":\"yVkdTScCEhH3EQMQiA42\",\"primary-footer-text\":\"MQbFSG2o_R8rjKDsqs8R\",\"primaryFooterText\":\"MQbFSG2o_R8rjKDsqs8R\",\"footer\":\"FApXoTPpasib6Np5Uxpt\"};","import React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiPremiumPromo, ApiUser } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\n\nimport PremiumFeatureModal, {\n  PREMIUM_FEATURE_DESCRIPTIONS,\n  PREMIUM_FEATURE_SECTIONS,\n  PREMIUM_FEATURE_TITLES,\n} from './PremiumFeatureModal';\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport buildClassName from '../../../util/buildClassName';\nimport { selectTabState, selectIsCurrentUserPremium, selectUser } from '../../../global/selectors';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\nimport { selectPremiumLimit } from '../../../global/selectors/limits';\nimport renderText from '../../common/helpers/renderText';\nimport { getUserFullName } from '../../../global/helpers';\n\nimport useLang from '../../../hooks/useLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport Modal from '../../ui/Modal';\nimport Button from '../../ui/Button';\nimport PremiumFeatureItem from './PremiumFeatureItem';\nimport Transition from '../../ui/Transition';\n\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\nimport PremiumLimits from '../../../assets/premium/PremiumLimits.svg';\nimport PremiumFile from '../../../assets/premium/PremiumFile.svg';\nimport PremiumSpeed from '../../../assets/premium/PremiumSpeed.svg';\nimport PremiumVoice from '../../../assets/premium/PremiumVoice.svg';\nimport PremiumAds from '../../../assets/premium/PremiumAds.svg';\nimport PremiumReactions from '../../../assets/premium/PremiumReactions.svg';\nimport PremiumStickers from '../../../assets/premium/PremiumStickers.svg';\nimport PremiumChats from '../../../assets/premium/PremiumChats.svg';\nimport PremiumBadge from '../../../assets/premium/PremiumBadge.svg';\nimport PremiumVideo from '../../../assets/premium/PremiumVideo.svg';\nimport PremiumEmoji from '../../../assets/premium/PremiumEmoji.svg';\nimport PremiumStatus from '../../../assets/premium/PremiumStatus.svg';\n\nimport styles from './PremiumMainModal.module.scss';\n\nconst LIMIT_ACCOUNTS = 4;\n\nconst PREMIUM_FEATURE_COLOR_ICONS: Record<string, string> = {\n  double_limits: PremiumLimits,\n  infinite_reactions: PremiumReactions,\n  premium_stickers: PremiumStickers,\n  animated_emoji: PremiumEmoji,\n  no_ads: PremiumAds,\n  voice_to_text: PremiumVoice,\n  profile_badge: PremiumBadge,\n  faster_download: PremiumSpeed,\n  more_upload: PremiumFile,\n  advanced_chat_management: PremiumChats,\n  animated_userpics: PremiumVideo,\n  emoji_status: PremiumStatus,\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  promo?: ApiPremiumPromo;\n  isClosing?: boolean;\n  fromUser?: ApiUser;\n  toUser?: ApiUser;\n  initialSection?: string;\n  isPremium?: boolean;\n  isSuccess?: boolean;\n  isGift?: boolean;\n  monthsAmount?: number;\n  limitChannels: number;\n  limitPins: number;\n  limitLinks: number;\n  limitFolders: number;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n  premiumSlug?: string;\n  premiumBotUsername?: string;\n  premiumPromoOrder?: string[];\n};\n\nconst PremiumMainModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  fromUser,\n  promo,\n  initialSection,\n  isPremium,\n  limitChannels,\n  limitLinks,\n  limitFolders,\n  limitPins,\n  limits,\n  premiumSlug,\n  premiumBotUsername,\n  isClosing,\n  isSuccess,\n  isGift,\n  toUser,\n  monthsAmount,\n  premiumPromoOrder,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n  const {\n    closePremiumModal, openInvoice, requestConfetti, openTelegramLink,\n  } = getActions();\n\n  const lang = useLang();\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [currentSection, setCurrentSection] = useState<string | undefined>(initialSection);\n\n  const handleOpen = useCallback((section: string | undefined) => {\n    return () => {\n      setCurrentSection(section);\n    };\n  }, []);\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  function handleClickWithStartParam(startParam?: string) {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n\n    if (premiumSlug) {\n      openInvoice({\n        slug: premiumSlug,\n      });\n    } else if (premiumBotUsername) {\n      openTelegramLink({\n        url: `${TME_LINK_PREFIX}${premiumBotUsername}?start=${startParam || 'promo'}`,\n      });\n      closePremiumModal();\n    }\n  }\n\n  function handleClick() {\n    handleClickWithStartParam();\n  }\n\n  const showConfetti = useCallback(() => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n    if (isOpen) {\n      const {\n        top, left, width, height,\n      } = dialog.querySelector('.modal-content')!.getBoundingClientRect();\n      requestConfetti({\n        top,\n        left,\n        width,\n        height,\n      });\n    }\n  }, [isOpen, requestConfetti]);\n\n  useEffect(() => {\n    if (isSuccess) {\n      showConfetti();\n    }\n  }, [isSuccess, showConfetti]);\n\n  useSyncEffect(([prevIsPremium]) => {\n    if (prevIsPremium === isPremium) return;\n\n    showConfetti();\n  }, [isPremium, showConfetti]);\n\n  const filteredSections = useMemo(() => {\n    if (!premiumPromoOrder) return PREMIUM_FEATURE_SECTIONS;\n    return premiumPromoOrder.filter((section) => PREMIUM_FEATURE_SECTIONS.includes(section));\n  }, [premiumPromoOrder]);\n\n  if (!promo) return undefined;\n\n  // TODO Support all subscription options\n  const month = promo.options.find((option) => option.months === 1)!;\n\n  function getHeaderText() {\n    if (isGift) {\n      return fromUser?.id === currentUserId\n        ? lang('TelegramPremiumUserGiftedPremiumOutboundDialogTitle', [getUserFullName(toUser), monthsAmount])\n        : lang('TelegramPremiumUserGiftedPremiumDialogTitle', [getUserFullName(fromUser), monthsAmount]);\n    }\n\n    return fromUser\n      ? lang('TelegramPremiumUserDialogTitle', getUserFullName(fromUser))\n      : lang(isPremium ? 'TelegramPremiumSubscribedTitle' : 'TelegramPremium');\n  }\n\n  function getHeaderDescription() {\n    if (isGift) {\n      return fromUser?.id === currentUserId\n        ? lang('TelegramPremiumUserGiftedPremiumOutboundDialogSubtitle', getUserFullName(toUser))\n        : lang('TelegramPremiumUserGiftedPremiumDialogSubtitle');\n    }\n\n    return fromUser\n      ? lang('TelegramPremiumUserDialogSubtitle')\n      : lang(isPremium ? 'TelegramPremiumSubscribedSubtitle' : 'TelegramPremiumSubtitle');\n  }\n\n  function renderFooterText() {\n    if (!promo || (isGift && fromUser?.id === currentUserId)) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.footerText} dir={lang.isRtl ? 'rtl' : undefined}>\n        {renderTextWithEntities({\n          text: promo.statusText,\n          entities: promo.statusEntities,\n        })}\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      // eslint-disable-next-line react/jsx-no-bind\n      onCloseAnimationEnd={() => closePremiumModal({ isClosed: true })}\n      onClose={closePremiumModal}\n      isOpen={isOpen && !isClosing}\n      dialogRef={dialogRef}\n    >\n      <Transition name=\"slide\" activeKey={currentSection ? 1 : 0} className={styles.transition}>\n        {!currentSection ? (\n          <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n            <Button\n              round\n              size=\"smaller\"\n              className={styles.closeButton}\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => closePremiumModal()}\n              ariaLabel={lang('Close')}\n            >\n              <i className=\"icon icon-close\" />\n            </Button>\n            <img className={styles.logo} src={PremiumLogo} alt=\"\" />\n            <h2 className={styles.headerText}>\n              {renderText(getHeaderText(), ['simple_markdown', 'emoji'])}\n            </h2>\n            <div className={styles.description}>\n              {renderText(getHeaderDescription(), ['simple_markdown', 'emoji'])}\n            </div>\n            <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n              <h2 className={styles.premiumHeaderText}>\n                {lang('TelegramPremium')}\n              </h2>\n            </div>\n\n            <div className={buildClassName(styles.list, isPremium && styles.noButton)}>\n              {filteredSections.map((section, index) => {\n                return (\n                  <PremiumFeatureItem\n                    key={section}\n                    title={lang(PREMIUM_FEATURE_TITLES[section])}\n                    text={section === 'double_limits'\n                      ? lang(PREMIUM_FEATURE_DESCRIPTIONS[section],\n                        [limitChannels, limitFolders, limitPins, limitLinks, LIMIT_ACCOUNTS])\n                      : lang(PREMIUM_FEATURE_DESCRIPTIONS[section])}\n                    icon={PREMIUM_FEATURE_COLOR_ICONS[section]}\n                    index={index}\n                    onClick={handleOpen(section)}\n                  />\n                );\n              })}\n              <div\n                className={buildClassName(styles.footerText, styles.primaryFooterText)}\n                dir={lang.isRtl ? 'rtl' : undefined}\n              >\n                <p>\n                  {renderText(lang('AboutPremiumDescription'), ['simple_markdown'])}\n                </p>\n                <p>\n                  {renderText(lang('AboutPremiumDescription2'), ['simple_markdown'])}\n                </p>\n              </div>\n              {renderFooterText()}\n            </div>\n            {!isPremium && (\n              <div className={styles.footer}>\n                {/* eslint-disable-next-line react/jsx-no-bind */}\n                <Button className={styles.button} isShiny withPremiumGradient onClick={handleClick}>\n                  {lang('SubscribeToPremium', formatCurrency(Number(month.amount), month.currency, lang.code))}\n                </Button>\n              </div>\n            )}\n          </div>\n        ) : (\n          <PremiumFeatureModal\n            initialSection={currentSection}\n            onBack={handleOpen(undefined)}\n            promo={promo}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClickSubscribe={handleClickWithStartParam}\n            isPremium={isPremium}\n            limits={limits}\n          />\n        )}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    premiumModal,\n  } = selectTabState(global);\n  return {\n    currentUserId: global.currentUserId,\n    promo: premiumModal?.promo,\n    isClosing: premiumModal?.isClosing,\n    isSuccess: premiumModal?.isSuccess,\n    isGift: premiumModal?.isGift,\n    monthsAmount: premiumModal?.monthsAmount,\n    fromUser: premiumModal?.fromUserId ? selectUser(global, premiumModal.fromUserId) : undefined,\n    toUser: premiumModal?.toUserId ? selectUser(global, premiumModal.toUserId) : undefined,\n    initialSection: premiumModal?.initialSection,\n    isPremium: selectIsCurrentUserPremium(global),\n    limitChannels: selectPremiumLimit(global, 'channels'),\n    limitFolders: selectPremiumLimit(global, 'dialogFilters'),\n    limitPins: selectPremiumLimit(global, 'dialogFolderPinned'),\n    limitLinks: selectPremiumLimit(global, 'channelsPublic'),\n    limits: global.appConfig?.limits,\n    premiumSlug: global.appConfig?.premiumInvoiceSlug,\n    premiumBotUsername: global.appConfig?.premiumBotUsername,\n    premiumPromoOrder: global.appConfig?.premiumPromoOrder,\n  };\n})(PremiumMainModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"c43s0Q6_xgGlM8sZxQ7Q\",\"active\":\"PjYaF42Oe55WgPpTP6Od\",\"input\":\"r03M3Tzd52_D2GCAdabK\",\"content\":\"oL_26LDnHDwJRxqKF1Kn\",\"month\":\"JmEuBQ4mFzu1MiFV5qSB\",\"perMonth\":\"hssGd7AUhDhhG2_aXqe9\",\"amount\":\"mhc9AgOUiNT2QMcErpQe\",\"discount\":\"WCXGWHYNQh8lg2rIWehC\"};","import type { ChangeEvent } from 'react';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiPremiumGiftOption } from '../../../api/types';\n\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport buildClassName from '../../../util/buildClassName';\nimport useLang from '../../../hooks/useLang';\n\nimport styles from './GiftOption.module.scss';\n\ntype OwnProps = {\n  option: ApiPremiumGiftOption;\n  checked?: boolean;\n  fullMonthlyAmount?: number;\n  onChange: (month: number) => void;\n};\n\nconst GiftOption: FC<OwnProps> = ({\n  option, checked, fullMonthlyAmount, onChange,\n}) => {\n  const lang = useLang();\n\n  const { months, amount, currency } = option;\n  const perMonth = Math.floor(amount / months);\n\n  const discount = useMemo(() => {\n    return fullMonthlyAmount && fullMonthlyAmount > perMonth\n      ? Math.ceil(100 - perMonth / (fullMonthlyAmount / 100))\n      : undefined;\n  }, [fullMonthlyAmount, perMonth]);\n\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      onChange(months);\n    }\n  }, [months, onChange]);\n\n  return (\n    <label className={buildClassName(styles.wrapper, checked && styles.active)} dir={lang.isRtl ? 'rtl' : undefined}>\n      <input\n        className={styles.input}\n        type=\"radio\"\n        name=\"gift_option\"\n        value={months}\n        checked={checked}\n        onChange={handleChange}\n      />\n      <div className={styles.content}>\n        <div className={styles.month}>{lang('Months', months)}</div>\n        <div className={styles.perMonth}>\n          {lang('PricePerMonth', formatCurrency(perMonth, currency, lang.code))}\n          {Boolean(discount) && (\n            <span className={styles.discount} title={lang('GiftDiscount')}> &minus;{discount}% </span>\n          )}\n        </div>\n        <div className={styles.amount}>{formatCurrency(amount, currency, lang.code)}</div>\n      </div>\n    </label>\n  );\n};\n\nexport default memo(GiftOption);\n","import React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiPremiumGiftOption, ApiUser } from '../../../api/types';\n\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport {\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\n\nimport Modal from '../../ui/Modal';\nimport Button from '../../ui/Button';\nimport Link from '../../ui/Link';\nimport Avatar from '../../common/Avatar';\nimport GiftOption from './GiftOption';\n\nimport styles from './GiftPremiumModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  gifts?: ApiPremiumGiftOption[];\n  monthlyCurrency?: string;\n  monthlyAmount?: number;\n};\n\nconst GiftPremiumModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  user,\n  gifts,\n  monthlyCurrency,\n  monthlyAmount,\n}) => {\n  const { openPremiumModal, closeGiftPremiumModal, openUrl } = getActions();\n\n  const lang = useLang();\n  const renderedUser = useCurrentOrPrev(user, true);\n  const renderedGifts = useCurrentOrPrev(gifts, true);\n  const [selectedOption, setSelectedOption] = useState<number | undefined>();\n  const firstGift = renderedGifts?.[0];\n  const fullMonthlyAmount = useMemo(() => {\n    if (!renderedGifts || renderedGifts.length === 0 || !firstGift) {\n      return undefined;\n    }\n\n    const cheaperGift = renderedGifts.reduce((acc, gift) => {\n      return gift.amount < firstGift?.amount ? gift : firstGift;\n    }, firstGift);\n\n    return cheaperGift.currency === monthlyCurrency && monthlyAmount\n      ? monthlyAmount\n      : Math.floor(cheaperGift.amount / cheaperGift.months);\n  }, [firstGift, renderedGifts, monthlyAmount, monthlyCurrency]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setSelectedOption(firstGift?.months);\n    }\n  }, [firstGift?.months, isOpen]);\n\n  const selectedGift = useMemo(() => {\n    return renderedGifts?.find((gift) => gift.months === selectedOption);\n  }, [renderedGifts, selectedOption]);\n\n  const handleSubmit = useCallback(() => {\n    if (!selectedGift) {\n      return;\n    }\n\n    closeGiftPremiumModal();\n    openUrl({ url: selectedGift.botUrl });\n  }, [closeGiftPremiumModal, openUrl, selectedGift]);\n\n  const handlePremiumClick = useCallback(() => {\n    openPremiumModal();\n  }, [openPremiumModal]);\n\n  function renderPremiumFeaturesLink() {\n    const info = lang('GiftPremiumListFeaturesAndTerms');\n    // Translation hack for rendering component inside string\n    const parts = info.match(/([^*]*)\\*([^*]+)\\*(.*)/);\n\n    if (!parts || parts.length < 4) {\n      return undefined;\n    }\n\n    return (\n      <p className={styles.premiumFeatures}>\n        {parts[1]}\n        <Link isPrimary onClick={handlePremiumClick}>{parts[2]}</Link>\n        {parts[3]}\n      </p>\n    );\n  }\n\n  return (\n    <Modal\n      onClose={closeGiftPremiumModal}\n      isOpen={isOpen}\n      className={styles.modalDialog}\n    >\n      <div className=\"custom-scroll\">\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => closeGiftPremiumModal()}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        <Avatar\n          user={renderedUser}\n          size=\"jumbo\"\n          className={styles.avatar}\n        />\n        <h2 className={styles.headerText}>\n          {lang('GiftTelegramPremiumTitle')}\n        </h2>\n        <p className={styles.description}>\n          {renderText(\n            lang('GiftTelegramPremiumDescription', getUserFirstOrLastName(renderedUser)),\n            ['emoji', 'simple_markdown'],\n          )}\n        </p>\n\n        <div className={styles.options}>\n          {renderedGifts?.map((gift) => (\n            <GiftOption\n              key={gift.amount}\n              option={gift}\n              fullMonthlyAmount={fullMonthlyAmount}\n              checked={gift.months === selectedOption}\n              onChange={setSelectedOption}\n            />\n          ))}\n        </div>\n\n        {renderPremiumFeaturesLink()}\n      </div>\n\n      <Button className={styles.button} isShiny disabled={!selectedOption} onClick={handleSubmit}>\n        {lang(\n          'GiftSubscriptionFor',\n          selectedGift && formatCurrency(Number(selectedGift.amount), selectedGift.currency, lang.code),\n        )}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { forUserId, monthlyCurrency, monthlyAmount } = selectTabState(global).giftPremiumModal || {};\n  const user = forUserId ? selectUser(global, forUserId) : undefined;\n  const gifts = user ? selectUserFullInfo(global, user.id)?.premiumGifts : undefined;\n\n  return {\n    user,\n    gifts,\n    monthlyCurrency,\n    monthlyAmount: monthlyAmount ? Number(monthlyAmount) : undefined,\n  };\n})(GiftPremiumModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modalDialog\":\"K80So3B9potKGNvwdtYE\",\"closeButton\":\"dxx424IZDNuP1OLbUIve\",\"avatar\":\"qJgJ7R5NJVmAxBjT5LxT\",\"headerText\":\"eqCNa8zBoMroKcepfXyE\",\"description\":\"MtYhgDChavNfKIUAJPzt\",\"premiumFeatures\":\"J0hST5xsC45ZolfGpbDc\",\"options\":\"HyfHjS1vAds31eFcSpDg\",\"button\":\"sSXm9RjIQSsVFi0D1nEd\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\n\nimport type { ApiLimitTypeWithModal } from '../../../../global/types';\nimport type { LangFn } from '../../../../hooks/useLang';\n\nimport renderText from '../../../common/helpers/renderText';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatFileSize } from '../../../../util/textFormat';\nimport { getActions, withGlobal } from '../../../../global';\nimport { selectIsCurrentUserPremium, selectIsPremiumPurchaseBlocked } from '../../../../global/selectors';\nimport useLang from '../../../../hooks/useLang';\nimport { MAX_UPLOAD_FILEPART_SIZE } from '../../../../config';\nimport useFlag from '../../../../hooks/useFlag';\n\nimport Modal from '../../../ui/Modal';\nimport Button from '../../../ui/Button';\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitReachedModal.module.scss';\n\nconst LIMIT_DESCRIPTION: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFolders',\n  uploadMaxFileparts: 'LimitReachedFileSize',\n  dialogFilters: 'LimitReachedFolders',\n  dialogFolderPinned: 'LimitReachedPinDialogs',\n  channelsPublic: 'LimitReachedPublicLinks',\n  channels: 'LimitReachedCommunities',\n  chatlistInvites: 'LimitReachedFolderLinks',\n  chatlistJoined: 'LimitReachedSharedFolders',\n};\n\nconst LIMIT_DESCRIPTION_BLOCKED: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersLocked',\n  uploadMaxFileparts: 'LimitReachedFileSizeLocked',\n  dialogFilters: 'LimitReachedFoldersLocked',\n  dialogFolderPinned: 'LimitReachedPinDialogsLocked',\n  channelsPublic: 'LimitReachedPublicLinksLocked',\n  channels: 'LimitReachedCommunitiesLocked',\n  chatlistInvites: 'LimitReachedFolderLinksLocked',\n  chatlistJoined: 'LimitReachedSharedFoldersLocked',\n};\n\nconst LIMIT_DESCRIPTION_PREMIUM: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersPremium',\n  uploadMaxFileparts: 'LimitReachedFileSizePremium',\n  dialogFilters: 'LimitReachedFoldersPremium',\n  dialogFolderPinned: 'LimitReachedPinDialogsPremium',\n  channelsPublic: 'LimitReachedPublicLinksPremium',\n  channels: 'LimitReachedCommunitiesPremium',\n  chatlistInvites: 'LimitReachedFolderLinksPremium',\n  chatlistJoined: 'LimitReachedSharedFoldersPremium',\n};\n\nconst LIMIT_ICON: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'icon-chat-badge',\n  uploadMaxFileparts: 'icon-file-badge',\n  dialogFilters: 'icon-folder-badge',\n  dialogFolderPinned: 'icon-pin-badge',\n  channelsPublic: 'icon-link-badge',\n  channels: 'icon-chats-badge',\n  chatlistInvites: 'icon-link-badge',\n  chatlistJoined: 'icon-folder-badge',\n};\n\nconst LIMIT_VALUE_FORMATTER: Partial<Record<ApiLimitTypeWithModal, (...args: any[]) => string>> = {\n  uploadMaxFileparts: (lang: LangFn, value: number) => {\n    // The real size is not exactly 4gb, so we need to round it\n    if (value === 8000) return lang('FileSize.GB', '4');\n    if (value === 4000) return lang('FileSize.GB', '2');\n    return formatFileSize(lang, value * MAX_UPLOAD_FILEPART_SIZE);\n  },\n};\n\nfunction getLimiterDescription({\n  lang,\n  limitType,\n  isPremium,\n  canBuyPremium,\n  defaultValue,\n  premiumValue,\n  valueFormatter,\n}: {\n  lang: LangFn;\n  limitType?: ApiLimitTypeWithModal;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n  defaultValue?: number;\n  premiumValue?: number;\n  valueFormatter?: (...args: any[]) => string;\n}) {\n  if (!limitType) {\n    return undefined;\n  }\n\n  const defaultValueFormatted = valueFormatter ? valueFormatter(lang, defaultValue) : defaultValue;\n  const premiumValueFormatted = valueFormatter ? valueFormatter(lang, premiumValue) : premiumValue;\n\n  if (isPremium) {\n    return lang(LIMIT_DESCRIPTION_PREMIUM[limitType], premiumValueFormatted);\n  }\n\n  return canBuyPremium\n    ? lang(LIMIT_DESCRIPTION[limitType],\n      limitType === 'channelsPublic' ? premiumValueFormatted : [defaultValueFormatted, premiumValueFormatted])\n    : lang(LIMIT_DESCRIPTION_BLOCKED[limitType], defaultValueFormatted);\n}\n\nexport type OwnProps = {\n  limit?: ApiLimitTypeWithModal;\n};\n\ntype StateProps = {\n  defaultValue?: number;\n  premiumValue?: number;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n};\n\nconst PremiumLimitReachedModal: FC<OwnProps & StateProps> = ({\n  defaultValue,\n  premiumValue,\n  limit,\n  isPremium,\n  canBuyPremium,\n}) => {\n  const { closeLimitReachedModal, openPremiumModal } = getActions();\n  const lang = useLang();\n\n  const [isClosing, startClosing, stopClosing] = useFlag();\n\n  const handleClick = useCallback(() => {\n    openPremiumModal();\n    startClosing();\n  }, [openPremiumModal, startClosing]);\n\n  useEffect(() => {\n    if (!limit && isClosing) stopClosing();\n  }, [isClosing, limit, stopClosing]);\n\n  const title = lang('LimitReached');\n  const valueFormatter = limit && LIMIT_VALUE_FORMATTER[limit];\n  const description = getLimiterDescription({\n    lang,\n    limitType: limit,\n    isPremium,\n    canBuyPremium,\n    defaultValue,\n    premiumValue,\n    valueFormatter,\n  });\n  const icon = limit && LIMIT_ICON[limit];\n  const canUpgrade = canBuyPremium && !isPremium;\n\n  return (\n    <Modal\n      onClose={startClosing}\n      onCloseAnimationEnd={closeLimitReachedModal}\n      isOpen={Boolean(limit) && !isClosing}\n      title={title}\n      className={styles.root}\n    >\n      {!canUpgrade && (\n        <div className={styles.limitBadge}>\n          <i className={buildClassName(styles.limitIcon, icon, 'icon')} />\n          <div className={styles.limitValue}>{valueFormatter?.(\n            lang, isPremium ? premiumValue : defaultValue,\n          ) || (isPremium ? premiumValue : defaultValue)}\n          </div>\n        </div>\n      )}\n\n      {canUpgrade && (\n        <PremiumLimitsCompare\n          className={styles.limitCompare}\n          leftValue={valueFormatter?.(lang, defaultValue) || defaultValue?.toString()}\n          rightValue={valueFormatter?.(lang, premiumValue) || premiumValue?.toString()}\n          floatingBadgeIcon={icon}\n        />\n      )}\n\n      <div>\n        {renderText(description || '', ['simple_markdown', 'br'])}\n      </div>\n\n      <div className={styles.dialogButtons}>\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={startClosing}\n          color=\"primary\"\n        >\n          {lang(canUpgrade ? 'Cancel' : 'OK')}\n        </Button>\n        {canUpgrade\n      && (\n        <Button\n          className={buildClassName('confirm-dialog-button', styles.subscribeButton)}\n          isShiny\n          onClick={handleClick}\n          color=\"primary\"\n        >\n          {lang('IncreaseLimit')}\n          <i className={buildClassName(styles.buttonIcon, 'icon', 'icon-double-badge')} />\n        </Button>\n      )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { limit }): StateProps => {\n    const { limits } = global.appConfig || {};\n    const isPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      defaultValue: limit ? limits?.[limit][0] : undefined,\n      premiumValue: limit ? limits?.[limit][1] : undefined,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      isPremium,\n    };\n  },\n)(PremiumLimitReachedModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"iz5RJvcQyNNDQzKfXQbN\",\"limit-compare\":\"az3lXhmlMfZfIQ_81jog\",\"limitCompare\":\"az3lXhmlMfZfIQ_81jog\",\"limit-badge\":\"womlEQglVV1w8ltVa6PQ\",\"limitBadge\":\"womlEQglVV1w8ltVa6PQ\",\"limit-value\":\"QC8Xe4ShGc_q82s4Tjmg\",\"limitValue\":\"QC8Xe4ShGc_q82s4Tjmg\",\"limit-icon\":\"q8SgjqQqlOVMSofzhdwh\",\"limitIcon\":\"q8SgjqQqlOVMSofzhdwh\",\"dialog-buttons\":\"DgRFl7StCs4fhROb7CKH\",\"dialogButtons\":\"DgRFl7StCs4fhROb7CKH\",\"subscribe-button\":\"Twnx_5clE9fKNOMo7lXf\",\"subscribeButton\":\"Twnx_5clE9fKNOMo7lXf\",\"button-icon\":\"BW05mF5k9uq5qBi_BYzg\",\"buttonIcon\":\"BW05mF5k9uq5qBi_BYzg\"};","import type { RefObject } from 'react';\nimport { useRef, useState } from '../../../lib/teact/teact';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport animateScroll from '../../../util/animateScroll';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nconst STICKER_INTERSECTION_THROTTLE = 200;\nconst STICKER_INTERSECTION_MARGIN = 100;\nconst SLIDE_TRANSITION_DURATION = 350 + ANIMATION_END_DELAY;\nconst SCROLL_MAX_DISTANCE_WHEN_CLOSE = 200;\nconst SCROLL_MAX_DISTANCE_WHEN_FAR = 80;\nconst FOCUS_MARGIN = 0.5 * REM;\n\nexport function useStickerPickerObservers(\n  containerRef: RefObject<HTMLDivElement>,\n  headerRef: RefObject<HTMLDivElement>,\n  idPrefix: string,\n  isHidden?: boolean,\n) {\n  const stickerSetIntersectionsRef = useRef<boolean[]>([]);\n\n  const [activeSetIndex, setActiveSetIndex] = useState<number>(0);\n\n  const {\n    observe: observeIntersectionForSet,\n    freeze: freezeForSet,\n    unfreeze: unfreezeForSet,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n  }, (entries) => {\n    const stickerSetIntersections = stickerSetIntersectionsRef.current;\n\n    entries.forEach((entry) => {\n      const index = Number(entry.target.id.replace(`${idPrefix}-`, ''));\n      stickerSetIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = stickerSetIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveSetIndex(minIntersectingIndex);\n  });\n\n  const {\n    observe: observeIntersectionForShowingItems,\n    freeze: freezeForShowingItems,\n    unfreeze: unfreezeForShowingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForPlayingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForCovers,\n  } = useIntersectionObserver({\n    rootRef: headerRef,\n  });\n\n  useSyncEffect(() => {\n    if (isHidden) {\n      freezeForSet();\n      freezeForShowingItems();\n    } else {\n      setTimeout(() => {\n        unfreezeForShowingItems();\n        unfreezeForSet();\n      }, SLIDE_TRANSITION_DURATION);\n    }\n  }, [freezeForSet, freezeForShowingItems, isHidden, unfreezeForSet, unfreezeForShowingItems]);\n\n  const selectStickerSet = useLastCallback((index: number) => {\n    setActiveSetIndex((currentIndex) => {\n      const stickerSetEl = document.getElementById(`${idPrefix}-${index}`)!;\n      const isClose = Math.abs(currentIndex - index) === 1;\n\n      animateScroll(\n        containerRef.current!,\n        stickerSetEl,\n        'start',\n        FOCUS_MARGIN,\n        isClose ? SCROLL_MAX_DISTANCE_WHEN_CLOSE : SCROLL_MAX_DISTANCE_WHEN_FAR,\n      );\n\n      return index;\n    });\n  });\n\n  return {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForShowingItems,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  };\n}\n","import { useState } from '../lib/teact/teact';\n\nimport useLastCallback from './useLastCallback';\n\nconst THRESHOLD = 5;\n\nexport default function useScrolledState(threshold = THRESHOLD) {\n  const [isAtBeginning, setIsAtBeginning] = useState(true);\n  const [isAtEnd, setIsAtEnd] = useState(true);\n\n  const handleScroll = useLastCallback((e: React.UIEvent<HTMLElement>) => {\n    const { scrollHeight, scrollTop, clientHeight } = e.target as HTMLElement;\n\n    setIsAtBeginning(scrollTop < threshold);\n    setIsAtEnd(scrollHeight - scrollTop - clientHeight < threshold);\n  });\n\n  return { isAtBeginning, isAtEnd, handleScroll };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xW0m4eR0ukCfRp6WS_Qd\",\"selected\":\"XTCJlnWtVba28wuDmeBN\"};","import React, {\n  memo, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { getDocumentMediaHash, isSameReaction } from '../../global/helpers';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useCoordsInSharedCanvas from '../../hooks/useCoordsInSharedCanvas';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useMedia from '../../hooks/useMedia';\n\nimport CustomEmoji from './CustomEmoji';\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\nimport styles from './ReactionEmoji.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  isSelected?: boolean;\n  loadAndPlay?: boolean;\n  observeIntersection?: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef?: React.RefObject<HTMLCanvasElement>;\n  onClick: (reaction: ApiReaction) => void;\n};\n\nconst ReactionEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  isSelected,\n  loadAndPlay,\n  observeIntersection,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const thumbDataUri = availableReaction?.staticIcon?.thumbnail?.dataUri;\n  const animationId = availableReaction?.selectAnimation?.id;\n  const coords = useCoordsInSharedCanvas(ref, sharedCanvasRef);\n  const mediaData = useMedia(\n    availableReaction?.selectAnimation ? getDocumentMediaHash(availableReaction.selectAnimation) : undefined,\n    !animationId,\n  );\n  const handleClick = useLastCallback(() => {\n    onClick(reaction);\n  });\n\n  const transitionClassNames = useMediaTransition(mediaData);\n  const fullClassName = buildClassName(\n    styles.root,\n    isSelected && styles.selected,\n    !isCustom && 'sticker-reaction',\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onClick={handleClick}\n      title={availableReaction?.title}\n      data-sticker-id={isCustom ? reaction.documentId : undefined}\n    >\n      {isCustom ? (\n        <CustomEmoji\n          ref={ref}\n          documentId={reaction.documentId}\n          size={EMOJI_SIZE_PICKER}\n          noPlay={!loadAndPlay}\n          observeIntersectionForPlaying={observeIntersection}\n          sharedCanvasRef={sharedCanvasRef}\n          sharedCanvasHqRef={sharedCanvasHqRef}\n          withTranslucentThumb\n        />\n      ) : (\n        <AnimatedIconWithPreview\n          tgsUrl={mediaData}\n          thumbDataUri={thumbDataUri}\n          play={loadAndPlay}\n          noLoop={false}\n          size={EMOJI_SIZE_PICKER}\n          isLowPriority\n          className={transitionClassNames}\n          sharedCanvas={sharedCanvasRef!.current || undefined}\n          sharedCanvasCoords={coords}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionEmoji);\n","import React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiAvailableReaction, ApiReaction, ApiSticker } from '../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  DEFAULT_STATUS_ICON_ID,\n  DEFAULT_TOPIC_ICON_STICKER_ID,\n  EMOJI_SIZE_PICKER,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  STICKER_SIZE_PICKER,\n} from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { selectIsAlwaysHighPriorityEmoji, selectIsSetPremium } from '../../global/selectors';\nimport { getReactionUniqueKey } from '../../global/helpers';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLang from '../../hooks/useLang';\nimport useFlag from '../../hooks/useFlag';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useResizeObserver from '../../hooks/useResizeObserver';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useWindowSize from '../../hooks/useWindowSize';\n\nimport StickerButton from './StickerButton';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Button from '../ui/Button';\nimport ReactionEmoji from './ReactionEmoji';\n\nimport grey from '../../assets/icons/forumTopic/grey.svg';\n\ntype OwnProps = {\n  stickerSet: StickerSetOrReactionsSetOrRecent;\n  loadAndPlay: boolean;\n  index: number;\n  idPrefix?: string;\n  isNearActive: boolean;\n  favoriteStickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldHideHeader?: boolean;\n  selectedReactionIds?: string[];\n  withDefaultTopicIcon?: boolean;\n  withDefaultStatusIcon?: boolean;\n  isTranslucent?: boolean;\n  observeIntersection?: ObserveFn;\n  observeIntersectionForPlayingItems: ObserveFn;\n  observeIntersectionForShowingItems: ObserveFn;\n  availableReactions?: ApiAvailableReaction[];\n  onStickerSelect?: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onReactionSelect?: (reaction: ApiReaction) => void;\n  onStickerUnfave?: (sticker: ApiSticker) => void;\n  onStickerFave?: (sticker: ApiSticker) => void;\n  onStickerRemoveRecent?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\nconst ITEMS_PER_ROW_FALLBACK = 8;\nconst ITEMS_MOBILE_PER_ROW_FALLBACK = 7;\nconst ITEMS_MINI_MOBILE_PER_ROW_FALLBACK = 6;\nconst MOBILE_WIDTH_THRESHOLD_PX = 440;\nconst MINI_MOBILE_WIDTH_THRESHOLD_PX = 362;\n\nconst StickerSet: FC<OwnProps> = ({\n  stickerSet,\n  loadAndPlay,\n  index,\n  idPrefix,\n  isNearActive,\n  favoriteStickers,\n  availableReactions,\n  isSavedMessages,\n  isStatusPicker,\n  isReactionPicker,\n  isCurrentUserPremium,\n  shouldHideHeader,\n  withDefaultTopicIcon,\n  selectedReactionIds,\n  withDefaultStatusIcon,\n  isTranslucent,\n  observeIntersection,\n  observeIntersectionForPlayingItems,\n  observeIntersectionForShowingItems,\n  onReactionSelect,\n  onStickerSelect,\n  onStickerUnfave,\n  onStickerFave,\n  onStickerRemoveRecent,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}) => {\n  const {\n    clearRecentStickers,\n    clearRecentCustomEmoji,\n    clearRecentReactions,\n    openPremiumModal,\n    toggleStickerSet,\n    loadStickers,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useLang();\n  const { width: windowWidth } = useWindowSize();\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const { isMobile } = useAppLayout();\n\n  const [itemsPerRow, setItemsPerRow] = useState(getItemsPerRowFallback(windowWidth));\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection ?? observeIntersectionForShowingItems);\n  const transitionClassNames = useMediaTransition(isIntersecting);\n\n  // `isNearActive` is set in advance during animation, but it is not reliable for short sets\n  const shouldRender = isNearActive || isIntersecting;\n\n  const stickerMarginPx = isMobile ? 8 : 4;\n  const emojiMarginPx = isMobile ? 8 : 10;\n  const emojiVerticalMarginPx = isMobile ? 8 : 4;\n  const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID;\n  const isFavorite = stickerSet.id === FAVORITE_SYMBOL_SET_ID;\n  const isPopular = stickerSet.id === POPULAR_SYMBOL_SET_ID;\n  const isEmoji = stickerSet.isEmoji;\n  const isPremiumSet = !isRecent && selectIsSetPremium(stickerSet);\n\n  const handleClearRecent = useLastCallback(() => {\n    if (isReactionPicker) {\n      clearRecentReactions();\n    } else if (isEmoji) {\n      clearRecentCustomEmoji();\n    } else {\n      clearRecentStickers();\n    }\n    closeConfirmModal();\n  });\n\n  const handleAddClick = useLastCallback(() => {\n    if (isPremiumSet && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'animated_emoji',\n      });\n    } else {\n      toggleStickerSet({\n        stickerSetId: stickerSet.id,\n      });\n    }\n  });\n\n  const handleDefaultTopicIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      id: DEFAULT_TOPIC_ICON_STICKER_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const handleDefaultStatusIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      id: DEFAULT_STATUS_ICON_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const itemSize = isEmoji ? EMOJI_SIZE_PICKER : STICKER_SIZE_PICKER;\n  const margin = isEmoji ? emojiMarginPx : stickerMarginPx;\n  const verticalMargin = isEmoji ? emojiVerticalMarginPx : stickerMarginPx;\n\n  const calculateItemsPerRow = useLastCallback((width: number) => {\n    if (!width) {\n      return getItemsPerRowFallback(windowWidth);\n    }\n\n    return Math.floor((width + margin) / (itemSize + margin));\n  });\n\n  const handleResize = useLastCallback((entry: ResizeObserverEntry) => {\n    setItemsPerRow(calculateItemsPerRow(entry.contentRect.width));\n  });\n\n  useResizeObserver(ref, handleResize);\n\n  useEffect(() => {\n    if (!ref.current) return;\n    setItemsPerRow(calculateItemsPerRow(ref.current.clientWidth));\n  }, [calculateItemsPerRow]);\n\n  useEffect(() => {\n    if (shouldRender && !stickerSet.stickers?.length && !stickerSet.reactions?.length && stickerSet.accessHash) {\n      loadStickers({\n        stickerSetInfo: {\n          id: stickerSet.id,\n          accessHash: stickerSet.accessHash,\n        },\n      });\n    }\n  }, [shouldRender, loadStickers, stickerSet]);\n\n  const isLocked = !isSavedMessages && !isRecent && isEmoji && !isCurrentUserPremium\n    && stickerSet.stickers?.some(({ isFree }) => !isFree);\n\n  const isInstalled = stickerSet.installedDate && !stickerSet.isArchived;\n  const canCut = !isInstalled && stickerSet.id !== RECENT_SYMBOL_SET_ID && stickerSet.id !== POPULAR_SYMBOL_SET_ID;\n  const [isCut, , expand] = useFlag(canCut);\n  const itemsBeforeCutout = itemsPerRow * 3 - 1;\n  const totalItemsCount = withDefaultTopicIcon ? stickerSet.count + 1 : stickerSet.count;\n\n  const itemHeight = itemSize + verticalMargin;\n  const heightWhenCut = Math.ceil(Math.min(itemsBeforeCutout, totalItemsCount) / itemsPerRow)\n    * itemHeight - verticalMargin;\n  const height = isCut ? heightWhenCut : Math.ceil(totalItemsCount / itemsPerRow) * itemHeight - verticalMargin;\n\n  const favoriteStickerIdsSet = useMemo(() => (\n    favoriteStickers ? new Set(favoriteStickers.map(({ id }) => id)) : undefined\n  ), [favoriteStickers]);\n  const withAddSetButton = !shouldHideHeader && !isRecent && isEmoji && !isInstalled && !isPopular;\n\n  return (\n    <div\n      ref={ref}\n      key={stickerSet.id}\n      id={`${idPrefix || 'sticker-set'}-${index}`}\n      className={\n        buildClassName('symbol-set', isLocked && 'symbol-set-locked')\n      }\n    >\n      {!shouldHideHeader && (\n        <div className=\"symbol-set-header\">\n          <p className={buildClassName('symbol-set-name', withAddSetButton && 'symbol-set-name-external')}>\n            {isLocked && <i className=\"symbol-set-locked-icon icon icon-lock-badge\" />}\n            {stickerSet.title}\n            {withAddSetButton && Boolean(stickerSet.stickers) && (\n              <span className=\"symbol-set-amount\">{lang('Stickers', stickerSet.stickers.length, 'i')}</span>\n            )}\n          </p>\n          {isRecent && (\n            <i className=\"symbol-set-remove icon icon-close\" onClick={openConfirmModal} />\n          )}\n          {withAddSetButton && (\n            <Button\n              className=\"symbol-set-add-button\"\n              withPremiumGradient={isPremiumSet && !isCurrentUserPremium}\n              onClick={handleAddClick}\n              pill\n              size=\"tiny\"\n              fluid\n            >\n              {isPremiumSet && isLocked ? lang('Unlock') : lang('Add')}\n            </Button>\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName('symbol-set-container shared-canvas-container', transitionClassNames)}\n        style={`height: ${height}px;`}\n      >\n        <canvas\n          ref={sharedCanvasRef}\n          className=\"shared-canvas\"\n          style={canCut ? `height: ${heightWhenCut}px;` : undefined}\n        />\n        {(isRecent || isFavorite || canCut) && <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />}\n        {withDefaultTopicIcon && (\n          <Button\n            className=\"StickerButton custom-emoji\"\n            color=\"translucent\"\n            onClick={handleDefaultTopicIconClick}\n            key=\"default-topic-icon\"\n          >\n            <img src={grey} alt=\"Reset\" className=\"sticker-media\" />\n          </Button>\n        )}\n        {withDefaultStatusIcon && (\n          <Button\n            className=\"StickerButton custom-emoji status-default\"\n            color=\"translucent\"\n            onClick={handleDefaultStatusIconClick}\n            key=\"default-status-icon\"\n          >\n            <i className=\"icon icon-premium\" />\n          </Button>\n        )}\n        {shouldRender && stickerSet.reactions?.map((reaction) => {\n          const reactionId = getReactionUniqueKey(reaction);\n          const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n          return (\n            <ReactionEmoji\n              key={`${stickerSet.id}_${reactionId}`}\n              reaction={reaction}\n              isSelected={isSelected}\n              loadAndPlay={loadAndPlay}\n              availableReactions={availableReactions}\n              observeIntersection={observeIntersectionForPlayingItems}\n              onClick={onReactionSelect!}\n              sharedCanvasRef={sharedCanvasRef}\n              sharedCanvasHqRef={sharedCanvasHqRef}\n            />\n          );\n        })}\n        {shouldRender && stickerSet.stickers?.slice(0, isCut ? itemsBeforeCutout : stickerSet.stickers.length)\n          .map((sticker, i) => {\n            const isHqEmoji = (isRecent || isFavorite)\n              && selectIsAlwaysHighPriorityEmoji(getGlobal(), sticker.stickerSetInfo);\n            const canvasRef = (canCut && i >= itemsBeforeCutout) || isHqEmoji\n              ? sharedCanvasHqRef\n              : sharedCanvasRef;\n            const reactionId = sticker.isCustomEmoji ? sticker.id : sticker.emoji;\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            return (\n              <StickerButton\n                key={sticker.id}\n                sticker={sticker}\n                size={itemSize}\n                observeIntersection={observeIntersectionForPlayingItems}\n                observeIntersectionForShowing={observeIntersectionForShowingItems}\n                noPlay={!loadAndPlay}\n                isSavedMessages={isSavedMessages}\n                isStatusPicker={isStatusPicker}\n                canViewSet\n                isCurrentUserPremium={isCurrentUserPremium}\n                sharedCanvasRef={canvasRef}\n                withTranslucentThumb={isTranslucent}\n                onClick={onStickerSelect}\n                clickArg={sticker}\n                isSelected={isSelected}\n                onUnfaveClick={isFavorite && favoriteStickerIdsSet?.has(sticker.id) ? onStickerUnfave : undefined}\n                onFaveClick={!favoriteStickerIdsSet?.has(sticker.id) ? onStickerFave : undefined}\n                onRemoveRecentClick={isRecent ? onStickerRemoveRecent : undefined}\n                onContextMenuOpen={onContextMenuOpen}\n                onContextMenuClose={onContextMenuClose}\n                onContextMenuClick={onContextMenuClick}\n              />\n            );\n          })}\n        {isCut && totalItemsCount > itemsBeforeCutout && (\n          <Button\n            className=\"StickerButton custom-emoji set-expand\"\n            round\n            color=\"translucent\"\n            onClick={expand}\n            key=\"more\"\n          >\n            +{totalItemsCount - itemsBeforeCutout}\n          </Button>\n        )}\n      </div>\n\n      {isRecent && (\n        <ConfirmDialog\n          text={lang(isReactionPicker ? 'ClearRecentReactionsAlertMessage' : 'ClearRecentStickersAlertMessage')}\n          isOpen={isConfirmModalOpen}\n          onClose={closeConfirmModal}\n          confirmHandler={handleClearRecent}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerSet);\n\nfunction getItemsPerRowFallback(windowWidth: number): number {\n  return windowWidth > MOBILE_WIDTH_THRESHOLD_PX\n    ? ITEMS_PER_ROW_FALLBACK\n    : (windowWidth < MINI_MOBILE_WIDTH_THRESHOLD_PX\n      ? ITEMS_MINI_MOBILE_PER_ROW_FALLBACK\n      : ITEMS_MOBILE_PER_ROW_FALLBACK);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"z2hl3sxq0tzStr0JpMxi\",\"video\":\"h6jE3TEaqlzbs0ro0J2_\",\"image\":\"ivo3DVINrp81Kb9ho9kA\"};","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_PICKER_HEADER } from '../../../config';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../global/selectors';\nimport { IS_WEBM_SUPPORTED } from '../../../util/windowEnvironment';\nimport { getFirstLetters } from '../../../util/textFormat';\nimport buildClassName from '../../../util/buildClassName';\nimport { getStickerPreviewHash } from '../../../global/helpers';\n\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useCoordsInSharedCanvas from '../../../hooks/useCoordsInSharedCanvas';\nimport useCustomEmoji from '../../common/hooks/useCustomEmoji';\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useColorFilter from '../../../hooks/stickers/useColorFilter';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\n\nimport styles from './StickerSetCover.module.scss';\n\ntype OwnProps = {\n  stickerSet: ApiStickerSet;\n  size?: number;\n  noPlay?: boolean;\n  observeIntersection: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n};\n\nconst StickerSetCover: FC<OwnProps> = ({\n  stickerSet,\n  size = STICKER_SIZE_PICKER_HEADER,\n  noPlay,\n  observeIntersection,\n  sharedCanvasRef,\n}) => {\n  const { loadStickers } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    hasThumbnail, thumbCustomEmojiId, isLottie, isVideos: isVideo,\n  } = stickerSet;\n\n  const { customEmoji } = useCustomEmoji(thumbCustomEmojiId);\n  const hasCustomColor = customEmoji?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(containerRef, !hasCustomColor);\n  const colorFilter = useColorFilter(customColor);\n\n  const isIntersecting = useIsIntersecting(containerRef, observeIntersection);\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const shouldFallbackToStatic = stickerSet.stickers && isVideo && !IS_WEBM_SUPPORTED;\n  const staticHash = shouldFallbackToStatic && getStickerPreviewHash(stickerSet.stickers![0].id);\n  const staticMediaData = useMedia(staticHash, !isIntersecting);\n\n  const mediaHash = ((hasThumbnail && !shouldFallbackToStatic) || isLottie) && `stickerSet${stickerSet.id}`;\n  const mediaData = useMedia(mediaHash, !isIntersecting);\n  const isReady = mediaData || staticMediaData;\n  const transitionClassNames = useMediaTransition(isReady);\n\n  const coords = useCoordsInSharedCanvas(containerRef, sharedCanvasRef);\n\n  useEffect(() => {\n    if (isIntersecting && !stickerSet.stickers?.length) {\n      loadStickers({\n        stickerSetInfo: {\n          id: stickerSet.id,\n          accessHash: stickerSet.accessHash,\n        },\n      });\n    }\n  }, [isIntersecting, loadStickers, stickerSet]);\n\n  return (\n    <div ref={containerRef} className={buildClassName(styles.root, 'sticker-set-cover')}>\n      {isReady ? (\n        isLottie ? (\n          <AnimatedSticker\n            className={transitionClassNames}\n            tgsUrl={mediaData}\n            size={size}\n            play={shouldPlay}\n            isLowPriority={!selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet)}\n            sharedCanvas={sharedCanvasRef?.current || undefined}\n            sharedCanvasCoords={coords}\n          />\n        ) : (isVideo && !shouldFallbackToStatic) ? (\n          <OptimizedVideo\n            className={buildClassName(styles.video, transitionClassNames)}\n            src={mediaData}\n            canPlay={shouldPlay}\n            style={colorFilter}\n            loop\n            disablePictureInPicture\n          />\n        ) : (\n          <img\n            src={mediaData || staticMediaData}\n            style={colorFilter}\n            className={buildClassName(styles.image, transitionClassNames)}\n            alt=\"\"\n          />\n        )\n      ) : (\n        getFirstLetters(stickerSet.title, 2)\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerSetCover);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gsyAr7lPlzHWUF_aYaVa\",\"main\":\"cnWk4tq3tmB7r08ScyxQ\",\"main_customEmoji\":\"UEOQzPhb8wS2YI61dKJE\",\"mainCustomEmoji\":\"UEOQzPhb8wS2YI61dKJE\",\"header\":\"x0Qtu0yjl4v02fLLyxV1\",\"headerWithBorder\":\"m4MXEae1lmdJZV64zN6b\",\"stickerCover\":\"A5Fetmgo_VQRMWxFTV_v\",\"activated\":\"yiTAGOkL3Hgb0VXRPy46\",\"pickerDisabled\":\"jNEbrwsYAlEp67HG75uy\"};","import React, {\n  useEffect, memo, useRef, useMemo,\n} from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type {\n  ApiStickerSet, ApiSticker, ApiReaction, ApiAvailableReaction,\n} from '../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  CHAT_STICKER_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  PREMIUM_STICKER_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n  TOP_SYMBOL_SET_ID,\n} from '../../config';\nimport { REM } from './helpers/mediaDimensions';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport buildClassName from '../../util/buildClassName';\nimport animateHorizontalScroll from '../../util/animateHorizontalScroll';\nimport { pickTruthy, unique } from '../../util/iteratees';\nimport { isSameReaction } from '../../global/helpers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectIsAlwaysHighPriorityEmoji,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n} from '../../global/selectors';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useAsyncRendering from '../right/hooks/useAsyncRendering';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport { useStickerPickerObservers } from './hooks/useStickerPickerObservers';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Loading from '../ui/Loading';\nimport Button from '../ui/Button';\nimport StickerButton from './StickerButton';\nimport StickerSet from './StickerSet';\nimport StickerSetCover from '../middle/composer/StickerSetCover';\n\nimport pickerStyles from '../middle/composer/StickerPicker.module.scss';\nimport styles from './CustomEmojiPicker.module.scss';\n\ntype OwnProps = {\n  chatId?: string;\n  className?: string;\n  isHidden?: boolean;\n  loadAndPlay: boolean;\n  idPrefix?: string;\n  withDefaultTopicIcons?: boolean;\n  onCustomEmojiSelect: (sticker: ApiSticker) => void;\n  onReactionSelect?: (reaction: ApiReaction) => void;\n  selectedReactionIds?: string[];\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isTranslucent?: boolean;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  customEmojisById?: Record<string, ApiSticker>;\n  recentCustomEmojiIds?: string[];\n  recentStatusEmojis?: ApiSticker[];\n  topReactions?: ApiReaction[];\n  recentReactions?: ApiReaction[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  availableReactions?: ApiAvailableReaction[];\n  addedCustomEmojiIds?: string[];\n  defaultTopicIconsId?: string;\n  defaultStatusIconsId?: string;\n  customEmojiFeaturedIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst DEFAULT_ID_PREFIX = 'custom-emoji-set';\nconst TOP_REACTIONS_COUNT = 16;\nconst RECENT_REACTIONS_COUNT = 32;\nconst FADED_BUTTON_SET_IDS = new Set([RECENT_SYMBOL_SET_ID, FAVORITE_SYMBOL_SET_ID, POPULAR_SYMBOL_SET_ID]);\nconst STICKER_SET_IDS_WITH_COVER = new Set([\n  RECENT_SYMBOL_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  CHAT_STICKER_SET_ID,\n  PREMIUM_STICKER_SET_ID,\n]);\n\nconst CustomEmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  isHidden,\n  loadAndPlay,\n  addedCustomEmojiIds,\n  customEmojisById,\n  recentCustomEmojiIds,\n  selectedReactionIds,\n  recentStatusEmojis,\n  stickerSetsById,\n  topReactions,\n  recentReactions,\n  availableReactions,\n  idPrefix = DEFAULT_ID_PREFIX,\n  customEmojiFeaturedIds,\n  canAnimate,\n  isReactionPicker,\n  isStatusPicker,\n  isTranslucent,\n  isSavedMessages,\n  isCurrentUserPremium,\n  withDefaultTopicIcons,\n  defaultTopicIconsId,\n  defaultStatusIconsId,\n  onCustomEmojiSelect,\n  onReactionSelect,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const recentCustomEmojis = useMemo(() => {\n    return isStatusPicker\n      ? recentStatusEmojis\n      : Object.values(pickTruthy(customEmojisById!, recentCustomEmojiIds!));\n  }, [customEmojisById, isStatusPicker, recentCustomEmojiIds, recentStatusEmojis]);\n\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, idPrefix, isHidden);\n\n  const lang = useLang();\n\n  const areAddedLoaded = Boolean(addedCustomEmojiIds);\n\n  const allSets = useMemo(() => {\n    if (!addedCustomEmojiIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    const defaultSets: StickerSetOrReactionsSetOrRecent[] = [];\n\n    if (isReactionPicker) {\n      const topReactionsSlice = topReactions?.slice(0, TOP_REACTIONS_COUNT) || [];\n      if (topReactionsSlice?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: lang('Reactions'),\n          reactions: topReactionsSlice,\n          count: topReactionsSlice.length,\n          isEmoji: true,\n        });\n      }\n\n      const cleanRecentReactions = (recentReactions || [])\n        .filter((reaction) => !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction)))\n        .slice(0, RECENT_REACTIONS_COUNT);\n      const cleanAvailableReactions = (availableReactions || [])\n        .map(({ reaction }) => reaction)\n        .filter((reaction) => {\n          return !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction))\n            && !cleanRecentReactions.some((topReaction) => isSameReaction(topReaction, reaction));\n        });\n      if (cleanAvailableReactions?.length || cleanRecentReactions?.length) {\n        const isPopular = !cleanRecentReactions?.length;\n        const allRecentReactions = cleanRecentReactions.concat(cleanAvailableReactions);\n        defaultSets.push({\n          id: isPopular ? POPULAR_SYMBOL_SET_ID : RECENT_SYMBOL_SET_ID,\n          accessHash: '',\n          title: lang(isPopular ? 'PopularReactions' : 'RecentStickers'),\n          reactions: allRecentReactions,\n          count: allRecentReactions.length,\n          isEmoji: true,\n        });\n      }\n    } else if (isStatusPicker) {\n      const defaultStatusIconsPack = stickerSetsById[defaultStatusIconsId!];\n      if (defaultStatusIconsPack?.stickers?.length) {\n        const stickers = (defaultStatusIconsPack.stickers || []).concat(recentCustomEmojis || []);\n        defaultSets.push({\n          ...defaultStatusIconsPack,\n          stickers,\n          count: stickers.length,\n          id: RECENT_SYMBOL_SET_ID,\n          title: lang('RecentStickers'),\n        });\n      }\n    } else if (withDefaultTopicIcons) {\n      const defaultTopicIconsPack = stickerSetsById[defaultTopicIconsId!];\n      if (defaultTopicIconsPack.stickers?.length) {\n        defaultSets.push({\n          ...defaultTopicIconsPack,\n          id: RECENT_SYMBOL_SET_ID,\n          title: lang('RecentStickers'),\n        });\n      }\n    } else if (recentCustomEmojis?.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('RecentStickers'),\n        stickers: recentCustomEmojis,\n        count: recentCustomEmojis.length,\n        isEmoji: true,\n      });\n    }\n\n    const setIdsToDisplay = unique(addedCustomEmojiIds.concat(customEmojiFeaturedIds || []));\n\n    const setsToDisplay = Object.values(pickTruthy(stickerSetsById, setIdsToDisplay));\n\n    return [\n      ...defaultSets,\n      ...setsToDisplay,\n    ];\n  }, [\n    addedCustomEmojiIds, isReactionPicker, isStatusPicker, withDefaultTopicIcons, recentCustomEmojis,\n    customEmojiFeaturedIds, stickerSetsById, topReactions, availableReactions, lang, recentReactions,\n    defaultStatusIconsId, defaultTopicIconsId,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  const canRenderContent = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContent = areAddedLoaded && canRenderContent && !noPopulatedSets;\n\n  useHorizontalScroll(headerRef, isMobile || !shouldRenderContent);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n  });\n\n  const handleReactionSelect = useLastCallback((reaction: ApiReaction) => {\n    onReactionSelect?.(reaction);\n  });\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(\n      pickerStyles.stickerCover,\n      index === activeSetIndex && styles.activated,\n    );\n\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n    const isHq = selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet as ApiStickerSet);\n\n    if (stickerSet.id === TOP_SYMBOL_SET_ID) {\n      return undefined;\n    }\n\n    if (STICKER_SET_IDS_WITH_COVER.has(stickerSet.id) || stickerSet.hasThumbnail || !firstSticker) {\n      const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === POPULAR_SYMBOL_SET_ID;\n      const isFaded = FADED_BUTTON_SET_IDS.has(stickerSet.id);\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={isFaded}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(isRecent ? 0 : index)}\n        >\n          {isRecent ? (\n            <i className=\"icon icon-recent\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !loadAndPlay}\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n            />\n          )}\n        </Button>\n      );\n    }\n\n    return (\n      <StickerButton\n        key={stickerSet.id}\n        sticker={firstSticker}\n        size={STICKER_SIZE_PICKER_HEADER}\n        title={stickerSet.title}\n        className={buttonClassName}\n        noPlay={!canAnimate || !loadAndPlay}\n        observeIntersection={observeIntersectionForCovers}\n        noContextMenu\n        isCurrentUserPremium\n        sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n        withTranslucentThumb={isTranslucent}\n        onClick={selectStickerSet}\n        clickArg={index}\n      />\n    );\n  }\n\n  const fullClassName = buildClassName('StickerPicker', styles.root, className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={fullClassName}>\n        {noPopulatedSets ? (\n          <div className={pickerStyles.pickerDisabled}>{lang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    pickerStyles.header,\n    'no-selection no-scrollbar',\n    !shouldHideTopBorder && pickerStyles.headerWithBorder,\n  );\n  const listClassName = buildClassName(\n    pickerStyles.main,\n    pickerStyles.main_customEmoji,\n    'no-selection',\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n  );\n\n  return (\n    <div className={fullClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n      >\n        <div className=\"shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allSets.map(renderCover)}\n        </div>\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={listClassName}\n      >\n        {allSets.map((stickerSet, i) => {\n          const shouldHideHeader = stickerSet.id === TOP_SYMBOL_SET_ID\n            || (stickerSet.id === RECENT_SYMBOL_SET_ID && (withDefaultTopicIcons || isStatusPicker));\n\n          return (\n            <StickerSet\n              key={stickerSet.id}\n              stickerSet={stickerSet}\n              loadAndPlay={Boolean(canAnimate && loadAndPlay)}\n              index={i}\n              idPrefix={idPrefix}\n              observeIntersection={observeIntersectionForSet}\n              observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n              observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n              isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n              isSavedMessages={isSavedMessages}\n              isStatusPicker={isStatusPicker}\n              isReactionPicker={isReactionPicker}\n              shouldHideHeader={shouldHideHeader}\n              withDefaultTopicIcon={withDefaultTopicIcons && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              withDefaultStatusIcon={isStatusPicker && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              isCurrentUserPremium={isCurrentUserPremium}\n              selectedReactionIds={selectedReactionIds}\n              availableReactions={availableReactions}\n              isTranslucent={isTranslucent}\n              onReactionSelect={handleReactionSelect}\n              onStickerSelect={handleEmojiSelect}\n              onContextMenuOpen={onContextMenuOpen}\n              onContextMenuClose={onContextMenuClose}\n              onContextMenuClick={onContextMenuClick}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isStatusPicker, isReactionPicker }): StateProps => {\n    const {\n      stickers: {\n        setsById: stickerSetsById,\n      },\n      customEmojis: {\n        byId: customEmojisById,\n        featuredIds: customEmojiFeaturedIds,\n        statusRecent: {\n          emojis: recentStatusEmojis,\n        },\n      },\n      recentCustomEmojis: recentCustomEmojiIds,\n      recentReactions,\n      topReactions,\n    } = global;\n\n    const isSavedMessages = Boolean(chatId && selectIsChatWithSelf(global, chatId));\n\n    return {\n      customEmojisById: !isStatusPicker ? customEmojisById : undefined,\n      recentCustomEmojiIds: !isStatusPicker ? recentCustomEmojiIds : undefined,\n      recentStatusEmojis: isStatusPicker ? recentStatusEmojis : undefined,\n      stickerSetsById,\n      addedCustomEmojiIds: global.customEmojis.added.setIds,\n      canAnimate: selectCanPlayAnimatedEmojis(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      customEmojiFeaturedIds,\n      defaultTopicIconsId: global.defaultTopicIconsId,\n      defaultStatusIconsId: global.defaultStatusIconsId,\n      topReactions: isReactionPicker ? topReactions : undefined,\n      recentReactions: isReactionPicker ? recentReactions : undefined,\n      availableReactions: isReactionPicker ? global.availableReactions : undefined,\n    };\n  },\n)(CustomEmojiPicker));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"z0kj3ATb_u7kBMYsqUpx\",\"activated\":\"sGL0teusRxo4NrXceldd\"};","import type { RefObject } from 'react';\nimport React, {\n  useCallback, memo, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiSticker } from '../../../api/types';\n\nimport { selectIsContextMenuTranslucent } from '../../../global/selectors';\nimport useFlag from '../../../hooks/useFlag';\n\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\n\nimport styles from './StatusPickerMenu.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  statusButtonRef: RefObject<HTMLButtonElement>;\n  onEmojiStatusSelect: (emojiStatus: ApiSticker) => void;\n  onClose: () => void;\n};\n\ninterface StateProps {\n  areFeaturedStickersLoaded?: boolean;\n  isTranslucent?: boolean;\n}\n\nconst StatusPickerMenu: FC<OwnProps & StateProps> = ({\n  isOpen,\n  statusButtonRef,\n  areFeaturedStickersLoaded,\n  isTranslucent,\n  onEmojiStatusSelect,\n  onClose,\n}) => {\n  const { loadFeaturedEmojiStickers } = getActions();\n\n  const transformOriginX = useRef<number>();\n  const [isContextMenuShown, markContextMenuShown, unmarkContextMenuShown] = useFlag();\n  useEffect(() => {\n    transformOriginX.current = statusButtonRef.current!.getBoundingClientRect().right;\n  }, [isOpen, statusButtonRef]);\n\n  useEffect(() => {\n    if (isOpen && !areFeaturedStickersLoaded) {\n      loadFeaturedEmojiStickers();\n    }\n  }, [areFeaturedStickersLoaded, isOpen, loadFeaturedEmojiStickers]);\n\n  const handleEmojiSelect = useCallback((sticker: ApiSticker) => {\n    onEmojiStatusSelect(sticker);\n    onClose();\n  }, [onClose, onEmojiStatusSelect]);\n\n  return (\n    <Portal>\n      <Menu\n        isOpen={isOpen}\n        noCompact\n        positionX=\"right\"\n        bubbleClassName={styles.menuContent}\n        onClose={onClose}\n        transformOriginX={transformOriginX.current}\n        noCloseOnBackdrop={isContextMenuShown}\n      >\n        <CustomEmojiPicker\n          idPrefix=\"status-emoji-set-\"\n          loadAndPlay={isOpen}\n          isHidden={!isOpen}\n          isStatusPicker\n          isTranslucent={isTranslucent}\n          onContextMenuOpen={markContextMenuShown}\n          onContextMenuClose={unmarkContextMenuShown}\n          onCustomEmojiSelect={handleEmojiSelect}\n          onContextMenuClick={onClose}\n        />\n      </Menu>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    areFeaturedStickersLoaded: Boolean(global.customEmojis.featuredIds?.length),\n    isTranslucent: selectIsContextMenuTranslucent(global),\n  };\n})(StatusPickerMenu));\n","// extracted by mini-css-extract-plugin\nexport default {\"menuContent\":\"XWSv0Pf1SKleWNyX04yO\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nfCRD3Y0nXzkML0bsjLH\",\"default\":\"QWzDb6x9al63G3nr9BGn\",\"alternate\":\"EgTekmCFBiBkvcvWELZw\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport AnimatedCounter from '../common/AnimatedCounter';\nimport ShowTransition from './ShowTransition';\n\nimport styles from './Badge.module.scss';\n\ntype OwnProps = {\n  text?: string;\n  className?: string;\n  isAlternateColor?: boolean;\n};\n\nconst Badge: FC<OwnProps> = ({\n  text,\n  className,\n  isAlternateColor,\n}) => {\n  return (\n    <ShowTransition\n      className={buildClassName(styles.root, isAlternateColor ? styles.alternate : styles.default, className)}\n      isOpen={Boolean(text)}\n    >\n      {text && <AnimatedCounter text={text} />}\n    </ShowTransition>\n  );\n};\n\nexport default memo(Badge);\n","// extracted by mini-css-extract-plugin\nexport default {\"description\":\"UwWVjbf4Ptl9vrrJPZon\",\"picker-wrapper\":\"h97ntomDmLCVEoTjzCHi\",\"pickerWrapper\":\"h97ntomDmLCVEoTjzCHi\",\"picker-header\":\"Wz6C5rszlwOTdImks0cL\",\"pickerHeader\":\"Wz6C5rszlwOTdImks0cL\",\"picker-header-info\":\"OwAqbtXus5KwSxvNBKyu\",\"pickerHeaderInfo\":\"OwAqbtXus5KwSxvNBKyu\",\"selection-toggle\":\"s9Pgceru2c49SJ_hpk8Q\",\"selectionToggle\":\"s9Pgceru2c49SJ_hpk8Q\",\"foldersWrapper\":\"HFZAaai7bs4X21rCRSyQ\",\"folders\":\"Xrr7zKG4KrVimUxojATI\",\"folder\":\"_7YreahCXXe3zGG5sywZA\",\"button-text\":\"K7T3MH1zL9aRmVFtTBBu\",\"buttonText\":\"K7T3MH1zL9aRmVFtTBBu\",\"button-badge\":\"_Z6IH9MHEorrdl7VDqJ2\",\"buttonBadge\":\"_Z6IH9MHEorrdl7VDqJ2\"};","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiChatlistInviteNew } from '../../../api/types';\n\nimport renderText from '../../common/helpers/renderText';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\nimport Picker from '../../common/Picker';\nimport Badge from '../../ui/Badge';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteNew;\n};\n\nconst ChatlistNew: FC<OwnProps> = ({ invite }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useLang();\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.peerIds);\n\n  const joinedIds = useMemo(() => {\n    const chatsById = getGlobal().chats.byId;\n    return invite.peerIds.filter((id) => !chatsById[id].isNotJoined);\n  }, [invite.peerIds]);\n\n  const selectedCount = selectedPeerIds.length - joinedIds.length;\n\n  const badgeText = selectedCount ? selectedCount.toString() : undefined;\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.peerIds.length;\n    setSelectedPeerIds(areAllSelected ? joinedIds : invite.peerIds);\n  }, [invite.peerIds, joinedIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {renderText(lang('FolderLinkSubtitle', invite.title), ['simple_markdown', 'emoji'])}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {lang('FolderLinkHeaderChatsJoin', selectedCount, 'i')}\n          </div>\n          <div\n            className={styles.selectionToggle}\n            role=\"button\"\n            tabIndex={0}\n            onClick={handleSelectionToggle}\n          >\n            {selectedPeerIds.length === invite.peerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n          </div>\n        </div>\n        <Picker\n          itemIds={invite.peerIds}\n          lockedIds={joinedIds}\n          onSelectedIdsChange={setSelectedPeerIds}\n          selectedIds={selectedPeerIds}\n        />\n      </div>\n      <Button\n        onClick={handleButtonClick}\n        size=\"smaller\"\n        disabled={!selectedPeerIds.length}\n      >\n        <div className={styles.buttonText}>\n          {lang('FolderLinkButtonAdd', invite.title)}\n          <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistNew);\n","import React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiChatFolder, ApiChatlistInviteAlready } from '../../../api/types';\n\nimport renderText from '../../common/helpers/renderText';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\nimport Picker from '../../common/Picker';\nimport Badge from '../../ui/Badge';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteAlready;\n  folder: ApiChatFolder;\n};\n\nconst ChatlistAlready: FC<OwnProps> = ({ invite, folder }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.missingPeerIds);\n\n  const hasChatsToAdd = Boolean(invite.missingPeerIds.length);\n  const newChatsCount = hasChatsToAdd ? invite.missingPeerIds.length : 0;\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const descriptionText = hasChatsToAdd\n    ? lang('FolderLinkSubtitleChats', [newChatsCount, folder.title], undefined, newChatsCount)\n    : lang('FolderLinkSubtitleAlready', folder.title);\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    if (!selectedPeerIds.length) return;\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.missingPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : invite.missingPeerIds);\n  }, [invite.missingPeerIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        {Boolean(invite.missingPeerIds.length) && (\n          <>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {lang('FolderLinkHeaderChatsJoin', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === invite.missingPeerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n              </div>\n            </div>\n            <Picker\n              itemIds={invite.missingPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n            />\n          </>\n        )}\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {lang('FolderLinkHeaderAlready')}\n          </div>\n        </div>\n        <Picker\n          itemIds={invite.alreadyPeerIds}\n          lockedIds={invite.alreadyPeerIds}\n          selectedIds={invite.alreadyPeerIds}\n        />\n      </div>\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && lang('OK')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {lang('FolderLinkButtonJoinPlural')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistAlready);\n","import React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiChatFolder } from '../../../api/types';\n\nimport renderText from '../../common/helpers/renderText';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\nimport Badge from '../../ui/Badge';\nimport Picker from '../../common/Picker';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  folder: ApiChatFolder;\n  suggestedPeerIds?: string[];\n};\n\nconst ChatlistDelete: FC<OwnProps> = ({\n  folder,\n  suggestedPeerIds = MEMO_EMPTY_ARRAY,\n}) => {\n  const { closeChatlistModal, leaveChatlist } = getActions();\n\n  const lang = useLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(suggestedPeerIds);\n\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === suggestedPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : suggestedPeerIds);\n  }, [suggestedPeerIds, selectedPeerIds.length]);\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n    leaveChatlist({ folderId: folder.id, peerIds: selectedPeerIds });\n  }, [folder.id, selectedPeerIds]);\n\n  return (\n    <div className={styles.content}>\n      {Boolean(suggestedPeerIds?.length) && (\n        <>\n          <div className={styles.description}>\n            {renderText(lang('FolderLinkSubtitleRemove'), ['simple_markdown', 'emoji'])}\n          </div>\n          <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {lang('FolderLinkHeaderChatsQuit', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === suggestedPeerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n              </div>\n            </div>\n            <Picker\n              itemIds={suggestedPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n            />\n          </div>\n        </>\n      )}\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && lang('FolderLinkButtonRemove')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {lang('FolderLinkButtonRemoveChats')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistDelete);\n","import React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { TabState } from '../../../global/types';\nimport type { ApiChatFolder } from '../../../api/types';\n\nimport { selectChatFolder } from '../../../global/selectors';\n\nimport usePrevious from '../../../hooks/usePrevious';\nimport useLang from '../../../hooks/useLang';\n\nimport ChatlistNew from './ChatlistNew';\nimport ChatlistAlready from './ChatlistAlready';\nimport ChatlistDelete from './ChatlistDelete';\nimport Modal from '../../ui/Modal';\nimport Tab from '../../ui/Tab';\n\nimport styles from './ChatlistModal.module.scss';\n\nexport type OwnProps = {\n  info?: TabState['chatlistModal'];\n};\n\ntype StateProps = {\n  folder?: ApiChatFolder;\n};\n\nconst ChatlistInviteModal: FC<OwnProps & StateProps> = ({\n  info,\n  folder,\n}) => {\n  const { closeChatlistModal } = getActions();\n\n  const lang = useLang();\n\n  const isOpen = Boolean(info);\n  const renderingInfo = usePrevious(info) || info;\n  const renderingFolder = usePrevious(folder) || folder;\n\n  const title = useMemo(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return invite.missingPeerIds.length ? lang('FolderLinkTitleAddChats') : lang('FolderLinkTitleAlready');\n      }\n      return lang('FolderLinkTitleAdd');\n    }\n    if (renderingInfo.removal) {\n      return lang('FolderLinkTitleRemove');\n    }\n\n    return undefined;\n  }, [lang, renderingInfo]);\n\n  const renderingFolderTitle = useMemo(() => {\n    if (renderingFolder) return renderingFolder.title;\n    if (renderingInfo?.invite && 'title' in renderingInfo.invite) return renderingInfo.invite.title;\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  const folderTabNumber = useMemo(() => {\n    if (!renderingInfo?.invite) return undefined;\n    if ('missingPeerIds' in renderingInfo.invite) return renderingInfo.invite.missingPeerIds.length;\n    return undefined;\n  }, [renderingInfo]);\n\n  function renderFolders(folderTitle: string) {\n    return (\n      <div className={styles.foldersWrapper}>\n        <div className={styles.folders}>\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewLeft')} />\n          <Tab className={styles.folder} isActive badgeCount={folderTabNumber} isBadgeActive title={folderTitle} />\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewRight')} />\n        </div>\n      </div>\n    );\n  }\n\n  const renderContent = useCallback(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return <ChatlistAlready invite={invite} folder={renderingFolder!} />;\n      }\n\n      return <ChatlistNew invite={invite} />;\n    }\n\n    if (renderingInfo.removal) {\n      return <ChatlistDelete folder={renderingFolder!} suggestedPeerIds={renderingInfo.removal.suggestedPeerIds} />;\n    }\n\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      onClose={closeChatlistModal}\n      isSlim\n      hasCloseButton\n    >\n      {renderingFolderTitle && renderFolders(renderingFolderTitle)}\n      {renderContent()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { info }): StateProps => {\n    const { invite, removal } = info || {};\n    const folderId = removal?.folderId || (invite && 'folderId' in invite ? invite.folderId : undefined);\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n\n    return {\n      folder,\n    };\n  },\n)(ChatlistInviteModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\nimport SafeLink from './SafeLink';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n};\n\nconst AboutAdsModal: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n}) => {\n  const lang = useLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      hasCloseButton\n      title={lang('SponsoredMessageInfo')}\n    >\n      <p>{renderText(lang('SponsoredMessageInfoDescription1'), ['br'])}</p>\n      <p>{renderText(lang('SponsoredMessageInfoDescription2'), ['br'])}</p>\n      <p>{renderText(lang('SponsoredMessageInfoDescription3'), ['br'])}</p>\n      <p>\n        <SafeLink\n          url={lang('SponsoredMessageAlertLearnMoreUrl')}\n          text={lang('SponsoredMessageAlertLearnMoreUrl')}\n        />\n      </p>\n      <p>{renderText(lang('SponsoredMessageInfoDescription4'), ['br'])}</p>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Close')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(AboutAdsModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectChat, selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport {\n  isUserId,\n  getUserFirstOrLastName,\n  getPrivateChatUserId,\n  isChatBasicGroup,\n  isChatSuperGroup,\n  isChatChannel,\n} from '../../global/helpers';\nimport useLang from '../../hooks/useLang';\nimport renderText from './helpers/renderText';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  messageId: number;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isPrivateChat: boolean;\n  isChatWithSelf: boolean;\n  isGroup: boolean;\n  isSuperGroup: boolean;\n  canPinForAll: boolean;\n  contactName?: string;\n};\n\nconst PinMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  messageId,\n  isChannel,\n  isGroup,\n  isSuperGroup,\n  canPinForAll,\n  contactName,\n  onClose,\n}) => {\n  const { pinMessage } = getActions();\n\n  const handlePinMessageForAll = useCallback(() => {\n    pinMessage({\n      messageId, isUnpin: false,\n    });\n    onClose();\n  }, [pinMessage, messageId, onClose]);\n\n  const handlePinMessage = useCallback(() => {\n    pinMessage({\n      messageId, isUnpin: false, isOneSide: true, isSilent: true,\n    });\n    onClose();\n  }, [messageId, onClose, pinMessage]);\n\n  const lang = useLang();\n\n  function renderMessage() {\n    if (isChannel) {\n      return lang('PinMessageAlertChannel');\n    }\n\n    if (isGroup || isSuperGroup) {\n      return lang('PinMessageAlert');\n    }\n\n    return lang('PinMessageAlertChat');\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"pin\"\n      title={lang('PinMessageAlertTitle')}\n    >\n      <p>{renderMessage()}</p>\n      <div className=\"dialog-buttons-column\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessage}>\n          {lang('DialogPin')}\n        </Button>\n        {canPinForAll && (\n          <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessageForAll}>\n            {contactName\n              ? renderText(lang('Conversation.PinMessagesFor', contactName))\n              : lang('Conversation.PinMessageAlert.PinAndNotifyMembers')}\n          </Button>\n        )}\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const isPrivateChat = isUserId(chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat) && isChatChannel(chat);\n    const isGroup = Boolean(chat) && isChatBasicGroup(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const canPinForAll = (isPrivateChat && !isChatWithSelf) || isSuperGroup || isGroup;\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isChannel,\n      isGroup,\n      isSuperGroup,\n      canPinForAll,\n      contactName,\n    };\n  },\n)(PinMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport useLang from '../../hooks/useLang';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  pinnedMessagesCount?: number;\n  onClose: () => void;\n  onUnpin: () => void;\n};\n\nconst UnpinAllMessagesModal: FC<OwnProps> = ({\n  isOpen,\n  pinnedMessagesCount = 0,\n  onClose,\n  onUnpin,\n}) => {\n  const lang = useLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"unpin-all\"\n      title={lang('Chat.PanelUnpinAllMessages')}\n    >\n      <p>{lang('Chat.UnpinAllMessagesConfirmation', pinnedMessagesCount, 'i')}</p>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={onUnpin}>\n          {lang('DialogUnpin')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(UnpinAllMessagesModal);\n","import { getActions } from '../../../global';\n\nimport { useHotkeys } from '../../../hooks/useHotkeys';\n\nconst useCopySelectedMessages = (isActive?: boolean) => {\n  function handleCopy(e: KeyboardEvent) {\n    e.preventDefault();\n    getActions().copySelectedMessages();\n  }\n\n  useHotkeys(isActive ? { 'Mod+C': handleCopy } : undefined);\n};\n\nexport default useCopySelectedMessages;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport {\n  selectCanDeleteSelectedMessages, selectCurrentChat, selectTabState, selectUser,\n} from '../../global/selectors';\nimport {\n  isUserId,\n  getUserFirstOrLastName,\n  getPrivateChatUserId,\n  isChatBasicGroup,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport renderText from '../common/helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isSchedule: boolean;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  selectedMessageIds?: number[];\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  willDeleteForCurrentUserOnly?: boolean;\n  willDeleteForAll?: boolean;\n};\n\nconst DeleteSelectedMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  isSchedule,\n  selectedMessageIds,\n  canDeleteForAll,\n  contactName,\n  willDeleteForCurrentUserOnly,\n  willDeleteForAll,\n  onClose,\n}) => {\n  const {\n    deleteMessages,\n    deleteScheduledMessages,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const prevIsOpen = usePrevious(isOpen);\n\n  const handleDeleteMessageForAll = useLastCallback(() => {\n    onClose();\n    deleteMessages({ messageIds: selectedMessageIds!, shouldDeleteForAll: true });\n  });\n\n  const handleDeleteMessageForSelf = useLastCallback(() => {\n    if (isSchedule) {\n      deleteScheduledMessages({ messageIds: selectedMessageIds! });\n    } else {\n      deleteMessages({ messageIds: selectedMessageIds!, shouldDeleteForAll: false });\n    }\n\n    onClose();\n  });\n\n  const lang = useLang();\n\n  // Returning `undefined` from FC instead of `<Modal>` doesn't trigger useHistoryBack\n  useEffect(() => {\n    if (!isOpen && prevIsOpen) {\n      exitMessageSelectMode();\n    }\n  }, [exitMessageSelectMode, isOpen, prevIsOpen]);\n\n  if (!selectedMessageIds) {\n    return undefined;\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={canDeleteForAll ? undefined : handleDeleteMessageForSelf}\n      className=\"delete\"\n      title={lang('Conversation.DeleteManyMessages')}\n    >\n      <p>{lang('AreYouSureDeleteFewMessages')}</p>\n      {willDeleteForCurrentUserOnly && (\n        <p>This will delete them just for you, not for other participants in the chat.</p>\n      )}\n      {willDeleteForAll && (\n        <p>This will delete them for everyone in this chat.</p>\n      )}\n      <div className={canDeleteForAll ? 'dialog-buttons-column' : 'dialog-buttons'}>\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForAll}>\n            {contactName\n              ? renderText(lang('ChatList.DeleteForEveryone', contactName))\n              : lang('Conversation.DeleteMessagesForEveryone')}\n          </Button>\n        )}\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForSelf}>\n          {lang(canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isSchedule }): StateProps => {\n    const { messageIds: selectedMessageIds } = selectTabState(global).selectedMessages || {};\n    const { canDeleteForAll } = selectCanDeleteSelectedMessages(global);\n    const chat = selectCurrentChat(global);\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    const willDeleteForCurrentUserOnly = chat && isChatBasicGroup(chat) && !canDeleteForAll;\n    const willDeleteForAll = chat && isChatSuperGroup(chat);\n\n    return {\n      selectedMessageIds,\n      canDeleteForAll: !isSchedule && canDeleteForAll,\n      contactName,\n      willDeleteForCurrentUserOnly,\n      willDeleteForAll,\n    };\n  },\n)(DeleteSelectedMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\n\nimport {\n  selectCanDeleteSelectedMessages,\n  selectCanDownloadSelectedMessages,\n  selectCanForwardMessages,\n  selectCanReportSelectedMessages,\n  selectCurrentMessageList, selectTabState,\n  selectHasProtectedMessage,\n  selectSelectedMessagesCount,\n} from '../../global/selectors';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useFlag from '../../hooks/useFlag';\nimport usePrevious from '../../hooks/usePrevious';\nimport useLang from '../../hooks/useLang';\nimport useCopySelectedMessages from './hooks/useCopySelectedMessages';\n\nimport Button from '../ui/Button';\nimport DeleteSelectedMessageModal from './DeleteSelectedMessageModal';\nimport ReportModal from '../common/ReportModal';\n\nimport './MessageSelectToolbar.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  canPost?: boolean;\n  messageListType?: MessageListType;\n};\n\ntype StateProps = {\n  isSchedule: boolean;\n  selectedMessagesCount?: number;\n  canDeleteMessages?: boolean;\n  canReportMessages?: boolean;\n  canDownloadMessages?: boolean;\n  canForwardMessages?: boolean;\n  hasProtectedMessage?: boolean;\n  isAnyModalOpen?: boolean;\n  selectedMessageIds?: number[];\n};\n\nconst MessageSelectToolbar: FC<OwnProps & StateProps> = ({\n  canPost,\n  isActive,\n  messageListType,\n  isSchedule,\n  selectedMessagesCount,\n  canDeleteMessages,\n  canReportMessages,\n  canDownloadMessages,\n  canForwardMessages,\n  hasProtectedMessage,\n  isAnyModalOpen,\n  selectedMessageIds,\n}) => {\n  const {\n    exitMessageSelectMode,\n    openForwardMenuForSelectedMessages,\n    downloadSelectedMessages,\n    copySelectedMessages,\n    showNotification,\n  } = getActions();\n  const lang = useLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n\n  useCopySelectedMessages(isActive);\n\n  const handleExitMessageSelectMode = useLastCallback(() => {\n    exitMessageSelectMode();\n  });\n\n  useEffect(() => {\n    return isActive && !isDeleteModalOpen && !isReportModalOpen && !isAnyModalOpen\n      ? captureKeyboardListeners({\n        onBackspace: canDeleteMessages ? openDeleteModal : undefined,\n        onDelete: canDeleteMessages ? openDeleteModal : undefined,\n        onEsc: handleExitMessageSelectMode,\n      })\n      : undefined;\n  }, [\n    isActive, isDeleteModalOpen, isReportModalOpen, openDeleteModal, handleExitMessageSelectMode, isAnyModalOpen,\n    canDeleteMessages,\n  ]);\n\n  const handleCopy = useLastCallback(() => {\n    copySelectedMessages();\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    exitMessageSelectMode();\n  });\n\n  const handleDownload = useLastCallback(() => {\n    downloadSelectedMessages();\n    exitMessageSelectMode();\n  });\n\n  const prevSelectedMessagesCount = usePrevious(selectedMessagesCount || undefined, true);\n  const renderingSelectedMessagesCount = isActive ? selectedMessagesCount : prevSelectedMessagesCount;\n\n  const formattedMessagesCount = lang('VoiceOver.Chat.MessagesSelected', renderingSelectedMessagesCount, 'i');\n\n  const className = buildClassName(\n    'MessageSelectToolbar',\n    canPost && 'with-composer',\n    isActive && 'shown',\n  );\n\n  const renderButton = (\n    icon: string, label: string, onClick: AnyToVoidFunction, destructive?: boolean,\n  ) => {\n    return (\n      <div\n        role=\"button\"\n        tabIndex={0}\n        className={buildClassName(\n          'div-button',\n          'item',\n          destructive && 'destructive',\n        )}\n        onClick={onClick}\n        title={label}\n      >\n        <i className={buildClassName('icon', `icon-${icon}`)} />\n      </div>\n    );\n  };\n\n  return (\n    <div className={className}>\n      <div className=\"MessageSelectToolbar-inner\">\n        <Button\n          color=\"translucent\"\n          round\n          onClick={handleExitMessageSelectMode}\n          ariaLabel=\"Exit select mode\"\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        <span className=\"MessageSelectToolbar-count\" title={formattedMessagesCount}>\n          {formattedMessagesCount}\n        </span>\n\n        {Boolean(selectedMessagesCount) && (\n          <div className=\"MessageSelectToolbar-actions\">\n            {messageListType !== 'scheduled' && canForwardMessages && (\n              renderButton(\n                'forward', lang('Chat.ForwardActionHeader'), openForwardMenuForSelectedMessages,\n              )\n            )}\n            {canReportMessages && (\n              renderButton('flag', lang('Conversation.ReportMessages'), openReportModal)\n            )}\n            {canDownloadMessages && !hasProtectedMessage && (\n              renderButton('download', lang('lng_media_download'), handleDownload)\n            )}\n            {!hasProtectedMessage && (\n              renderButton('copy', lang('lng_context_copy_selected_items'), handleCopy)\n            )}\n            {canDeleteMessages && (\n              renderButton('delete', lang('EditAdminGroupDeleteMessages'), openDeleteModal, true)\n            )}\n          </div>\n        )}\n      </div>\n      <DeleteSelectedMessageModal\n        isOpen={isDeleteModalOpen}\n        isSchedule={isSchedule}\n        onClose={closeDeleteModal}\n      />\n      <ReportModal\n        isOpen={isReportModalOpen}\n        onClose={closeReportModal}\n        messageIds={selectedMessageIds}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const { type: messageListType, chatId } = selectCurrentMessageList(global) || {};\n    const isSchedule = messageListType === 'scheduled';\n    const { canDelete } = selectCanDeleteSelectedMessages(global);\n    const canReport = Boolean(!isSchedule && selectCanReportSelectedMessages(global));\n    const canDownload = selectCanDownloadSelectedMessages(global);\n    const { messageIds: selectedMessageIds } = tabState.selectedMessages || {};\n    const hasProtectedMessage = chatId ? selectHasProtectedMessage(global, chatId, selectedMessageIds) : false;\n    const canForward = !isSchedule && chatId ? selectCanForwardMessages(global, chatId, selectedMessageIds) : false;\n    const isForwardModalOpen = tabState.forwardMessages.isModalShown;\n    const isAnyModalOpen = Boolean(isForwardModalOpen || tabState.requestedDraft\n      || tabState.requestedAttachBotInChat || tabState.requestedAttachBotInstall);\n\n    return {\n      isSchedule,\n      selectedMessagesCount: selectSelectedMessagesCount(global),\n      canDeleteMessages: canDelete,\n      canReportMessages: canReport,\n      canDownloadMessages: canDownload,\n      canForwardMessages: canForward,\n      selectedMessageIds,\n      hasProtectedMessage,\n      isAnyModalOpen,\n    };\n  },\n)(MessageSelectToolbar));\n","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectChatMessage, selectTabState } from '../../global/selectors';\nimport { formatDateAtTime } from '../../util/dateFormat';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLang from '../../hooks/useLang';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\nimport PrivateChatInfo from './PrivateChatInfo';\nimport ListItem from '../ui/ListItem';\n\nimport styles from './SeenByModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = {\n  seenByDates?: Record<string, number>;\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\n\nfunction SeenByModal({\n  isOpen,\n  seenByDates,\n}: OwnProps & StateProps) {\n  const {\n    openChat,\n    closeSeenByModal,\n  } = getActions();\n\n  const lang = useLang();\n\n  const renderingSeenByDates = useCurrentOrPrev(seenByDates, true);\n  const memberIds = useMemo(() => {\n    if (!renderingSeenByDates) {\n      return undefined;\n    }\n\n    const result = Object.keys(renderingSeenByDates);\n    result.sort((leftId, rightId) => renderingSeenByDates[rightId] - renderingSeenByDates[leftId]);\n\n    return result;\n  }, [renderingSeenByDates]);\n\n  const handleClick = useLastCallback((userId: string) => {\n    closeSeenByModal();\n\n    setTimeout(() => {\n      openChat({ id: userId });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleCloseSeenByModal = useLastCallback(() => {\n    closeSeenByModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={closeSeenByModal}\n      className={buildClassName(styles.modal, 'narrow')}\n      title={`Seen by ${memberIds?.length} users`}\n    >\n      <div dir={lang.isRtl ? 'rtl' : undefined}>\n        {memberIds && memberIds.map((userId) => (\n          <ListItem\n            key={userId}\n            className=\"chat-item-clickable scroll-item small-icon\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(userId)}\n          >\n            <PrivateChatInfo\n              userId={userId}\n              noStatusOrTyping\n              status={formatDateAtTime(lang, renderingSeenByDates![userId] * 1000)}\n              statusIcon=\"icon-message-read\"\n            />\n          </ListItem>\n        ))}\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleCloseSeenByModal}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).seenByModal || {};\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    return {\n      seenByDates: selectChatMessage(global, chatId, messageId)?.seenByDates,\n    };\n  },\n)(SeenByModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"phK_DdEImRiGA8z2FwyB\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useEffect, useState, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiAvailableReaction, ApiMessage, ApiReaction } from '../../api/types';\nimport { LoadMoreDirection } from '../../types';\n\nimport {\n  selectChatMessage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatIntegerCompact } from '../../util/textFormat';\nimport { unique } from '../../util/iteratees';\nimport { isSameReaction, getReactionUniqueKey } from '../../global/helpers';\nimport { formatDateAtTime } from '../../util/dateFormat';\n\nimport useLang from '../../hooks/useLang';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useFlag from '../../hooks/useFlag';\n\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\nimport Avatar from '../common/Avatar';\nimport ListItem from '../ui/ListItem';\nimport ReactionStaticEmoji from '../common/ReactionStaticEmoji';\nimport Loading from '../ui/Loading';\nimport FullNameTitle from '../common/FullNameTitle';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\n\nimport './ReactorListModal.scss';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nconst MIN_REACTIONS_COUNT_FOR_FILTERS = 10;\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = Pick<ApiMessage, 'reactors' | 'reactions' | 'seenByDates'> & {\n  chatId?: string;\n  messageId?: number;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst ReactorListModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  reactors,\n  reactions,\n  chatId,\n  messageId,\n  seenByDates,\n  availableReactions,\n}) => {\n  const {\n    loadReactors,\n    closeReactorListModal,\n    openChat,\n  } = getActions();\n\n  // No need for expensive global updates on users, so we avoid them\n  const usersById = getGlobal().users.byId;\n\n  const lang = useLang();\n  const [isClosing, startClosing, stopClosing] = useFlag(false);\n  const [chosenTab, setChosenTab] = useState<ApiReaction | undefined>(undefined);\n  const canShowFilters = reactors && reactions && reactors.count >= MIN_REACTIONS_COUNT_FOR_FILTERS\n    && reactions.results.length > 1;\n  const chatIdRef = useRef<string>();\n\n  useEffect(() => {\n    if (isOpen && !isClosing) {\n      chatIdRef.current = undefined;\n    }\n\n    if (isClosing && !isOpen) {\n      stopClosing();\n      setChosenTab(undefined);\n    }\n  }, [isClosing, isOpen, stopClosing]);\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    if (chatIdRef.current) {\n      openChat({ id: chatIdRef.current });\n    }\n    closeReactorListModal();\n  });\n\n  const handleClose = useLastCallback(() => {\n    startClosing();\n  });\n\n  const handleClick = useLastCallback((userId: string) => {\n    chatIdRef.current = userId;\n    handleClose();\n  });\n\n  const handleLoadMore = useLastCallback(() => {\n    loadReactors({\n      chatId: chatId!,\n      messageId: messageId!,\n    });\n  });\n\n  const allReactions = useMemo(() => {\n    const uniqueReactions: ApiReaction[] = [];\n    reactors?.reactions?.forEach(({ reaction }) => {\n      if (!uniqueReactions.some((r) => isSameReaction(r, reaction))) {\n        uniqueReactions.push(reaction);\n      }\n    });\n    return uniqueReactions;\n  }, [reactors]);\n\n  const userIds = useMemo(() => {\n    if (chosenTab) {\n      return reactors?.reactions\n        .filter(({ reaction }) => isSameReaction(reaction, chosenTab))\n        .map(({ userId }) => userId);\n    }\n\n    const seenByUserIds = Object.keys(seenByDates || {});\n\n    return unique(reactors?.reactions.map(({ userId }) => userId).concat(seenByUserIds || []) || []);\n  }, [chosenTab, reactors, seenByDates]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    handleLoadMore, userIds, reactors && reactors.nextOffset === undefined,\n  );\n\n  useEffect(() => {\n    getMore?.({ direction: LoadMoreDirection.Backwards });\n  }, [getMore]);\n\n  return (\n    <Modal\n      isOpen={isOpen && !isClosing}\n      onClose={handleClose}\n      className=\"ReactorListModal narrow\"\n      title={lang('Reactions')}\n      onCloseAnimationEnd={handleCloseAnimationEnd}\n    >\n      {canShowFilters && (\n        <div className=\"Reactions\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            className={buildClassName(!chosenTab && 'chosen')}\n            size=\"tiny\"\n            ripple\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setChosenTab(undefined)}\n          >\n            <i className=\"icon icon-heart\" />\n            {Boolean(reactors?.count) && formatIntegerCompact(reactors.count)}\n          </Button>\n          {allReactions.map((reaction) => {\n            const count = reactions?.results\n              .find((reactionsCount) => isSameReaction(reactionsCount.reaction, reaction))?.count;\n            return (\n              <Button\n                key={getReactionUniqueKey(reaction)}\n                className={buildClassName(isSameReaction(chosenTab, reaction) && 'chosen')}\n                size=\"tiny\"\n                ripple\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => setChosenTab(reaction)}\n              >\n                <ReactionStaticEmoji\n                  reaction={reaction}\n                  className=\"reaction-filter-emoji\"\n                  availableReactions={availableReactions}\n                />\n                {Boolean(count) && formatIntegerCompact(count)}\n              </Button>\n            );\n          })}\n        </div>\n      )}\n\n      <div dir={lang.isRtl ? 'rtl' : undefined} className=\"reactor-list-wrapper\">\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            className=\"reactor-list custom-scroll\"\n            items={viewportIds}\n            onLoadMore={getMore}\n          >\n            {viewportIds?.flatMap(\n              (userId) => {\n                const user = usersById[userId];\n                const userReactions = reactors?.reactions.filter((reactor) => reactor.userId === userId);\n                const items: React.ReactNode[] = [];\n                const seenByUser = seenByDates?.[userId];\n\n                userReactions?.forEach((r) => {\n                  if (chosenTab && !isSameReaction(r.reaction, chosenTab)) return;\n\n                  items.push(\n                    <ListItem\n                      key={`${userId}-${getReactionUniqueKey(r.reaction)}`}\n                      className=\"chat-item-clickable reactors-list-item\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(userId)}\n                    >\n                      <Avatar user={user} size=\"medium\" />\n                      <div className=\"info\">\n                        <FullNameTitle peer={user} withEmojiStatus />\n                        <span className=\"status\" dir=\"auto\">\n                          <i className=\"icon icon-heart-outline status-icon\" />\n                          {formatDateAtTime(lang, r.addedDate * 1000)}\n                        </span>\n                      </div>\n                      {r.reaction && (\n                        <ReactionStaticEmoji\n                          className=\"reactors-list-emoji\"\n                          reaction={r.reaction}\n                          availableReactions={availableReactions}\n                        />\n                      )}\n                    </ListItem>,\n                  );\n                });\n\n                if (!chosenTab && !userReactions?.length) {\n                  items.push(\n                    <ListItem\n                      key={`${userId}-seen-by`}\n                      className=\"chat-item-clickable scroll-item small-icon\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(userId)}\n                    >\n                      <PrivateChatInfo\n                        userId={userId}\n                        noStatusOrTyping\n                        avatarSize=\"medium\"\n                        status={seenByUser ? formatDateAtTime(lang, seenByUser * 1000) : undefined}\n                        statusIcon=\"icon-message-read\"\n                      />\n                    </ListItem>,\n                  );\n                }\n                return items;\n              },\n            )}\n          </InfiniteScroll>\n        ) : <Loading />}\n      </div>\n      <Button\n        className=\"confirm-dialog-button\"\n        isText\n        onClick={handleClose}\n      >\n        {lang('Close')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).reactorModal || {};\n    const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n\n    return {\n      chatId,\n      messageId,\n      reactions: message?.reactions,\n      reactors: message?.reactors,\n      seenByDates: message?.seenByDates,\n      availableReactions: global.availableReactions,\n    };\n  },\n)(ReactorListModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ActiveEmojiInteraction } from '../../global/types';\n\nimport { IS_ANDROID } from '../../util/windowEnvironment';\n\nimport {\n  selectAnimatedEmojiEffect,\n} from '../../global/selectors';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useFlag from '../../hooks/useFlag';\nimport useMedia from '../../hooks/useMedia';\nimport buildClassName from '../../util/buildClassName';\n\nimport AnimatedSticker from '../common/AnimatedSticker';\n\nimport './EmojiInteractionAnimation.scss';\n\nexport type OwnProps = {\n  activeEmojiInteraction: ActiveEmojiInteraction;\n};\n\ntype StateProps = {\n  effectAnimationId?: string;\n};\n\nconst HIDE_ANIMATION_DURATION = 250;\nconst PLAYING_DURATION = 3000;\nconst EFFECT_SIZE = 309;\n\nconst EmojiInteractionAnimation: FC<OwnProps & StateProps> = ({\n  effectAnimationId,\n  activeEmojiInteraction,\n}) => {\n  const { stopActiveEmojiInteraction } = getActions();\n\n  const [isHiding, startHiding] = useFlag(false);\n  const [isPlaying, startPlaying] = useFlag(false);\n  const timeoutRef = useRef<NodeJS.Timeout>();\n\n  const stop = useLastCallback(() => {\n    startHiding();\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n    setTimeout(() => {\n      stopActiveEmojiInteraction({ id: activeEmojiInteraction.id });\n    }, HIDE_ANIMATION_DURATION);\n  });\n\n  const handleCancelAnimation = useLastCallback((e: UIEvent) => {\n    if (!(e.target as HTMLElement)?.closest('.AnimatedEmoji')) {\n      stop();\n    }\n  });\n\n  useEffect(() => {\n    document.addEventListener('touchstart', handleCancelAnimation);\n    document.addEventListener('touchmove', handleCancelAnimation);\n    document.addEventListener('mousedown', handleCancelAnimation);\n    document.addEventListener('wheel', handleCancelAnimation);\n\n    return () => {\n      document.removeEventListener('touchstart', handleCancelAnimation);\n      document.removeEventListener('touchmove', handleCancelAnimation);\n      document.removeEventListener('mousedown', handleCancelAnimation);\n      document.removeEventListener('wheel', handleCancelAnimation);\n    };\n  }, [handleCancelAnimation]);\n\n  useLayoutEffect(() => {\n    const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n    timeoutRef.current = setTimeout(() => {\n      stop();\n      dispatchHeavyAnimationStop();\n    }, PLAYING_DURATION);\n  }, [stop]);\n\n  const effectHash = effectAnimationId && `sticker${effectAnimationId}`;\n  const effectTgsUrl = useMedia(effectHash, !effectAnimationId);\n\n  if (!activeEmojiInteraction.startSize) {\n    return undefined;\n  }\n\n  const scale = (activeEmojiInteraction.startSize || 0) / EFFECT_SIZE;\n\n  return (\n    <div\n      className={buildClassName(\n        'EmojiInteractionAnimation',\n        isHiding && 'hiding',\n        isPlaying && 'playing',\n        activeEmojiInteraction.isReversed && 'reversed',\n      )}\n      style={`--scale: ${scale}; --start-x: ${activeEmojiInteraction.x}px; --start-y: ${activeEmojiInteraction.y}px;`}\n    >\n      <AnimatedSticker\n        key={`effect_${effectAnimationId}`}\n        size={EFFECT_SIZE}\n        tgsUrl={effectTgsUrl}\n        play\n        quality={IS_ANDROID ? 0.5 : undefined}\n        forceOnHeavyAnimation\n        noLoop\n        onLoad={startPlaying}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { activeEmojiInteraction }): StateProps => {\n    const animatedEffect = activeEmojiInteraction.animatedEffect !== undefined\n      && selectAnimatedEmojiEffect(global, activeEmojiInteraction.animatedEffect);\n    return {\n      effectAnimationId: animatedEffect ? animatedEffect.id : undefined,\n    };\n  },\n)(EmojiInteractionAnimation));\n","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport { selectLanguageCode, selectRequestedTranslationLanguage, selectTabState } from '../../global/selectors';\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from '../common/helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLang from '../../hooks/useLang';\n\nimport Modal from '../ui/Modal';\nimport ListItem from '../ui/ListItem';\nimport InputText from '../ui/InputText';\n\nimport styles from './MessageLanguageModal.module.scss';\n\ntype LanguageItem = {\n  langCode: string;\n  translatedName: string;\n  originalName: string;\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  chatId?: string;\n  messageId?: number;\n  activeTranslationLanguage?: string;\n  currentLanguageCode: string;\n};\n\nconst MessageLanguageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  messageId,\n  activeTranslationLanguage,\n  currentLanguageCode,\n}) => {\n  const { requestMessageTranslation, closeMessageLanguageModal } = getActions();\n\n  const [search, setSearch] = useState('');\n  const lang = useLang();\n\n  const handleSelect = useLastCallback((toLanguageCode: string) => {\n    if (!chatId || !messageId) return;\n\n    requestMessageTranslation({ chatId, id: messageId, toLanguageCode });\n    closeMessageLanguageModal();\n  });\n\n  const handleSearch = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value);\n  });\n\n  const translateLanguages = useMemo(() => SUPPORTED_TRANSLATION_LANGUAGES.map((langCode: string) => {\n    const translatedNames = new Intl.DisplayNames([currentLanguageCode], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n\n    const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n    const originalName = originalNames.of(langCode)!;\n\n    return {\n      langCode,\n      translatedName,\n      originalName,\n    } satisfies LanguageItem;\n  }), [currentLanguageCode]);\n\n  useEffect(() => {\n    if (!isOpen) setSearch('');\n  }, [isOpen]);\n\n  const filteredDisplayedLanguages = useMemo(() => {\n    if (!search.trim()) {\n      return translateLanguages;\n    }\n\n    return translateLanguages.filter(({ langCode, translatedName, originalName }) => (\n      translatedName.toLowerCase().includes(search.toLowerCase())\n      || originalName.toLowerCase().includes(search.toLowerCase())\n      || langCode.toLowerCase().includes(search.toLowerCase())\n    ));\n  }, [translateLanguages, search]);\n\n  return (\n    <Modal\n      className={styles.root}\n      isSlim\n      isOpen={isOpen}\n      hasCloseButton\n      title={lang('Language')}\n      onClose={closeMessageLanguageModal}\n    >\n      <InputText\n        key=\"search\"\n        value={search}\n        onChange={handleSearch}\n        placeholder={lang('Search')}\n        teactExperimentControlled\n      />\n      <div className={buildClassName(styles.languages, 'custom-scroll')}>\n        {filteredDisplayedLanguages.map(({ langCode, originalName, translatedName }) => (\n          <ListItem\n            key={langCode}\n            className={styles.listItem}\n            secondaryIcon={activeTranslationLanguage === langCode ? 'check' : undefined}\n            disabled={activeTranslationLanguage === langCode}\n            multiline\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleSelect(langCode)}\n          >\n            <span className={buildClassName('title', styles.title)}>\n              {renderText(originalName, ['highlight'], { highlight: search })}\n            </span>\n            <span className={buildClassName('subtitle', styles.subtitle)}>\n              {renderText(translatedName, ['highlight'], { highlight: search })}\n            </span>\n          </ListItem>\n        ))}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).messageLanguageModal || {};\n\n    const currentLanguageCode = selectLanguageCode(global);\n    const activeTranslationLanguage = chatId && messageId\n      ? selectRequestedTranslationLanguage(global, chatId, messageId) : undefined;\n\n    return {\n      chatId,\n      messageId,\n      activeTranslationLanguage,\n      currentLanguageCode,\n    };\n  },\n)(MessageLanguageModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ty4iYfZBkv7TFGwTrzul\",\"list-item\":\"GXEouxz4KmZfOmlymVnB\",\"listItem\":\"GXEouxz4KmZfOmlymVnB\",\"title\":\"MpKdUudmoMIsoFkDFNbJ\",\"subtitle\":\"B0tluyEaLLlMRQ5TZMEP\",\"languages\":\"SxqwP1DiSMFc8Gh_KgfK\"};","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiChat, ApiUser } from '../api/types';\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\n\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/windowEnvironment';\nimport { IS_ELECTRON, SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  isChatArchived, getCanDeleteChat, isUserId, isChatChannel, isChatGroup,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport useLang from './useLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  return useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? 'Open in new window' : 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id });\n      },\n    };\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleChatPinned({ id: chat.id, folderId: folderId! }),\n      }\n      : { title: lang('PinToTop'), icon: 'pin', handler: () => toggleChatPinned({ id: chat.id, folderId: folderId! }) };\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]);\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const actionDelete = {\n      title: isUserId(chat.id)\n        ? lang('Delete')\n        : lang(getCanDeleteChat(chat)\n          ? 'DeleteChat'\n          : (isChatChannel(chat) ? 'LeaveChannel' : 'Group.LeaveGroup')),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications,\n  ]);\n};\n\nexport default useChatContextActions;\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nconst useSendWithEnter = (\n  onSelect: NoneToVoidFunction,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const buttonRef = useRef<HTMLDivElement>(null);\n\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n    if (e.key !== 'Enter') return;\n    const isFocused = buttonRef.current === document.activeElement;\n\n    if (isFocused) {\n      onSelect();\n    }\n  }, [onSelect]);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown, false);\n\n    return () => window.removeEventListener('keydown', handleKeyDown, false);\n  }, [handleKeyDown]);\n\n  return buttonRef;\n};\n\nexport default useSendWithEnter;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { Bundles } from '../../util/moduleLoader';\nimport type { OwnProps } from './ChatFolderModal';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default memo(ChatFolderModalAsync);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { Bundles } from '../../util/moduleLoader';\nimport type { OwnProps } from './MuteChatModal';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default memo(MuteChatModalAsync);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiUser } from '../../../api/types';\n\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport { isUserId, getPrivateChatUserId, selectIsChatMuted } from '../../../global/helpers';\nimport {\n  selectChat, selectUser, selectIsChatPinned, selectNotifySettings, selectNotifyExceptions,\n} from '../../../global/selectors';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\n\ntype OwnProps = {\n  chatId: string;\n  withUsername?: boolean;\n  onClick: (id: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n};\n\nconst LeftSearchResultChat: FC<OwnProps & StateProps> = ({\n  chatId,\n  withUsername,\n  onClick,\n  chat,\n  user,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n}) => {\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const handleChatFolderChange = useCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  }, [markRenderChatFolderModal, openChatFolderModal]);\n\n  const handleMute = useCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  }, [markRenderMuteModal, openMuteModal]);\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    handleMute,\n    handleChatFolderChange,\n  }, true);\n\n  const handleClick = useCallback(() => {\n    onClick(chatId);\n  }, [chatId, onClick]);\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      contextActions={contextActions}\n      buttonRef={buttonRef}\n    >\n      {isUserId(chatId) ? (\n        <PrivateChatInfo userId={chatId} withUsername={withUsername} avatarSize=\"large\" />\n      ) : (\n        <GroupChatInfo chatId={chatId} withUsername={withUsername} avatarSize=\"large\" />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const privateChatUserId = chat && getPrivateChatUserId(chat);\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const isPinned = selectIsChatPinned(global, chatId);\n    const isMuted = chat\n      ? selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global))\n      : undefined;\n\n    return {\n      chat,\n      user,\n      isPinned,\n      isMuted,\n      canChangeFolder: Boolean(global.chatFolders.orderedIds?.length),\n    };\n  },\n)(LeftSearchResultChat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect, useCallback, useRef, memo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport renderText from '../../common/helpers/renderText';\nimport { throttle } from '../../../util/schedulers';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\nimport Avatar from '../../common/Avatar';\nimport LeftSearchResultChat from './LeftSearchResultChat';\n\nimport './RecentContacts.scss';\n\ntype OwnProps = {\n  onReset: () => void;\n};\n\ntype StateProps = {\n  topUserIds?: string[];\n  usersById: Record<string, ApiUser>;\n  recentlyFoundChatIds?: string[];\n};\n\nconst SEARCH_CLOSE_TIMEOUT_MS = 250;\nconst NBSP = '\\u00A0';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst RecentContacts: FC<OwnProps & StateProps> = ({\n  topUserIds,\n  usersById,\n  recentlyFoundChatIds,\n  onReset,\n}) => {\n  const {\n    loadTopUsers, openChat,\n    addRecentlyFoundChatId, clearRecentlyFoundChats,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const topUsersRef = useRef<HTMLDivElement>(null);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadTopUsers();\n    });\n  }, [loadTopUsers]);\n\n  useHorizontalScroll(topUsersRef, !topUserIds);\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n    onReset();\n    setTimeout(() => {\n      addRecentlyFoundChatId({ id });\n    }, SEARCH_CLOSE_TIMEOUT_MS);\n  }, [openChat, addRecentlyFoundChatId, onReset]);\n\n  const handleClearRecentlyFoundChats = useCallback(() => {\n    clearRecentlyFoundChats();\n  }, [clearRecentlyFoundChats]);\n\n  const lang = useLang();\n\n  return (\n    <div className=\"RecentContacts custom-scroll\">\n      {topUserIds && (\n        <div className=\"top-peers-section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <div ref={topUsersRef} className=\"top-peers no-selection\">\n            {topUserIds.map((userId) => (\n              <div\n                key={userId}\n                className=\"top-peer-item\"\n                onClick={() => handleClick(userId)}\n                dir={lang.isRtl ? 'rtl' : undefined}\n              >\n                <Avatar user={usersById[userId]} />\n                <div className=\"top-peer-name\">{renderText(getUserFirstOrLastName(usersById[userId]) || NBSP)}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n      {recentlyFoundChatIds && (\n        <div className=\"search-section pt-1\">\n          <h3 className=\"section-heading mt-0 recent-chats-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('Recent')}\n\n            <Button\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              ariaLabel=\"Clear recent chats\"\n              onClick={handleClearRecentlyFoundChats}\n              isRtl={lang.isRtl}\n            >\n              <i className=\"icon icon-close\" />\n            </Button>\n          </h3>\n          {recentlyFoundChatIds.map((id) => (\n            <LeftSearchResultChat\n              chatId={id}\n              onClick={handleClick}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: topUserIds } = global.topPeers;\n    const usersById = global.users.byId;\n    const { recentlyFoundChatIds } = global;\n\n    return {\n      topUserIds,\n      usersById,\n      recentlyFoundChatIds,\n    };\n  },\n)(RecentContacts));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiUser, ApiMessage, ApiMessageOutgoingStatus,\n} from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useLang';\n\nimport {\n  getPrivateChatUserId,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n  getMessageRoundVideo,\n  getMessageSticker,\n  getMessageIsSpoiler,\n} from '../../../global/helpers';\nimport { selectChat, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useLang from '../../../hooks/useLang';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport Avatar from '../../common/Avatar';\nimport ListItem from '../../ui/ListItem';\nimport Link from '../../ui/Link';\nimport FullNameTitle from '../../common/FullNameTitle';\n\nimport './ChatMessage.scss';\n\ntype OwnProps = {\n  searchQuery?: string;\n  message: ApiMessage;\n  chatId: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  privateChatUser?: ApiUser;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  lastSyncTime?: number;\n};\n\nconst ChatMessage: FC<OwnProps & StateProps> = ({\n  message,\n  searchQuery,\n  chatId,\n  chat,\n  privateChatUser,\n  lastSyncTime,\n}) => {\n  const { focusMessage } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const mediaThumbnail = !getMessageSticker(message) ? getMessageMediaThumbDataUri(message) : undefined;\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useLastCallback(() => {\n    focusMessage({ chatId, messageId: message.id, shouldReplaceHistory: true });\n  });\n\n  const lang = useLang();\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  return (\n    <ListItem\n      className=\"ChatMessage chat-item-clickable\"\n      ripple={!isMobile}\n      onClick={handleClick}\n      buttonRef={buttonRef}\n    >\n      <Avatar\n        chat={chat}\n        user={privateChatUser}\n        isSavedMessages={privateChatUser?.isSelf}\n        lastSyncTime={lastSyncTime}\n      />\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={privateChatUser || chat}\n            withEmojiStatus\n            isSavedMessages={chatId === privateChatUser?.id && privateChatUser?.isSelf}\n          />\n          <div className=\"message-date\">\n            <Link className=\"date\">\n              {formatPastTimeShort(lang, message.date * 1000)}\n            </Link>\n          </div>\n\n        </div>\n        <div className=\"subtitle\">\n          <div className=\"message\" dir=\"auto\">\n            {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, searchQuery, isRoundVideo)}\n          </div>\n        </div>\n      </div>\n    </ListItem>\n  );\n};\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, blobUrl?: string, searchQuery?: string, isRoundVideo?: boolean,\n) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message, undefined, searchQuery);\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {renderMessageSummary(lang, message, true, searchQuery)}\n    </span>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const privateChatUser = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n\n    return {\n      chat,\n      lastSyncTime: global.lastSyncTime,\n      ...(privateChatUserId && { privateChatUser }),\n    };\n  },\n)(ChatMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { formatDateToString } from '../../../util/dateFormat';\n\nimport './DateSuggest.scss';\n\nconst SUGGESTION_COUNT = 8;\n\nexport type OwnProps = {\n  searchDate: string;\n  onSelect: (value: Date) => void;\n};\n\nconst DateSuggest: FC<OwnProps> = ({\n  searchDate, onSelect,\n}) => {\n  const suggestions = useMemo(() => getSuggestionsFromDate(searchDate), [searchDate]);\n  return (\n    <section className=\"DateSuggest custom-scroll custom-scroll-x\">\n      {suggestions.map(({ date, text }) => {\n        return (\n          <div\n            onClick={() => onSelect(date)}\n            className=\"date-item\"\n            key={text}\n          >\n            <i className=\"icon icon-calendar\" />\n            <span>{text}</span>\n          </div>\n        );\n      })}\n    </section>\n  );\n};\n\nfunction getSuggestionsFromDate(searchDate: string) {\n  const hasYear = searchDate.match(/^\\d{2,4}-\\d{2}-\\d{2}$/g);\n  if (hasYear) {\n    const date = new Date(searchDate);\n    return [{ date, text: formatDateToString(date) }];\n  }\n\n  const suggestion = [];\n  const currentDate = new Date();\n  const currentYear = currentDate.getFullYear();\n  const latestYear = currentDate.getTime() > (new Date(`${currentYear}-${searchDate}`)).getTime()\n    ? currentYear\n    : currentYear - 1;\n\n  for (let i = 0; i < SUGGESTION_COUNT; i++) {\n    const date = new Date(`${latestYear - i}-${searchDate}`);\n    suggestion.push({ date, text: formatDateToString(date) });\n  }\n\n  return suggestion;\n}\n\nexport default memo(DateSuggest);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiMessage } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport {\n  sortChatIds,\n  filterUsersByName,\n} from '../../../global/helpers';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useLang from '../../../hooks/useLang';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport LeftSearchResultChat from './LeftSearchResultChat';\nimport RecentContacts from './RecentContacts';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport Link from '../../ui/Link';\nimport NothingFound from '../../common/NothingFound';\nimport PickerSelectedItem from '../../common/PickerSelectedItem';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  searchDate?: number;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  localContactIds?: string[];\n  localChatIds?: string[];\n  localUserIds?: string[];\n  globalChatIds?: string[];\n  globalUserIds?: string[];\n  foundIds?: string[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  chatsById: Record<string, ApiChat>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  lastSyncTime?: number;\n};\n\nconst MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH = 4;\nconst LESS_LIST_ITEMS_AMOUNT = 5;\n\nconst runThrottled = throttle((cb) => cb(), 500, false);\n\nconst ChatResults: FC<OwnProps & StateProps> = ({\n  searchQuery, searchDate, dateSearchQuery, currentUserId,\n  localContactIds, localChatIds, localUserIds, globalChatIds, globalUserIds,\n  foundIds, globalMessagesByChatId, chatsById, fetchingStatus, lastSyncTime,\n  onReset, onSearchDateSelect,\n}) => {\n  const {\n    openChat, addRecentlyFoundChatId, searchMessagesGlobal, setGlobalSearchChatId,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const chatSelectionRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [shouldShowMoreLocal, setShouldShowMoreLocal] = useState<boolean>(false);\n  const [shouldShowMoreGlobal, setShouldShowMoreGlobal] = useState<boolean>(false);\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (lastSyncTime && direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: 'text',\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [lastSyncTime, searchMessagesGlobal, searchQuery]);\n\n  const handleChatClick = useCallback(\n    (id: string) => {\n      openChat({ id, shouldReplaceHistory: true });\n\n      if (id !== currentUserId) {\n        addRecentlyFoundChatId({ id });\n      }\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [openChat, currentUserId, isMobile, addRecentlyFoundChatId, onReset],\n  );\n\n  const handlePickerItemClick = useCallback((id: string) => {\n    setGlobalSearchChatId({ id });\n  }, [setGlobalSearchChatId]);\n\n  const localResults = useMemo(() => {\n    if (!searchQuery || (searchQuery.startsWith('@') && searchQuery.length < 2)) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    const contactIdsWithMe = [\n      ...(currentUserId ? [currentUserId] : []),\n      ...(localContactIds || []),\n    ];\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const foundContactIds = filterUsersByName(\n      contactIdsWithMe, usersById, searchQuery, currentUserId, lang('SavedMessages'),\n    );\n\n    return [\n      ...sortChatIds(unique([\n        ...(foundContactIds || []),\n        ...(localChatIds || []),\n        ...(localUserIds || []),\n      ]), chatsById, undefined, currentUserId ? [currentUserId] : undefined),\n    ];\n  }, [searchQuery, currentUserId, localContactIds, lang, localChatIds, localUserIds, chatsById]);\n\n  useHorizontalScroll(chatSelectionRef, !localResults.length, true);\n\n  const globalResults = useMemo(() => {\n    if (!searchQuery || searchQuery.length < MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH || !globalChatIds || !globalUserIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return sortChatIds(\n      unique([...globalChatIds, ...globalUserIds]),\n      chatsById,\n      true,\n    );\n  }, [chatsById, globalChatIds, globalUserIds, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if ((!searchQuery && !searchDate) || !foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = id.split('_');\n\n        return globalMessagesByChatId?.[chatId]?.byId[Number(messageId)];\n      })\n      .filter(Boolean)\n      .sort((a, b) => b.date - a.date);\n  }, [foundIds, globalMessagesByChatId, searchQuery, searchDate]);\n\n  const handleClickShowMoreLocal = useCallback(() => {\n    setShouldShowMoreLocal(!shouldShowMoreLocal);\n  }, [shouldShowMoreLocal]);\n\n  const handleClickShowMoreGlobal = useCallback(() => {\n    setShouldShowMoreGlobal(!shouldShowMoreGlobal);\n  }, [shouldShowMoreGlobal]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const text = renderMessageSummary(lang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const nothingFound = fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages\n    && !localResults.length && !globalResults.length && !foundMessages.length;\n\n  if (!searchQuery && !searchDate) {\n    return <RecentContacts onReset={onReset} />;\n  }\n\n  return (\n    <InfiniteScroll\n      className=\"LeftSearch custom-scroll\"\n      items={foundMessages}\n      onLoadMore={handleLoadMore}\n      // To prevent scroll jumps caused by delayed local results rendering\n      noScrollRestoreOnTop\n      noFastList\n    >\n      {dateSearchQuery && (\n        <div className=\"chat-selection no-selection no-scrollbar\">\n          <DateSuggest\n            searchDate={dateSearchQuery}\n            onSelect={onSearchDateSelect}\n          />\n        </div>\n      )}\n      {nothingFound && (\n        <NothingFound\n          text={lang('ChatList.Search.NoResults')}\n          description={lang('ChatList.Search.NoResultsDescription')}\n        />\n      )}\n      {Boolean(localResults.length) && (\n        <div\n          className=\"chat-selection no-selection no-scrollbar\"\n          dir={lang.isRtl ? 'rtl' : undefined}\n          ref={chatSelectionRef}\n        >\n          {localResults.map((id) => (\n            <PickerSelectedItem\n              chatOrUserId={id}\n              onClick={handlePickerItemClick}\n              clickArg={id}\n            />\n          ))}\n        </div>\n      )}\n      {Boolean(localResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n            {localResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreLocal}>\n                {lang(shouldShowMoreLocal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {lang('DialogList.SearchSectionDialogs')}\n          </h3>\n          {localResults.map((id, index) => {\n            if (!shouldShowMoreLocal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(globalResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n            {globalResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreGlobal}>\n                {lang(shouldShowMoreGlobal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {lang('DialogList.SearchSectionGlobal')}\n          </h3>\n          {globalResults.map((id, index) => {\n            if (!shouldShowMoreGlobal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                withUsername\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(foundMessages.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>{lang('SearchMessages')}</h3>\n          {foundMessages.map(renderFoundMessage)}\n        </div>\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: chatsById } = global.chats;\n\n    const { userIds: localContactIds } = global.contactList || {};\n\n    if (!localContactIds) {\n      return {\n        chatsById,\n      };\n    }\n\n    const {\n      currentUserId, messages, lastSyncTime,\n    } = global;\n    const {\n      fetchingStatus, globalResults, localResults, resultsByType,\n    } = selectTabState(global).globalSearch;\n    const { chatIds: globalChatIds, userIds: globalUserIds } = globalResults || {};\n    const { chatIds: localChatIds, userIds: localUserIds } = localResults || {};\n    const { byChatId: globalMessagesByChatId } = messages;\n    const foundIds = resultsByType?.text?.foundIds;\n\n    return {\n      currentUserId,\n      localContactIds,\n      localChatIds,\n      localUserIds,\n      globalChatIds,\n      globalUserIds,\n      foundIds,\n      globalMessagesByChatId,\n      chatsById,\n      fetchingStatus,\n      lastSyncTime,\n    };\n  },\n)(ChatResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiTopic } from '../../../api/types';\n\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport { selectChat } from '../../../global/selectors';\nimport renderText from '../../common/helpers/renderText';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport ListItem from '../../ui/ListItem';\nimport TopicIcon from '../../common/TopicIcon';\n\ntype OwnProps = {\n  chatId: string;\n  topicId: number;\n  onClick: (id: number) => void;\n};\n\ntype StateProps = {\n  topic?: ApiTopic;\n};\n\nconst TOPIC_ICON_SIZE = 2 * REM;\n\nconst LeftSearchResultTopic: FC<OwnProps & StateProps> = ({\n  topicId,\n  topic,\n  onClick,\n}) => {\n  const handleClick = useCallback(() => {\n    onClick(topicId);\n  }, [topicId, onClick]);\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!topic) {\n    return undefined;\n  }\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      buttonClassName=\"topic-item\"\n      buttonRef={buttonRef}\n    >\n      <TopicIcon\n        size={TOPIC_ICON_SIZE}\n        topic={topic}\n        className=\"topic-icon\"\n        letterClassName=\"topic-icon-letter\"\n      />\n      <div dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</div>\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topicId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const topic = chat?.topics?.[topicId];\n\n    return {\n      topic,\n    };\n  },\n)(LeftSearchResultTopic));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiMessage } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\nimport useLang from '../../../hooks/useLang';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport NothingFound from '../../common/NothingFound';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultTopic from './LeftSearchResultTopic';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  foundIds?: string[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  chatsById: Record<string, ApiChat>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  foundTopicIds?: number[];\n  searchChatId?: string;\n  lastSyncTime?: number;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst ChatMessageResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  dateSearchQuery,\n  foundIds,\n  globalMessagesByChatId,\n  chatsById,\n  fetchingStatus,\n  lastSyncTime,\n  foundTopicIds,\n  searchChatId,\n  onSearchDateSelect,\n  onReset,\n}) => {\n  const { searchMessagesGlobal, openChat } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (lastSyncTime && direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: 'text',\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [lastSyncTime, searchMessagesGlobal, searchQuery]);\n\n  const handleTopicClick = useCallback(\n    (id: number) => {\n      openChat({ id: searchChatId, threadId: id, shouldReplaceHistory: true });\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [openChat, searchChatId, isMobile, onReset],\n  );\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = id.split('_');\n\n        return globalMessagesByChatId?.[chatId]?.byId[Number(messageId)];\n      })\n      .filter(Boolean)\n      .sort((a, b) => b.date - a.date);\n  }, [foundIds, globalMessagesByChatId]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const text = renderMessageSummary(lang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const nothingFound = fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages && !foundMessages.length\n    && !foundTopicIds?.length;\n\n  return (\n    <div className=\"LeftSearch\">\n      <InfiniteScroll\n        className=\"search-content custom-scroll chat-list\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {dateSearchQuery && (\n          <div className=\"chat-selection no-selection no-scrollbar\">\n            <DateSuggest\n              searchDate={dateSearchQuery}\n              onSelect={onSearchDateSelect}\n            />\n          </div>\n        )}\n        {nothingFound && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {Boolean(foundTopicIds?.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('Topics')}\n            </h3>\n            {foundTopicIds!.map((id) => {\n              return (\n                <LeftSearchResultTopic\n                  chatId={searchChatId!}\n                  topicId={id}\n                  onClick={handleTopicClick}\n                />\n              );\n            })}\n          </div>\n        )}\n        {Boolean(foundMessages.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('SearchMessages')}\n            </h3>\n            {foundMessages.map(renderFoundMessage)}\n          </div>\n        )}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: chatsById } = global.chats;\n    const { currentUserId, messages: { byChatId: globalMessagesByChatId }, lastSyncTime } = global;\n    const {\n      fetchingStatus, resultsByType, foundTopicIds, chatId: searchChatId,\n    } = selectTabState(global).globalSearch;\n\n    const { foundIds } = (resultsByType?.text) || {};\n\n    return {\n      currentUserId,\n      foundIds,\n      globalMessagesByChatId,\n      chatsById,\n      fetchingStatus,\n      foundTopicIds,\n      lastSyncTime,\n      searchChatId,\n    };\n  },\n)(ChatMessageResults));\n","import type { GlobalState, TabState } from '../../../../global/types';\nimport type {\n  ApiChat, ApiGlobalMessageSearchType, ApiMessage, ApiUser,\n} from '../../../../api/types';\nimport type { ISettings } from '../../../../types';\n\nimport { selectChat, selectTabState, selectTheme } from '../../../../global/selectors';\n\nexport type StateProps = {\n  theme: ISettings['theme'];\n  isLoading?: boolean;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  foundIds?: string[];\n  lastSyncTime?: number;\n  searchChatId?: string;\n  activeDownloads: TabState['activeDownloads']['byChatId'];\n  isChatProtected?: boolean;\n};\n\nexport function createMapStateToProps(type: ApiGlobalMessageSearchType) {\n  return (global: GlobalState, props: any) => {\n    const tabState = selectTabState(global);\n    const { byId: chatsById } = global.chats;\n    const { byId: usersById } = global.users;\n    const {\n      fetchingStatus, resultsByType, chatId,\n    } = tabState.globalSearch;\n\n    // One component is used for two different types of results.\n    // The differences between them are only in the isVoice property.\n    // The rest of the search results use their own personal components.\n    const currentType = type !== 'audio' ? type : (props?.isVoice ? 'voice' : 'audio');\n\n    const { byChatId: globalMessagesByChatId } = global.messages;\n    const foundIds = resultsByType?.[currentType]?.foundIds;\n\n    const activeDownloads = tabState.activeDownloads.byChatId;\n\n    return {\n      theme: selectTheme(global),\n      isLoading: foundIds === undefined\n        || (fetchingStatus ? Boolean(fetchingStatus.chats || fetchingStatus.messages) : false),\n      chatsById,\n      usersById,\n      globalMessagesByChatId,\n      foundIds,\n      searchChatId: chatId,\n      activeDownloads,\n      isChatProtected: chatId ? selectChat(global, chatId)?.isProtected : undefined,\n      lastSyncTime: global.lastSyncTime,\n    };\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { LoadMoreDirection, MediaViewerOrigin } from '../../../types';\n\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport useLang from '../../../hooks/useLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Media from '../../common/Media';\nimport ChatMessage from './ChatMessage';\nimport NothingFound from '../../common/NothingFound';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'media';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst MediaResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  globalMessagesByChatId,\n  foundIds,\n  lastSyncTime,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    openMediaViewer,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (lastSyncTime && direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [lastSyncTime, searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = id.split('_');\n\n      return globalMessagesByChatId[chatId]?.byId[Number(messageId)];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleSelectMedia = useCallback((id: number, chatId: string) => {\n    openMediaViewer({\n      chatId,\n      mediaId: id,\n      origin: MediaViewerOrigin.SearchResult,\n    });\n  }, [openMediaViewer]);\n\n  function renderGallery() {\n    return (\n      <div className=\"media-list\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {foundMessages.map((message) => (\n          <Media\n            key={`${message.chatId}-${message.id}`}\n            idPrefix=\"search-media\"\n            message={message}\n            isProtected={isChatProtected || message.isProtected}\n            observeIntersection={observeIntersectionForMedia}\n            onClick={handleSelectMedia}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderSearchResult() {\n    return foundMessages.map((message) => (\n      <ChatMessage\n        key={message.id}\n        chatId={message.chatId}\n        message={message}\n      />\n    ));\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n  const isMediaGrid = canRenderContents && foundIds && foundIds.length > 0 && !searchQuery;\n  const isMessageList = canRenderContents && foundIds && foundIds.length > 0 && searchQuery;\n\n  const classNames = buildClassName(\n    'search-content custom-scroll',\n    isMessageList && 'chat-list',\n  );\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch\">\n      <InfiniteScroll\n        className={classNames}\n        items={foundMessages}\n        itemSelector={!searchQuery ? '.Media' : '.ListItem'}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {isMediaGrid && renderGallery()}\n        {isMessageList && renderSearchResult()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(MediaResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dateFormat';\nimport { getSenderName } from './helpers/getSenderName';\nimport { throttle } from '../../../util/schedulers';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\nimport useLang from '../../../hooks/useLang';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport WebLink from '../../common/WebLink';\nimport NothingFound from '../../common/NothingFound';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'links';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst LinkResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  lastSyncTime,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (lastSyncTime && direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [lastSyncTime, searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = id.split('_');\n\n      return globalMessagesByChatId[chatId]?.byId[Number(messageId)];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((messageId: number, chatId: string) => {\n    focusMessage({ chatId, messageId });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const shouldDrawDateDivider = index === 0\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <div\n          className=\"ListItem small-icon\"\n          dir={lang.isRtl ? 'rtl' : undefined}\n          key={message.id}\n        >\n          {shouldDrawDateDivider && (\n            <p className=\"section-heading\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <WebLink\n            key={message.id}\n            message={message}\n            senderTitle={getSenderName(lang, message, chatsById, usersById)}\n            isProtected={isChatProtected || message.isProtected}\n            observeIntersection={observeIntersectionForMedia}\n            onMessageClick={handleMessageFocus}\n          />\n        </div>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(LinkResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dateFormat';\nimport { getSenderName } from './helpers/getSenderName';\nimport { throttle } from '../../../util/schedulers';\nimport { getMessageDocument } from '../../../global/helpers';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\nimport useLang from '../../../hooks/useLang';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\n\nimport Document from '../../common/Document';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport NothingFound from '../../common/NothingFound';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'documents';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst FileResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n  lastSyncTime,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (lastSyncTime && direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [lastSyncTime, searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = id.split('_');\n      const message = globalMessagesByChatId[chatId]?.byId[Number(messageId)];\n\n      return message && getMessageDocument(message) ? message : undefined;\n    }).filter(Boolean) as ApiMessage[];\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((messageId: number, chatId: string) => {\n    focusMessage({ chatId, messageId });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const shouldDrawDateDivider = index === 0\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <div\n          className=\"ListItem small-icon\"\n          key={message.id}\n        >\n          {shouldDrawDateDivider && (\n            <p className=\"section-heading\">{formatMonthAndYear(lang, new Date(message.date * 1000))}</p>\n          )}\n          <Document\n            message={message}\n            withDate\n            datetime={message.date}\n            smaller\n            sender={getSenderName(lang, message, chatsById, usersById)}\n            className=\"scroll-item\"\n            isDownloading={activeDownloads[message.chatId]?.ids?.includes(message.id)}\n            observeIntersection={observeIntersectionForMedia}\n            onDateClick={handleMessageFocus}\n          />\n        </div>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(FileResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { AudioOrigin, LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dateFormat';\nimport { getSenderName } from './helpers/getSenderName';\nimport { throttle } from '../../../util/schedulers';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\nimport useLang from '../../../hooks/useLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Audio from '../../common/Audio';\nimport NothingFound from '../../common/NothingFound';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  isVoice?: boolean;\n  searchQuery?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst AudioResults: FC<OwnProps & StateProps> = ({\n  theme,\n  isVoice,\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  lastSyncTime,\n  activeDownloads,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n    openAudioPlayer,\n  } = getActions();\n\n  const lang = useLang();\n  const currentType = isVoice ? 'voice' : 'audio';\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (lastSyncTime && direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: currentType,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [currentType, lastSyncTime, searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = id.split('_');\n\n      return globalMessagesByChatId[chatId]?.byId[Number(messageId)];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((messageId: number, chatId: string) => {\n    focusMessage({ chatId, messageId });\n  }, [focusMessage]);\n\n  const handlePlayAudio = useCallback((messageId: number, chatId: string) => {\n    openAudioPlayer({ chatId, messageId });\n  }, [openAudioPlayer]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const shouldDrawDateDivider = index === 0\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <div\n          className=\"ListItem small-icon\"\n          key={message.id}\n        >\n          {shouldDrawDateDivider && (\n            <p className=\"section-heading\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <Audio\n            key={message.id}\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Search}\n            senderTitle={getSenderName(lang, message, chatsById, usersById)}\n            date={message.date}\n            lastSyncTime={lastSyncTime}\n            className=\"scroll-item\"\n            onPlay={handlePlayAudio}\n            onDateClick={handleMessageFocus}\n            canDownload={!chatsById[message.chatId]?.isProtected && !message.isProtected}\n            isDownloading={activeDownloads[message.chatId]?.ids?.includes(message.id)}\n          />\n        </div>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div className=\"LeftSearch\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps('audio'),\n)(AudioResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useState, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { GlobalSearchContent } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { parseDateString } from '../../../util/dateFormat';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport TabList from '../../ui/TabList';\nimport Transition from '../../ui/Transition';\nimport ChatResults from './ChatResults';\nimport ChatMessageResults from './ChatMessageResults';\nimport MediaResults from './MediaResults';\nimport LinkResults from './LinkResults';\nimport FileResults from './FileResults';\nimport AudioResults from './AudioResults';\n\nimport './LeftSearch.scss';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  searchDate?: number;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentContent?: GlobalSearchContent;\n  chatId?: string;\n};\n\nconst TABS = [\n  { type: GlobalSearchContent.ChatList, title: 'SearchAllChatsShort' },\n  { type: GlobalSearchContent.Media, title: 'SharedMediaTab2' },\n  { type: GlobalSearchContent.Links, title: 'SharedLinksTab2' },\n  { type: GlobalSearchContent.Files, title: 'SharedFilesTab2' },\n  { type: GlobalSearchContent.Music, title: 'SharedMusicTab2' },\n  { type: GlobalSearchContent.Voice, title: 'SharedVoiceTab2' },\n];\n\nconst CHAT_TABS = [\n  { type: GlobalSearchContent.ChatList, title: 'All Messages' },\n  ...TABS.slice(1),\n];\n\nconst TRANSITION_RENDER_COUNT = Object.keys(GlobalSearchContent).length / 2;\n\nconst LeftSearch: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  searchDate,\n  isActive,\n  currentContent = GlobalSearchContent.ChatList,\n  chatId,\n  onReset,\n}) => {\n  const {\n    setGlobalSearchContent,\n    setGlobalSearchDate,\n  } = getActions();\n\n  const lang = useLang();\n  const [activeTab, setActiveTab] = useState(currentContent);\n  const dateSearchQuery = useMemo(() => parseDateString(searchQuery), [searchQuery]);\n\n  const handleSwitchTab = useCallback((index: number) => {\n    const tab = TABS[index];\n    setGlobalSearchContent({ content: tab.type });\n    setActiveTab(index);\n  }, [setGlobalSearchContent]);\n\n  const handleSearchDateSelect = useCallback((value: Date) => {\n    setGlobalSearchDate({ date: value.getTime() / 1000 });\n  }, [setGlobalSearchDate]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, undefined, '.ListItem-button', true);\n\n  return (\n    <div className=\"LeftSearch\" ref={containerRef} onKeyDown={handleKeyDown}>\n      <TabList activeTab={activeTab} tabs={chatId ? CHAT_TABS : TABS} onSwitchTab={handleSwitchTab} />\n      <Transition\n        name={lang.isRtl ? 'slideOptimizedRtl' : 'slideOptimized'}\n        renderCount={TRANSITION_RENDER_COUNT}\n        activeKey={currentContent}\n      >\n        {(() => {\n          switch (currentContent) {\n            case GlobalSearchContent.ChatList:\n              if (chatId) {\n                return (\n                  <ChatMessageResults\n                    searchQuery={searchQuery}\n                    dateSearchQuery={dateSearchQuery}\n                    onReset={onReset}\n                    onSearchDateSelect={handleSearchDateSelect}\n                  />\n                );\n              }\n              return (\n                <ChatResults\n                  searchQuery={searchQuery}\n                  searchDate={searchDate}\n                  dateSearchQuery={dateSearchQuery}\n                  onReset={onReset}\n                  onSearchDateSelect={handleSearchDateSelect}\n                />\n              );\n            case GlobalSearchContent.Media:\n              return <MediaResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Links:\n              return <LinkResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Files:\n              return <FileResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Music:\n              return (\n                <AudioResults\n                  key=\"audio\"\n                  searchQuery={searchQuery}\n                />\n              );\n            case GlobalSearchContent.Voice:\n              return (\n                <AudioResults\n                  key=\"voice\"\n                  isVoice\n                  searchQuery={searchQuery}\n                />\n              );\n            default:\n              return undefined;\n          }\n        })()}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentContent, chatId } = selectTabState(global).globalSearch;\n\n    return { currentContent, chatId };\n  },\n)(LeftSearch));\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import type { StateReducer, Dispatch } from '../useReducer';\nimport useReducer from '../useReducer';\n\nexport type TwoFaActions = (\n  'setCurrentPassword' | 'setPassword' | 'setHint' | 'setEmail' | 'reset'\n);\nexport type TwoFaDispatch = Dispatch<TwoFaState, TwoFaActions>;\n\nexport type TwoFaState = {\n  currentPassword: string;\n  password: string;\n  hint: string;\n  email: string;\n};\n\nconst INITIAL_STATE: TwoFaState = {\n  currentPassword: '',\n  password: '',\n  hint: '',\n  email: '',\n};\n\nconst twoFaReducer: StateReducer<TwoFaState, TwoFaActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setCurrentPassword':\n      return {\n        ...state,\n        currentPassword: action.payload,\n      };\n\n    case 'setPassword':\n      return {\n        ...state,\n        password: action.payload,\n      };\n\n    case 'setHint':\n      return {\n        ...state,\n        hint: action.payload,\n      };\n\n    case 'setEmail':\n      return {\n        ...state,\n        email: action.payload,\n      };\n\n    case 'reset':\n      return INITIAL_STATE;\n\n    default:\n      return state;\n  }\n};\n\nconst useTwoFaReducer = () => {\n  return useReducer(twoFaReducer, INITIAL_STATE);\n};\n\nexport default useTwoFaReducer;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\n\nimport useLang from '../../../hooks/useLang';\nimport useMultiClick from '../../../hooks/useMultiClick';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\ntype OwnProps = {\n  currentScreen: SettingsScreens;\n  editedFolderId?: number;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\nconst SettingsHeader: FC<OwnProps> = ({\n  currentScreen,\n  editedFolderId,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    signOut,\n    openDeleteChatFolderModal,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isSignOutDialogOpen, setIsSignOutDialogOpen] = useState(false);\n\n  const handleMultiClick = useMultiClick(5, () => {\n    onScreenSelect(SettingsScreens.Experimental);\n  });\n\n  const openSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(true);\n  }, []);\n\n  const closeSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(false);\n  }, []);\n\n  const openDeleteFolderConfirmation = useCallback(() => {\n    if (!editedFolderId) return;\n\n    openDeleteChatFolderModal({ folderId: editedFolderId });\n  }, [editedFolderId, openDeleteChatFolderModal]);\n\n  const handleSignOutMessage = useCallback(() => {\n    closeSignOutConfirmation();\n    signOut({ forceInitApi: true });\n  }, [closeSignOutConfirmation, signOut]);\n\n  const SettingsMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const lang = useLang();\n\n  function renderHeaderContent() {\n    switch (currentScreen) {\n      case SettingsScreens.EditProfile:\n        return <h3>{lang('lng_settings_information')}</h3>;\n      case SettingsScreens.General:\n        return <h3>{lang('General')}</h3>;\n      case SettingsScreens.QuickReaction:\n        return <h3>{lang('DoubleTapSetting')}</h3>;\n      case SettingsScreens.CustomEmoji:\n        return <h3>{lang('Emoji')}</h3>;\n      case SettingsScreens.Notifications:\n        return <h3>{lang('Notifications')}</h3>;\n      case SettingsScreens.DataStorage:\n        return <h3>{lang('DataSettings')}</h3>;\n      case SettingsScreens.Privacy:\n        return <h3>{lang('PrivacySettings')}</h3>;\n      case SettingsScreens.Language:\n        return <h3>{lang('Language')}</h3>;\n      case SettingsScreens.DoNotTranslate:\n        return <h3>{lang('DoNotTranslate')}</h3>;\n      case SettingsScreens.Stickers:\n        return <h3>{lang('StickersName')}</h3>;\n      case SettingsScreens.Experimental:\n        return <h3>{lang('lng_settings_experimental')}</h3>;\n\n      case SettingsScreens.GeneralChatBackground:\n        return <h3>{lang('ChatBackground')}</h3>;\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return <h3>{lang('SetColor')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumber:\n        return <h3>{lang('PrivacyPhone')}</h3>;\n      case SettingsScreens.PrivacyLastSeen:\n        return <h3>{lang('PrivacyLastSeen')}</h3>;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return <h3>{lang('Privacy.ProfilePhoto')}</h3>;\n      case SettingsScreens.PrivacyForwarding:\n        return <h3>{lang('PrivacyForwards')}</h3>;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return <h3>{lang('PrivacyVoiceMessages')}</h3>;\n      case SettingsScreens.PrivacyGroupChats:\n        return <h3>{lang('AutodownloadGroupChats')}</h3>;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return <h3>{lang('PrivacyP2P')}</h3>;\n      case SettingsScreens.PrivacyPhoneCall:\n        return <h3>{lang('Calls')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n        return <h3>{lang('AlwaysShareWith')}</h3>;\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n        return <h3>{lang('NeverShareWith')}</h3>;\n\n      case SettingsScreens.Performance:\n        return <h3>{lang('Animations and Performance')}</h3>;\n\n      case SettingsScreens.ActiveSessions:\n        return <h3>{lang('SessionsTitle')}</h3>;\n      case SettingsScreens.ActiveWebsites:\n        return <h3>{lang('OtherWebSessions')}</h3>;\n      case SettingsScreens.PrivacyBlockedUsers:\n        return <h3>{lang('BlockedUsers')}</h3>;\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaEnabled:\n        return <h3>{lang('TwoStepVerification')}</h3>;\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n        return <h3>{lang('PleaseEnterCurrentPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n        return <h3>{lang('PleaseReEnterPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaChangePasswordHint:\n        return <h3>{lang('PasswordHint')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaRecoveryEmail:\n        return <h3>{lang('RecoveryEmailTitle')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return <h3>Recovery Email Code</h3>;\n      case SettingsScreens.TwoFaCongratulations:\n        return <h3>{lang('TwoStepVerificationPasswordSet')}</h3>;\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n        return <h3>{lang('PleaseEnterCurrentPassword')}</h3>;\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n        return <h3>{lang('Passcode')}</h3>;\n\n      case SettingsScreens.PasscodeTurnOff:\n        return <h3>{lang('PasscodeController.Disable.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n        return <h3>{lang('PasscodeController.Change.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n        return <h3>{lang('PasscodeController.ReEnterPasscode.Placeholder')}</h3>;\n\n      case SettingsScreens.Folders:\n        return <h3>{lang('Filters')}</h3>;\n      case SettingsScreens.FoldersCreateFolder:\n        return <h3>{lang('FilterNew')}</h3>;\n      case SettingsScreens.FoldersShare:\n        return <h3>{lang('FolderLinkScreen.Title')}</h3>;\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n        return (\n          <div className=\"settings-main-header\">\n            <h3>{lang('FilterEdit')}</h3>\n            {Boolean(editedFolderId) && (\n              <DropdownMenu\n                className=\"settings-more-menu\"\n                trigger={SettingsMenuButton}\n                positionX=\"right\"\n              >\n                <MenuItem icon=\"delete\" destructive onClick={openDeleteFolderConfirmation}>\n                  {lang('Delete')}\n                </MenuItem>\n              </DropdownMenu>\n            )}\n          </div>\n        );\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n        return (\n          <h3>\n            {lang(\n              currentScreen === SettingsScreens.FoldersIncludedChats\n                  || currentScreen === SettingsScreens.FoldersIncludedChatsFromChatList\n                ? 'FilterInclude' : 'FilterExclude',\n            )}\n          </h3>\n        );\n      default:\n        return (\n          <div className=\"settings-main-header\">\n            {/* eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions */}\n            <h3 onClick={handleMultiClick}>\n              {lang('SETTINGS')}\n            </h3>\n\n            <Button\n              round\n              ripple={!isMobile}\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onScreenSelect(SettingsScreens.EditProfile)}\n              ariaLabel={lang('lng_settings_information')}\n            >\n              <i className=\"icon icon-edit\" />\n            </Button>\n            <DropdownMenu\n              className=\"settings-more-menu\"\n              trigger={SettingsMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"logout\" onClick={openSignOutConfirmation}>{lang('LogOutTitle')}</MenuItem>\n            </DropdownMenu>\n          </div>\n        );\n    }\n  }\n\n  return (\n    <div className=\"left-header\">\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        onClick={onReset}\n        ariaLabel={lang('AccDescrGoBack')}\n      >\n        <i className=\"icon icon-arrow-left\" />\n      </Button>\n      {renderHeaderContent()}\n      <ConfirmDialog\n        isOpen={isSignOutDialogOpen}\n        onClose={closeSignOutConfirmation}\n        text={lang('lng_sure_logout')}\n        confirmLabel={lang('AccountSettings.Logout')}\n        confirmHandler={handleSignOutMessage}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(SettingsHeader);\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nconst CLICK_TIMEOUT = 300;\n\nexport default function useMultiClick(amount: number, callback: NoneToVoidFunction) {\n  const currentAmountRef = useRef(0);\n  const timeoutRef = useRef<ReturnType<typeof setTimeout>>();\n  const handleClick = useCallback(() => {\n    currentAmountRef.current++;\n    if (currentAmountRef.current === amount) {\n      currentAmountRef.current = 0;\n      callback();\n      return;\n    }\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    timeoutRef.current = setTimeout(() => {\n      currentAmountRef.current = 0;\n    }, CLICK_TIMEOUT);\n  }, [amount, callback]);\n\n  return handleClick;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\nimport type { ApiUser } from '../../../api/types';\n\nimport { selectIsPremiumPurchaseBlocked, selectUser } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ListItem from '../../ui/ListItem';\nimport ProfileInfo from '../../common/ProfileInfo';\nimport ChatExtra from '../../common/ChatExtra';\nimport PremiumIcon from '../../common/PremiumIcon';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  sessionCount: number;\n  currentUser?: ApiUser;\n  lastSyncTime?: number;\n  canBuyPremium?: boolean;\n};\n\nconst SettingsMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  currentUser,\n  sessionCount,\n  lastSyncTime,\n  canBuyPremium,\n}) => {\n  const {\n    loadProfilePhotos,\n    loadAuthorizations,\n    openPremiumModal,\n  } = getActions();\n\n  const lang = useLang();\n  const profileId = currentUser?.id;\n\n  useEffect(() => {\n    if (profileId && lastSyncTime) {\n      loadProfilePhotos({ profileId });\n    }\n  }, [lastSyncTime, profileId, loadProfilePhotos]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  useEffect(() => {\n    if (lastSyncTime) {\n      loadAuthorizations();\n    }\n  }, [lastSyncTime, loadAuthorizations]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-main-menu\">\n        {currentUser && (\n          <ProfileInfo\n            userId={currentUser.id}\n            canPlayVideo={Boolean(isActive)}\n            forceShowSelf\n          />\n        )}\n        {currentUser && (\n          <ChatExtra\n            chatOrUserId={currentUser.id}\n            forceShowSelf\n          />\n        )}\n        <ListItem\n          icon=\"settings\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.General)}\n        >\n          {lang('Telegram.GeneralSettingsViewController')}\n        </ListItem>\n        <ListItem\n          icon=\"animations\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Performance)}\n        >\n          {lang('Animations and Performance')}\n        </ListItem>\n        <ListItem\n          icon=\"unmute\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Notifications)}\n        >\n          {lang('Notifications')}\n        </ListItem>\n        <ListItem\n          icon=\"data\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.DataStorage)}\n        >\n          {lang('DataSettings')}\n        </ListItem>\n        <ListItem\n          icon=\"lock\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Privacy)}\n        >\n          {lang('PrivacySettings')}\n        </ListItem>\n        <ListItem\n          icon=\"folder\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Folders)}\n        >\n          {lang('Filters')}\n        </ListItem>\n        <ListItem\n          icon=\"active-sessions\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.ActiveSessions)}\n        >\n          {lang('SessionsTitle')}\n          {sessionCount > 0 && (<span className=\"settings-item__current-value\">{sessionCount}</span>)}\n        </ListItem>\n        <ListItem\n          icon=\"language\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Language)}\n        >\n          {lang('Language')}\n          <span className=\"settings-item__current-value\">{lang.langName}</span>\n        </ListItem>\n        <ListItem\n          icon=\"stickers\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Stickers)}\n        >\n          {lang('StickersName')}\n        </ListItem>\n        {canBuyPremium && (\n          <ListItem\n            leftElement={<PremiumIcon withGradient big />}\n            className=\"settings-main-menu-premium\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openPremiumModal()}\n          >\n            {lang('TelegramPremium')}\n          </ListItem>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId, lastSyncTime } = global;\n\n    return {\n      sessionCount: global.activeSessions.orderedHashes.length,\n      currentUser: currentUserId ? selectUser(global, currentUserId) : undefined,\n      lastSyncTime,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(SettingsMain));\n","import React, {\n  useState, useCallback, memo, useEffect, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport { debounce } from '../../util/schedulers';\n\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport InputText from '../ui/InputText';\n\ntype OwnProps = {\n  currentUsername?: string;\n  asLink?: boolean;\n  isLoading?: boolean;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  onChange: (value: string) => void;\n};\n\nconst MIN_USERNAME_LENGTH = 5;\nconst MAX_USERNAME_LENGTH = 32;\nconst LINK_PREFIX_REGEX = /https:\\/\\/t\\.me\\/?/i;\nconst USERNAME_REGEX = /^\\D([a-zA-Z0-9_]+)$/;\n\nconst runDebouncedForCheckUsername = debounce((cb) => cb(), 250, false);\n\nfunction isUsernameValid(username: string) {\n  return username.length === 0 || (\n    username.length >= MIN_USERNAME_LENGTH\n    && username.length <= MAX_USERNAME_LENGTH\n    && USERNAME_REGEX.test(username)\n  );\n}\n\nconst UsernameInput: FC<OwnProps> = ({\n  currentUsername,\n  asLink,\n  isLoading,\n  isUsernameAvailable,\n  checkedUsername,\n  onChange,\n}) => {\n  const { checkUsername, checkPublicLink } = getActions();\n  const [username, setUsername] = useState(currentUsername || '');\n\n  const lang = useLang();\n  const langPrefix = asLink ? 'SetUrl' : 'Username';\n  const label = asLink ? lang('SetUrlPlaceholder') : lang('Username');\n\n  const previousIsUsernameAvailable = usePrevious(isUsernameAvailable);\n  const renderingIsUsernameAvailable = currentUsername !== username\n    ? (isUsernameAvailable ?? previousIsUsernameAvailable) : undefined;\n  const isChecking = username && currentUsername !== username && checkedUsername !== username;\n\n  const [usernameSuccess, usernameError] = useMemo(() => {\n    if (!username.length) {\n      return [];\n    }\n\n    if (username.length < MIN_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidShort`)];\n    }\n    if (username.length > MAX_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidLong`)];\n    }\n    if (!USERNAME_REGEX.test(username)) {\n      return [undefined, lang(`${langPrefix}Invalid`)];\n    }\n\n    if (renderingIsUsernameAvailable === undefined || isChecking) {\n      return [];\n    }\n\n    // Variable `isUsernameAvailable` is initialized with `undefined`, so a strict false check is required\n    return [\n      renderingIsUsernameAvailable ? lang(`${langPrefix}Available`, label) : undefined,\n      renderingIsUsernameAvailable === false ? lang(`${langPrefix}InUse`) : undefined,\n    ];\n  }, [username, renderingIsUsernameAvailable, isChecking, lang, langPrefix, label]);\n\n  useEffect(() => {\n    setUsername(currentUsername || '');\n  }, [asLink, currentUsername]);\n\n  const handleUsernameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.trim();\n    // Prevent prefix editing\n    if (asLink && !value.match(LINK_PREFIX_REGEX)) {\n      if (!value.length) {\n        setUsername('');\n        onChange?.('');\n      }\n      return;\n    }\n    const newUsername = value.replace(LINK_PREFIX_REGEX, '');\n\n    setUsername(newUsername);\n\n    const isValid = isUsernameValid(newUsername);\n    if (!isValid) return;\n\n    onChange?.(newUsername);\n\n    runDebouncedForCheckUsername(() => {\n      if (newUsername !== currentUsername) {\n        const check = asLink ? checkPublicLink : checkUsername;\n        check({ username: newUsername });\n      }\n    });\n  }, [asLink, checkPublicLink, checkUsername, currentUsername, onChange]);\n\n  return (\n    <InputText\n      value={`${asLink ? TME_LINK_PREFIX : ''}${username}`}\n      onChange={handleUsernameChange}\n      label={isChecking ? lang('Checking') : label}\n      error={usernameError}\n      success={usernameSuccess}\n      readOnly={isLoading}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(UsernameInput);\n","import type { ChangeEvent, FormEvent, RefObject } from 'react';\nimport useLang from '../../hooks/useLang';\nimport buildClassName from '../../util/buildClassName';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../lib/teact/teact';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLTextAreaElement>;\n  id?: string;\n  className?: string;\n  value?: string;\n  label?: string;\n  error?: string;\n  success?: string;\n  disabled?: boolean;\n  readOnly?: boolean;\n  placeholder?: string;\n  autoComplete?: string;\n  maxLength?: number;\n  maxLengthIndicator?: string;\n  tabIndex?: number;\n  inputMode?: 'text' | 'none' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search';\n  onChange?: (e: ChangeEvent<HTMLTextAreaElement>) => void;\n  onInput?: (e: FormEvent<HTMLTextAreaElement>) => void;\n  onKeyPress?: (e: React.KeyboardEvent<HTMLTextAreaElement>) => void;\n  onKeyDown?: (e: React.KeyboardEvent<HTMLTextAreaElement>) => void;\n  onBlur?: (e: React.FocusEvent<HTMLTextAreaElement>) => void;\n  onPaste?: (e: React.ClipboardEvent<HTMLTextAreaElement>) => void;\n  noReplaceNewlines?: boolean;\n};\n\nconst TextArea: FC<OwnProps> = ({\n  ref,\n  id,\n  className,\n  value,\n  label,\n  error,\n  success,\n  disabled,\n  readOnly,\n  placeholder,\n  autoComplete,\n  inputMode,\n  maxLength,\n  maxLengthIndicator,\n  tabIndex,\n  onChange,\n  onInput,\n  onKeyPress,\n  onKeyDown,\n  onBlur,\n  onPaste,\n  noReplaceNewlines,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let textareaRef = useRef<HTMLTextAreaElement>(null);\n  if (ref) {\n    textareaRef = ref;\n  }\n\n  const lang = useLang();\n  const labelText = error || success || label;\n  const fullClassName = buildClassName(\n    'input-group',\n    value && 'touched',\n    error ? 'error' : success && 'success',\n    disabled && 'disabled',\n    readOnly && 'disabled',\n    labelText && 'with-label',\n    className,\n  );\n\n  useEffect(() => {\n    const textarea = textareaRef.current;\n    if (!textarea) return;\n    textarea.style.height = '0';\n    textarea.style.height = `${textarea.scrollHeight}px`;\n  }, []);\n\n  const handleChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    if (!noReplaceNewlines) {\n      const previousSelectionEnd = e.currentTarget.selectionEnd;\n      // TDesktop replaces newlines with spaces as well\n      e.currentTarget.value = e.currentTarget.value.replace(/\\n/g, ' ');\n      e.currentTarget.selectionEnd = previousSelectionEnd;\n    }\n    e.currentTarget.style.height = '0';\n    e.currentTarget.style.height = `${e.currentTarget.scrollHeight}px`;\n    onChange?.(e);\n  }, [noReplaceNewlines, onChange]);\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      <textarea\n        ref={textareaRef}\n        className=\"form-control\"\n        id={id}\n        dir=\"auto\"\n        value={value || ''}\n        tabIndex={tabIndex}\n        placeholder={placeholder}\n        maxLength={maxLength}\n        autoComplete={autoComplete}\n        inputMode={inputMode}\n        disabled={disabled}\n        readOnly={readOnly}\n        onChange={handleChange}\n        onInput={onInput}\n        onKeyPress={onKeyPress}\n        onKeyDown={onKeyDown}\n        onBlur={onBlur}\n        onPaste={onPaste}\n        aria-label={labelText}\n      />\n      {labelText && (\n        <label htmlFor={id}>{labelText}</label>\n      )}\n      {maxLengthIndicator && (\n        <div className=\"max-length-indicator\">{maxLengthIndicator}</div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(TextArea);\n","import React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './Draggable.module.scss';\nimport useLang from '../../hooks/useLang';\nimport buildStyle from '../../util/buildStyle';\n\ntype TPoint = {\n  x: number;\n  y: number;\n};\n\ntype DraggableState = {\n  isDragging: boolean;\n  origin: TPoint;\n  translation: TPoint;\n  width?: number;\n  height?: number;\n};\n\ntype OwnProps = {\n  children: React.ReactNode;\n  onDrag: (translation: TPoint, id: number | string) => void;\n  onDragEnd: NoneToVoidFunction;\n  id: number | string;\n  style?: string;\n  knobStyle?: string;\n  isDisabled?: boolean;\n};\n\nconst ZERO_POINT: TPoint = { x: 0, y: 0 };\n\nconst Draggable: FC<OwnProps> = ({\n  children,\n  id,\n  onDrag,\n  onDragEnd,\n  style: externalStyle,\n  knobStyle,\n  isDisabled,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const [state, setState] = useState<DraggableState>({\n    isDragging: false,\n    origin: ZERO_POINT,\n    translation: ZERO_POINT,\n  });\n\n  const handleMouseDown = (e: React.MouseEvent | React.TouchEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    const { x, y } = getClientCoordinate(e);\n\n    setState({\n      ...state,\n      isDragging: true,\n      origin: { x, y },\n      width: ref.current?.offsetWidth,\n      height: ref.current?.offsetHeight,\n    });\n  };\n\n  const handleMouseMove = useCallback((e: MouseEvent | TouchEvent) => {\n    const { x, y } = getClientCoordinate(e);\n\n    const translation = {\n      x: x - state.origin.x,\n      y: y - state.origin.y,\n    };\n\n    setState((current) => ({\n      ...current,\n      translation,\n    }));\n\n    onDrag(translation, id);\n  }, [id, onDrag, state.origin.x, state.origin.y]);\n\n  const handleMouseUp = useCallback(() => {\n    setState((current) => ({\n      ...current,\n      isDragging: false,\n      width: undefined,\n      height: undefined,\n    }));\n\n    onDragEnd();\n  }, [onDragEnd]);\n\n  useEffect(() => {\n    if (state.isDragging && isDisabled) {\n      setState((current) => ({\n        ...current,\n        isDragging: false,\n        width: undefined,\n        height: undefined,\n      }));\n    }\n  }, [isDisabled, state.isDragging]);\n\n  useEffect(() => {\n    if (state.isDragging) {\n      window.addEventListener('touchmove', handleMouseMove);\n      window.addEventListener('mousemove', handleMouseMove);\n      window.addEventListener('touchend', handleMouseUp);\n      window.addEventListener('touchcancel', handleMouseUp);\n      window.addEventListener('mouseup', handleMouseUp);\n    } else {\n      window.removeEventListener('touchmove', handleMouseMove);\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('touchend', handleMouseUp);\n      window.removeEventListener('touchcancel', handleMouseUp);\n      window.removeEventListener('mouseup', handleMouseUp);\n\n      setState((current) => ({\n        ...current,\n        translation: ZERO_POINT,\n      }));\n    }\n\n    return () => {\n      if (state.isDragging) {\n        window.removeEventListener('touchmove', handleMouseMove);\n        window.removeEventListener('mousemove', handleMouseMove);\n        window.removeEventListener('touchend', handleMouseUp);\n        window.removeEventListener('touchcancel', handleMouseUp);\n        window.removeEventListener('mouseup', handleMouseUp);\n      }\n    };\n  }, [handleMouseMove, handleMouseUp, state.isDragging]);\n\n  const fullClassName = buildClassName(styles.container, state.isDragging && styles.isDragging);\n\n  const cssStyles = useMemo(() => {\n    return buildStyle(\n      state.isDragging && `transform: translate(${state.translation.x}px, ${state.translation.y}px)`,\n      state.width ? `width: ${state.width}px` : undefined,\n      state.height ? `height: ${state.height}px` : undefined,\n      externalStyle,\n    );\n  }, [externalStyle, state.height, state.isDragging, state.translation.x, state.translation.y, state.width]);\n\n  return (\n    <div style={cssStyles} className={fullClassName} ref={ref}>\n      {children}\n\n      {!isDisabled && (\n        <div\n          aria-label={lang('i18n_dragToSort')}\n          tabIndex={0}\n          role=\"button\"\n          className={buildClassName(styles.knob, 'div-button', 'draggable-knob')}\n          onMouseDown={handleMouseDown}\n          onTouchStart={handleMouseDown}\n          style={knobStyle}\n        >\n          <i className=\"icon icon-sort\" aria-hidden />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Draggable);\n\nfunction getClientCoordinate(e: MouseEvent | TouchEvent | React.MouseEvent | React.TouchEvent) {\n  let x;\n  let y;\n\n  if ('touches' in e) {\n    x = e.touches[0].clientX;\n    y = e.touches[0].clientY;\n  } else {\n    x = e.clientX;\n    y = e.clientY;\n  }\n\n  return { x, y };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"C9QYXaRLeCEFngOBl4S3\",\"isDragging\":\"vhGsRt79lQzzuXny9KG8\",\"knob\":\"oGgH1RraeCPayQnxA8C_\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"u8GGVdXgbKUMvoqqs0VJ\",\"header\":\"sPTmRsKHnc3FL9AubUaY\",\"description\":\"YqnFSIc98kYMRge1RrlJ\",\"sortableContainer\":\"pWxbEJm12NZb25lGmdwA\",\"item\":\"AWgYeVXfLin4VAmQzhKQ\"};","import React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiUsername } from '../../api/types';\n\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport buildClassName from '../../util/buildClassName';\nimport { isBetween } from '../../util/math';\nimport usePrevious from '../../hooks/usePrevious';\nimport useLang from '../../hooks/useLang';\n\nimport Draggable from '../ui/Draggable';\nimport ListItem from '../ui/ListItem';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nimport styles from './ManageUsernames.module.scss';\n\ntype SortState = {\n  orderedUsernames?: string[];\n  dragOrderUsernames?: string[];\n  draggedIndex?: number;\n};\n\ntype OwnProps = {\n  chatId?: string;\n  usernames: ApiUsername[];\n  onEditUsername: (username: string) => void;\n};\n\nconst USERNAME_HEIGHT_PX = 60;\n\nconst ManageUsernames: FC<OwnProps> = ({\n  chatId,\n  usernames,\n  onEditUsername,\n}) => {\n  const {\n    showNotification,\n    toggleUsername,\n    toggleChatUsername,\n    sortUsernames,\n    sortChatUsernames,\n  } = getActions();\n  const lang = useLang();\n  const [usernameForConfirm, setUsernameForConfirm] = useState<ApiUsername | undefined>();\n\n  const usernameList = useMemo(() => usernames.map(({ username }) => username), [usernames]);\n  const prevUsernameList = usePrevious(usernameList);\n\n  const [state, setState] = useState<SortState>({\n    orderedUsernames: usernameList,\n    dragOrderUsernames: usernameList,\n    draggedIndex: undefined,\n  });\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevUsernameList !== usernameList) {\n      setState({\n        orderedUsernames: usernameList,\n        dragOrderUsernames: usernameList,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevUsernameList, usernameList]);\n\n  const handleCopyUsername = useCallback((value: string) => {\n    copyTextToClipboard(`@${value}`);\n    showNotification({\n      message: lang('UsernameCopied'),\n    });\n  }, [lang, showNotification]);\n\n  const handleUsernameClick = useCallback((data: ApiUsername) => {\n    if (data.isEditable) {\n      onEditUsername(data.username);\n    } else {\n      setUsernameForConfirm(data);\n    }\n  }, [onEditUsername]);\n\n  const closeConfirmUsernameDialog = useCallback(() => {\n    setUsernameForConfirm(undefined);\n  }, []);\n\n  const handleUsernameToggle = useCallback(() => {\n    if (chatId) {\n      toggleChatUsername({\n        chatId,\n        username: usernameForConfirm!.username,\n        isActive: !usernameForConfirm!.isActive,\n      });\n    } else {\n      toggleUsername({\n        username: usernameForConfirm!.username,\n        isActive: !usernameForConfirm!.isActive,\n      });\n    }\n    closeConfirmUsernameDialog();\n  }, [chatId, closeConfirmUsernameDialog, toggleChatUsername, toggleUsername, usernameForConfirm]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / USERNAME_HEIGHT_PX);\n    const index = state.orderedUsernames?.indexOf(id as string) || 0;\n    const dragOrderUsernames = state.orderedUsernames?.filter((username) => username !== id);\n\n    if (!dragOrderUsernames || !isBetween(index + delta, 0, usernameList.length)) {\n      return;\n    }\n\n    dragOrderUsernames.splice(index + delta, 0, id as string);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderUsernames,\n    }));\n  }, [state.orderedUsernames, usernameList.length]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      if (chatId) {\n        sortChatUsernames({\n          chatId,\n          usernames: current.dragOrderUsernames!,\n        });\n      } else {\n        sortUsernames({ usernames: current.dragOrderUsernames! });\n      }\n\n      return {\n        ...current,\n        orderedUsernames: current.dragOrderUsernames,\n        draggedIndex: undefined,\n      };\n    });\n  }, [chatId, sortChatUsernames, sortUsernames]);\n\n  return (\n    <>\n      <div className={styles.container}>\n        <h4 className={styles.header} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_subtitle')}\n        </h4>\n        <div className={styles.sortableContainer} style={`height: ${(usernames.length) * USERNAME_HEIGHT_PX}px`}>\n          {usernames.map((usernameData, i) => {\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const top = (state.dragOrderUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const subtitle = usernameData.isEditable\n              ? 'lng_usernames_edit'\n              : (usernameData.isActive ? 'lng_usernames_active' : 'lng_usernames_non_active');\n\n            return (\n              <Draggable\n                key={usernameData.username}\n                id={usernameData.username}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={!usernameData.isActive}\n              >\n                <ListItem\n                  key={usernameData.username}\n                  className={buildClassName('drag-item mb-2 no-icon', styles.item)}\n                  narrow\n                  secondaryIcon=\"more\"\n                  icon={usernameData.isActive ? 'link' : 'link-broken'}\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        handleCopyUsername(usernameData.username);\n                      },\n                      title: lang('Copy'),\n                      icon: 'copy',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    handleUsernameClick(usernameData);\n                  }}\n                >\n                  <span className=\"title\">@{usernameData.username}</span>\n                  <span className=\"subtitle\">{lang(subtitle)}</span>\n                </ListItem>\n              </Draggable>\n            );\n          })}\n        </div>\n        <p className={styles.description} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_description')}\n        </p>\n      </div>\n      <ConfirmDialog\n        isOpen={Boolean(usernameForConfirm)}\n        onClose={closeConfirmUsernameDialog}\n        title={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertTitle' : 'Username.ActivateAlertTitle')}\n        text={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertText' : 'Username.ActivateAlertText')}\n        confirmLabel={lang(usernameForConfirm?.isActive\n          ? 'Username.DeactivateAlertHide'\n          : 'Username.ActivateAlertShow')}\n        confirmHandler={handleUsernameToggle}\n        confirmIsDestructive={!usernameForConfirm?.isActive}\n      />\n    </>\n  );\n};\n\nexport default memo(ManageUsernames);\n","import type { ChangeEvent } from 'react';\nimport React, {\n  useState, useCallback, memo, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiUsername } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ProfileEditProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { throttle } from '../../../util/schedulers';\nimport { selectTabState, selectUser, selectUserFullInfo } from '../../../global/selectors';\nimport { getChatAvatarHash } from '../../../global/helpers';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport renderText from '../../common/helpers/renderText';\nimport useMedia from '../../../hooks/useMedia';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport Spinner from '../../ui/Spinner';\nimport InputText from '../../ui/InputText';\nimport UsernameInput from '../../common/UsernameInput';\nimport TextArea from '../../ui/TextArea';\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\n\ntype OwnProps = {\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentAvatarHash?: string;\n  currentFirstName?: string;\n  currentLastName?: string;\n  currentBio?: string;\n  progress?: ProfileEditProgress;\n  checkedUsername?: string;\n  editUsernameError?: string;\n  isUsernameAvailable?: boolean;\n  maxBioLength: number;\n  usernames?: ApiUsername[];\n};\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide your first name';\n\nconst SettingsEditProfile: FC<OwnProps & StateProps> = ({\n  isActive,\n  currentAvatarHash,\n  currentFirstName,\n  currentLastName,\n  currentBio,\n  progress,\n  checkedUsername,\n  editUsernameError,\n  isUsernameAvailable,\n  maxBioLength,\n  usernames,\n  onReset,\n}) => {\n  const {\n    loadCurrentUser,\n    updateProfile,\n  } = getActions();\n\n  const lang = useLang();\n\n  const firstEditableUsername = useMemo(() => usernames?.find(({ isEditable }) => isEditable), [usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const [isUsernameTouched, setIsUsernameTouched] = useState(false);\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [firstName, setFirstName] = useState(currentFirstName || '');\n  const [lastName, setLastName] = useState(currentLastName || '');\n  const [bio, setBio] = useState(currentBio || '');\n  const [editableUsername, setEditableUsername] = useState<string | false>(currentUsername);\n\n  const currentAvatarBlobUrl = useMedia(currentAvatarHash, false, ApiMediaFormat.BlobUrl);\n\n  const isLoading = progress === ProfileEditProgress.InProgress;\n  const isUsernameError = editableUsername === false;\n\n  const previousIsUsernameAvailable = usePrevious(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n  const shouldRenderUsernamesManage = usernames && usernames.length > 1;\n\n  const isSaveButtonShown = useMemo(() => {\n    if (isUsernameError) {\n      return false;\n    }\n\n    return Boolean(photo) || isProfileFieldsTouched || (isUsernameTouched && renderingIsUsernameAvailable === true);\n  }, [isUsernameError, photo, isProfileFieldsTouched, isUsernameTouched, renderingIsUsernameAvailable]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadCurrentUser();\n    });\n  }, [loadCurrentUser]);\n\n  useEffect(() => {\n    setPhoto(undefined);\n  }, [currentAvatarBlobUrl]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName || '');\n    setLastName(currentLastName || '');\n    setBio(currentBio || '');\n  }, [currentFirstName, currentLastName, currentBio]);\n\n  useEffect(() => {\n    setEditableUsername(currentUsername || '');\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (progress === ProfileEditProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setIsUsernameTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handlePhotoChange = useCallback((newPhoto: File) => {\n    setPhoto(newPhoto);\n  }, []);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleBioChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBio(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUsernameChange = useCallback((value: string | false) => {\n    setEditableUsername(value);\n    setIsUsernameTouched(currentUsername !== value);\n  }, [currentUsername]);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n    const trimmedBio = bio.trim();\n\n    if (!editableUsername) return;\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateProfile({\n      photo,\n      ...(isProfileFieldsTouched && {\n        firstName: trimmedFirstName,\n        lastName: trimmedLastName,\n        bio: trimmedBio,\n      }),\n      ...(isUsernameTouched && {\n        username: editableUsername,\n      }),\n    });\n  }, [\n    photo,\n    firstName, lastName, bio, isProfileFieldsTouched,\n    editableUsername, isUsernameTouched,\n    updateProfile,\n  ]);\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-edit-profile settings-item\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handlePhotoChange}\n            title=\"Edit your profile photo\"\n            disabled={isLoading}\n          />\n          <InputText\n            value={firstName}\n            onChange={handleFirstNameChange}\n            label={lang('FirstName')}\n            disabled={isLoading}\n            error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n          />\n          <InputText\n            value={lastName}\n            onChange={handleLastNameChange}\n            label={lang('LastName')}\n            disabled={isLoading}\n          />\n          <TextArea\n            value={bio}\n            onChange={handleBioChange}\n            label={lang('UserBio')}\n            disabled={isLoading}\n            maxLength={maxBioLength}\n            maxLengthIndicator={maxBioLength ? (maxBioLength - bio.length).toString() : undefined}\n          />\n\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('lng_settings_about_bio'), ['br', 'simple_markdown'])}\n          </p>\n        </div>\n\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Username')}</h4>\n\n          <UsernameInput\n            currentUsername={currentUsername}\n            isLoading={isLoading}\n            isUsernameAvailable={isUsernameAvailable}\n            checkedUsername={checkedUsername}\n            onChange={handleUsernameChange}\n          />\n\n          {editUsernameError === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('UsernameHelp'), ['br', 'simple_markdown'])}\n          </p>\n          {editableUsername && (\n            <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('lng_username_link')}<br />\n              <span className=\"username-link\">{TME_LINK_PREFIX}{editableUsername}</span>\n            </p>\n          )}\n        </div>\n\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            usernames={usernames}\n            onEditUsername={setEditableUsername}\n          />\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isSaveButtonShown}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n    const {\n      progress, isUsernameAvailable, checkedUsername, error: editUsernameError,\n    } = selectTabState(global).profileEdit || {};\n    const currentUser = currentUserId ? selectUser(global, currentUserId) : undefined;\n\n    const maxBioLength = selectCurrentLimit(global, 'aboutLength');\n\n    if (!currentUser) {\n      return {\n        progress,\n        checkedUsername,\n        isUsernameAvailable,\n        editUsernameError,\n        maxBioLength,\n      };\n    }\n\n    const {\n      firstName: currentFirstName,\n      lastName: currentLastName,\n      usernames,\n    } = currentUser;\n    const currentUserFullInfo = currentUserId ? selectUserFullInfo(global, currentUserId) : undefined;\n    const currentAvatarHash = getChatAvatarHash(currentUser);\n\n    return {\n      currentAvatarHash,\n      currentFirstName,\n      currentLastName,\n      currentBio: currentUserFullInfo?.bio,\n      progress,\n      isUsernameAvailable,\n      checkedUsername,\n      editUsernameError,\n      maxBioLength,\n      usernames,\n    };\n  },\n)(SettingsEditProfile));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings } from '../../../types';\n\nimport { AUTODOWNLOAD_FILESIZE_MB_LIMITS } from '../../../config';\nimport { pick } from '../../../util/iteratees';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, (\n  'canAutoLoadPhotoFromContacts' |\n  'canAutoLoadPhotoInPrivateChats' |\n  'canAutoLoadPhotoInGroups' |\n  'canAutoLoadPhotoInChannels' |\n  'canAutoLoadVideoFromContacts' |\n  'canAutoLoadVideoInPrivateChats' |\n  'canAutoLoadVideoInGroups' |\n  'canAutoLoadVideoInChannels' |\n  'canAutoLoadFileFromContacts' |\n  'canAutoLoadFileInPrivateChats' |\n  'canAutoLoadFileInGroups' |\n  'canAutoLoadFileInChannels' |\n  'autoLoadFileMaxSizeMb'\n)>;\n\nconst SettingsDataStorage: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  canAutoLoadPhotoFromContacts,\n  canAutoLoadPhotoInPrivateChats,\n  canAutoLoadPhotoInGroups,\n  canAutoLoadPhotoInChannels,\n  canAutoLoadVideoFromContacts,\n  canAutoLoadVideoInPrivateChats,\n  canAutoLoadVideoInGroups,\n  canAutoLoadVideoInChannels,\n  canAutoLoadFileFromContacts,\n  canAutoLoadFileInPrivateChats,\n  canAutoLoadFileInGroups,\n  canAutoLoadFileInChannels,\n  autoLoadFileMaxSizeMb,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const renderFileSizeCallback = useCallback((value: number) => {\n    return lang('AutodownloadSizeLimitUpTo', lang('FileSize.MB', String(AUTODOWNLOAD_FILESIZE_MB_LIMITS[value]), 'i'));\n  }, [lang]);\n\n  const handleFileSizeChange = useCallback((value: number) => {\n    setSettingOption({ autoLoadFileMaxSizeMb: AUTODOWNLOAD_FILESIZE_MB_LIMITS[value] });\n  }, [setSettingOption]);\n\n  function renderContentSizeSlider() {\n    const value = AUTODOWNLOAD_FILESIZE_MB_LIMITS.indexOf(autoLoadFileMaxSizeMb);\n\n    return (\n      <div className=\"pt-5\">\n        <RangeSlider\n          label={lang('AutoDownloadMaxFileSize')}\n          min={0}\n          max={5}\n          value={value !== -1 ? value : 2}\n          renderValue={renderFileSizeCallback}\n          onChange={handleFileSizeChange}\n        />\n      </div>\n    );\n  }\n\n  function renderAutoDownloadBlock(\n    title: string,\n    key: 'Photo' | 'Video' | 'File',\n    canAutoLoadFromContacts: boolean,\n    canAutoLoadInPrivateChats: boolean,\n    canAutoLoadInGroups: boolean,\n    canAutoLoadInChannels: boolean,\n  ) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{title}</h4>\n\n        <Checkbox\n          label={lang('AutoDownloadSettings.Contacts')}\n          checked={canAutoLoadFromContacts}\n          // TODO rewrite to support `useCallback`\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}FromContacts`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.PrivateChats')}\n          checked={canAutoLoadInPrivateChats}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InPrivateChats`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.GroupChats')}\n          checked={canAutoLoadInGroups}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InGroups`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.Channels')}\n          checked={canAutoLoadInChannels}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InChannels`]: isChecked })}\n        />\n\n        {key === 'File' && renderContentSizeSlider()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadPhotosTitle'),\n        'Photo',\n        canAutoLoadPhotoFromContacts,\n        canAutoLoadPhotoInPrivateChats,\n        canAutoLoadPhotoInGroups,\n        canAutoLoadPhotoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadVideosTitle'),\n        'Video',\n        canAutoLoadVideoFromContacts,\n        canAutoLoadVideoInPrivateChats,\n        canAutoLoadVideoInGroups,\n        canAutoLoadVideoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        'Auto-download files', // Proper translation is not available yet\n        'File',\n        canAutoLoadFileFromContacts,\n        canAutoLoadFileInPrivateChats,\n        canAutoLoadFileInGroups,\n        canAutoLoadFileInChannels,\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return pick(global.settings.byKey, [\n      'canAutoLoadPhotoFromContacts',\n      'canAutoLoadPhotoInPrivateChats',\n      'canAutoLoadPhotoInGroups',\n      'canAutoLoadPhotoInChannels',\n      'canAutoLoadVideoFromContacts',\n      'canAutoLoadVideoInPrivateChats',\n      'canAutoLoadVideoInGroups',\n      'canAutoLoadVideoInChannels',\n      'canAutoLoadFileFromContacts',\n      'canAutoLoadFileInPrivateChats',\n      'canAutoLoadFileInGroups',\n      'canAutoLoadFileInChannels',\n      'autoLoadFileMaxSizeMb',\n    ]);\n  },\n)(SettingsDataStorage));\n","import type { StateReducer, Dispatch } from '../useReducer';\nimport type { ApiChatFolder } from '../../api/types';\n\nimport { pick, omit } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: string;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nexport const INCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'user', title: 'FilterContacts', key: 'contacts' },\n  { icon: 'non-contacts', title: 'FilterNonContacts', key: 'nonContacts' },\n  { icon: 'group', title: 'FilterGroups', key: 'groups' },\n  { icon: 'channel', title: 'FilterChannels', key: 'channels' },\n  { icon: 'bots', title: 'FilterBots', key: 'bots' },\n];\n\nexport const EXCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'mute', title: 'FilterMuted', key: 'excludeMuted' },\n  { icon: 'archive', title: 'FilterArchived', key: 'excludeArchived' },\n  { icon: 'readchats', title: 'FilterRead', key: 'excludeRead' },\n];\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  return {\n    selectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist'\n);\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: '',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : getSuggestedFolderName(state.includeFilters),\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useCallback, useEffect, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\n\nimport { ALL_FOLDER_ID, STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { throttle } from '../../../../util/schedulers';\nimport { isBetween } from '../../../../util/math';\nimport { getFolderDescriptionText } from '../../../../global/helpers';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { selectIsCurrentUserPremium } from '../../../../global/selectors';\nimport renderText from '../../../common/helpers/renderText';\nimport useLang from '../../../../hooks/useLang';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport { useFolderManagerForChatsCount } from '../../../../hooks/useFolderManager';\nimport usePrevious from '../../../../hooks/usePrevious';\n\nimport ListItem from '../../../ui/ListItem';\nimport Button from '../../../ui/Button';\nimport Loading from '../../../ui/Loading';\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Draggable from '../../../ui/Draggable';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onCreateFolder: () => void;\n  onEditFolder: (folder: ApiChatFolder) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  folderIds?: number[];\n  foldersById: Record<number, ApiChatFolder>;\n  recommendedChatFolders?: ApiChatFolder[];\n  maxFolders: number;\n  isPremium?: boolean;\n};\n\ntype SortState = {\n  orderedFolderIds?: number[];\n  dragOrderIds?: number[];\n  draggedIndex?: number;\n};\n\nconst FOLDER_HEIGHT_PX = 68;\nconst runThrottledForLoadRecommended = throttle((cb) => cb(), 60000, true);\n\nconst SettingsFoldersMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  onCreateFolder,\n  onEditFolder,\n  onReset,\n  folderIds,\n  foldersById,\n  isPremium,\n  recommendedChatFolders,\n  maxFolders,\n}) => {\n  const {\n    loadRecommendedChatFolders,\n    addChatFolder,\n    openLimitReachedModal,\n    openDeleteChatFolderModal,\n    sortChatFolders,\n  } = getActions();\n\n  const [state, setState] = useState<SortState>({\n    orderedFolderIds: folderIds,\n    dragOrderIds: folderIds,\n    draggedIndex: undefined,\n  });\n\n  const prevFolderIds = usePrevious(folderIds);\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevFolderIds !== folderIds) {\n      setState({\n        orderedFolderIds: folderIds,\n        dragOrderIds: folderIds,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevFolderIds, folderIds, state.orderedFolderIds?.length]);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottledForLoadRecommended(() => {\n      loadRecommendedChatFolders();\n    });\n  }, [loadRecommendedChatFolders]);\n\n  const handleCreateFolder = useCallback(() => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    onCreateFolder();\n  }, [foldersById, maxFolders, onCreateFolder, openLimitReachedModal]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const chatsCountByFolderId = useFolderManagerForChatsCount();\n  const userFolders = useMemo(() => {\n    if (!folderIds) {\n      return undefined;\n    }\n\n    if (folderIds.length <= 1) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return folderIds.map((id) => {\n      const folder = foldersById[id];\n\n      if (id === ALL_FOLDER_ID) {\n        return {\n          id,\n          title: lang('FilterAllChats'),\n        };\n      }\n\n      return {\n        id: folder.id,\n        title: folder.title,\n        subtitle: getFolderDescriptionText(lang, folder, chatsCountByFolderId[folder.id]),\n        isChatList: folder.isChatList,\n      };\n    });\n  }, [folderIds, foldersById, lang, chatsCountByFolderId]);\n\n  const handleCreateFolderFromRecommended = useCallback((folder: ApiChatFolder) => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    addChatFolder({ folder });\n  }, [foldersById, maxFolders, addChatFolder, openLimitReachedModal]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / FOLDER_HEIGHT_PX);\n    const index = state.orderedFolderIds?.indexOf(id as number) || 0;\n    const dragOrderIds = state.orderedFolderIds?.filter((folderId) => folderId !== id);\n\n    if (!dragOrderIds || !isBetween(index + delta, 0, folderIds?.length || 0)) {\n      return;\n    }\n\n    dragOrderIds.splice(index + delta + (isPremium ? 0 : 1), 0, id as number);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderIds,\n    }));\n  }, [folderIds?.length, isPremium, state.orderedFolderIds]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      sortChatFolders({ folderIds: current.dragOrderIds! });\n\n      return {\n        ...current,\n        orderedFolderIds: current.dragOrderIds,\n        draggedIndex: undefined,\n      };\n    });\n  }, [sortChatFolders]);\n\n  const canCreateNewFolder = useMemo(() => {\n    return !isPremium || Object.keys(foldersById).length < maxFolders - 1;\n  }, [foldersById, isPremium, maxFolders]);\n\n  return (\n    <div className=\"settings-content no-border custom-scroll\">\n      <div className=\"settings-content-header\">\n        <AnimatedIcon\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersAll}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('CreateNewFilterInfo')}\n        </p>\n\n        {canCreateNewFolder && (\n          <Button\n          // TODO: Refactor button component to handle icon placemenet with props\n            className=\"with-icon mb-2\"\n            color=\"primary\"\n            size=\"smaller\"\n            pill\n            fluid\n            onClick={handleCreateFolder}\n            isRtl={lang.isRtl}\n          >\n            <i className=\"icon icon-add\" />\n            {lang('CreateNewFilter')}\n          </Button>\n        )}\n      </div>\n\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Filters')}</h4>\n\n        <div className=\"settings-sortable-container\" style={`height: ${(folderIds?.length || 0) * FOLDER_HEIGHT_PX}px`}>\n          {userFolders?.length ? userFolders.map((folder, i) => {\n            const isBlocked = i > maxFolders - 1;\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedFolderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n            const top = (state.dragOrderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n\n            if (folder.id === ALL_FOLDER_ID) {\n              return (\n                <Draggable\n                  key={folder.id}\n                  id={folder.id}\n                  onDrag={handleDrag}\n                  onDragEnd={handleDragEnd}\n                  style={`top: ${isDragged ? draggedTop : top}px;`}\n                  knobStyle={`${lang.isRtl ? 'left' : 'right'}: 0.375rem;`}\n                  isDisabled={!isPremium || !isActive}\n                >\n                  <ListItem\n                    key={folder.id}\n                    className=\"drag-item mb-2 no-icon settings-sortable-item\"\n                    narrow\n                    inactive\n                    multiline\n                    isStatic\n                  >\n                    <span className=\"title\">\n                      {folder.title}\n                    </span>\n                    <span className=\"subtitle\">{lang('FoldersAllChatsDesc')}</span>\n                  </ListItem>\n                </Draggable>\n              );\n            }\n\n            return (\n              <Draggable\n                key={folder.id}\n                id={folder.id}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={isBlocked || !isActive}\n              >\n                <ListItem\n                  className=\"drag-item mb-2 no-icon settings-sortable-item\"\n                  narrow\n                  secondaryIcon=\"more\"\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        openDeleteChatFolderModal({ folderId: folder.id });\n                      },\n                      destructive: true,\n                      title: lang('Delete'),\n                      icon: 'delete',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    if (isBlocked) {\n                      openLimitReachedModal({\n                        limit: 'dialogFilters',\n                      });\n                    } else {\n                      onEditFolder(foldersById[folder.id]);\n                    }\n                  }}\n                >\n                  <span className=\"title\">\n                    {renderText(folder.title, ['emoji'])}\n                    {isBlocked && <i className=\"icon icon-lock-badge settings-folders-blocked-icon\" />}\n                  </span>\n                  <span className=\"subtitle\">\n                    {folder.isChatList && <i className=\"icon icon-link mr-1\" />}\n                    {folder.subtitle}\n                  </span>\n                </ListItem>\n              </Draggable>\n            );\n          }) : userFolders && !userFolders.length ? (\n            <p className=\"settings-item-description my-4\" dir=\"auto\">\n              You have no folders yet.\n            </p>\n          ) : <Loading />}\n        </div>\n      </div>\n\n      {(recommendedChatFolders && Boolean(recommendedChatFolders.length)) && (\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FilterRecommended')}\n          </h4>\n\n          {recommendedChatFolders.map((folder) => (\n            <ListItem\n              className=\"mb-2\"\n              narrow\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleCreateFolderFromRecommended(folder)}\n            >\n              <div className=\"settings-folders-recommended-item\">\n                <div className=\"multiline-item\">\n                  <span className=\"title\">{renderText(folder.title, ['emoji'])}</span>\n                  <span className=\"subtitle\">{folder.description}</span>\n                </div>\n\n                <Button\n                  className=\"px-3\"\n                  color=\"primary\"\n                  size=\"tiny\"\n                  pill\n                  fluid\n                  isRtl={lang.isRtl}\n                >\n                  {lang('Add')}\n                </Button>\n              </div>\n            </ListItem>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      orderedIds: folderIds,\n      byId: foldersById,\n      recommended: recommendedChatFolders,\n    } = global.chatFolders;\n\n    return {\n      folderIds,\n      foldersById,\n      isPremium: selectIsCurrentUserPremium(global),\n      recommendedChatFolders,\n      maxFolders: selectCurrentLimit(global, 'dialogFilters'),\n    };\n  },\n)(SettingsFoldersMain));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from './Button';\n\nimport './ShowMoreButton.scss';\n\ntype OwnProps = {\n  count: number;\n  itemName: string;\n  itemPluralName?: string;\n  isLoading?: boolean;\n  onClick: () => void;\n};\n\nconst ShowMoreButton: FC<OwnProps> = ({\n  count,\n  itemName,\n  itemPluralName,\n  isLoading,\n  onClick,\n}) => {\n  const lang = useLang();\n\n  return (\n    <Button\n      className=\"ShowMoreButton\"\n      color=\"translucent\"\n      size=\"smaller\"\n      isText\n      isLoading={isLoading}\n      isRtl={lang.isRtl}\n      onClick={onClick}\n    >\n      <i className=\"icon icon-down\" />\n      Show {count} more {count > 1 ? itemPluralName || `${itemName}s` : itemName}\n    </Button>\n  );\n};\n\nexport default ShowMoreButton;\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { ApiChatlistExportedInvite } from '../../../../api/types';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { findIntersectionWithSet } from '../../../../util/iteratees';\nimport { isUserId } from '../../../../global/helpers';\nimport type {\n  FolderEditDispatch,\n  FoldersState,\n} from '../../../../hooks/reducers/useFoldersReducer';\nimport {\n  EXCLUDED_CHAT_TYPES,\n  INCLUDED_CHAT_TYPES,\n  selectChatFilters,\n} from '../../../../hooks/reducers/useFoldersReducer';\nimport { selectCanShareFolder } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport useLang from '../../../../hooks/useLang';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\n\nimport ListItem from '../../../ui/ListItem';\nimport InputText from '../../../ui/InputText';\nimport PrivateChatInfo from '../../../common/PrivateChatInfo';\nimport GroupChatInfo from '../../../common/GroupChatInfo';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport Spinner from '../../../ui/Spinner';\nimport ShowMoreButton from '../../../ui/ShowMoreButton';\nimport AnimatedIcon from '../../../common/AnimatedIcon';\n\ntype OwnProps = {\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  onAddIncludedChats: VoidFunction;\n  onAddExcludedChats: VoidFunction;\n  onShareFolder: VoidFunction;\n  onOpenInvite: (url: string) => void;\n  isActive?: boolean;\n  isOnlyInvites?: boolean;\n  onReset: () => void;\n  onBack: () => void;\n  onSaveFolder: (cb?: VoidFunction) => void;\n};\n\ntype StateProps = {\n  loadedActiveChatIds?: string[];\n  loadedArchivedChatIds?: string[];\n  invites?: ApiChatlistExportedInvite[];\n  isRemoved?: boolean;\n  maxInviteLinks: number;\n};\n\nconst SUBMIT_TIMEOUT = 500;\n\nconst INITIAL_CHATS_LIMIT = 5;\n\nexport const ERROR_NO_TITLE = 'Please provide a title for this folder.';\nexport const ERROR_NO_CHATS = 'ChatList.Filter.Error.Empty';\n\nconst SettingsFoldersEdit: FC<OwnProps & StateProps> = ({\n  state,\n  dispatch,\n  onAddIncludedChats,\n  onAddExcludedChats,\n  onShareFolder,\n  onOpenInvite,\n  isActive,\n  onReset,\n  isRemoved,\n  onBack,\n  loadedActiveChatIds,\n  isOnlyInvites,\n  loadedArchivedChatIds,\n  invites,\n  maxInviteLinks,\n  onSaveFolder,\n}) => {\n  const {\n    loadChatlistInvites,\n    openLimitReachedModal,\n    showNotification,\n  } = getActions();\n\n  const isCreating = state.mode === 'create';\n  const isEditingChatList = state.folder.isChatList;\n\n  const [isIncludedChatsListExpanded, setIsIncludedChatsListExpanded] = useState(false);\n  const [isExcludedChatsListExpanded, setIsExcludedChatsListExpanded] = useState(false);\n\n  useEffect(() => {\n    if (isRemoved) {\n      onReset();\n    }\n  }, [isRemoved, onReset]);\n\n  useEffect(() => {\n    if (isActive && state.folderId && state.folder.isChatList) {\n      loadChatlistInvites({ folderId: state.folderId });\n    }\n  }, [isActive, state.folder.isChatList, state.folderId]);\n\n  const {\n    selectedChatIds: includedChatIds,\n    selectedChatTypes: includedChatTypes,\n  } = selectChatFilters(state, 'included');\n  const {\n    selectedChatIds: excludedChatIds,\n    selectedChatTypes: excludedChatTypes,\n  } = selectChatFilters(state, 'excluded');\n\n  useEffect(() => {\n    setIsIncludedChatsListExpanded(false);\n    setIsExcludedChatsListExpanded(false);\n  }, [state.folderId]);\n\n  const [visibleIncludedChatIds, visibleExcludedChatIds] = useMemo(() => {\n    const allLoadedChatsSet = new Set([\n      ...(loadedActiveChatIds || []),\n      ...(loadedArchivedChatIds || []),\n    ]);\n\n    const loadedIncludedChatIds = findIntersectionWithSet(includedChatIds, allLoadedChatsSet);\n    const loadedExcludedChatIds = findIntersectionWithSet(excludedChatIds, allLoadedChatsSet);\n\n    return [\n      isIncludedChatsListExpanded\n        ? loadedIncludedChatIds\n        : loadedIncludedChatIds.slice(0, INITIAL_CHATS_LIMIT - includedChatTypes.length),\n      isExcludedChatsListExpanded\n        ? loadedExcludedChatIds\n        : loadedExcludedChatIds.slice(0, INITIAL_CHATS_LIMIT - excludedChatTypes.length),\n    ];\n  }, [\n    excludedChatIds, includedChatIds, includedChatTypes, excludedChatTypes,\n    isExcludedChatsListExpanded, isIncludedChatsListExpanded,\n    loadedActiveChatIds, loadedArchivedChatIds,\n  ]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack,\n  });\n\n  const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const { currentTarget } = event;\n    dispatch({ type: 'setTitle', payload: currentTarget.value.trim() });\n  }, [dispatch]);\n\n  const handleSubmit = useCallback(() => {\n    dispatch({ type: 'setIsLoading', payload: true });\n\n    onSaveFolder(() => {\n      setTimeout(() => {\n        onReset();\n      }, SUBMIT_TIMEOUT);\n    });\n  }, [dispatch, onSaveFolder, onReset]);\n\n  const handleCreateInviteClick = useCallback(() => {\n    if (!invites) {\n      if (isCreating) {\n        onSaveFolder(onShareFolder);\n      }\n      return;\n    }\n\n    // Ignoring global updates is a known drawback here\n    if (!selectCanShareFolder(getGlobal(), state.folderId!)) {\n      showNotification({ message: lang('ChatList.Filter.InviteLink.IncludeExcludeError') });\n      return;\n    }\n\n    if (invites.length < maxInviteLinks) {\n      if (state.isTouched) {\n        onSaveFolder(onShareFolder);\n      } else {\n        onShareFolder();\n      }\n    } else {\n      openLimitReachedModal({\n        limit: 'chatlistInvites',\n      });\n    }\n  }, [\n    invites, state.folderId, state.isTouched, maxInviteLinks, isCreating, onSaveFolder, onShareFolder, lang,\n  ]);\n\n  const handleEditInviteClick = useCallback((e: React.MouseEvent<HTMLElement>, url: string) => {\n    if (state.isTouched) {\n      onSaveFolder(() => onOpenInvite(url));\n    } else {\n      onOpenInvite(url);\n    }\n  }, [onSaveFolder, onOpenInvite, state.isTouched]);\n\n  function renderChatType(key: string, mode: 'included' | 'excluded') {\n    const chatType = mode === 'included'\n      ? INCLUDED_CHAT_TYPES.find(({ key: typeKey }) => typeKey === key)\n      : EXCLUDED_CHAT_TYPES.find(({ key: typeKey }) => typeKey === key);\n\n    if (!chatType) {\n      return undefined;\n    }\n\n    return (\n      <ListItem\n        key={chatType.key}\n        className=\"settings-folders-list-item mb-1\"\n        icon={chatType.icon}\n        narrow\n        inactive\n      >\n        {lang(chatType.title)}\n      </ListItem>\n    );\n  }\n\n  function renderChats(mode: 'included' | 'excluded') {\n    const selectedChatTypes = mode === 'included' ? includedChatTypes : excludedChatTypes;\n    const visibleChatIds = mode === 'included' ? visibleIncludedChatIds : visibleExcludedChatIds;\n\n    const isExpanded = mode === 'included' ? isIncludedChatsListExpanded : isExcludedChatsListExpanded;\n    const allChatIds = mode === 'included' ? includedChatIds : excludedChatIds;\n    const leftChatsCount = allChatIds.length - visibleChatIds.length;\n    const clickHandler = mode === 'included'\n      ? () => setIsIncludedChatsListExpanded(true)\n      : () => setIsExcludedChatsListExpanded(true);\n\n    return (\n      <>\n        {selectedChatTypes.map((key) => renderChatType(key, mode))}\n        {visibleChatIds.map((id) => (\n          <ListItem\n            className=\"settings-folders-list-item mb-1\"\n            narrow\n            inactive\n          >\n            {isUserId(id) ? (\n              <PrivateChatInfo avatarSize=\"small\" userId={id} />\n            ) : (\n              <GroupChatInfo avatarSize=\"small\" chatId={id} />\n            )}\n          </ListItem>\n        ))}\n        {(!isExpanded && leftChatsCount > 0) && (\n          <ShowMoreButton\n            count={leftChatsCount}\n            itemName=\"chat\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={clickHandler}\n          />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-content-header\">\n          <AnimatedIcon\n            size={STICKER_SIZE_FOLDER_SETTINGS}\n            tgsUrl={LOCAL_TGS_URLS.FoldersNew}\n            play={String(state.folderId)}\n            className=\"settings-content-icon\"\n          />\n\n          {isCreating && (\n            <p className=\"settings-item-description mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('FilterIncludeInfo')}\n            </p>\n          )}\n\n          <InputText\n            className=\"mb-0\"\n            label={lang('FilterNameHint')}\n            value={state.folder.title}\n            onChange={handleChange}\n            error={state.error && state.error === ERROR_NO_TITLE ? ERROR_NO_TITLE : undefined}\n          />\n        </div>\n\n        {!isOnlyInvites && (\n          <div className=\"settings-item pt-3\">\n            {state.error && state.error === ERROR_NO_CHATS && (\n              <p className=\"settings-item-description color-danger mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n                {lang(state.error)}\n              </p>\n            )}\n\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterInclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary mb-0\"\n              icon=\"add\"\n              onClick={onAddIncludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('included')}\n          </div>\n        )}\n\n        {!isOnlyInvites && !isEditingChatList && (\n          <div className=\"settings-item pt-3\">\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterExclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary mb-0\"\n              icon=\"add\"\n              onClick={onAddExcludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('excluded')}\n          </div>\n        )}\n\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FolderLinkScreen.Title')}\n          </h4>\n\n          <ListItem\n            className=\"settings-folders-list-item color-primary mb-0\"\n            icon=\"add\"\n            onClick={handleCreateInviteClick}\n          >\n            {lang('ChatListFilter.CreateLinkNew')}\n          </ListItem>\n\n          {invites?.map((invite) => (\n            <ListItem\n              className=\"settings-folders-list-item mb-0\"\n              icon=\"link\"\n              multiline\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={handleEditInviteClick}\n              clickArg={invite.url}\n            >\n              <span className=\"title\" dir=\"auto\">{invite.title || invite.url}</span>\n              <span className=\"subtitle\">\n                {lang('ChatListFilter.LinkLabelChatCount', invite.peerIds.length, 'i')}\n              </span>\n            </ListItem>\n          ))}\n\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={Boolean(state.isTouched)}\n        disabled={state.isLoading}\n        onClick={handleSubmit}\n        ariaLabel={state.mode === 'edit' ? 'Save changes' : 'Create folder'}\n      >\n        {state.isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { state }): StateProps => {\n    const { listIds } = global.chats;\n    const { byId, invites } = global.chatFolders;\n\n    return {\n      loadedActiveChatIds: listIds.active,\n      loadedArchivedChatIds: listIds.archived,\n      invites: state.folderId ? (invites[state.folderId] || MEMO_EMPTY_ARRAY) : undefined,\n      isRemoved: state.folderId !== undefined && !byId[state.folderId],\n      maxInviteLinks: selectCurrentLimit(global, 'chatlistInvites'),\n    };\n  },\n)(SettingsFoldersEdit));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  useCallback, useRef, useEffect, memo, useState,\n} from '../../../../lib/teact/teact';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport { isUserId } from '../../../../global/helpers';\nimport type { FolderChatType } from '../../../../hooks/reducers/useFoldersReducer';\nimport {\n  INCLUDED_CHAT_TYPES,\n  EXCLUDED_CHAT_TYPES,\n} from '../../../../hooks/reducers/useFoldersReducer';\nimport buildClassName from '../../../../util/buildClassName';\nimport useInfiniteScroll from '../../../../hooks/useInfiniteScroll';\nimport useLang from '../../../../hooks/useLang';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\n\nimport Checkbox from '../../../ui/Checkbox';\nimport InputText from '../../../ui/InputText';\nimport ListItem from '../../../ui/ListItem';\nimport PrivateChatInfo from '../../../common/PrivateChatInfo';\nimport GroupChatInfo from '../../../common/GroupChatInfo';\nimport PickerSelectedItem from '../../../common/PickerSelectedItem';\nimport InfiniteScroll from '../../../ui/InfiniteScroll';\nimport Loading from '../../../ui/Loading';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\n\nimport '../../../common/Picker.scss';\nimport './SettingsFoldersChatsPicker.scss';\n\ntype OwnProps = {\n  mode: 'included' | 'excluded';\n  chatIds: string[];\n  selectedIds: string[];\n  selectedChatTypes: string[];\n  filterValue?: string;\n  shouldHideChatTypes?: boolean;\n  onSelectedIdsChange: (ids: string[]) => void;\n  onSelectedChatTypesChange: (types: string[]) => void;\n  onFilterChange: (value: string) => void;\n  onSaveFilter: VoidFunction;\n  isActive?: boolean;\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\ntype StateProps = {\n  maxChats: number;\n};\n\nconst SettingsFoldersChatsPicker: FC<OwnProps & StateProps> = ({\n  mode,\n  chatIds,\n  selectedIds,\n  selectedChatTypes,\n  filterValue,\n  shouldHideChatTypes,\n  onSelectedIdsChange,\n  onSelectedChatTypesChange,\n  onFilterChange,\n  maxChats,\n  onSaveFilter,\n  isActive,\n}) => {\n  const { openLimitReachedModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const chatTypes = mode === 'included' ? INCLUDED_CHAT_TYPES : EXCLUDED_CHAT_TYPES;\n  const shouldMinimize = selectedIds.length + selectedChatTypes.length > MAX_FULL_ITEMS;\n  const [isTouched, setIsTouched] = useState(false);\n\n  useEffect(() => {\n    if (!isActive) {\n      setIsTouched(false);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      requestMutation(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, []);\n\n  const handleItemClick = useCallback((id: string) => {\n    const newSelectedIds = [...selectedIds];\n    if (newSelectedIds.includes(id)) {\n      newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n    } else {\n      if (selectedIds.length >= maxChats && mode === 'included') {\n        openLimitReachedModal({\n          limit: 'dialogFiltersChats',\n        });\n        return;\n      }\n      newSelectedIds.push(id);\n    }\n    setIsTouched(true);\n    onSelectedIdsChange(newSelectedIds);\n  }, [selectedIds, onSelectedIdsChange, maxChats, mode, openLimitReachedModal]);\n\n  const handleChatTypeClick = useCallback((key: FolderChatType['key']) => {\n    const newSelectedChatTypes = [...selectedChatTypes];\n    if (newSelectedChatTypes.includes(key)) {\n      newSelectedChatTypes.splice(newSelectedChatTypes.indexOf(key), 1);\n    } else {\n      newSelectedChatTypes.push(key);\n    }\n    setIsTouched(true);\n    onSelectedChatTypesChange(newSelectedChatTypes);\n  }, [selectedChatTypes, onSelectedChatTypesChange]);\n\n  const handleFilterChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange(value);\n  }, [onFilterChange]);\n\n  const lang = useLang();\n\n  function renderSelectedChatType(key: string) {\n    const selectedType = chatTypes.find(({ key: typeKey }) => key === typeKey);\n    if (!selectedType) {\n      return undefined;\n    }\n\n    return (\n      <PickerSelectedItem\n        icon={selectedType.icon}\n        title={lang(selectedType.title)}\n        isMinimized={shouldMinimize}\n        canClose\n        onClick={handleChatTypeClick}\n        clickArg={selectedType.key}\n      />\n    );\n  }\n\n  function renderChatType(type: FolderChatType) {\n    return (\n      <ListItem\n        key={type.key}\n        className=\"chat-item-clickable picker-list-item chat-type-item\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleChatTypeClick(type.key)}\n        ripple\n      >\n        <i className={buildClassName('icon', `icon-${type.icon}`)} />\n        <h3 className=\"chat-type\" dir=\"auto\">{lang(type.title)}</h3>\n        <Checkbox\n          label=\"\"\n          checked={selectedChatTypes.includes(type.key)}\n          round\n        />\n      </ListItem>\n    );\n  }\n\n  function renderItem(id: string) {\n    const isSelected = selectedIds.includes(id);\n\n    return (\n      <ListItem\n        key={id}\n        className=\"chat-item-clickable picker-list-item chat-item\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(id)}\n        ripple\n      >\n        {isUserId(id) ? (\n          <PrivateChatInfo userId={id} />\n        ) : (\n          <GroupChatInfo chatId={id} withChatType />\n        )}\n        <Checkbox\n          label=\"\"\n          checked={isSelected}\n          round\n        />\n      </ListItem>\n    );\n  }\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, chatIds, Boolean(filterValue));\n\n  return (\n    <div className=\"Picker SettingsFoldersChatsPicker\">\n      <div className=\"picker-header custom-scroll\">\n        {selectedChatTypes.map(renderSelectedChatType)}\n        {selectedIds.map((id, i) => (\n          <PickerSelectedItem\n            chatOrUserId={id}\n            isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n            canClose\n            onClick={handleItemClick}\n            clickArg={id}\n          />\n        ))}\n        <InputText\n          ref={inputRef}\n          value={filterValue}\n          onChange={handleFilterChange}\n          placeholder={lang('Search')}\n        />\n      </div>\n      <InfiniteScroll\n        className=\"picker-list custom-scroll\"\n        itemSelector=\".chat-item\"\n        items={viewportIds}\n        onLoadMore={getMore}\n      >\n        {(!viewportIds || !viewportIds.length || viewportIds.includes(chatIds[0])) && (\n          <div key=\"header\">\n            {!shouldHideChatTypes && (\n              <>\n                <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {lang('FilterChatTypes')}\n                </h4>\n                {chatTypes.map(renderChatType)}\n                <div className=\"picker-list-divider\" />\n              </>\n            )}\n            <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('FilterChats')}\n            </h4>\n          </div>\n        )}\n\n        {viewportIds?.length ? (\n          viewportIds.map(renderItem)\n        ) : viewportIds && !viewportIds.length ? (\n          <p className=\"no-results\" key=\"no-results\">Sorry, nothing found.</p>\n        ) : (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={onSaveFilter}\n        ariaLabel={lang('Save')}\n      >\n        <i className=\"icon icon-check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      maxChats: selectCurrentLimit(global, 'dialogFiltersChats'),\n    };\n  },\n)(SettingsFoldersChatsPicker));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useCallback } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport { unique } from '../../../../util/iteratees';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID } from '../../../../config';\nimport { filterChatsByName } from '../../../../global/helpers';\nimport useLang from '../../../../hooks/useLang';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport { useFolderManagerForOrderedIds } from '../../../../hooks/useFolderManager';\nimport type {\n  FoldersState,\n  FolderEditDispatch,\n} from '../../../../hooks/reducers/useFoldersReducer';\nimport {\n  selectChatFilters,\n} from '../../../../hooks/reducers/useFoldersReducer';\n\nimport SettingsFoldersChatsPicker from './SettingsFoldersChatsPicker';\nimport Loading from '../../../ui/Loading';\n\ntype OwnProps = {\n  mode: 'included' | 'excluded';\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onReset: VoidFunction;\n  onSaveFilter: VoidFunction;\n};\n\nconst SettingsFoldersChatFilters: FC<OwnProps> = ({\n  mode,\n  state,\n  dispatch,\n  isActive,\n  onReset,\n  onSaveFilter,\n}) => {\n  const { chatFilter } = state;\n  const { selectedChatIds, selectedChatTypes } = selectChatFilters(state, mode, true);\n\n  const lang = useLang();\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n\n  const shouldHideChatTypes = state.folder.isChatList;\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on chats, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const chatIds = [...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []];\n    return unique([\n      ...selectedChatIds,\n      ...filterChatsByName(lang, chatIds, chatsById, chatFilter),\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, selectedChatIds, lang, chatFilter]);\n\n  const handleFilterChange = useCallback((newFilter: string) => {\n    dispatch({\n      type: 'setChatFilter',\n      payload: newFilter,\n    });\n  }, [dispatch]);\n\n  const handleSelectedIdsChange = useCallback((ids: string[]) => {\n    if (mode === 'included') {\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: { ...state.includeFilters, includedChatIds: ids },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: { ...state.excludeFilters, excludedChatIds: ids },\n      });\n    }\n  }, [mode, state, dispatch]);\n\n  const handleSelectedChatTypesChange = useCallback((keys: string[]) => {\n    const newFilters: Record<string, boolean> = {};\n    keys.forEach((key) => {\n      newFilters[key] = true;\n    });\n\n    if (mode === 'included') {\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: {\n          includedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: {\n          excludedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    }\n  }, [mode, selectedChatIds, dispatch]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  if (!displayedIds) {\n    return <Loading />;\n  }\n\n  return (\n    <SettingsFoldersChatsPicker\n      mode={mode}\n      chatIds={displayedIds}\n      selectedIds={selectedChatIds}\n      selectedChatTypes={selectedChatTypes}\n      filterValue={chatFilter}\n      shouldHideChatTypes={shouldHideChatTypes}\n      onSelectedIdsChange={handleSelectedIdsChange}\n      onSelectedChatTypesChange={handleSelectedChatTypesChange}\n      onFilterChange={handleFilterChange}\n      onSaveFilter={onSaveFilter}\n      isActive={isActive}\n    />\n  );\n};\n\nexport default memo(SettingsFoldersChatFilters);\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"B0vKZtyx_PUcanptgC5I\",\"input\":\"ODZGlpe7i3BMlnIuPGUg\",\"moreMenu\":\"hDpRcaj2QNUxsuLouJu_\",\"buttons\":\"w1XUPoN0jJ1kMZLO7Haj\",\"button\":\"LFzEXLButr24C5xfk1X4\"};","import React, { memo, useCallback, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Button from '../ui/Button';\n\nimport styles from './InviteLink.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  inviteLink: string;\n  onRevoke?: VoidFunction;\n  isDisabled?: boolean;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  inviteLink,\n  onRevoke,\n  isDisabled,\n}) => {\n  const lang = useLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const copyLink = useCallback((link: string) => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [lang]);\n\n  const handleCopyPrimaryClicked = useCallback(() => {\n    copyLink(inviteLink);\n  }, [copyLink, inviteLink]);\n\n  const handleShare = useCallback(() => {\n    openChatWithDraft({ text: inviteLink });\n  }, [inviteLink]);\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"Actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  return (\n    <div className=\"settings-item\">\n      <p className=\"text-muted\">\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={inviteLink}\n          readOnly\n          onClick={handleCopyPrimaryClicked}\n        />\n        <DropdownMenu\n          className={styles.moreMenu}\n          trigger={PrimaryLinkMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"copy\" onClick={handleCopyPrimaryClicked}>{lang('Copy')}</MenuItem>\n          {onRevoke && (\n            <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n          )}\n        </DropdownMenu>\n      </div>\n      <div className={styles.buttons}>\n        <Button\n          onClick={handleCopyPrimaryClicked}\n          className={styles.button}\n          size=\"smaller\"\n          disabled={isDisabled}\n        >\n          {lang('FolderLinkScreen.LinkActionCopy')}\n        </Button>\n        <Button\n          onClick={handleShare}\n          className={styles.button}\n          size=\"smaller\"\n          disabled={isDisabled}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","import React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { FC } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\nimport { partition } from '../../../../util/iteratees';\nimport {\n  selectCanInviteToChat, selectChat,\n  selectChatFolder,\n  selectTabState, selectUser,\n} from '../../../../global/selectors';\nimport { isChatChannel, isUserBot } from '../../../../global/helpers';\nimport useLang from '../../../../hooks/useLang';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport InviteLink from '../../../common/InviteLink';\nimport Picker from '../../../common/Picker';\nimport Spinner from '../../../ui/Spinner';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: VoidFunction;\n};\n\ntype StateProps = {\n  folderId?: number;\n  title?: string;\n  includedChatIds?: string[];\n  pinnedChatIds?: string[];\n  peerIds?: string[];\n  url?: string;\n  isLoading?: boolean;\n};\n\nconst SettingsShareChatlist: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  folderId,\n  title,\n  includedChatIds,\n  pinnedChatIds,\n  peerIds,\n  url,\n  isLoading,\n}) => {\n  const {\n    createChatlistInvite, deleteChatlistInvite, editChatlistInvite, showNotification,\n  } = getActions();\n  const lang = useLang();\n\n  const [isTouched, setIsTouched] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  useEffect(() => {\n    if (!isLoading) {\n      setIsTouched(false);\n    }\n  }, [isLoading]);\n\n  useEffect(() => {\n    if (!url && folderId && isActive) {\n      createChatlistInvite({ folderId });\n    }\n  }, [folderId, isActive, url]);\n\n  const handleRevoke = useCallback(() => {\n    if (!url || !folderId) return;\n\n    deleteChatlistInvite({ folderId, url });\n    onReset();\n  }, [folderId, onReset, url]);\n\n  const itemIds = useMemo(() => {\n    return (includedChatIds || []).concat(pinnedChatIds || []);\n  }, [includedChatIds, pinnedChatIds]);\n\n  const [unlockedIds, lockedIds] = useMemo(() => {\n    const global = getGlobal();\n    return partition(itemIds, (id) => selectCanInviteToChat(global, id));\n  }, [itemIds]);\n\n  const [selectedIds, setSelectedIds] = useState<string[]>(peerIds || []);\n\n  const isFirstRenderRef = useRef(true);\n  useEffectWithPrevDeps(([prevUrl]) => {\n    if (prevUrl !== url) {\n      isFirstRenderRef.current = true;\n    }\n    if (!isFirstRenderRef.current) return;\n    isFirstRenderRef.current = false;\n    if (!url) {\n      setSelectedIds(unlockedIds);\n    } else if (peerIds) {\n      setSelectedIds(peerIds);\n    }\n  }, [url, unlockedIds, peerIds]);\n\n  const handleClickDisabled = useCallback((id: string) => {\n    const global = getGlobal();\n    const user = selectUser(global, id);\n    const chat = selectChat(global, id);\n    if (user && isUserBot(user)) {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailableBot'),\n      });\n    } else if (user) {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailableUser'),\n      });\n    } else if (chat && isChatChannel(chat)) {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailablePublicChannel'),\n      });\n    } else {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailablePublicGroup'),\n      });\n    }\n  }, [lang]);\n\n  const handleSelectedIdsChange = useCallback((ids: string[]) => {\n    setSelectedIds(ids);\n    setIsTouched(true);\n  }, []);\n\n  const handleSubmit = useCallback(() => {\n    if (!folderId || !url) return;\n    editChatlistInvite({ folderId, peerIds: selectedIds, url });\n  }, [folderId, selectedIds, url]);\n\n  const chatsCount = selectedIds.length;\n  const isDisabled = !chatsCount || isLoading;\n\n  return (\n    <div className=\"settings-content no-border custom-scroll SettingsFoldersChatsPicker\">\n      <div className=\"settings-content-header\">\n        <AnimatedIcon\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersShare}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {renderText(lang('FolderLinkScreen.TitleDescriptionSelected', [title, chatsCount]),\n            ['simple_markdown'])}\n        </p>\n      </div>\n\n      <InviteLink\n        inviteLink={isLoading ? lang('Loading') : url!}\n        onRevoke={handleRevoke}\n        isDisabled={isDisabled}\n      />\n\n      <div className=\"settings-item settings-item-chatlist\">\n        <Picker\n          itemIds={itemIds}\n          lockedIds={lockedIds}\n          onSelectedIdsChange={handleSelectedIdsChange}\n          selectedIds={selectedIds}\n          onDisabledClick={handleClickDisabled}\n          isRoundCheckbox\n        />\n      </div>\n\n      <FloatingActionButton\n        isShown={isLoading || isTouched}\n        disabled={isDisabled}\n        onClick={handleSubmit}\n        ariaLabel=\"Save changes\"\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { folderId, url, isLoading } = selectTabState(global).shareFolderScreen || {};\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n    const invite = folderId ? global.chatFolders.invites[folderId]?.find((i) => i.url === url) : undefined;\n\n    return {\n      folderId,\n      title: folder?.title,\n      includedChatIds: folder?.includedChatIds,\n      pinnedChatIds: folder?.pinnedChatIds,\n      url,\n      isLoading,\n      peerIds: invite?.peerIds,\n    };\n  },\n)(SettingsShareChatlist));\n","import React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { FC } from '../../../../lib/teact/teact';\nimport type { ApiChatFolder } from '../../../../api/types';\nimport { SettingsScreens } from '../../../../types';\nimport type { FolderEditDispatch, FoldersState } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport SettingsFoldersMain from './SettingsFoldersMain';\nimport SettingsFoldersEdit, { ERROR_NO_CHATS, ERROR_NO_TITLE } from './SettingsFoldersEdit';\nimport SettingsFoldersChatFilters from './SettingsFoldersChatFilters';\nimport SettingsShareChatlist from './SettingsShareChatlist';\n\nimport './SettingsFolders.scss';\n\nconst TRANSITION_DURATION = 200;\n\nexport type OwnProps = {\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsFolders: FC<OwnProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    openShareChatFolderModal,\n    editChatFolder,\n    addChatFolder,\n  } = getActions();\n\n  const handleReset = useCallback(() => {\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        dispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (state.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  }, [\n    state.mode, dispatch,\n    currentScreen, onReset, onScreenSelect,\n  ]);\n\n  const isCreating = state.mode === 'create';\n\n  const saveState = useCallback((newState: FoldersState) => {\n    const { title } = newState.folder;\n\n    if (!title) {\n      dispatch({ type: 'setError', payload: ERROR_NO_TITLE });\n      return false;\n    }\n\n    const {\n      selectedChatIds: includedChatIds,\n      selectedChatTypes: includedChatTypes,\n    } = selectChatFilters(newState, 'included');\n\n    if (!includedChatIds.length && !Object.keys(includedChatTypes).length) {\n      dispatch({ type: 'setError', payload: ERROR_NO_CHATS });\n      return false;\n    }\n\n    if (!isCreating) {\n      editChatFolder({ id: newState.folderId!, folderUpdate: newState.folder });\n    } else {\n      addChatFolder({ folder: newState.folder as ApiChatFolder });\n    }\n\n    dispatch({ type: 'setError', payload: undefined });\n    dispatch({ type: 'setIsTouched', payload: false });\n\n    return true;\n  }, [dispatch, isCreating]);\n\n  const handleSaveFolder = useCallback((cb?: NoneToVoidFunction) => {\n    if (!saveState(state)) {\n      return;\n    }\n    cb?.();\n  }, [saveState, state]);\n\n  const handleSaveFilter = useCallback(() => {\n    const newState = dispatch({ type: 'saveFilters' });\n    handleReset();\n    saveState(newState);\n  }, [dispatch, handleReset, saveState]);\n\n  const handleCreateFolder = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.FoldersCreateFolder);\n  }, [onScreenSelect, dispatch]);\n\n  const handleEditFolder = useCallback((folder: ApiChatFolder) => {\n    dispatch({ type: 'editFolder', payload: folder });\n    onScreenSelect(SettingsScreens.FoldersEditFolder);\n  }, [dispatch, onScreenSelect]);\n\n  const handleAddIncludedChats = useCallback(() => {\n    dispatch({ type: 'editIncludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersIncludedChatsFromChatList\n      : SettingsScreens.FoldersIncludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleAddExcludedChats = useCallback(() => {\n    dispatch({ type: 'editExcludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersExcludedChatsFromChatList\n      : SettingsScreens.FoldersExcludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleShareFolder = useCallback(() => {\n    openShareChatFolderModal({ folderId: state.folderId!, noRequestNextScreen: true });\n    dispatch({ type: 'setIsChatlist', payload: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [dispatch, onScreenSelect, state.folderId]);\n\n  const handleOpenInvite = useCallback((url: string) => {\n    openShareChatFolderModal({ folderId: state.folderId!, url, noRequestNextScreen: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [onScreenSelect, state.folderId]);\n\n  switch (currentScreen) {\n    case SettingsScreens.Folders:\n      return (\n        <SettingsFoldersMain\n          onCreateFolder={handleCreateFolder}\n          onEditFolder={handleEditFolder}\n          isActive={isActive || [\n            SettingsScreens.FoldersCreateFolder,\n            SettingsScreens.FoldersEditFolder,\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n    case SettingsScreens.FoldersCreateFolder:\n    case SettingsScreens.FoldersEditFolder:\n    case SettingsScreens.FoldersEditFolderFromChatList:\n    case SettingsScreens.FoldersEditFolderInvites:\n      return (\n        <SettingsFoldersEdit\n          state={state}\n          dispatch={dispatch}\n          onAddIncludedChats={handleAddIncludedChats}\n          onAddExcludedChats={handleAddExcludedChats}\n          onShareFolder={handleShareFolder}\n          onOpenInvite={handleOpenInvite}\n          onReset={handleReset}\n          isActive={isActive || [\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          isOnlyInvites={currentScreen === SettingsScreens.FoldersEditFolderInvites}\n          onBack={onReset}\n          onSaveFolder={handleSaveFolder}\n        />\n      );\n    case SettingsScreens.FoldersIncludedChats:\n    case SettingsScreens.FoldersIncludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"included\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n    case SettingsScreens.FoldersExcludedChats:\n    case SettingsScreens.FoldersExcludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"excluded\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n\n    case SettingsScreens.FoldersShare:\n      return (\n        <SettingsShareChatlist\n          isActive={isActive}\n          onReset={handleReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(SettingsFolders);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useCallback, memo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings, TimeFormat } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport {\n  getSystemTheme, IS_ANDROID, IS_IOS, IS_MAC_OS,\n} from '../../../util/windowEnvironment';\nimport { pick } from '../../../util/iteratees';\nimport { setTimeFormat } from '../../../util/langProvider';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ListItem from '../../ui/ListItem';\nimport RangeSlider from '../../ui/RangeSlider';\nimport type { IRadioOption } from '../../ui/RadioGroup';\nimport RadioGroup from '../../ui/RadioGroup';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<ISettings, (\n    'messageTextSize' |\n    'animationLevel' |\n    'messageSendKeyCombo' |\n    'timeFormat'\n  )> & {\n    theme: ISettings['theme'];\n    shouldUseSystemTheme: boolean;\n  };\n\nconst TIME_FORMAT_OPTIONS: IRadioOption[] = [{\n  label: '12-hour',\n  value: '12h',\n}, {\n  label: '24-hour',\n  value: '24h',\n}];\n\nconst SettingsGeneral: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  messageTextSize,\n  messageSendKeyCombo,\n  timeFormat,\n  theme,\n  shouldUseSystemTheme,\n}) => {\n  const {\n    setSettingOption,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const appearanceThemeOptions: IRadioOption[] = [{\n    label: lang('EmptyChat.Appearance.Light'),\n    value: 'light',\n  }, {\n    label: lang('EmptyChat.Appearance.Dark'),\n    value: 'dark',\n  }, {\n    label: lang('EmptyChat.Appearance.System'),\n    value: 'auto',\n  }];\n\n  const keyboardSendOptions = !isMobileDevice ? [\n    { value: 'enter', label: lang('lng_settings_send_enter'), subLabel: 'New line by Shift + Enter' },\n    {\n      value: 'ctrl-enter',\n      label: lang(IS_MAC_OS || IS_IOS ? 'lng_settings_send_cmdenter' : 'lng_settings_send_ctrlenter'),\n      subLabel: 'New line by Enter',\n    },\n  ] : undefined;\n\n  const handleMessageTextSizeChange = useCallback((newSize: number) => {\n    document.documentElement.style.setProperty(\n      '--composer-text-size', `${Math.max(newSize, IS_IOS ? 16 : 15)}px`,\n    );\n    document.documentElement.style.setProperty('--message-meta-height', `${Math.floor(newSize * 1.3125)}px`);\n    document.documentElement.style.setProperty('--message-text-size', `${newSize}px`);\n    document.documentElement.setAttribute('data-message-text-size', newSize.toString());\n\n    setSettingOption({ messageTextSize: newSize });\n  }, [setSettingOption]);\n\n  const handleAppearanceThemeChange = useCallback((value: string) => {\n    const newTheme = value === 'auto' ? getSystemTheme() : value as ISettings['theme'];\n\n    setSettingOption({ theme: newTheme });\n    setSettingOption({ shouldUseSystemTheme: value === 'auto' });\n  }, [setSettingOption]);\n\n  const handleTimeFormatChange = useCallback((newTimeFormat: string) => {\n    setSettingOption({ timeFormat: newTimeFormat as TimeFormat });\n    setSettingOption({ wasTimeFormatSetManually: true });\n\n    setTimeFormat(newTimeFormat as TimeFormat);\n  }, [setSettingOption]);\n\n  const handleMessageSendComboChange = useCallback((newCombo: string) => {\n    setSettingOption({ messageSendKeyCombo: newCombo as ISettings['messageSendKeyCombo'] });\n  }, [setSettingOption]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('SETTINGS')}</h4>\n\n        <RangeSlider\n          label={lang('TextSize')}\n          min={12}\n          max={20}\n          value={messageTextSize}\n          onChange={handleMessageTextSizeChange}\n        />\n\n        <ListItem\n          icon=\"photo\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.GeneralChatBackground)}\n        >\n          {lang('ChatBackground')}\n        </ListItem>\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('Theme')}\n        </h4>\n        <RadioGroup\n          name=\"theme\"\n          options={appearanceThemeOptions}\n          selected={shouldUseSystemTheme ? 'auto' : theme}\n          onChange={handleAppearanceThemeChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Time Format\n        </h4>\n        <RadioGroup\n          name=\"timeformat\"\n          options={TIME_FORMAT_OPTIONS}\n          selected={timeFormat}\n          onChange={handleTimeFormatChange}\n        />\n      </div>\n\n      {keyboardSendOptions && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('VoiceOver.Keyboard')}</h4>\n\n          <RadioGroup\n            name=\"keyboard-send-settings\"\n            options={keyboardSendOptions}\n            onChange={handleMessageSendComboChange}\n            selected={messageSendKeyCombo}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { theme, shouldUseSystemTheme } = global.settings.byKey;\n\n    return {\n      ...pick(global.settings.byKey, [\n        'messageTextSize',\n        'animationLevel',\n        'messageSendKeyCombo',\n        'isSensitiveEnabled',\n        'canChangeSensitive',\n        'timeFormat',\n      ]),\n      theme,\n      shouldUseSystemTheme,\n    };\n  },\n)(SettingsGeneral));\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState, useRef,\n} from '../../../lib/teact/teact';\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { CUSTOM_BG_CACHE_NAME } from '../../../config';\nimport * as cacheApi from '../../../util/cacheApi';\nimport { fetchBlob } from '../../../util/files';\nimport buildClassName from '../../../util/buildClassName';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\n\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './WallpaperTile.scss';\n\ntype OwnProps = {\n  wallpaper: ApiWallpaper;\n  theme: ThemeKey;\n  isSelected: boolean;\n  onClick: (slug: string) => void;\n};\n\nconst WallpaperTile: FC<OwnProps> = ({\n  wallpaper,\n  theme,\n  isSelected,\n  onClick,\n}) => {\n  const { slug, document } = wallpaper;\n  const localMediaHash = `wallpaper${document.id!}`;\n  const localBlobUrl = document.previewBlobUrl;\n  const previewBlobUrl = useMedia(`${localMediaHash}?size=m`);\n  const thumbRef = useCanvasBlur(document.thumbnail?.dataUri, Boolean(previewBlobUrl), true);\n  const { transitionClassNames } = useShowTransition(\n    Boolean(previewBlobUrl || localBlobUrl),\n    undefined,\n    undefined,\n    'slow',\n  );\n  const isLoadingRef = useRef(false);\n  const [isLoadAllowed, setIsLoadAllowed] = useState(false);\n  const {\n    mediaData: fullMedia, loadProgress,\n  } = useMediaWithLoadProgress(localMediaHash, !isLoadAllowed);\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n  const { shouldRender: shouldRenderSpinner, transitionClassNames: spinnerClassNames } = useShowTransition(\n    (isLoadAllowed && !fullMedia) || slug === UPLOADING_WALLPAPER_SLUG,\n    undefined,\n    wasLoadDisabled,\n    'slow',\n  );\n  // To prevent triggering of the effect for useCallback\n  const cacheKeyRef = useRef<string>();\n  cacheKeyRef.current = theme;\n\n  const handleSelect = useCallback(() => {\n    (async () => {\n      const blob = await fetchBlob(fullMedia!);\n      await cacheApi.save(CUSTOM_BG_CACHE_NAME, cacheKeyRef.current!, blob);\n      onClick(slug);\n    })();\n  }, [fullMedia, onClick, slug]);\n\n  useEffect(() => {\n    // If we've clicked on a wallpaper, select it when full media is loaded\n    if (fullMedia && isLoadingRef.current) {\n      handleSelect();\n      isLoadingRef.current = false;\n    }\n  }, [fullMedia, handleSelect]);\n\n  const handleClick = useCallback(() => {\n    if (fullMedia) {\n      handleSelect();\n    } else {\n      isLoadingRef.current = true;\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n    }\n  }, [fullMedia, handleSelect]);\n\n  const className = buildClassName(\n    'WallpaperTile',\n    isSelected && 'selected',\n  );\n\n  return (\n    <div className={className} onClick={handleClick}>\n      <div className=\"media-inner\">\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n        />\n        <img\n          src={previewBlobUrl || localBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n        />\n        {shouldRenderSpinner && (\n          <div className={buildClassName('spinner-container', spinnerClassNames)}>\n            <ProgressSpinner progress={loadProgress} onClick={handleClick} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(WallpaperTile);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useCallback, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ThemeKey } from '../../../types';\nimport { SettingsScreens, UPLOADING_WALLPAPER_SLUG } from '../../../types';\nimport type { ApiWallpaper } from '../../../api/types';\n\nimport { DARK_THEME_PATTERN_COLOR, DEFAULT_PATTERN_COLOR } from '../../../config';\nimport { throttle } from '../../../util/schedulers';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport { getAverageColor, getPatternColor, rgb2hex } from '../../../util/colors';\nimport { selectTheme } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ListItem from '../../ui/ListItem';\nimport Checkbox from '../../ui/Checkbox';\nimport Loading from '../../ui/Loading';\nimport WallpaperTile from './WallpaperTile';\n\nimport './SettingsGeneralBackground.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  background?: string;\n  isBlurred?: boolean;\n  loadedWallpapers?: ApiWallpaper[];\n  theme: ThemeKey;\n};\n\nconst SUPPORTED_TYPES = 'image/jpeg';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  background,\n  isBlurred,\n  loadedWallpapers,\n  theme,\n}) => {\n  const {\n    loadWallpapers,\n    uploadWallpaper,\n    setThemeSettings,\n  } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadWallpapers();\n    });\n  }, [loadWallpapers]);\n\n  const handleFileSelect = useCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n\n    const validatedFiles = validateFiles(files);\n    if (validatedFiles?.length) {\n      uploadWallpaper(validatedFiles[0]);\n    }\n  }, [uploadWallpaper]);\n\n  const handleUploadWallpaper = useCallback(() => {\n    openSystemFilesDialog(SUPPORTED_TYPES, handleFileSelect, true);\n  }, [handleFileSelect]);\n\n  const handleSetColor = useCallback(() => {\n    onScreenSelect(SettingsScreens.GeneralChatBackgroundColor);\n  }, [onScreenSelect]);\n\n  const handleResetToDefault = useCallback(() => {\n    setThemeSettings({\n      theme,\n      background: undefined,\n      backgroundColor: undefined,\n      isBlurred: true,\n      patternColor: theme === 'dark' ? DARK_THEME_PATTERN_COLOR : DEFAULT_PATTERN_COLOR,\n    });\n  }, [setThemeSettings, theme]);\n\n  const handleWallPaperSelect = useCallback((slug: string) => {\n    setThemeSettings({ theme: themeRef.current!, background: slug });\n    const currentWallpaper = loadedWallpapers && loadedWallpapers.find((wallpaper) => wallpaper.slug === slug);\n    if (currentWallpaper?.document.thumbnail) {\n      getAverageColor(currentWallpaper.document.thumbnail.dataUri)\n        .then((color) => {\n          const patternColor = getPatternColor(color);\n          const rgbColor = `#${rgb2hex(color)}`;\n          setThemeSettings({ theme: themeRef.current!, backgroundColor: rgbColor, patternColor });\n        });\n    }\n  }, [loadedWallpapers, setThemeSettings]);\n\n  const handleWallPaperBlurChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setThemeSettings({ theme: themeRef.current!, isBlurred: e.target.checked });\n  }, [setThemeSettings]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const isUploading = loadedWallpapers?.[0] && loadedWallpapers[0].slug === UPLOADING_WALLPAPER_SLUG;\n\n  return (\n    <div className=\"SettingsGeneralBackground settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <ListItem\n          icon=\"camera-add\"\n          className=\"mb-0\"\n          disabled={isUploading}\n          onClick={handleUploadWallpaper}\n        >\n          {lang('UploadImage')}\n        </ListItem>\n\n        <ListItem\n          icon=\"colorize\"\n          className=\"mb-0\"\n          onClick={handleSetColor}\n        >\n          {lang('SetColor')}\n        </ListItem>\n\n        <ListItem icon=\"favorite\" onClick={handleResetToDefault}>\n          {lang('ThemeResetToDefaults')}\n        </ListItem>\n\n        <Checkbox\n          label={lang('BackgroundBlurred')}\n          checked={Boolean(isBlurred)}\n          onChange={handleWallPaperBlurChange}\n        />\n      </div>\n\n      {loadedWallpapers ? (\n        <div className=\"settings-wallpapers\">\n          {loadedWallpapers.map((wallpaper) => (\n            <WallpaperTile\n              key={wallpaper.slug}\n              wallpaper={wallpaper}\n              theme={theme}\n              isSelected={background === wallpaper.slug}\n              onClick={handleWallPaperSelect}\n            />\n          ))}\n        </div>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { background, isBlurred } = global.settings.themes[theme] || {};\n    const { loadedWallpapers } = global.settings;\n\n    return {\n      background,\n      isBlurred,\n      loadedWallpapers,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { ChangeEvent, MutableRefObject, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ThemeKey } from '../../../types';\n\nimport { pick } from '../../../util/iteratees';\nimport {\n  getPatternColor, hex2rgb, hsb2rgb, rgb2hex, rgb2hsb,\n} from '../../../util/colors';\nimport type { RealTouchEvent } from '../../../util/captureEvents';\nimport { captureEvents } from '../../../util/captureEvents';\nimport { selectTheme } from '../../../global/selectors';\nimport useFlag from '../../../hooks/useFlag';\nimport buildClassName from '../../../util/buildClassName';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport InputText from '../../ui/InputText';\n\nimport './SettingsGeneralBackgroundColor.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  backgroundColor?: string;\n  theme: ThemeKey;\n};\n\ninterface CanvasRects {\n  colorRect: {\n    offsetLeft: number;\n    top: number;\n    width: number;\n    height: number;\n  };\n  hueRect: {\n    offsetLeft: number;\n    width: number;\n  };\n}\n\nconst DEFAULT_HSB = rgb2hsb(hex2rgb('e6ebee'));\nconst PREDEFINED_COLORS = [\n  '#e6ebee', '#b2cee1', '#008dd0', '#c6e7cb', '#c4e1a6', '#60b16e',\n  '#ccd0af', '#a6a997', '#7a7072', '#fdd7af', '#fdb76e', '#dd8851',\n];\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  theme,\n  backgroundColor,\n}) => {\n  const { setThemeSettings } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const colorPickerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const huePickerRef = useRef<HTMLDivElement>(null);\n  const isFirstRunRef = useRef(true);\n\n  const [hsb, setHsb] = useState(getInitialHsb(backgroundColor));\n  // Cache for drag handlers\n  const hsbRef = useRef(hsb);\n  useEffect(() => {\n    hsbRef.current = hsb;\n  }, [hsb]);\n\n  const [isDragging, markIsDragging, unmarkIsDragging] = useFlag();\n  const [rgbInput, setRgbInput] = useState('');\n  const [hexInput, setHexInput] = useState('');\n\n  const rectsRef = useRef<CanvasRects>();\n  const colorCtxRef = useRef<CanvasRenderingContext2D>();\n\n  // Setup: cache rects, subscribe for drag events\n  useEffect(() => {\n    // We use `offsetLeft` instead of `left` to support screen transition\n    const colorRect = {\n      offsetLeft: colorPickerRef.current!.offsetLeft,\n      ...pick(colorPickerRef.current!.getBoundingClientRect(), ['top', 'width', 'height']),\n    };\n    const hueRect = {\n      offsetLeft: huePickerRef.current!.offsetLeft,\n      ...pick(huePickerRef.current!.getBoundingClientRect(), ['width']),\n    };\n\n    rectsRef.current = { colorRect, hueRect };\n\n    function handleColorDrag(e: MouseEvent | RealTouchEvent) {\n      const colorPosition = [\n        Math.min(Math.max(0, e.pageX! - colorRect.offsetLeft), colorRect.width - 1),\n        Math.min(Math.max(0, e.pageY! - colorRect.top + containerRef.current!.scrollTop), colorRect.height - 1),\n      ];\n\n      const { huePosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(colorPickerRef.current!, {\n      onCapture: handleColorDrag,\n      onDrag: handleColorDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n\n    function handleHueDrag(e: MouseEvent | RealTouchEvent) {\n      const { colorPosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n      const huePosition = Math.min(Math.max(0, e.pageX! - hueRect.offsetLeft), hueRect.width - 1);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(huePickerRef.current!, {\n      onCapture: handleHueDrag,\n      onDrag: handleHueDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n  }, [markIsDragging, unmarkIsDragging]);\n\n  const { colorPosition = [0, 0], huePosition = 0 } = rectsRef.current ? hsb2positions(hsb, rectsRef.current) : {};\n  const hex = rgb2hex(hsb2rgb(hsb));\n  const hue = hsb[0];\n  const hueHex = rgb2hex(hsb2rgb([hue, 1, 1]));\n\n  // Save value and update inputs when HSL changes\n  useEffect(() => {\n    const rgb = hsb2rgb(hsb);\n    const color = `#${rgb2hex(rgb)}`;\n\n    setRgbInput(rgb.join(', '));\n    setHexInput(color);\n\n    if (!isFirstRunRef.current) {\n      const patternColor = getPatternColor(rgb);\n      setThemeSettings({\n        theme: themeRef.current!,\n        background: undefined,\n        backgroundColor: color,\n        patternColor,\n      });\n    }\n    isFirstRunRef.current = false;\n  }, [hsb, setThemeSettings]);\n\n  // Redraw color picker when hue changes\n  useEffect(() => {\n    drawColor(colorPickerRef.current!.firstChild as HTMLCanvasElement, hue, colorCtxRef, rectsRef);\n  }, [hue]);\n\n  // Initially draw hue picker\n  useEffect(() => {\n    drawHue(huePickerRef.current!.firstChild as HTMLCanvasElement);\n  }, []);\n\n  const handleRgbChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const rgbValue = e.currentTarget.value.replace(/[^\\d, ]/g, '').slice(0, 13);\n\n    if (rgbValue.match(/^\\d{1,3},\\s?\\d{1,3},\\s?\\d{1,3}$/)) {\n      const rgb = rgbValue.split(',').map((channel) => Number(channel.trim())) as [number, number, number];\n      setHsb(rgb2hsb(rgb));\n    }\n\n    e.currentTarget.value = rgbValue;\n  }, []);\n\n  const handleHexChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const hexValue = e.currentTarget.value.replace(/[^0-9a-fA-F]/g, '').slice(0, 6);\n\n    if (hexValue.match(/^#?[0-9a-fA-F]{6}$/)) {\n      setHsb(rgb2hsb(hex2rgb(hexValue.replace('#', ''))));\n    }\n\n    e.currentTarget.value = hexValue;\n  }, []);\n\n  const handlePredefinedColorClick = useCallback((e: React.MouseEvent<HTMLInputElement>) => {\n    setHsb(rgb2hsb(hex2rgb(e.currentTarget.dataset.color!.replace('#', ''))));\n  }, []);\n\n  const className = buildClassName(\n    'SettingsGeneralBackgroundColor settings-content custom-scroll',\n    isDragging && 'is-dragging',\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div ref={containerRef} className={className}>\n      <div className=\"settings-item pt-3\">\n        <div ref={colorPickerRef} className=\"color-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translate(${colorPosition[0]}px, ${colorPosition[1]}px); background-color: #${hex};`}\n          />\n        </div>\n        <div ref={huePickerRef} className=\"hue-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translateX(${huePosition}px); background-color: #${hueHex};`}\n          />\n        </div>\n        <div className=\"tools\">\n          <InputText value={hexInput} label=\"HEX\" onChange={handleHexChange} />\n          <InputText value={rgbInput} label=\"RGB\" onChange={handleRgbChange} />\n        </div>\n      </div>\n      <div className=\"predefined-colors\">\n        {PREDEFINED_COLORS.map((color) => (\n          <div\n            className={buildClassName('predefined-color', color === `#${hex}` ? 'active' : undefined)}\n            data-color={color}\n            style={`background-color: ${color};`}\n            onClick={handlePredefinedColorClick}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nfunction getInitialHsb(backgroundColor?: string) {\n  return backgroundColor && backgroundColor.startsWith('#')\n    ? rgb2hsb(hex2rgb(backgroundColor.replace('#', '')))\n    : DEFAULT_HSB;\n}\n\nfunction hsb2positions(hsb: [number, number, number], rects: CanvasRects) {\n  return {\n    colorPosition: [\n      Math.round((hsb[1]) * (rects.colorRect.width - 1)),\n      Math.round((1 - hsb[2]) * (rects.colorRect.height - 1)),\n    ],\n    huePosition: Math.round(hsb[0] * (rects.hueRect.width - 1)),\n  };\n}\n\nfunction positions2hsb(\n  { colorPosition, huePosition }: { colorPosition: number[]; huePosition: number },\n  rects: CanvasRects,\n): [number, number, number] {\n  return [\n    huePosition / (rects.hueRect.width - 1),\n    colorPosition[0] / (rects.colorRect.width - 1),\n    1 - colorPosition[1] / (rects.colorRect.height - 1),\n  ];\n}\n\nfunction drawColor(\n  canvas: HTMLCanvasElement,\n  hue: number,\n  colorCtxRef: MutableRefObject<CanvasRenderingContext2D | undefined>,\n  rectsRef: RefObject<CanvasRects | undefined>,\n) {\n  let w: number;\n  let h: number;\n  let ctx: CanvasRenderingContext2D;\n\n  if (!colorCtxRef.current || !rectsRef.current) {\n    // First run\n    w = canvas.offsetWidth;\n    h = canvas.offsetHeight;\n    ctx = canvas.getContext('2d')!;\n\n    canvas.width = w;\n    canvas.height = h;\n\n    colorCtxRef.current = ctx;\n  } else {\n    w = rectsRef.current.colorRect.width;\n    h = rectsRef.current.colorRect.height;\n    ctx = colorCtxRef.current;\n  }\n\n  const imgData = ctx!.createImageData(w, h);\n  const pixels = imgData.data;\n  const col = hsb2rgb([hue, 1, 1]);\n\n  let index = 0;\n\n  for (let y = 0; y < h; y++) {\n    const perY = 1 - y / (h - 1);\n    const st = [255 * perY, 255 * perY, 255 * perY];\n    const ed = [col[0] * perY, col[1] * perY, col[2] * perY];\n    for (let x = 0; x < w; x++) {\n      const perX = x / (w - 1);\n      pixels[index++] = st[0] + (ed[0] - st[0]) * perX;\n      pixels[index++] = st[1] + (ed[1] - st[1]) * perX;\n      pixels[index++] = st[2] + (ed[2] - st[2]) * perX;\n      pixels[index++] = 255;\n    }\n  }\n\n  ctx!.putImageData(imgData, 0, 0);\n}\n\nfunction drawHue(canvas: HTMLCanvasElement) {\n  const w = canvas.offsetWidth;\n  const h = 1;\n  canvas.width = w;\n  canvas.height = h;\n  const ctx = canvas.getContext('2d')!;\n\n  const imgData = ctx.createImageData(w, h);\n  const pixels = imgData.data;\n\n  let index = 0;\n\n  for (let x = 0; x < w; x++) {\n    const hue = x / (w - 1);\n    const rgb = hsb2rgb([hue, 1, 1]);\n    /* eslint-disable prefer-destructuring */\n    pixels[index++] = rgb[0];\n    pixels[index++] = rgb[1];\n    pixels[index++] = rgb[2];\n    /* eslint-enable prefer-destructuring */\n    pixels[index++] = 255;\n  }\n\n  ctx.putImageData(imgData, 0, 0);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { backgroundColor } = global.settings.themes[theme] || {};\n    return {\n      backgroundColor,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { ChangeEvent } from 'react';\nimport useRunDebounced from '../../../hooks/useRunDebounced';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport {\n  playNotifySound,\n  checkIfNotificationsSupported,\n  checkIfOfflinePushFailed,\n} from '../../../util/notifications';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  hasPrivateChatsNotifications: boolean;\n  hasPrivateChatsMessagePreview: boolean;\n  hasGroupNotifications: boolean;\n  hasGroupMessagePreview: boolean;\n  hasBroadcastNotifications: boolean;\n  hasBroadcastMessagePreview: boolean;\n  hasContactJoinedNotifications: boolean;\n  hasWebNotifications: boolean;\n  hasPushNotifications: boolean;\n  notificationSoundVolume: number;\n};\n\nconst SettingsNotifications: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  hasPrivateChatsNotifications,\n  hasPrivateChatsMessagePreview,\n  hasGroupNotifications,\n  hasGroupMessagePreview,\n  hasBroadcastNotifications,\n  hasBroadcastMessagePreview,\n  hasContactJoinedNotifications,\n  hasPushNotifications,\n  hasWebNotifications,\n  notificationSoundVolume,\n}) => {\n  const {\n    loadNotificationSettings,\n    updateContactSignUpNotification,\n    updateNotificationSettings,\n    updateWebNotificationSettings,\n  } = getActions();\n\n  useEffect(() => {\n    loadNotificationSettings();\n  }, [loadNotificationSettings]);\n\n  const runDebounced = useRunDebounced(500, true);\n\n  const areNotificationsSupported = checkIfNotificationsSupported();\n  const areOfflineNotificationsSupported = areNotificationsSupported && !checkIfOfflinePushFailed();\n\n  const handleSettingsChange = useCallback((\n    e: ChangeEvent<HTMLInputElement>,\n    peerType: 'contact' | 'group' | 'broadcast',\n    setting: 'silent' | 'showPreviews',\n  ) => {\n    const currentIsSilent = peerType === 'contact'\n      ? !hasPrivateChatsNotifications\n      : !(peerType === 'group' ? hasGroupNotifications : hasBroadcastNotifications);\n    const currentShouldShowPreviews = peerType === 'contact'\n      ? hasPrivateChatsMessagePreview\n      : (peerType === 'group' ? hasGroupMessagePreview : hasBroadcastMessagePreview);\n\n    updateNotificationSettings({\n      peerType,\n      ...(setting === 'silent' && { isSilent: !e.target.checked, shouldShowPreviews: currentShouldShowPreviews }),\n      ...(setting === 'showPreviews' && { shouldShowPreviews: e.target.checked, isSilent: currentIsSilent }),\n    });\n  }, [\n    hasBroadcastMessagePreview, hasBroadcastNotifications,\n    hasGroupMessagePreview, hasGroupNotifications,\n    hasPrivateChatsMessagePreview, hasPrivateChatsNotifications,\n    updateNotificationSettings,\n  ]);\n\n  const handleWebNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const isEnabled = e.target.checked;\n    updateWebNotificationSettings({\n      hasWebNotifications: isEnabled,\n      ...(!isEnabled && { hasPushNotifications: false }),\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePushNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateWebNotificationSettings({\n      hasPushNotifications: e.target.checked,\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePrivateChatsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'contact', 'silent');\n  }, [handleSettingsChange]);\n\n  const handlePrivateChatsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'contact', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleGroupsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'group', 'silent');\n  }, [handleSettingsChange]);\n\n  const handleGroupsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'group', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleChannelsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'broadcast', 'silent');\n  }, [handleSettingsChange]);\n\n  const handleChannelsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'broadcast', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleContactNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateContactSignUpNotification({\n      isSilent: !e.target.checked,\n    });\n  }, [updateContactSignUpNotification]);\n\n  const handleVolumeChange = useCallback((volume: number) => {\n    updateWebNotificationSettings({\n      notificationSoundVolume: volume,\n    });\n    runDebounced(() => playNotifySound(undefined, volume));\n  }, [runDebounced, updateWebNotificationSettings]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Web notifications\n        </h4>\n        <Checkbox\n          label=\"Web notifications\"\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasWebNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasWebNotifications}\n          disabled={!areNotificationsSupported}\n          onChange={handleWebNotificationsChange}\n        />\n        <Checkbox\n          label=\"Offline notifications\"\n          disabled={!hasWebNotifications || !areOfflineNotificationsSupported}\n          // eslint-disable-next-line max-len\n          subLabel={areOfflineNotificationsSupported ? lang(hasPushNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled') : 'Not supported'}\n          checked={hasPushNotifications}\n          onChange={handlePushNotificationsChange}\n        />\n        <div className=\"settings-item-slider\">\n          <RangeSlider\n            label=\"Sound\"\n            min={0}\n            max={10}\n            disabled={!areNotificationsSupported}\n            value={notificationSoundVolume}\n            onChange={handleVolumeChange}\n          />\n        </div>\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AutodownloadPrivateChats')}\n        </h4>\n\n        <Checkbox\n          label={lang('NotificationsForPrivateChats')}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasPrivateChatsNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasPrivateChatsNotifications}\n          onChange={handlePrivateChatsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasPrivateChatsNotifications}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasPrivateChatsMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasPrivateChatsMessagePreview}\n          onChange={handlePrivateChatsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterGroups')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForGroups')}\n          subLabel={lang(hasGroupNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasGroupNotifications}\n          onChange={handleGroupsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasGroupNotifications}\n          subLabel={lang(hasGroupMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasGroupMessagePreview}\n          onChange={handleGroupsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterChannels')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForChannels')}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasBroadcastNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasBroadcastNotifications}\n          onChange={handleChannelsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasBroadcastNotifications}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasBroadcastMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasBroadcastMessagePreview}\n          onChange={handleChannelsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('PhoneOther')}</h4>\n\n        <Checkbox\n          label={lang('ContactJoined')}\n          checked={hasContactJoinedNotifications}\n          onChange={handleContactNotificationChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      hasPrivateChatsNotifications: Boolean(global.settings.byKey.hasPrivateChatsNotifications),\n      hasPrivateChatsMessagePreview: Boolean(global.settings.byKey.hasPrivateChatsMessagePreview),\n      hasGroupNotifications: Boolean(global.settings.byKey.hasGroupNotifications),\n      hasGroupMessagePreview: Boolean(global.settings.byKey.hasGroupMessagePreview),\n      hasBroadcastNotifications: Boolean(global.settings.byKey.hasBroadcastNotifications),\n      hasBroadcastMessagePreview: Boolean(global.settings.byKey.hasBroadcastMessagePreview),\n      hasContactJoinedNotifications: Boolean(global.settings.byKey.hasContactJoinedNotifications),\n      hasWebNotifications: global.settings.byKey.hasWebNotifications,\n      hasPushNotifications: global.settings.byKey.hasPushNotifications,\n      notificationSoundVolume: global.settings.byKey.notificationSoundVolume,\n    };\n  },\n)(SettingsNotifications));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPrivacySettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectCanSetPasscode, selectIsCurrentUserPremium } from '../../../global/selectors';\n\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ListItem from '../../ui/ListItem';\nimport Checkbox from '../../ui/Checkbox';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium?: boolean;\n  hasPassword?: boolean;\n  hasPasscode?: boolean;\n  canSetPasscode?: boolean;\n  blockedCount: number;\n  webAuthCount: number;\n  isSensitiveEnabled?: boolean;\n  canChangeSensitive?: boolean;\n  canDisplayAutoarchiveSetting: boolean;\n  shouldArchiveAndMuteNewNonContact?: boolean;\n  canDisplayChatInTitle?: boolean;\n  privacyPhoneNumber?: ApiPrivacySettings;\n  privacyLastSeen?: ApiPrivacySettings;\n  privacyProfilePhoto?: ApiPrivacySettings;\n  privacyForwarding?: ApiPrivacySettings;\n  privacyVoiceMessages?: ApiPrivacySettings;\n  privacyGroupChats?: ApiPrivacySettings;\n  privacyPhoneCall?: ApiPrivacySettings;\n  privacyPhoneP2P?: ApiPrivacySettings;\n};\n\nconst SettingsPrivacy: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  hasPassword,\n  hasPasscode,\n  blockedCount,\n  webAuthCount,\n  isSensitiveEnabled,\n  canChangeSensitive,\n  canDisplayAutoarchiveSetting,\n  shouldArchiveAndMuteNewNonContact,\n  canDisplayChatInTitle,\n  privacyPhoneNumber,\n  privacyLastSeen,\n  privacyProfilePhoto,\n  privacyForwarding,\n  privacyVoiceMessages,\n  privacyGroupChats,\n  privacyPhoneCall,\n  privacyPhoneP2P,\n  onScreenSelect,\n  onReset,\n  canSetPasscode,\n}) => {\n  const {\n    loadPrivacySettings,\n    loadBlockedContacts,\n    loadAuthorizations,\n    loadContentSettings,\n    updateContentSettings,\n    loadGlobalPrivacySettings,\n    updateGlobalPrivacySettings,\n    loadWebAuthorizations,\n    showNotification,\n    setSettingOption,\n  } = getActions();\n\n  useEffect(() => {\n    loadBlockedContacts();\n    loadAuthorizations();\n    loadPrivacySettings();\n    loadContentSettings();\n    loadWebAuthorizations();\n  }, [loadBlockedContacts, loadAuthorizations, loadPrivacySettings, loadContentSettings, loadWebAuthorizations]);\n\n  useEffect(() => {\n    if (isActive) {\n      loadGlobalPrivacySettings();\n    }\n  }, [isActive, loadGlobalPrivacySettings]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleArchiveAndMuteChange = useCallback((isEnabled: boolean) => {\n    updateGlobalPrivacySettings({\n      shouldArchiveAndMuteNewNonContact: isEnabled,\n    });\n  }, [updateGlobalPrivacySettings]);\n\n  const handleVoiceMessagesClick = useCallback(() => {\n    if (isCurrentUserPremium) {\n      onScreenSelect(SettingsScreens.PrivacyVoiceMessages);\n    } else {\n      showNotification({\n        message: lang('PrivacyVoiceMessagesPremiumOnly'),\n      });\n    }\n  }, [isCurrentUserPremium, lang, onScreenSelect, showNotification]);\n\n  const handleChatInTitleChange = useCallback((isChecked: boolean) => {\n    setSettingOption({\n      canDisplayChatInTitle: isChecked,\n    });\n  }, []);\n\n  const handleUpdateContentSettings = useCallback((isChecked: boolean) => {\n    updateContentSettings(isChecked);\n  }, [updateContentSettings]);\n\n  function getVisibilityValue(setting?: ApiPrivacySettings) {\n    const { visibility } = setting || {};\n    const blockCount = setting ? setting.blockChatIds.length + setting.blockUserIds.length : 0;\n    const allowCount = setting ? setting.allowChatIds.length + setting.allowUserIds.length : 0;\n    const total = [];\n    if (blockCount) total.push(`-${blockCount}`);\n    if (allowCount) total.push(`+${allowCount}`);\n\n    const exceptionString = total.length ? `(${total.join(',')})` : '';\n\n    switch (visibility) {\n      case 'everybody':\n        return `${lang('P2PEverybody')} ${exceptionString}`;\n\n      case 'contacts':\n        return `${lang('P2PContacts')} ${exceptionString}`;\n\n      case 'nobody':\n        return `${lang('P2PNobody')} ${exceptionString}`;\n    }\n\n    return undefined;\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <ListItem\n          icon=\"delete-user\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBlockedUsers)}\n        >\n          {lang('BlockedUsers')}\n          <span className=\"settings-item__current-value\">{blockedCount || ''}</span>\n        </ListItem>\n        {canSetPasscode && (\n          <ListItem\n            icon=\"key\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(\n              hasPasscode ? SettingsScreens.PasscodeEnabled : SettingsScreens.PasscodeDisabled,\n            )}\n          >\n            <div className=\"multiline-menu-item\">\n              <span className=\"title\">{lang('Passcode')}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {lang(hasPasscode ? 'PasswordOn' : 'PasswordOff')}\n              </span>\n            </div>\n          </ListItem>\n        )}\n        <ListItem\n          icon=\"lock\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(\n            hasPassword ? SettingsScreens.TwoFaEnabled : SettingsScreens.TwoFaDisabled,\n          )}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('TwoStepVerification')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {lang(hasPassword ? 'PasswordOn' : 'PasswordOff')}\n            </span>\n          </div>\n        </ListItem>\n        {webAuthCount > 0 && (\n          <ListItem\n            icon=\"web\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.ActiveWebsites)}\n          >\n            {lang('PrivacySettings.WebSessions')}\n            <span className=\"settings-item__current-value\">{webAuthCount}</span>\n          </ListItem>\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('PrivacyTitle')}</h4>\n\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneNumber)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyPhoneTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyPhoneNumber)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyLastSeen)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('LastSeenTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyLastSeen)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyProfilePhoto)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyProfilePhotoTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyProfilePhoto)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneCall)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('WhoCanCallMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyPhoneCall)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneP2P)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyP2P')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyPhoneP2P)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyForwarding)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyForwardsTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyForwarding)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          disabled={!isCurrentUserPremium}\n          allowDisabledClick\n          rightElement={!isCurrentUserPremium && <i className=\"icon icon-lock-badge settings-icon-locked\" />}\n          className=\"no-icon\"\n          onClick={handleVoiceMessagesClick}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyVoiceMessagesTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyVoiceMessages)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyGroupChats)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('WhoCanAddMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyGroupChats)}\n            </span>\n          </div>\n        </ListItem>\n      </div>\n\n      {canDisplayAutoarchiveSetting && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('NewChatsFromNonContacts')}\n          </h4>\n          <Checkbox\n            label={lang('ArchiveAndMute')}\n            subLabel={lang('ArchiveAndMuteInfo')}\n            checked={Boolean(shouldArchiveAndMuteNewNonContact)}\n            onCheck={handleArchiveAndMuteChange}\n          />\n        </div>\n      )}\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_settings_window_system')}\n        </h4>\n        <Checkbox\n          label={lang('lng_settings_title_chat_name')}\n          checked={Boolean(canDisplayChatInTitle)}\n          onCheck={handleChatInTitleChange}\n        />\n      </div>\n\n      {canChangeSensitive && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('lng_settings_sensitive_title')}\n          </h4>\n          <Checkbox\n            label={lang('lng_settings_sensitive_disable_filtering')}\n            subLabel={lang('lng_settings_sensitive_about')}\n            checked={Boolean(isSensitiveEnabled)}\n            disabled={!canChangeSensitive}\n            onCheck={handleUpdateContentSettings}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      settings: {\n        byKey: {\n          hasPassword, isSensitiveEnabled, canChangeSensitive, shouldArchiveAndMuteNewNonContact,\n          canDisplayChatInTitle,\n        },\n        privacy,\n      },\n      blocked,\n      passcode: {\n        hasPasscode,\n      },\n      appConfig,\n    } = global;\n\n    return {\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      hasPassword,\n      hasPasscode: Boolean(hasPasscode),\n      blockedCount: blocked.totalCount,\n      webAuthCount: global.activeWebSessions.orderedHashes.length,\n      isSensitiveEnabled,\n      canDisplayAutoarchiveSetting: Boolean(appConfig?.canDisplayAutoarchiveSetting),\n      shouldArchiveAndMuteNewNonContact,\n      canChangeSensitive,\n      privacyPhoneNumber: privacy.phoneNumber,\n      privacyLastSeen: privacy.lastSeen,\n      privacyProfilePhoto: privacy.profilePhoto,\n      privacyForwarding: privacy.forwards,\n      privacyVoiceMessages: privacy.voiceMessages,\n      privacyGroupChats: privacy.chatInvite,\n      privacyPhoneCall: privacy.phoneCall,\n      privacyPhoneP2P: privacy.phoneP2P,\n      canDisplayChatInTitle,\n      canSetPasscode: selectCanSetPasscode(global),\n    };\n  },\n)(SettingsPrivacy));\n","import React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport { SettingsScreens } from '../../../types';\nimport type { ISettings, LangCode } from '../../../types';\nimport type { ApiLanguage } from '../../../api/types';\n\nimport { setLanguage } from '../../../util/langProvider';\nimport { IS_TRANSLATION_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport RadioGroup from '../../ui/RadioGroup';\nimport Loading from '../../ui/Loading';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  lastSyncTime?: number;\n} & Pick<ISettings, 'languages' | 'language' | 'canTranslate' | 'doNotTranslate'>;\n\nconst SettingsLanguage: FC<OwnProps & StateProps> = ({\n  isActive,\n  languages,\n  language,\n  canTranslate,\n  doNotTranslate,\n  lastSyncTime,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadLanguages,\n    loadAttachBots,\n    setSettingOption,\n  } = getActions();\n\n  const [selectedLanguage, setSelectedLanguage] = useState<string>(language);\n  const [isLoading, markIsLoading, unmarkIsLoading] = useFlag();\n\n  const lang = useLang();\n\n  useEffect(() => {\n    if (lastSyncTime && !languages?.length) {\n      loadLanguages();\n    }\n  }, [languages, lastSyncTime, loadLanguages]);\n\n  const handleChange = useCallback((langCode: string) => {\n    setSelectedLanguage(langCode);\n    markIsLoading();\n\n    void setLanguage(langCode as LangCode, () => {\n      unmarkIsLoading();\n\n      setSettingOption({ language: langCode as LangCode });\n\n      loadAttachBots(); // Should be refetched every language change\n    });\n  }, [markIsLoading, unmarkIsLoading, setSettingOption, loadAttachBots]);\n\n  const options = useMemo(() => {\n    return languages ? buildOptions(languages) : undefined;\n  }, [languages]);\n\n  const handleShouldTranslateChange = useCallback((newValue: boolean) => {\n    setSettingOption({ canTranslate: newValue });\n  }, [setSettingOption]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!IS_TRANSLATION_SUPPORTED || !doNotTranslate.length) {\n      return undefined;\n    }\n\n    if (doNotTranslate.length === 1) {\n      const originalNames = new Intl.DisplayNames([language], { type: 'language' });\n      return originalNames.of(doNotTranslate[0])!;\n    }\n\n    return lang('Languages', doNotTranslate.length);\n  }, [doNotTranslate, lang, language]);\n\n  const handleDoNotSelectOpen = useCallback(() => {\n    onScreenSelect(SettingsScreens.DoNotTranslate);\n  }, [onScreenSelect]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content settings-language custom-scroll\">\n      {IS_TRANSLATION_SUPPORTED && (\n        <div className=\"settings-item\">\n          <Checkbox\n            className=\"pb-2\"\n            label={lang('ShowTranslateButton')}\n            checked={canTranslate}\n            onCheck={handleShouldTranslateChange}\n          />\n          {canTranslate && (\n            <ListItem\n              onClick={handleDoNotSelectOpen}\n            >\n              {lang('DoNotTranslate')}\n              <span className=\"settings-item__current-value\">{doNotTranslateText}</span>\n            </ListItem>\n          )}\n          <p className=\"settings-item-description mb-0 mt-1\">\n            {lang('lng_translate_settings_about')}\n          </p>\n        </div>\n      )}\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\">{lang('Localization.InterfaceLanguage')}</h4>\n        {options ? (\n          <RadioGroup\n            name=\"language-settings\"\n            options={options}\n            selected={selectedLanguage}\n            loadingOption={isLoading ? selectedLanguage : undefined}\n            onChange={handleChange}\n          />\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nfunction buildOptions(languages: ApiLanguage[]) {\n  const currentLangCode = (window.navigator.language || 'en').toLowerCase();\n  const shortLangCode = currentLangCode.substr(0, 2);\n\n  return languages.map(({ langCode, nativeName, name }) => ({\n    value: langCode,\n    label: nativeName,\n    subLabel: name,\n  })).sort((a) => {\n    return currentLangCode && (a.value === currentLangCode || a.value === shortLangCode) ? -1 : 0;\n  });\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      language, languages, canTranslate, doNotTranslate,\n    } = global.settings.byKey;\n\n    return {\n      lastSyncTime: global.lastSyncTime,\n      languages,\n      language,\n      canTranslate,\n      doNotTranslate,\n    };\n  },\n)(SettingsLanguage));\n","import type { ApiPrivacyKey } from '../../../../types';\nimport { SettingsScreens } from '../../../../types';\n\nexport function getPrivacyKey(screen: SettingsScreens): ApiPrivacyKey | undefined {\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumber:\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return 'phoneNumber';\n    case SettingsScreens.PrivacyLastSeen:\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return 'lastSeen';\n    case SettingsScreens.PrivacyProfilePhoto:\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return 'profilePhoto';\n    case SettingsScreens.PrivacyForwarding:\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return 'forwards';\n    case SettingsScreens.PrivacyVoiceMessages:\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return 'voiceMessages';\n    case SettingsScreens.PrivacyGroupChats:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n      return 'chatInvite';\n    case SettingsScreens.PrivacyPhoneCall:\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return 'phoneCall';\n    case SettingsScreens.PrivacyPhoneP2P:\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return 'phoneP2P';\n  }\n\n  return undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"fb5F16dNcZnOl5zZNuRC\"};","import type { ChangeEvent, RefObject } from 'react';\nimport React, { memo, useCallback, useState } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport CropModal from './CropModal';\n\nimport styles from './SelectAvatar.module.scss';\n\ntype OwnProps = {\n  onChange: (file: File) => void;\n  inputRef: RefObject<HTMLInputElement>;\n};\n\nconst SelectAvatar: FC<OwnProps> = ({\n  onChange,\n  inputRef,\n}) => {\n  const [selectedFile, setSelectedFile] = useState<File | undefined>();\n\n  function handleSelectFile(event: ChangeEvent<HTMLInputElement>) {\n    const target = event.target as HTMLInputElement;\n\n    if (!target?.files?.[0]) {\n      return;\n    }\n\n    setSelectedFile(target.files[0]);\n    target.value = '';\n  }\n\n  const handleAvatarCrop = useCallback((croppedImg: File) => {\n    setSelectedFile(undefined);\n    onChange(croppedImg);\n  }, [onChange]);\n\n  const handleModalClose = useCallback(() => {\n    setSelectedFile(undefined);\n  }, []);\n\n  return (\n    <>\n      <input\n        type=\"file\"\n        onChange={handleSelectFile}\n        accept=\"image/png, image/jpeg\"\n        ref={inputRef}\n        className={styles.input}\n      />\n      <CropModal file={selectedFile} onClose={handleModalClose} onChange={handleAvatarCrop} />\n    </>\n  );\n};\n\nexport default memo(SelectAvatar);\n","import React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiPhoto, ApiUser } from '../../../api/types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\n\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\nimport Avatar from '../../common/Avatar';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nimport styles from './SettingsPrivacyPublicPhoto.module.scss';\n\ntype OwnProps = {\n  currentUser: ApiUser;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n};\n\nconst SettingsPrivacyPublicProfilePhoto: FC<OwnProps> = ({\n  currentUser,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n}) => {\n  const {\n    loadFullUser, uploadProfilePhoto, deleteProfilePhoto, showNotification,\n  } = getActions();\n\n  const lang = useLang();\n\n  const [isDeleteFallbackPhotoModalOpen, openDeleteFallbackPhotoModal, closeDeleteFallbackPhotoModal] = useFlag(false);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (!hasCurrentUserFullInfo) {\n      loadFullUser({ userId: currentUser.id });\n    }\n  }, [hasCurrentUserFullInfo, currentUser.id, loadFullUser]);\n\n  const handleSelectFile = useCallback((file: File) => {\n    uploadProfilePhoto({\n      file,\n      isFallback: true,\n    });\n    showNotification({\n      message: lang('Privacy.ProfilePhoto.PublicPhotoSuccess'),\n    });\n  }, [lang, showNotification, uploadProfilePhoto]);\n\n  const handleConfirmDelete = useCallback(() => {\n    closeDeleteFallbackPhotoModal();\n    deleteProfilePhoto({ photo: currentUserFallbackPhoto! });\n  }, [closeDeleteFallbackPhotoModal, deleteProfilePhoto, currentUserFallbackPhoto]);\n\n  const handleOpenFileSelector = useCallback(() => {\n    inputRef.current?.click();\n  }, []);\n\n  return (\n    <div className=\"settings-item\">\n      <ListItem\n        icon=\"camera-add\"\n        onClick={handleOpenFileSelector}\n      >\n        <SelectAvatar\n          onChange={handleSelectFile}\n          inputRef={inputRef}\n        />\n        {lang(currentUserFallbackPhoto\n          ? 'Privacy.ProfilePhoto.UpdatePublicPhoto'\n          : 'Privacy.ProfilePhoto.SetPublicPhoto')}\n      </ListItem>\n      {currentUserFallbackPhoto && (\n        <ListItem\n          leftElement={<Avatar photo={currentUserFallbackPhoto} size=\"mini\" className={styles.fallbackPhoto} />}\n          onClick={openDeleteFallbackPhotoModal}\n          destructive\n        >\n          {lang(currentUserFallbackPhoto.isVideo\n            ? 'Privacy.ProfilePhoto.RemovePublicVideo'\n            : 'Privacy.ProfilePhoto.RemovePublicPhoto')}\n          <ConfirmDialog\n            isOpen={isDeleteFallbackPhotoModalOpen}\n            onClose={closeDeleteFallbackPhotoModal}\n            text={lang('Privacy.ResetPhoto.Confirm')}\n            confirmLabel={lang('Delete')}\n            confirmHandler={handleConfirmDelete}\n            confirmIsDestructive\n          />\n        </ListItem>\n      )}\n      <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {lang('Privacy.ProfilePhoto.PublicPhotoInfo')}\n      </p>\n    </div>\n  );\n};\n\nexport default memo(SettingsPrivacyPublicProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"fallback-photo\":\"pqiopoENn7dO3E8DQI3e\",\"fallbackPhoto\":\"pqiopoENn7dO3E8DQI3e\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../../api/types';\nimport type { ApiPrivacySettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { getPrivacyKey } from './helpers/privacy';\nimport { selectUser, selectUserFullInfo } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport SettingsPrivacyPublicProfilePhoto from './SettingsPrivacyPublicProfilePhoto';\n\ntype OwnProps = {\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Partial<ApiPrivacySettings> & {\n    chatsById?: Record<string, ApiChat>;\n    usersById?: Record<string, ApiUser>;\n    currentUser: ApiUser;\n    hasCurrentUserFullInfo?: boolean;\n    currentUserFallbackPhoto?: ApiPhoto;\n  };\n\nconst SettingsPrivacyVisibility: FC<OwnProps & StateProps> = ({\n  screen,\n  isActive,\n  onScreenSelect,\n  onReset,\n  visibility,\n  allowUserIds,\n  allowChatIds,\n  blockUserIds,\n  blockChatIds,\n  chatsById,\n  currentUser,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n}) => {\n  const { setPrivacyVisibility } = getActions();\n\n  const lang = useLang();\n\n  const visibilityOptions = useMemo(() => {\n    return [\n      { value: 'everybody', label: lang('P2PEverybody') },\n      { value: 'contacts', label: lang('P2PContacts') },\n      { value: 'nobody', label: lang('P2PNobody') },\n    ];\n  }, [lang]);\n\n  const exceptionLists = {\n    shouldShowDenied: visibility !== 'nobody',\n    shouldShowAllowed: visibility !== 'everybody',\n  };\n\n  const privacyKey = getPrivacyKey(screen);\n\n  const headerText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return lang('PrivacyPhoneTitle');\n      case SettingsScreens.PrivacyLastSeen:\n        return lang('LastSeenTitle');\n      case SettingsScreens.PrivacyProfilePhoto:\n        return lang('PrivacyProfilePhotoTitle');\n      case SettingsScreens.PrivacyForwarding:\n        return lang('PrivacyForwardsTitle');\n      case SettingsScreens.PrivacyVoiceMessages:\n        return lang('PrivacyVoiceMessagesTitle');\n      case SettingsScreens.PrivacyGroupChats:\n        return lang('WhoCanAddMe');\n      case SettingsScreens.PrivacyPhoneCall:\n        return lang('WhoCanCallMe');\n      case SettingsScreens.PrivacyPhoneP2P:\n        return lang('PrivacyP2P');\n      default:\n        return undefined;\n    }\n  }, [lang, screen]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const descriptionText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyLastSeen:\n        return lang('CustomHelp');\n      default:\n        return undefined;\n    }\n  }, [lang, screen]);\n\n  const allowedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberAllowedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenAllowedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoAllowedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingAllowedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallAllowedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PAllowedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesAllowedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsAllowedContacts;\n    }\n  })();\n\n  const deniedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberDeniedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenDeniedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoDeniedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingDeniedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallDeniedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PDeniedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesDeniedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsDeniedContacts;\n    }\n  })();\n\n  const allowedCount = useMemo(() => {\n    if (!allowUserIds || !allowChatIds || !chatsById) {\n      return 0;\n    }\n\n    return allowChatIds.reduce((result, chatId) => {\n      return result + (chatsById[chatId] ? chatsById[chatId].membersCount! : 0);\n    }, allowUserIds.length);\n  }, [allowChatIds, allowUserIds, chatsById]);\n\n  const blockCount = useMemo(() => {\n    if (!blockUserIds || !blockChatIds || !chatsById) {\n      return 0;\n    }\n\n    return blockChatIds.reduce((result, chatId) => {\n      return result + (chatsById[chatId] ? chatsById[chatId].membersCount! : 0);\n    }, blockUserIds.length);\n  }, [blockChatIds, blockUserIds, chatsById]);\n\n  const handleVisibilityChange = useCallback((value) => {\n    setPrivacyVisibility({\n      privacyKey: privacyKey!,\n      visibility: value,\n    });\n  }, [privacyKey, setPrivacyVisibility]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{headerText}</h4>\n\n        <RadioGroup\n          name={`visibility-${privacyKey}`}\n          options={visibilityOptions}\n          onChange={handleVisibilityChange}\n          selected={visibility}\n        />\n\n        {descriptionText && (\n          <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>{descriptionText}</p>\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('PrivacyExceptions')}</h4>\n\n        {exceptionLists.shouldShowAllowed && (\n          <ListItem\n            narrow\n            icon=\"add-user\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => {\n              onScreenSelect(allowedContactsScreen);\n            }}\n          >\n            <div className=\"multiline-menu-item full-size\">\n              {allowedCount > 0 && <span className=\"date\" dir=\"auto\">+{allowedCount}</span>}\n              <span className=\"title\">{lang('AlwaysAllow')}</span>\n              <span className=\"subtitle\">{lang('EditAdminAddUsers')}</span>\n            </div>\n          </ListItem>\n        )}\n        {exceptionLists.shouldShowDenied && (\n          <ListItem\n            narrow\n            icon=\"delete-user\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => {\n              onScreenSelect(deniedContactsScreen);\n            }}\n          >\n            <div className=\"multiline-menu-item full-size\">\n              {blockCount > 0 && <span className=\"date\" dir=\"auto\">&minus;{blockCount}</span>}\n              <span className=\"title\">{lang('NeverAllow')}</span>\n              <span className=\"subtitle\">{lang('EditAdminAddUsers')}</span>\n            </div>\n          </ListItem>\n        )}\n      </div>\n\n      {screen === SettingsScreens.PrivacyProfilePhoto && exceptionLists.shouldShowAllowed && (\n        <SettingsPrivacyPublicProfilePhoto\n          currentUser={currentUser}\n          hasCurrentUserFullInfo={hasCurrentUserFullInfo}\n          currentUserFallbackPhoto={currentUserFallbackPhoto}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    let privacySettings: ApiPrivacySettings | undefined;\n\n    const {\n      chats: { byId: chatsById },\n      settings: { privacy },\n    } = global;\n\n    const currentUser = selectUser(global, global.currentUserId!)!;\n    const currentUserFullInfo = selectUserFullInfo(global, global.currentUserId!);\n\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        privacySettings = privacy.phoneNumber;\n        break;\n\n      case SettingsScreens.PrivacyLastSeen:\n        privacySettings = privacy.lastSeen;\n        break;\n\n      case SettingsScreens.PrivacyProfilePhoto:\n        privacySettings = privacy.profilePhoto;\n        break;\n\n      case SettingsScreens.PrivacyPhoneCall:\n        privacySettings = privacy.phoneCall;\n        break;\n\n      case SettingsScreens.PrivacyPhoneP2P:\n        privacySettings = privacy.phoneP2P;\n        break;\n\n      case SettingsScreens.PrivacyForwarding:\n        privacySettings = privacy.forwards;\n        break;\n\n      case SettingsScreens.PrivacyVoiceMessages:\n        privacySettings = privacy.voiceMessages;\n        break;\n\n      case SettingsScreens.PrivacyGroupChats:\n        privacySettings = privacy.chatInvite;\n        break;\n    }\n\n    if (!privacySettings) {\n      return {\n        currentUser,\n        hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n        currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n      };\n    }\n\n    return {\n      ...privacySettings,\n      chatsById,\n      currentUser,\n      hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n      currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n    };\n  },\n)(SettingsPrivacyVisibility));\n","import type { ApiSession } from '../../../../api/types';\n\nexport default function getSessionIcon(session: ApiSession): string {\n  const platform = session.platform.toLowerCase();\n  const device = session.deviceModel.toLowerCase();\n  const systemVersion = session.systemVersion.toLowerCase();\n\n  if (device.includes('xbox')) {\n    return 'xbox';\n  }\n\n  if (device.includes('chrome') && !device.includes('chromebook')) {\n    return 'chrome';\n  }\n  if (device.includes('brave')) {\n    return 'brave';\n  }\n  if (device.includes('vivaldi')) {\n    return 'vivaldi';\n  }\n  if (device.includes('safari')) {\n    return 'safari';\n  }\n  if (device.includes('firefox')) {\n    return 'firefox';\n  }\n  if (device.includes('opera')) {\n    return 'opera';\n  }\n  if (device.includes('samsungbrowser')) {\n    return 'samsung';\n  }\n  if (platform.includes('android')) {\n    return 'android';\n  }\n  if (\n    device.includes('iphone')\n    || device.includes('ipad')\n    || platform.includes('ios')\n    || platform.includes('macos')\n    || systemVersion.includes('macos')\n  ) {\n    return 'apple';\n  }\n  if (platform.includes('ubuntu') || systemVersion.includes('ubuntu')) {\n    return 'ubuntu';\n  }\n  if (platform.includes('linux') || systemVersion.includes('linux')) {\n    return 'linux';\n  }\n  if (platform.includes('windows') || systemVersion.includes('windows')) {\n    return 'windows';\n  }\n\n  return 'unknown';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"SettingsActiveSession\":\"P9I8aybVU7NyFiMWiyU2\",\"settingsActiveSession\":\"P9I8aybVU7NyFiMWiyU2\",\"iconDevice\":\"a633Zas_0v2MAAY277vj\",\"iconDevice__android\":\"GUI0ogXbRdxQ2RGy8fGv\",\"iconDeviceAndroid\":\"GUI0ogXbRdxQ2RGy8fGv\",\"iconDevice__apple\":\"emCcCPeQ7_9DHBonyO02\",\"iconDeviceApple\":\"emCcCPeQ7_9DHBonyO02\",\"iconDevice__brave\":\"OMEQQMEIcjln7GIyfO3Q\",\"iconDeviceBrave\":\"OMEQQMEIcjln7GIyfO3Q\",\"iconDevice__chrome\":\"XEQtza6nFt8ptPkvbi2w\",\"iconDeviceChrome\":\"XEQtza6nFt8ptPkvbi2w\",\"iconDevice__edge\":\"iHueuVDDSF_BaK2Wa06i\",\"iconDeviceEdge\":\"iHueuVDDSF_BaK2Wa06i\",\"iconDevice__firefox\":\"KM9rrbhNSrNOW8roXGo_\",\"iconDeviceFirefox\":\"KM9rrbhNSrNOW8roXGo_\",\"iconDevice__linux\":\"JzdHedSfMsVcaa8u4X6O\",\"iconDeviceLinux\":\"JzdHedSfMsVcaa8u4X6O\",\"iconDevice__opera\":\"McukeiFuIkeZbxMNzQKK\",\"iconDeviceOpera\":\"McukeiFuIkeZbxMNzQKK\",\"iconDevice__safari\":\"XGWuju_22haQw0Qraor7\",\"iconDeviceSafari\":\"XGWuju_22haQw0Qraor7\",\"iconDevice__samsung\":\"ZZGcTr3P3RJrOwOwFX6r\",\"iconDeviceSamsung\":\"ZZGcTr3P3RJrOwOwFX6r\",\"iconDevice__ubuntu\":\"OPtbMfpfiWN3dxilMOPX\",\"iconDeviceUbuntu\":\"OPtbMfpfiWN3dxilMOPX\",\"iconDevice__unknown\":\"xoc1kuf1XAKh_dhO758U\",\"iconDeviceUnknown\":\"xoc1kuf1XAKh_dhO758U\",\"iconDevice__vivaldi\":\"Y25gBvz9xzZicoJgQf8Y\",\"iconDeviceVivaldi\":\"Y25gBvz9xzZicoJgQf8Y\",\"iconDevice__windows\":\"dKbtoO2xjdhL8W2mqyxr\",\"iconDeviceWindows\":\"dKbtoO2xjdhL8W2mqyxr\",\"iconDevice__xbox\":\"FhLv8AIUHzsoTX8b0zdA\",\"iconDeviceXbox\":\"FhLv8AIUHzsoTX8b0zdA\",\"title\":\"b9iUjEhCpOrQ4dPhn2KU\",\"note\":\"hTTCWbngkwJoEwtGFD9o\",\"date\":\"pUv5oVVNDZ5lBRzNzx3X\",\"box\":\"e32uLjclYAYuxxW1CAex\",\"actionHeader\":\"xwSMwr4aHsrRVIVInLEo\",\"actionName\":\"tSrCe7E_Iom1nGuh2Gs3\",\"headerButton\":\"N0buK669iHOZ1hN_H7Ik\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport { formatDateTimeToString } from '../../../util/dateFormat';\nimport useLang from '../../../hooks/useLang';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport getSessionIcon from './helpers/getSessionIcon';\nimport buildClassName from '../../../util/buildClassName';\n\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Switcher from '../../ui/Switcher';\nimport Button from '../../ui/Button';\n\nimport styles from './SettingsActiveSession.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiSession;\n};\n\nconst SettingsActiveSession: FC<OwnProps & StateProps> = ({\n  isOpen, session, onClose,\n}) => {\n  const { changeSessionSettings, terminateAuthorization } = getActions();\n  const lang = useLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n\n  const handleSecretChatsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areSecretChatsEnabled: !session!.areSecretChatsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleCallsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areCallsEnabled: !session!.areCallsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('SessionPreview.Title')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('SessionPreview.TerminateSession')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.SettingsActiveSession}\n    >\n      <div className={buildClassName(\n        styles.iconDevice,\n        renderingSession && styles[`iconDevice__${getSessionIcon(renderingSession)}`],\n      )}\n      />\n      <h3 className={styles.title} dir=\"auto\">{renderingSession?.deviceModel}</h3>\n      <div className={styles.date} aria-label={lang('PrivacySettings.LastSeen')}>\n        {formatDateTimeToString(renderingSession.dateActive * 1000, lang.code)}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('SessionPreview.App')}</dt>\n        <dd>\n          {renderingSession?.appName} {renderingSession?.appVersion},{' '}\n          {renderingSession?.platform} {renderingSession?.systemVersion}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession && getLocation(renderingSession)}</dd>\n      </dl>\n\n      <p className={styles.note}>{lang('SessionPreview.IpDesc')}</p>\n\n      <h4 className={styles.actionHeader}>{lang('AuthSessions.View.AcceptTitle')}</h4>\n\n      <ListItem onClick={handleSecretChatsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Secret')}</span>\n        <Switcher\n          id=\"accept_secrets\"\n          label=\"On\"\n          checked={renderingSession.areSecretChatsEnabled}\n        />\n      </ListItem>\n      <ListItem onClick={handleCallsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Calls')}</span>\n        <Switcher\n          id=\"accept_calls\"\n          label=\"On\"\n          checked={renderingSession.areCallsEnabled}\n        />\n      </ListItem>\n    </Modal>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>((global, { hash }) => {\n  return {\n    session: hash ? global.activeSessions.byHash[hash] : undefined,\n  };\n})(SettingsActiveSession));\n","/* eslint-disable react/jsx-no-bind */\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport { formatPastTimeShort } from '../../../util/dateFormat';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport ListItem from '../../ui/ListItem';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport RadioGroup from '../../ui/RadioGroup';\nimport SettingsActiveSession from './SettingsActiveSession';\n\nimport './SettingsActiveSessions.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiSession>;\n  orderedHashes: string[];\n  ttlDays?: number;\n};\n\nconst SettingsActiveSessions: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  byHash,\n  orderedHashes,\n  ttlDays,\n}) => {\n  const {\n    terminateAuthorization,\n    terminateAllAuthorizations,\n    changeSessionTtl,\n  } = getActions();\n\n  const lang = useLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedSessionHash, setOpenedSessionHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const autoTerminateValue = useMemo(() => {\n    // eslint-disable-next-line max-len\n    // https://github.com/DrKLO/Telegram/blob/96dce2c9aabc33b87db61d830aa087b6b03fe397/TMessagesProj/src/main/java/org/telegram/ui/SessionsActivity.java#L195\n    if (ttlDays === undefined) {\n      return undefined;\n    }\n\n    if (ttlDays <= 7) {\n      return '7';\n    }\n\n    if (ttlDays <= 30) {\n      return '30';\n    }\n\n    if (ttlDays <= 93) {\n      return '90';\n    }\n\n    if (ttlDays <= 183) {\n      return '183';\n    }\n\n    if (ttlDays > 183) {\n      return '365';\n    }\n\n    return undefined;\n  }, [ttlDays]);\n\n  const AUTO_TERMINATE_OPTIONS = useMemo(() => {\n    const options = [{\n      label: lang('Weeks', 1, 'i'),\n      value: '7',\n    }, {\n      label: lang('Months', 1, 'i'),\n      value: '30',\n    }, {\n      label: lang('Months', 3, 'i'),\n      value: '90',\n    }, {\n      label: lang('Months', 6, 'i'),\n      value: '183',\n    }];\n    if (ttlDays && ttlDays >= 365) {\n      options.push({\n        label: lang('Years', 1, 'i'),\n        value: '365',\n      });\n    }\n    return options;\n  }, [lang, ttlDays]);\n\n  const handleTerminateSessionClick = useCallback((hash: string) => {\n    terminateAuthorization({ hash });\n  }, [terminateAuthorization]);\n\n  const handleTerminateAllSessions = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedSessionHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseSessionModal = useCallback(() => {\n    setOpenedSessionHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  const handleChangeSessionTtl = useCallback((value: string) => {\n    changeSessionTtl({ days: Number(value) });\n  }, [changeSessionTtl]);\n\n  const currentSession = useMemo(() => {\n    const currentSessionHash = orderedHashes.find((hash) => byHash[hash].isCurrent);\n\n    return currentSessionHash ? byHash[currentSessionHash] : undefined;\n  }, [byHash, orderedHashes]);\n\n  const otherSessionHashes = useMemo(() => {\n    return orderedHashes.filter((hash) => !byHash[hash].isCurrent);\n  }, [byHash, orderedHashes]);\n  const hasOtherSessions = Boolean(otherSessionHashes.length);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderCurrentSession(session: ApiSession) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AuthSessions.CurrentSession')}\n        </h4>\n\n        <ListItem narrow inactive icon={`device-${getSessionIcon(session)} icon-device`}>\n          <div className=\"multiline-menu-item full-size\" dir=\"auto\">\n            <span className=\"title\" dir=\"auto\">{session.deviceModel}</span>\n            <span className=\"subtitle black tight\">\n              {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n            </span>\n            <span className=\"subtitle\">{session.ip} - {getLocation(session)}</span>\n          </div>\n        </ListItem>\n\n        {hasOtherSessions && (\n          <ListItem\n            className=\"destructive mb-0 no-icon\"\n            icon=\"stop\"\n            ripple\n            narrow\n            onClick={openConfirmTerminateAllDialog}\n          >\n            {lang('TerminateAllSessions')}\n          </ListItem>\n        )}\n      </div>\n    );\n  }\n\n  function renderOtherSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('OtherSessions')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderAutoTerminate() {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('TerminateOldSessionHeader')}\n        </h4>\n\n        <p>{lang('IfInactiveFor')}</p>\n        <RadioGroup\n          name=\"session_ttl\"\n          options={AUTO_TERMINATE_OPTIONS}\n          selected={autoTerminateValue}\n          onChange={handleChangeSessionTtl}\n        />\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateSessionClick(session.hash);\n          },\n        }]}\n        icon={`device-${getSessionIcon(session)} icon-device`}\n        onClick={() => { handleOpenSessionModal(session.hash); }}\n      >\n        <div className=\"multiline-menu-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          <span className=\"title\">{session.deviceModel}</span>\n          <span className=\"subtitle black tight\">\n            {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n          </span>\n          <span className=\"subtitle\">{session.ip} {getLocation(session)}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll SettingsActiveSessions\">\n      {currentSession && renderCurrentSession(currentSession)}\n      {hasOtherSessions && renderOtherSessions(otherSessionHashes)}\n      {renderAutoTerminate()}\n      {hasOtherSessions && (\n        <ConfirmDialog\n          isOpen={isConfirmTerminateAllDialogOpen}\n          onClose={closeConfirmTerminateAllDialog}\n          text={lang('AreYouSureSessions')}\n          confirmLabel={lang('TerminateAllSessions')}\n          confirmHandler={handleTerminateAllSessions}\n          confirmIsDestructive\n          areButtonsInColumn\n        />\n      )}\n      <SettingsActiveSession isOpen={isModalOpen} hash={openedSessionHash} onClose={handleCloseSessionModal} />\n    </div>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => global.activeSessions,\n)(SettingsActiveSessions));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OeRWKjYQC6t7Uxv8I3j0\",\"avatar\":\"oy_023CG29VsnL9L5ulf\",\"title\":\"bg8UD_Pu2JWogmjuvVXg\",\"note\":\"TgiK64wG1hkOWSiXybQf\",\"box\":\"HSyJbRkyhkeT0s2QA4Ku\",\"action-header\":\"AQX7GM28GeWO4b1bXTNK\",\"actionHeader\":\"AQX7GM28GeWO4b1bXTNK\",\"action-name\":\"_VJHBZTk5qdYimQAoCWe\",\"actionName\":\"_VJHBZTk5qdYimQAoCWe\",\"header-button\":\"hlKLEbMQAsx572pUREy0\",\"headerButton\":\"hlKLEbMQAsx572pUREy0\"};","import React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiUser, ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLang from '../../../hooks/useLang';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\n\nimport Modal from '../../ui/Modal';\nimport Button from '../../ui/Button';\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\n\nimport styles from './SettingsActiveWebsite.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiWebSession;\n  bot?: ApiUser;\n};\n\nconst SettingsActiveWebsite: FC<OwnProps & StateProps> = ({\n  isOpen,\n  session,\n  bot,\n  onClose,\n}) => {\n  const { terminateWebAuthorization } = getActions();\n  const lang = useLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n  const renderingBot = useCurrentOrPrev(bot, true);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateWebAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateWebAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('WebSessionsTitle')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('AuthSessions.LogOut')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.root}\n    >\n      <Avatar\n        className={styles.avatar}\n        user={renderingBot}\n        size=\"large\"\n      />\n      {renderingBot && <FullNameTitle className={styles.title} peer={renderingBot} />}\n      <div className={styles.note}>\n        {renderingSession?.domain}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('AuthSessions.View.Browser')}</dt>\n        <dd>\n          {renderingSession?.browser}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession?.region}</dd>\n      </dl>\n      <p className={styles.note}>{lang('AuthSessions.View.LocationInfo')}</p>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { hash }): StateProps => {\n  const session = hash ? global.activeWebSessions.byHash[hash] : undefined;\n  const bot = session ? global.users.byId[session.botId] : undefined;\n\n  return {\n    session,\n    bot,\n  };\n})(SettingsActiveWebsite));\n","// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"n3bBygyO4j5MQyJ70Twt\",\"clear-help\":\"vUICy6ZQCYFSrvvxXe7f\",\"clearHelp\":\"vUICy6ZQCYFSrvvxXe7f\"};","import React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiWebSession } from '../../../api/types';\n\nimport { formatPastTimeShort } from '../../../util/dateFormat';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ListItem from '../../ui/ListItem';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport SettingsActiveWebsite from './SettingsActiveWebsite';\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\n\nimport styles from './SettingsActiveWebsites.module.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiWebSession>;\n  orderedHashes: string[];\n};\n\nconst SettingsActiveWebsites: FC<OwnProps & StateProps> = ({\n  isActive,\n  byHash,\n  orderedHashes,\n  onReset,\n}) => {\n  const {\n    terminateWebAuthorization,\n    terminateAllWebAuthorizations,\n  } = getActions();\n\n  const lang = useLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedWebsiteHash, setOpenedWebsiteHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const handleTerminateAuthClick = useCallback((hash: string) => {\n    terminateWebAuthorization({ hash });\n  }, [terminateWebAuthorization]);\n\n  const handleTerminateAllAuth = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllWebAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllWebAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedWebsiteHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseWebsiteModal = useCallback(() => {\n    setOpenedWebsiteHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  // Close when empty\n  useEffect(() => {\n    if (!orderedHashes.length) {\n      onReset();\n    }\n  }, [onReset, orderedHashes]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('WebSessionsTitle')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n    const bot = getGlobal().users.byId[session.botId];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateAuthClick(session.hash);\n          },\n        }]}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleOpenSessionModal(session.hash)}\n      >\n        <Avatar className={styles.avatar} user={bot} size=\"tiny\" />\n        <div className=\"multiline-menu-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          {bot && <FullNameTitle className={styles.title} peer={bot} />}\n          <span className={buildClassName('subtitle', 'black', 'tight', styles.platform)}>\n            {session.domain}, {session.browser}, {session.platform}\n          </span>\n          <span className=\"subtitle\">{session.ip} {session.region}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  if (!orderedHashes.length) return undefined;\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <ListItem\n          className=\"destructive mb-0 no-icon\"\n          icon=\"stop\"\n          ripple\n          narrow\n          onClick={openConfirmTerminateAllDialog}\n        >\n          {lang('AuthSessions.LogOutApplications')}\n        </ListItem>\n        <p className={buildClassName('settings-item-description', styles.clearHelp)}>\n          {lang('ClearOtherWebSessionsHelp')}\n        </p>\n      </div>\n      {renderSessions(orderedHashes)}\n      <ConfirmDialog\n        isOpen={isConfirmTerminateAllDialogOpen}\n        onClose={closeConfirmTerminateAllDialog}\n        title={lang('AuthSessions.LogOutApplications')}\n        text={lang('AreYouSureWebSessions')}\n        confirmHandler={handleTerminateAllAuth}\n        confirmIsDestructive\n      />\n      <SettingsActiveWebsite isOpen={isModalOpen} hash={openedWebsiteHash} onClose={handleCloseWebsiteModal} />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byHash, orderedHashes } = global.activeWebSessions;\n    return {\n      byHash,\n      orderedHashes,\n    };\n  },\n)(SettingsActiveWebsites));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useMemo, useState, memo, useCallback, useEffect,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { filterUsersByName, getUserFullName } from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport useLang from '../../../hooks/useLang';\n\nimport ChatOrUserPicker from '../../common/ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  blockedIds: string[];\n  contactIds?: string[];\n  localContactIds?: string[];\n  currentUserId?: string;\n};\n\nconst BlockUserModal: FC<OwnProps & StateProps> = ({\n  usersById,\n  blockedIds,\n  contactIds,\n  localContactIds,\n  currentUserId,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    setUserSearchQuery,\n    blockContact,\n  } = getActions();\n\n  const lang = useLang();\n  const [search, setSearch] = useState('');\n\n  useEffect(() => {\n    setUserSearchQuery({ query: search });\n  }, [search, setUserSearchQuery]);\n\n  const filteredContactIds = useMemo(() => {\n    const availableContactIds = unique([\n      ...(contactIds || []),\n      ...(localContactIds || []),\n    ].filter((contactId) => {\n      return contactId !== currentUserId && !blockedIds.includes(contactId);\n    }));\n\n    return filterUsersByName(availableContactIds, usersById, search)\n      .sort((firstId, secondId) => {\n        const firstName = getUserFullName(usersById[firstId]) || '';\n        const secondName = getUserFullName(usersById[secondId]) || '';\n\n        return firstName.localeCompare(secondName);\n      });\n  }, [blockedIds, contactIds, currentUserId, search, localContactIds, usersById]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    const { id: contactId, accessHash } = usersById[userId] || {};\n    if (!contactId || !accessHash) {\n      return;\n    }\n    blockContact({ contactId, accessHash });\n    onClose();\n  }, [blockContact, onClose, usersById]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={filteredContactIds}\n      searchPlaceholder={lang('BlockedUsers.BlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      users: {\n        byId: usersById,\n      },\n      blocked: {\n        ids: blockedIds,\n      },\n      contactList,\n      currentUserId,\n    } = global;\n\n    return {\n      usersById,\n      blockedIds,\n      contactIds: contactList?.userIds,\n      localContactIds: selectTabState(global).userSearch.localUserIds,\n      currentUserId,\n    };\n  },\n)(BlockUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiCountryCode, ApiUser } from '../../../api/types';\n\nimport { CHAT_HEIGHT_PX } from '../../../config';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport { getMainUsername, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useFlag from '../../../hooks/useFlag';\n\nimport ListItem from '../../ui/ListItem';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport Avatar from '../../common/Avatar';\nimport Loading from '../../ui/Loading';\nimport BlockUserModal from './BlockUserModal';\nimport FullNameTitle from '../../common/FullNameTitle';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  chatsByIds: Record<string, ApiChat>;\n  usersByIds: Record<string, ApiUser>;\n  blockedIds: string[];\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst SettingsPrivacyBlockedUsers: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  chatsByIds,\n  usersByIds,\n  blockedIds,\n  phoneCodeList,\n}) => {\n  const { unblockContact } = getActions();\n\n  const lang = useLang();\n  const [isBlockUserModalOpen, openBlockUserModal, closeBlockUserModal] = useFlag();\n  const handleUnblockClick = useCallback((contactId: string) => {\n    unblockContact({ contactId });\n  }, [unblockContact]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const blockedUsernamesById = useMemo(() => {\n    return blockedIds.reduce((acc, contactId) => {\n      const isPrivate = isUserId(contactId);\n      const user = isPrivate ? usersByIds[contactId] : undefined;\n      const mainUsername = user && !user.phoneNumber && getMainUsername(user);\n\n      if (mainUsername) {\n        acc[contactId] = mainUsername;\n      }\n\n      return acc;\n    }, {} as Record<string, string>);\n  }, [blockedIds, usersByIds]);\n\n  function renderContact(contactId: string, i: number, viewportOffset: number) {\n    const isPrivate = isUserId(contactId);\n    const user = isPrivate ? usersByIds[contactId] : undefined;\n    const chat = !isPrivate ? chatsByIds[contactId] : undefined;\n    const userOrChat = user || chat;\n\n    const className = buildClassName(\n      'Chat chat-item-clickable blocked-list-item small-icon',\n      isPrivate ? 'private' : 'group',\n    );\n\n    const userMainUsername = blockedUsernamesById[contactId];\n\n    return (\n      <ListItem\n        key={`blocked_${contactId}`}\n        className={className}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Unblock',\n          icon: 'unlock',\n          handler: () => {\n            handleUnblockClick(contactId);\n          },\n        }]}\n        style={`top: ${(viewportOffset + i) * CHAT_HEIGHT_PX}px;`}\n      >\n        <Avatar\n          size=\"medium\"\n          user={user}\n          chat={chat}\n        />\n        <div className=\"contact-info\" dir=\"auto\">\n          {userOrChat && <FullNameTitle peer={userOrChat} />}\n          {user?.phoneNumber && (\n            <div className=\"contact-phone\" dir=\"auto\">{formatPhoneNumberWithCode(phoneCodeList, user.phoneNumber)}</div>\n          )}\n          {userMainUsername && (<div className=\"contact-username\" dir=\"auto\">@{userMainUsername}</div>)}\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content infinite-scroll\">\n        <div className=\"settings-item no-border\">\n          <p className=\"settings-item-description-larger mt-0 mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('BlockedUsersInfo')}\n          </p>\n        </div>\n\n        <div className=\"chat-list custom-scroll\">\n          {blockedIds?.length ? (\n            <div className=\"scroll-container\">\n              {blockedIds!.map((contactId, i) => renderContact(contactId, i, 0))}\n            </div>\n          ) : blockedIds && !blockedIds.length ? (\n            <div className=\"no-results\" dir=\"auto\">{lang('NoBlocked')}</div>\n          ) : (\n            <Loading key=\"loading\" />\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown\n        onClick={openBlockUserModal}\n        ariaLabel={lang('BlockContact')}\n      >\n        <i className=\"icon icon-add\" />\n      </FloatingActionButton>\n      <BlockUserModal\n        isOpen={isBlockUserModalOpen}\n        onClose={closeBlockUserModal}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        byId: chatsByIds,\n      },\n      users: {\n        byId: usersByIds,\n      },\n      blocked: {\n        ids,\n      },\n      countryList: {\n        phoneCodes: phoneCodeList,\n      },\n    } = global;\n\n    return {\n      chatsByIds,\n      usersByIds,\n      blockedIds: ids,\n      phoneCodeList,\n    };\n  },\n)(SettingsPrivacyBlockedUsers));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport useLang from '../../../../hooks/useLang';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport ListItem from '../../../ui/ListItem';\nimport renderText from '../../../common/helpers/renderText';\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {renderText(lang('EnabledPasswordText'), ['br'])}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaChangePasswordCurrent)}\n        >\n          {lang('ChangePassword')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaTurnOff)}\n        >\n          {lang('TurnPasswordOff')}\n        </ListItem>\n        <ListItem\n          icon=\"email\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCurrentPassword)}\n        >\n          {lang('SetRecoveryEmail')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaEnabled);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport PasswordMonkey from '../../common/PasswordMonkey';\nimport PasswordForm from '../../common/PasswordForm';\n\ntype OwnProps = {\n  error?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  expectedPassword?: string;\n  placeholder?: string;\n  hint?: string;\n  submitLabel?: string;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (password: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst EQUAL_PASSWORD_ERROR = 'Passwords Should Be Equal';\n\nconst SettingsPasswordForm: FC<OwnProps> = ({\n  isActive,\n  onReset,\n  error,\n  isLoading,\n  shouldDisablePasswordManager,\n  expectedPassword,\n  placeholder = 'Current Password',\n  hint,\n  submitLabel,\n  clearError,\n  onSubmit,\n}) => {\n  const [validationError, setValidationError] = useState<string>('');\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n\n  const handleSubmit = useCallback((newPassword) => {\n    if (expectedPassword && newPassword !== expectedPassword) {\n      setValidationError(EQUAL_PASSWORD_ERROR);\n    } else {\n      onSubmit(newPassword);\n    }\n  }, [onSubmit, expectedPassword]);\n\n  const handleClearError = useCallback(() => {\n    if (clearError) {\n      clearError();\n    }\n    setValidationError('');\n  }, [clearError]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content password-form custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <PasswordForm\n          error={validationError || error}\n          hint={hint}\n          placeholder={placeholder}\n          shouldDisablePasswordManager={shouldDisablePasswordManager}\n          submitLabel={submitLabel || lang('Next')}\n          clearError={handleClearError}\n          isLoading={isLoading}\n          isPasswordVisible={shouldShowPassword}\n          shouldResetValue={isActive}\n          onChangePasswordVisibility={setShouldShowPassword}\n          onSubmit={handleSubmit}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasswordForm);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport useLang from '../../../../hooks/useLang';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\n\nimport Button from '../../../ui/Button';\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('SetAdditionalPasswordInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={onStart}>{lang('EditAdminTransferSetPassword')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\nimport { selectAnimatedEmoji } from '../../../../global/selectors';\nimport renderText from '../../../common/helpers/renderText';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLang from '../../../../hooks/useLang';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useAppLayout from '../../../../hooks/useAppLayout';\n\nimport Button from '../../../ui/Button';\nimport Modal from '../../../ui/Modal';\nimport InputText from '../../../ui/InputText';\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\n\ntype OwnProps = {\n  icon: 'hint' | 'email';\n  type?: 'text' | 'email';\n  isLoading?: boolean;\n  error?: string;\n  placeholder: string;\n  shouldConfirm?: boolean;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (value?: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaSkippableForm: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  type = 'text',\n  isLoading,\n  error,\n  placeholder,\n  shouldConfirm,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n  const [value, setValue] = useState<string>('');\n  const [isConfirmShown, markIsConfirmShown, unmarkIsConfirmShown] = useFlag(false);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    setValue(e.target.value);\n  }, [clearError, error]);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!inputRef.current) {\n      return;\n    }\n\n    onSubmit(value);\n  };\n\n  const handleSkip = useCallback(() => {\n    onSubmit();\n  }, [onSubmit]);\n\n  const handleSkipConfirm = useCallback(() => {\n    unmarkIsConfirmShown();\n    onSubmit();\n  }, [onSubmit, unmarkIsConfirmShown]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <form action=\"\" onSubmit={handleSubmit}>\n          <InputText\n            ref={inputRef}\n            value={value}\n            inputMode={type}\n            label={placeholder}\n            error={error}\n            onChange={handleInputChange}\n          />\n\n          {value ? (\n            <Button type=\"submit\" isLoading={isLoading} ripple>{lang('Continue')}</Button>\n          ) : (\n            <Button\n              isText\n              isLoading={isLoading}\n              ripple\n              onClick={shouldConfirm ? markIsConfirmShown : handleSkip}\n            >\n              {lang('YourEmailSkip')}\n            </Button>\n          )}\n        </form>\n        {shouldConfirm && (\n          <Modal\n            className=\"narrow\"\n            isOpen={isConfirmShown}\n            title={lang('YourEmailSkipWarning')}\n            onClose={unmarkIsConfirmShown}\n          >\n            {renderText(lang('YourEmailSkipWarningText'), ['br', 'simple_markdown'])}\n            <div className=\"dialog-buttons\">\n              <Button\n                color=\"danger\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={handleSkipConfirm}\n              >\n                {lang('YourEmailSkip')}\n              </Button>\n              <Button\n                color=\"primary\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={unmarkIsConfirmShown}\n              >\n                {lang('Cancel')}\n              </Button>\n            </div>\n          </Modal>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { icon }) => {\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, icon === 'email' ? '💌' : '💡'),\n  };\n})(SettingsTwoFaSkippableForm));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { STICKER_SIZE_TWO_FA } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport useLang from '../../../../hooks/useLang';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\n\nimport Button from '../../../ui/Button';\nimport AnimatedIcon from '../../../common/AnimatedIcon';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaCongratulations: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useLang();\n\n  const handleClick = useCallback(() => {\n    onScreenSelect(SettingsScreens.Privacy);\n  }, [onScreenSelect]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_TWO_FA}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('TwoStepVerificationPasswordSetInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={handleClick}>{lang('TwoStepVerificationPasswordReturnSettings')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\nimport { selectAnimatedEmoji } from '../../../../global/selectors';\nimport useLang from '../../../../hooks/useLang';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useAppLayout from '../../../../hooks/useAppLayout';\n\nimport InputText from '../../../ui/InputText';\nimport Loading from '../../../ui/Loading';\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\n\ntype OwnProps = {\n  isLoading?: boolean;\n  error?: string;\n  clearError: NoneToVoidFunction;\n  onSubmit: (hint: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n  codeLength: number;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaEmailCode: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  codeLength,\n  isLoading,\n  error,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  const [value, setValue] = useState<string>('');\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    const newValue = e.target.value.slice(0, codeLength);\n\n    if (newValue.length === codeLength) {\n      onSubmit(newValue);\n    }\n\n    setValue(newValue);\n    e.target.value = newValue;\n  }, [clearError, codeLength, error, onSubmit]);\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <InputText\n          value={value}\n          ref={inputRef}\n          inputMode=\"decimal\"\n          label={lang('YourEmailCode')}\n          error={error}\n          onChange={handleInputChange}\n        />\n        {isLoading && <Loading />}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '💌'),\n    codeLength: global.twoFaSettings.waitingEmailCodeLength,\n  };\n})(SettingsTwoFaEmailCode));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport { SettingsScreens } from '../../../../types';\n\nimport type { TwoFaDispatch, TwoFaState } from '../../../../hooks/reducers/useTwoFaReducer';\nimport useLang from '../../../../hooks/useLang';\n\nimport SettingsTwoFaEnabled from './SettingsTwoFaEnabled';\nimport SettingsTwoFaPassword from '../SettingsPasswordForm';\nimport SettingsTwoFaStart from './SettingsTwoFaStart';\nimport SettingsTwoFaSkippableForm from './SettingsTwoFaSkippableForm';\nimport SettingsTwoFaCongratulations from './SettingsTwoFaCongratulations';\nimport SettingsTwoFaEmailCode from './SettingsTwoFaEmailCode';\n\nexport type OwnProps = {\n  state: TwoFaState;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  dispatch: TwoFaDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['twoFaSettings'];\n\nconst SettingsTwoFa: FC<OwnProps & StateProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  hint,\n  isLoading,\n  error,\n  waitingEmailCodeLength,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    updatePassword,\n    checkPassword,\n    clearTwoFaError,\n    updateRecoveryEmail,\n    provideTwoFaEmailCode,\n    clearPassword,\n  } = getActions();\n\n  useEffect(() => {\n    if (waitingEmailCodeLength) {\n      if (currentScreen === SettingsScreens.TwoFaNewPasswordEmail) {\n        onScreenSelect(SettingsScreens.TwoFaNewPasswordEmailCode);\n      } else if (currentScreen === SettingsScreens.TwoFaRecoveryEmail) {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCode);\n      }\n    }\n  }, [currentScreen, onScreenSelect, waitingEmailCodeLength]);\n\n  const handleStartWizard = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.TwoFaNewPassword);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordHint);\n  }, [onScreenSelect]);\n\n  const handleNewPasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordEmail);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updatePassword({\n      ...state,\n      email: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleChangePasswordCurrent = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaChangePasswordNew);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleChangePasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordHint);\n  }, [onScreenSelect]);\n\n  const handleChangePasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    updatePassword({\n      ...state,\n      hint: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleTurnOff = useCallback((value: string) => {\n    clearPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.Privacy);\n      },\n    });\n  }, [clearPassword, onScreenSelect]);\n\n  const handleRecoveryEmailCurrentPassword = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmail);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleRecoveryEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updateRecoveryEmail({\n      ...state,\n      email: value!,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updateRecoveryEmail]);\n\n  const handleEmailCode = useCallback((code: string) => {\n    provideTwoFaEmailCode({ code });\n  }, [provideTwoFaEmailCode]);\n\n  const lang = useLang();\n\n  switch (currentScreen) {\n    case SettingsScreens.TwoFaDisabled:\n      return (\n        <SettingsTwoFaStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPassword,\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPassword:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={lang('PleaseEnterPassword')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={lang('PleaseReEnterPassword')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"hint\"\n          placeholder={lang('PasswordHintPlaceholder')}\n          onSubmit={handleNewPasswordHint}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          placeholder={lang('RecoveryEmailTitle')}\n          shouldConfirm\n          onSubmit={handleNewPasswordEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaCongratulations:\n      return (\n        <SettingsTwoFaCongratulations\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaEnabled:\n      return (\n        <SettingsTwoFaEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordCurrent,\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaTurnOff,\n            SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordCurrent:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordNew:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={lang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={lang('PleaseReEnterPassword')}\n          onSubmit={handleChangePasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          icon=\"hint\"\n          placeholder={lang('PasswordHintPlaceholder')}\n          onSubmit={handleChangePasswordHint}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaTurnOff:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleRecoveryEmailCurrentPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          placeholder={lang('RecoveryEmailTitle')}\n          onSubmit={handleRecoveryEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.twoFaSettings }),\n)(SettingsTwoFa));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { ApiPrivacySettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID } from '../../../config';\nimport { unique } from '../../../util/iteratees';\nimport { filterChatsByName, isUserId } from '../../../global/helpers';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport Picker from '../../common/Picker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isAllowList?: boolean;\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  settings?: ApiPrivacySettings;\n};\n\nconst SettingsPrivacyVisibilityExceptionList: FC<OwnProps & StateProps> = ({\n  isAllowList,\n  screen,\n  isActive,\n  onScreenSelect,\n  onReset,\n  currentUserId,\n  settings,\n}) => {\n  const { setPrivacySettings } = getActions();\n\n  const lang = useLang();\n\n  const selectedContactIds = useMemo(() => {\n    if (!settings) {\n      return [];\n    }\n\n    if (isAllowList) {\n      return [...settings.allowUserIds, ...settings.allowChatIds];\n    } else {\n      return [...settings.blockUserIds, ...settings.blockChatIds];\n    }\n  }, [isAllowList, settings]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>(selectedContactIds);\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on chats, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const chatIds = unique([...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []])\n      .filter((chatId) => {\n        const chat = chatsById[chatId];\n\n        return chat && isUserId(chat.id) && chat.id !== currentUserId;\n      });\n\n    return unique([\n      ...selectedContactIds,\n      ...filterChatsByName(lang, chatIds, chatsById, searchQuery),\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, selectedContactIds, lang, searchQuery, currentUserId]);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useCallback(() => {\n    setPrivacySettings({\n      privacyKey: getPrivacyKey(screen)!,\n      isAllowList: Boolean(isAllowList),\n      contactsIds: newSelectedContactIds,\n    });\n\n    onScreenSelect(SettingsScreens.Privacy);\n  }, [isAllowList, newSelectedContactIds, onScreenSelect, screen, setPrivacySettings]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"NewChat-inner step-1\">\n      <Picker\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        filterValue={searchQuery}\n        filterPlaceholder={isAllowList ? lang('AlwaysAllowPlaceholder') : lang('NeverAllowPlaceholder')}\n        searchInputId=\"new-group-picker-search\"\n        isSearchable\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onFilterChange={setSearchQuery}\n      />\n\n      <FloatingActionButton\n        isShown={isSubmitShown}\n        onClick={handleSubmit}\n        ariaLabel={isAllowList ? lang('AlwaysAllow') : lang('NeverAllow')}\n      >\n        <i className=\"icon icon-check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nfunction getCurrentPrivacySettings(global: GlobalState, screen: SettingsScreens) {\n  const { privacy } = global.settings;\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return privacy.phoneNumber;\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return privacy.lastSeen;\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return privacy.profilePhoto;\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return privacy.phoneCall;\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return privacy.phoneP2P;\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return privacy.forwards;\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return privacy.voiceMessages;\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n      return privacy.chatInvite;\n  }\n\n  return undefined;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    return {\n      currentUserId: global.currentUserId,\n      settings: getCurrentPrivacySettings(global, screen),\n    };\n  },\n)(SettingsPrivacyVisibilityExceptionList));\n","import React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiAvailableReaction } from '../../../api/types';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ReactionStaticEmoji from '../../common/ReactionStaticEmoji';\nimport RadioGroup from '../../ui/RadioGroup';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  availableReactions?: ApiAvailableReaction[];\n  selectedReaction?: string;\n};\n\nconst SettingsQuickReaction: FC<OwnProps & StateProps> = ({\n  isActive,\n  availableReactions,\n  selectedReaction,\n  onReset,\n}) => {\n  const { setDefaultReaction } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const options = useMemo(() => (\n    (availableReactions || []).filter((availableReaction) => !availableReaction.isInactive)\n      .map((availableReaction) => ({\n        label: (\n          <>\n            <ReactionStaticEmoji reaction={availableReaction.reaction} availableReactions={availableReactions} />\n            {availableReaction.title}\n          </>\n        ),\n        value: availableReaction.reaction.emoticon,\n      }))\n  ), [availableReactions]);\n\n  const handleChange = useCallback((reaction: string) => {\n    setDefaultReaction({\n      reaction: { emoticon: reaction },\n    });\n  }, [setDefaultReaction]);\n\n  return (\n    <div className=\"settings-content settings-item custom-scroll settings-quick-reaction\">\n      <RadioGroup\n        name=\"quick-reaction-settings\"\n        options={options}\n        selected={selectedReaction}\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global) => {\n    const { availableReactions, config } = global;\n\n    return {\n      availableReactions,\n      selectedReaction: config?.defaultReaction,\n    };\n  },\n)(SettingsQuickReaction));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport useLang from '../../../../hooks/useLang';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\n\nimport Button from '../../../ui/Button';\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={STICKER_SIZE_PASSCODE}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description\" dir=\"auto\">\n          When you set up an additional passcode, a lock icon will appear on the chats page.\n          Tap it to lock and unlock your Telegram Web A.\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Note: if you forget your local passcode, you&apos;ll need to log out of Telegram Web A and log in again.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={onStart}>{lang('EnablePasscode')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport useLang from '../../../../hooks/useLang';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport ListItem from '../../../ui/ListItem';\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Local passcode is enabled.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeChangePasscodeCurrent)}\n        >\n          {lang('Passcode.Change')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeTurnOff)}\n        >\n          {lang('Passcode.TurnOff')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport useLang from '../../../../hooks/useLang';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\n\nimport Button from '../../../ui/Button';\nimport AnimatedIcon from '../../../common/AnimatedIcon';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\nconst SettingsPasscodeCongratulations: FC<OwnProps> = ({\n  isActive, onReset,\n}) => {\n  const lang = useLang();\n\n  const fullReset = useCallback(() => {\n    onReset(true);\n  }, [onReset]);\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_PASSCODE}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Congratulations!\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Now you can lock the app with a passcode so that others can&apos;t open it.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={fullReset}>{lang('Back')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport { SettingsScreens } from '../../../../types';\n\nimport useLang from '../../../../hooks/useLang';\nimport { decryptSession } from '../../../../util/passcode';\n\nimport SettingsPasscodeStart from './SettingsPasscodeStart';\nimport SettingsPasscodeForm from '../SettingsPasswordForm';\nimport SettingsPasscodeEnabled from './SettingsPasscodeEnabled';\nimport SettingsPasscodeCongratulations from './SettingsPasscodeCongratulations';\n\nexport type OwnProps = {\n  passcode: string;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  isActive?: boolean;\n  onSetPasscode: (passcode: string) => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['passcode'];\n\nconst SettingsPasscode: FC<OwnProps & StateProps> = ({\n  passcode,\n  currentScreen,\n  shownScreen,\n  error,\n  isActive,\n  isLoading,\n  onScreenSelect,\n  onSetPasscode,\n  onReset,\n}) => {\n  const {\n    setPasscode,\n    clearPasscode,\n    setPasscodeError,\n    clearPasscodeError,\n  } = getActions();\n\n  const lang = useLang();\n\n  const handleStartWizard = useCallback(() => {\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeNewPasscode);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeNewPasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    setPasscode({ passcode });\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeCongratulations);\n  }, [onScreenSelect, onSetPasscode, passcode, setPasscode]);\n\n  const handleChangePasswordCurrent = useCallback((currentPasscode: string) => {\n    onSetPasscode('');\n    decryptSession(currentPasscode).then(() => {\n      onScreenSelect(SettingsScreens.PasscodeChangePasscodeNew);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [lang, onScreenSelect, onSetPasscode, setPasscodeError]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeChangePasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleTurnOff = useCallback((currentPasscode: string) => {\n    decryptSession(currentPasscode).then(() => {\n      clearPasscode();\n      onScreenSelect(SettingsScreens.Privacy);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [clearPasscode, lang, onScreenSelect, setPasscodeError]);\n\n  switch (currentScreen) {\n    case SettingsScreens.PasscodeDisabled:\n      return (\n        <SettingsPasscodeStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscode,\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscode:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('EnterNewPasscode')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('ReEnterYourPasscode')}\n          submitLabel={lang('Continue')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeCongratulations:\n      return (\n        <SettingsPasscodeCongratulations\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeEnabled:\n      return (\n        <SettingsPasscodeEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeCurrent,\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n            SettingsScreens.PasscodeTurnOff,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeCurrent:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeNew:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('PasscodeController.ReEnterPasscode.Placeholder')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeTurnOff:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error ? lang(error) : undefined}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.passcode }),\n)(SettingsPasscode));\n","import React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { FC } from '../../lib/teact/teact';\n\nimport { STICKER_SIZE_GENERAL_SETTINGS } from '../../config';\nimport buildClassName from '../../util/buildClassName';\n\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\n\nimport ListItem from '../ui/ListItem';\nimport Button from '../ui/Button';\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetCard.scss';\n\ntype OwnProps = {\n  stickerSet?: ApiStickerSet;\n  noPlay?: boolean;\n  className?: string;\n  observeIntersection: ObserveFn;\n  onClick: (value: ApiSticker) => void;\n};\n\nconst StickerSetCard: FC<OwnProps> = ({\n  stickerSet,\n  noPlay,\n  className,\n  observeIntersection,\n  onClick,\n}) => {\n  const lang = useLang();\n\n  const firstSticker = stickerSet?.stickers?.[0];\n\n  const handleCardClick = useCallback(() => {\n    if (firstSticker) onClick(firstSticker);\n  }, [firstSticker, onClick]);\n\n  if (!stickerSet || !stickerSet.stickers) {\n    return undefined;\n  }\n\n  function renderPreview() {\n    if (!stickerSet) return undefined;\n    if (stickerSet.hasThumbnail || !firstSticker) {\n      return (\n        <Button\n          ariaLabel={stickerSet.title}\n          color=\"translucent\"\n          isRtl={lang.isRtl}\n        >\n          <StickerSetCover\n            stickerSet={stickerSet}\n            size={STICKER_SIZE_GENERAL_SETTINGS}\n            noPlay={noPlay}\n            observeIntersection={observeIntersection}\n          />\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          sticker={firstSticker}\n          size={STICKER_SIZE_GENERAL_SETTINGS}\n          title={stickerSet.title}\n          noPlay={noPlay}\n          observeIntersection={observeIntersection}\n          noContextMenu\n          isCurrentUserPremium\n          clickArg={undefined}\n        />\n      );\n    }\n  }\n\n  return (\n    <ListItem\n      narrow\n      className={buildClassName('StickerSetCard', className)}\n      inactive={!firstSticker}\n      onClick={handleCardClick}\n    >\n      {renderPreview()}\n      <div className=\"multiline-menu-item\">\n        <div className=\"title\">{stickerSet.title}</div>\n        <div className=\"subtitle\">{lang('StickerPack.StickerCount', stickerSet.count, 'i')}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(StickerSetCard);\n","import React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport { SettingsScreens } from '../../../types';\nimport type { ISettings } from '../../../types';\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiSticker,\n  ApiStickerSet,\n} from '../../../api/types';\n\nimport renderText from '../../common/helpers/renderText';\nimport { pick } from '../../../util/iteratees';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport ReactionStaticEmoji from '../../common/ReactionStaticEmoji';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport StickerSetCard from '../../common/StickerSetCard';\n\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<ISettings, (\n    'shouldSuggestStickers' | 'shouldUpdateStickerSetOrder'\n  )> & {\n    addedSetIds?: string[];\n    customEmojiSetIds?: string[];\n    stickerSetsById: Record<string, ApiStickerSet>;\n    defaultReaction?: ApiReaction;\n    availableReactions?: ApiAvailableReaction[];\n    canPlayAnimatedEmojis: boolean;\n  };\n\nconst SettingsStickers: FC<OwnProps & StateProps> = ({\n  isActive,\n  addedSetIds,\n  customEmojiSetIds,\n  stickerSetsById,\n  defaultReaction,\n  shouldSuggestStickers,\n  shouldUpdateStickerSetOrder,\n  availableReactions,\n  canPlayAnimatedEmojis,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    setSettingOption,\n    openStickerSet,\n  } = getActions();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestStickerSetOrderChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldUpdateStickerSetOrder: newValue });\n  }, [setSettingOption]);\n\n  const handleSuggestStickersChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestStickers: newValue });\n  }, [setSettingOption]);\n\n  const stickerSets = useMemo(() => (\n    addedSetIds && Object.values(pick(stickerSetsById, addedSetIds))\n  ), [addedSetIds, stickerSetsById]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <Checkbox\n          label={lang('SuggestStickers')}\n          checked={shouldSuggestStickers}\n          onCheck={handleSuggestStickersChange}\n        />\n        <ListItem\n          className=\"mt-4\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.CustomEmoji)}\n          icon=\"smile\"\n        >\n          {lang('StickersList.EmojiItem')}\n          {customEmojiSetIds && <span className=\"settings-item__current-value\">{customEmojiSetIds.length}</span>}\n        </ListItem>\n        {defaultReaction && (\n          <ListItem\n            className=\"SettingsDefaultReaction\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.QuickReaction)}\n          >\n            <ReactionStaticEmoji\n              reaction={defaultReaction}\n              className=\"current-default-reaction\"\n              size={DEFAULT_REACTION_SIZE}\n              availableReactions={availableReactions}\n            />\n            <div className=\"title\">{lang('DoubleTapSetting')}</div>\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('InstalledStickers.DynamicPackOrder')}\n        </h4>\n        <Checkbox\n          label={lang('InstalledStickers.DynamicPackOrder')}\n          checked={shouldUpdateStickerSetOrder}\n          onCheck={handleSuggestStickerSetOrderChange}\n        />\n        <p className=\"settings-item-description mt-3\" dir=\"auto\">\n          {lang('InstalledStickers.DynamicPackOrderInfo')}\n        </p>\n      </div>\n      {stickerSets && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('ChooseStickerMyStickerSets')}\n          </h4>\n          <div ref={stickerSettingsRef}>\n            {stickerSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('StickersBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestStickers',\n        'shouldUpdateStickerSetOrder',\n      ]),\n      addedSetIds: global.stickers.added.setIds,\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      defaultReaction: global.config?.defaultReaction,\n      availableReactions: global.availableReactions,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsStickers));\n","import React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { ISettings } from '../../../types';\n\nimport renderText from '../../common/helpers/renderText';\nimport { pick } from '../../../util/iteratees';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\n\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, (\n  'shouldSuggestCustomEmoji'\n)> & {\n  customEmojiSetIds?: string[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst SettingsCustomEmoji: FC<OwnProps & StateProps> = ({\n  isActive,\n  customEmojiSetIds,\n  stickerSetsById,\n  shouldSuggestCustomEmoji,\n  canPlayAnimatedEmojis,\n  onReset,\n}) => {\n  const { openStickerSet, setSettingOption } = getActions();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestCustomEmojiChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestCustomEmoji: newValue });\n  }, [setSettingOption]);\n\n  const customEmojiSets = useMemo(() => (\n    customEmojiSetIds && Object.values(pick(stickerSetsById, customEmojiSetIds))\n  ), [customEmojiSetIds, stickerSetsById]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {customEmojiSets && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('SuggestAnimatedEmoji')}\n            checked={shouldSuggestCustomEmoji}\n            onCheck={handleSuggestCustomEmojiChange}\n          />\n          <div className=\"mt-4\" ref={stickerSettingsRef}>\n            {customEmojiSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('EmojiBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestCustomEmoji',\n      ]),\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsCustomEmoji));\n","import React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ISettings } from '../../../types';\nimport type { IRadioOption } from '../../ui/CheckboxGroup';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../../config';\nimport { partition, unique } from '../../../util/iteratees';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InputText from '../../ui/InputText';\n\nimport styles from './SettingsDoNotTranslate.module.scss';\n\n// https://fasttext.cc/docs/en/language-identification.html\nconst LOCAL_SUPPORTED_DETECTION_LANGUAGES = [\n  'af', 'als', 'am', 'an', 'ar', 'arz', 'as', 'ast', 'av', 'az',\n  'azb', 'ba', 'bar', 'bcl', 'be', 'bg', 'bh', 'bn', 'bo', 'bpy',\n  'br', 'bs', 'bxr', 'ca', 'cbk', 'ce', 'ceb', 'ckb', 'co', 'cs',\n  'cv', 'cy', 'da', 'de', 'diq', 'dsb', 'dty', 'dv', 'el', 'eml',\n  'en', 'eo', 'es', 'et', 'eu', 'fa', 'fi', 'fr', 'frr', 'fy',\n  'ga', 'gd', 'gl', 'gn', 'gom', 'gu', 'gv', 'he', 'hi', 'hif',\n  'hr', 'hsb', 'ht', 'hu', 'hy', 'ia', 'id', 'ie', 'ilo', 'io',\n  'is', 'it', 'ja', 'jbo', 'jv', 'ka', 'kk', 'km', 'kn', 'ko',\n  'krc', 'ku', 'kv', 'kw', 'ky', 'la', 'lb', 'lez', 'li', 'lmo',\n  'lo', 'lrc', 'lt', 'lv', 'mai', 'mg', 'mhr', 'min', 'mk', 'ml',\n  'mn', 'mr', 'mrj', 'ms', 'mt', 'mwl', 'my', 'myv', 'mzn', 'nah',\n  'nap', 'nds', 'ne', 'new', 'nl', 'nn', 'no', 'oc', 'or', 'os',\n  'pa', 'pam', 'pfl', 'pl', 'pms', 'pnb', 'ps', 'pt', 'qu', 'rm',\n  'ro', 'ru', 'rue', 'sa', 'sah', 'sc', 'scn', 'sco', 'sd', 'sh',\n  'si', 'sk', 'sl', 'so', 'sq', 'sr', 'su', 'sv', 'sw', 'ta', 'te',\n  'tg', 'th', 'tk', 'tl', 'tr', 'tt', 'tyv', 'ug', 'uk', 'ur', 'uz',\n  'vec', 'vep', 'vi', 'vls', 'vo', 'wa', 'war', 'wuu', 'xal', 'xmf',\n  'yi', 'yo', 'yue', 'zh',\n];\n\nconst SUPPORTED_LANGUAGES = SUPPORTED_TRANSLATION_LANGUAGES.filter((lang: string) => (\n  LOCAL_SUPPORTED_DETECTION_LANGUAGES.includes(lang)\n));\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, 'language' | 'doNotTranslate'>;\n\nconst SettingsDoNotTranslate: FC<OwnProps & StateProps> = ({\n  isActive,\n  language,\n  doNotTranslate,\n  onReset,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useLang();\n  const [displayedOptions, setDisplayedOptions] = useState<IRadioOption[]>([]);\n  const [search, setSearch] = useState('');\n\n  const options: IRadioOption[] = useMemo(() => {\n    return SUPPORTED_LANGUAGES.map((langCode: string) => {\n      const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n      const translatedName = translatedNames.of(langCode)!;\n\n      const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n      const originalName = originalNames.of(langCode)!;\n\n      return {\n        langCode,\n        translatedName,\n        originalName,\n      };\n    }).map(({ langCode, translatedName, originalName }) => ({\n      label: translatedName,\n      subLabel: originalName,\n      value: langCode,\n    }));\n  }, [language]);\n\n  useEffect(() => {\n    if (!isActive) setSearch('');\n  }, [isActive]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (prevIsActive === isActive) return;\n    if (isActive && displayedOptions.length) return;\n\n    const current = options.find((option) => option.value === language);\n    const otherLanguages = options.filter((option) => option.value !== language);\n\n    const [selected, unselected] = partition(otherLanguages, (option) => doNotTranslate.includes(option.value));\n\n    setDisplayedOptions([current!, ...selected, ...unselected]);\n  }, [isActive, doNotTranslate, displayedOptions.length, language, options]);\n\n  const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value, checked } = event.currentTarget;\n    let newDoNotTranslate: string[];\n    if (checked) {\n      newDoNotTranslate = unique([...doNotTranslate, value]);\n    } else {\n      newDoNotTranslate = doNotTranslate.filter((v) => v !== value);\n    }\n\n    setSettingOption({\n      doNotTranslate: newDoNotTranslate,\n    });\n  }, [doNotTranslate, setSettingOption]);\n\n  const handleSearch = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value);\n  }, []);\n\n  const filteredDisplayedOptions = useMemo(() => {\n    if (!search.trim()) {\n      return displayedOptions;\n    }\n\n    return displayedOptions.filter((option) => (\n      option.label.toLowerCase().includes(search.toLowerCase())\n      || option.subLabel?.toLowerCase().includes(search.toLowerCase())\n      || option.value.toLowerCase().includes(search.toLowerCase())\n    ));\n  }, [displayedOptions, search]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'settings-content custom-scroll')}>\n      <div className={buildClassName(styles.item, 'settings-item')}>\n        <InputText\n          key=\"search\"\n          value={search}\n          onChange={handleSearch}\n          placeholder={lang('Search')}\n          teactExperimentControlled\n        />\n        <div className={buildClassName(styles.languages, 'radio-group custom-scroll')}>\n          {filteredDisplayedOptions.map((option) => (\n            <Checkbox\n              className={styles.checkbox}\n              label={option.label}\n              subLabel={option.subLabel}\n              checked={doNotTranslate.includes(option.value)}\n              value={option.value}\n              key={option.value}\n              onChange={handleChange}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      language, doNotTranslate,\n    } = global.settings.byKey;\n\n    return {\n      language,\n      doNotTranslate,\n    };\n  },\n)(SettingsDoNotTranslate));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"obOZMv8VwZgTltdIBhFA\",\"item\":\"lDWs17bpqtGWDX0EJr0y\",\"checkbox\":\"BShBwPkgjleuDsjyfnNk\",\"languages\":\"whcbPSSJLGdGCaY66qfR\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { FC } from '../../../lib/teact/teact';\n\nimport { getActions, withGlobal } from '../../../global';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport ListItem from '../../ui/ListItem';\nimport Checkbox from '../../ui/Checkbox';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  shouldShowLoginCodeInChatList?: boolean;\n};\n\nconst SettingsExperimental: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  shouldShowLoginCodeInChatList,\n}) => {\n  const { requestConfetti, setSettingOption } = getActions();\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          tgsUrl={LOCAL_TGS_URLS.Experimental}\n          size={200}\n          className=\"experimental-duck\"\n          nonInteractive\n          noLoop={false}\n        />\n        <p className=\"settings-item-description pt-3\" dir=\"auto\">{lang('lng_settings_experimental_about')}</p>\n      </div>\n      <div className=\"settings-item\">\n        <ListItem\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => requestConfetti()}\n          icon=\"animations\"\n        >\n          <div className=\"title\">Launch some confetti!</div>\n        </ListItem>\n\n        <Checkbox\n          label=\"Show login code in chat list\"\n          checked={Boolean(shouldShowLoginCodeInChatList)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldShowLoginCodeInChatList: !shouldShowLoginCodeInChatList })}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      shouldShowLoginCodeInChatList: global.settings.byKey.shouldShowLoginCodeInChatList,\n    };\n  },\n)(SettingsExperimental));\n","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { AnimationLevel, PerformanceType, PerformanceTypeKey } from '../../../types';\n\nimport { IS_BACKDROP_BLUR_SUPPORTED } from '../../../util/windowEnvironment';\nimport {\n  ANIMATION_LEVEL_CUSTOM, ANIMATION_LEVEL_MAX, ANIMATION_LEVEL_MED, ANIMATION_LEVEL_MIN,\n} from '../../../config';\nimport {\n  INITIAL_PERFORMANCE_STATE_MAX,\n  INITIAL_PERFORMANCE_STATE_MID,\n  INITIAL_PERFORMANCE_STATE_MIN,\n} from '../../../global/initialState';\nimport { selectPerformanceSettings } from '../../../global/selectors';\nimport { areDeepEqual } from '../../../util/areDeepEqual';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport RangeSlider from '../../ui/RangeSlider';\nimport Checkbox from '../../ui/Checkbox';\n\ntype PerformanceSection = [string, PerformanceOption[]];\ntype PerformanceOption = {\n  key: PerformanceTypeKey;\n  label: string;\n  disabled?: boolean;\n};\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  performanceSettings: PerformanceType;\n};\n\nconst ANIMATION_LEVEL_OPTIONS = [\n  'Power Saving',\n  'Nice and Fast',\n  'Lots of Stuff',\n];\n\nconst ANIMATION_LEVEL_CUSTOM_OPTIONS = [\n  'Power Saving',\n  'Custom',\n  'Lots of Stuff',\n];\n\nconst PERFORMANCE_OPTIONS: PerformanceSection[] = [\n  ['LiteMode.Key.animations.Title', [\n    { key: 'pageTransitions', label: 'Page Transitions' },\n    { key: 'messageSendingAnimations', label: 'Message Sending Animation' },\n    { key: 'mediaViewerAnimations', label: 'Media Viewer Animations' },\n    { key: 'messageComposerAnimations', label: 'Message Composer Animations' },\n    { key: 'contextMenuAnimations', label: 'Context Menu Animation' },\n    { key: 'contextMenuBlur', label: 'Context Menu Blur', disabled: !IS_BACKDROP_BLUR_SUPPORTED },\n    { key: 'rightColumnAnimations', label: 'Right Column Animation' },\n  ]],\n  ['Stickers and Emoji', [\n    { key: 'animatedEmoji', label: 'Allow Animated Emoji' },\n    { key: 'loopAnimatedStickers', label: 'Loop Animated Stickers' },\n    { key: 'reactionEffects', label: 'Reaction Effects' },\n    { key: 'stickerEffects', label: 'Full-Screen Sticker and Emoji Effects' },\n  ]],\n  ['AutoplayMedia', [\n    { key: 'autoplayGifs', label: 'AutoplayGIF' },\n    { key: 'autoplayVideos', label: 'AutoplayVideo' },\n  ]],\n];\n\nfunction SettingsPerformance({\n  isActive,\n  performanceSettings,\n  onReset,\n}: OwnProps & StateProps) {\n  const {\n    setSettingOption,\n    updatePerformanceSettings,\n  } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const lang = useLang();\n  const [sectionExpandedStates, setSectionExpandedStates] = useState<Record<number, boolean>>({});\n\n  const sectionCheckedStates = useMemo(() => {\n    return PERFORMANCE_OPTIONS.reduce((acc, [, options], index) => {\n      acc[index] = options.every(({ key }) => performanceSettings[key]);\n\n      return acc;\n    }, {} as Record<number, boolean>);\n  }, [performanceSettings]);\n\n  const animationLevelState = useMemo(() => {\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MAX)) {\n      return ANIMATION_LEVEL_MAX;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MIN)) {\n      return ANIMATION_LEVEL_MIN;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MID)) {\n      return ANIMATION_LEVEL_MED;\n    }\n\n    return ANIMATION_LEVEL_CUSTOM;\n  }, [performanceSettings]);\n  const animationLevelOptions = animationLevelState === ANIMATION_LEVEL_CUSTOM\n    ? ANIMATION_LEVEL_CUSTOM_OPTIONS\n    : ANIMATION_LEVEL_OPTIONS;\n\n  const handleToggleSection = useCallback((e: React.MouseEvent, index?: string) => {\n    e.preventDefault();\n    const sectionIndex = Number(index);\n\n    setSectionExpandedStates((prev) => ({\n      ...prev,\n      [sectionIndex]: !prev[sectionIndex],\n    }));\n  }, []);\n\n  const handleAnimationLevelChange = useCallback((newLevel: number) => {\n    const performance = newLevel === ANIMATION_LEVEL_MIN\n      ? INITIAL_PERFORMANCE_STATE_MIN\n      : (newLevel === ANIMATION_LEVEL_MED ? INITIAL_PERFORMANCE_STATE_MID : INITIAL_PERFORMANCE_STATE_MAX);\n\n    setSettingOption({ animationLevel: newLevel as AnimationLevel });\n    updatePerformanceSettings(performance);\n  }, [setSettingOption]);\n\n  const handlePropertyGroupChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n    const perfomanceSection = PERFORMANCE_OPTIONS.find(([sectionName]) => sectionName === name);\n    if (!perfomanceSection) {\n      return;\n    }\n\n    const newSettings = perfomanceSection[1].reduce((acc, { key }) => {\n      acc[key] = checked;\n      return acc;\n    }, {} as Partial<PerformanceType>);\n\n    updatePerformanceSettings(newSettings);\n  }, []);\n\n  const handlePropertyChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n\n    updatePerformanceSettings({ [name as PerformanceTypeKey]: checked });\n  }, []);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Animation Level\n        </h4>\n        <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Choose the desired animations amount.\n        </p>\n\n        <RangeSlider\n          options={animationLevelOptions}\n          value={animationLevelState === ANIMATION_LEVEL_CUSTOM ? ANIMATION_LEVEL_MED : animationLevelState}\n          onChange={handleAnimationLevelChange}\n        />\n      </div>\n\n      <div className=\"settings-item-simple settings-item__with-shifted-dropdown\">\n        <h3 className=\"settings-item-header\" dir=\"auto\">Resource-Intensive Processes</h3>\n\n        {PERFORMANCE_OPTIONS.map(([sectionName, options], index) => {\n          return (\n            <div\n              key={sectionName}\n              className=\"settings-dropdown-section\"\n            >\n              <div className=\"ListItem no-selection with-checkbox\">\n                <Checkbox\n                  name={sectionName}\n                  value={index.toString()}\n                  checked={sectionCheckedStates[index]}\n                  label={lang(sectionName)}\n                  rightIcon={sectionExpandedStates[index] ? 'up' : 'down'}\n                  onChange={handlePropertyGroupChange}\n                  onClickLabel={handleToggleSection}\n                />\n              </div>\n              {Boolean(sectionExpandedStates[index]) && (\n                <div className=\"DropdownList DropdownList--open\">\n                  {options.map(({ key, label, disabled }) => (\n                    <Checkbox\n                      key={key}\n                      name={key}\n                      checked={performanceSettings[key]}\n                      label={lang(label)}\n                      disabled={disabled}\n                      onChange={handlePropertyChange}\n                    />\n                  ))}\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    performanceSettings: selectPerformanceSettings(global),\n  };\n})(SettingsPerformance));\n","import React, { memo, useState } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport { SettingsScreens } from '../../../types';\nimport type { FolderEditDispatch, FoldersState } from '../../../hooks/reducers/useFoldersReducer';\n\nimport { LAYERS_ANIMATION_NAME } from '../../../util/windowEnvironment';\nimport { selectTabState } from '../../../global/selectors';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useTwoFaReducer from '../../../hooks/reducers/useTwoFaReducer';\n\nimport Transition from '../../ui/Transition';\nimport SettingsHeader from './SettingsHeader';\nimport SettingsMain from './SettingsMain';\nimport SettingsEditProfile from './SettingsEditProfile';\nimport SettingsDataStorage from './SettingsDataStorage';\nimport SettingsFolders from './folders/SettingsFolders';\nimport SettingsGeneral from './SettingsGeneral';\nimport SettingsGeneralBackground from './SettingsGeneralBackground';\nimport SettingsGeneralBackgroundColor from './SettingsGeneralBackgroundColor';\nimport SettingsNotifications from './SettingsNotifications';\nimport SettingsPrivacy from './SettingsPrivacy';\nimport SettingsLanguage from './SettingsLanguage';\nimport SettingsPrivacyVisibility from './SettingsPrivacyVisibility';\nimport SettingsActiveSessions from './SettingsActiveSessions';\nimport SettingsActiveWebsites from './SettingsActiveWebsites';\nimport SettingsPrivacyBlockedUsers from './SettingsPrivacyBlockedUsers';\nimport SettingsTwoFa from './twoFa/SettingsTwoFa';\nimport SettingsPrivacyVisibilityExceptionList from './SettingsPrivacyVisibilityExceptionList';\nimport SettingsQuickReaction from './SettingsQuickReaction';\nimport SettingsPasscode from './passcode/SettingsPasscode';\nimport SettingsStickers from './SettingsStickers';\nimport SettingsCustomEmoji from './SettingsCustomEmoji';\nimport SettingsDoNotTranslate from './SettingsDoNotTranslate';\nimport SettingsExperimental from './SettingsExperimental';\nimport SettingsPerformance from './SettingsPerformance';\n\nimport './Settings.scss';\n\nconst TRANSITION_RENDER_COUNT = Object.keys(SettingsScreens).length / 2;\nconst TRANSITION_DURATION = 200;\n\nconst TWO_FA_SCREENS = [\n  SettingsScreens.TwoFaDisabled,\n  SettingsScreens.TwoFaNewPassword,\n  SettingsScreens.TwoFaNewPasswordConfirm,\n  SettingsScreens.TwoFaNewPasswordHint,\n  SettingsScreens.TwoFaNewPasswordEmail,\n  SettingsScreens.TwoFaNewPasswordEmailCode,\n  SettingsScreens.TwoFaCongratulations,\n  SettingsScreens.TwoFaEnabled,\n  SettingsScreens.TwoFaChangePasswordCurrent,\n  SettingsScreens.TwoFaChangePasswordNew,\n  SettingsScreens.TwoFaChangePasswordConfirm,\n  SettingsScreens.TwoFaChangePasswordHint,\n  SettingsScreens.TwoFaTurnOff,\n  SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n  SettingsScreens.TwoFaRecoveryEmail,\n  SettingsScreens.TwoFaRecoveryEmailCode,\n];\n\nconst PASSCODE_SCREENS = [\n  SettingsScreens.PasscodeDisabled,\n  SettingsScreens.PasscodeEnabled,\n];\n\nconst FOLDERS_SCREENS = [\n  SettingsScreens.Folders,\n  SettingsScreens.FoldersCreateFolder,\n  SettingsScreens.FoldersEditFolder,\n  SettingsScreens.FoldersEditFolderFromChatList,\n  SettingsScreens.FoldersEditFolderInvites,\n  SettingsScreens.FoldersIncludedChats,\n  SettingsScreens.FoldersIncludedChatsFromChatList,\n  SettingsScreens.FoldersExcludedChats,\n  SettingsScreens.FoldersExcludedChatsFromChatList,\n  SettingsScreens.FoldersShare,\n];\n\nconst PRIVACY_SCREENS = [\n  SettingsScreens.PrivacyBlockedUsers,\n  SettingsScreens.ActiveWebsites,\n];\n\nconst PRIVACY_PHONE_NUMBER_SCREENS = [\n  SettingsScreens.PrivacyPhoneNumberAllowedContacts,\n  SettingsScreens.PrivacyPhoneNumberDeniedContacts,\n];\n\nconst PRIVACY_LAST_SEEN_PHONE_SCREENS = [\n  SettingsScreens.PrivacyLastSeenAllowedContacts,\n  SettingsScreens.PrivacyLastSeenDeniedContacts,\n];\n\nconst PRIVACY_PROFILE_PHOTO_SCREENS = [\n  SettingsScreens.PrivacyProfilePhotoAllowedContacts,\n  SettingsScreens.PrivacyProfilePhotoDeniedContacts,\n];\n\nconst PRIVACY_PHONE_CALL_SCREENS = [\n  SettingsScreens.PrivacyPhoneCallAllowedContacts,\n  SettingsScreens.PrivacyPhoneCallDeniedContacts,\n];\n\nconst PRIVACY_PHONE_P2P_SCREENS = [\n  SettingsScreens.PrivacyPhoneP2PAllowedContacts,\n  SettingsScreens.PrivacyPhoneP2PDeniedContacts,\n];\n\nconst PRIVACY_FORWARDING_SCREENS = [\n  SettingsScreens.PrivacyForwardingAllowedContacts,\n  SettingsScreens.PrivacyForwardingDeniedContacts,\n];\n\nconst PRIVACY_VOICE_MESSAGES_SCREENS = [\n  SettingsScreens.PrivacyVoiceMessagesAllowedContacts,\n  SettingsScreens.PrivacyVoiceMessagesDeniedContacts,\n];\n\nconst PRIVACY_GROUP_CHATS_SCREENS = [\n  SettingsScreens.PrivacyGroupChatsAllowedContacts,\n  SettingsScreens.PrivacyGroupChatsDeniedContacts,\n];\n\nexport type OwnProps = {\n  isActive: boolean;\n  currentScreen: SettingsScreens;\n  foldersState: FoldersState;\n  foldersDispatch: FolderEditDispatch;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  shouldSkipTransition?: boolean;\n  onReset: (forceReturnToChatList?: true | Event) => void;\n};\n\nconst Settings: FC<OwnProps> = ({\n  isActive,\n  currentScreen,\n  foldersState,\n  foldersDispatch,\n  onScreenSelect,\n  onReset,\n  shouldSkipTransition,\n}) => {\n  const { closeShareChatFolderModal } = getActions();\n  const [twoFaState, twoFaDispatch] = useTwoFaReducer();\n  const [privacyPasscode, setPrivacyPasscode] = useState<string>('');\n\n  const handleReset = useLastCallback((forceReturnToChatList?: true | Event) => {\n    const isFromSettings = selectTabState(getGlobal()).shareFolderScreen?.isFromSettings;\n\n    if (currentScreen === SettingsScreens.FoldersShare) {\n      closeShareChatFolderModal();\n    }\n\n    if (forceReturnToChatList === true || (isFromSettings !== undefined && !isFromSettings)) {\n      onReset(true);\n      return;\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        foldersDispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (foldersState.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  });\n\n  function renderCurrentSectionContent(isScreenActive: boolean, screen: SettingsScreens) {\n    const privacyAllowScreens: Record<number, boolean> = {\n      [SettingsScreens.PrivacyPhoneNumber]: PRIVACY_PHONE_NUMBER_SCREENS.includes(screen),\n      [SettingsScreens.PrivacyLastSeen]: PRIVACY_LAST_SEEN_PHONE_SCREENS.includes(screen),\n      [SettingsScreens.PrivacyProfilePhoto]: PRIVACY_PROFILE_PHOTO_SCREENS.includes(screen),\n      [SettingsScreens.PrivacyPhoneCall]: PRIVACY_PHONE_CALL_SCREENS.includes(screen),\n      [SettingsScreens.PrivacyPhoneP2P]: PRIVACY_PHONE_P2P_SCREENS.includes(screen),\n      [SettingsScreens.PrivacyForwarding]: PRIVACY_FORWARDING_SCREENS.includes(screen),\n      [SettingsScreens.PrivacyVoiceMessages]: PRIVACY_VOICE_MESSAGES_SCREENS.includes(screen),\n      [SettingsScreens.PrivacyGroupChats]: PRIVACY_GROUP_CHATS_SCREENS.includes(screen),\n    };\n\n    const isTwoFaScreen = TWO_FA_SCREENS.includes(screen);\n    const isPasscodeScreen = PASSCODE_SCREENS.includes(screen);\n    const isFoldersScreen = FOLDERS_SCREENS.includes(screen);\n    const isPrivacyScreen = PRIVACY_SCREENS.includes(screen)\n      || isTwoFaScreen\n      || isPasscodeScreen\n      || Object.keys(privacyAllowScreens).includes(screen.toString())\n      || Object.values(privacyAllowScreens).find((key) => key === true);\n\n    switch (currentScreen) {\n      case SettingsScreens.Main:\n        return (\n          <SettingsMain onScreenSelect={onScreenSelect} isActive={isActive} onReset={handleReset} />\n        );\n      case SettingsScreens.EditProfile:\n        return (\n          <SettingsEditProfile\n            isActive={isActive && isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.General:\n        return (\n          <SettingsGeneral\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive\n              || screen === SettingsScreens.GeneralChatBackgroundColor\n              || screen === SettingsScreens.GeneralChatBackground\n              || screen === SettingsScreens.QuickReaction\n              || screen === SettingsScreens.CustomEmoji\n              || isPrivacyScreen || isFoldersScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.QuickReaction:\n        return (\n          <SettingsQuickReaction isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.CustomEmoji:\n        return (\n          <SettingsCustomEmoji isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Notifications:\n        return (\n          <SettingsNotifications isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.DataStorage:\n        return (\n          <SettingsDataStorage isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Privacy:\n        return (\n          <SettingsPrivacy\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || isPrivacyScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.Language:\n        return (\n          <SettingsLanguage\n            isActive={isScreenActive || screen === SettingsScreens.DoNotTranslate}\n            onReset={handleReset}\n            onScreenSelect={onScreenSelect}\n          />\n        );\n      case SettingsScreens.DoNotTranslate:\n        return (\n          <SettingsDoNotTranslate isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Stickers:\n        return (\n          <SettingsStickers isActive={isScreenActive} onReset={handleReset} onScreenSelect={onScreenSelect} />\n        );\n      case SettingsScreens.Experimental:\n        return (\n          <SettingsExperimental isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.GeneralChatBackground:\n        return (\n          <SettingsGeneralBackground\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || screen === SettingsScreens.GeneralChatBackgroundColor}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return (\n          <SettingsGeneralBackgroundColor\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveSessions:\n        return (\n          <SettingsActiveSessions\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveWebsites:\n        return (\n          <SettingsActiveWebsites\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyBlockedUsers:\n        return (\n          <SettingsPrivacyBlockedUsers\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyPhoneNumber:\n      case SettingsScreens.PrivacyLastSeen:\n      case SettingsScreens.PrivacyProfilePhoto:\n      case SettingsScreens.PrivacyPhoneCall:\n      case SettingsScreens.PrivacyPhoneP2P:\n      case SettingsScreens.PrivacyForwarding:\n      case SettingsScreens.PrivacyVoiceMessages:\n      case SettingsScreens.PrivacyGroupChats:\n        return (\n          <SettingsPrivacyVisibility\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            isAllowList\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.Folders:\n      case SettingsScreens.FoldersCreateFolder:\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n      case SettingsScreens.FoldersShare:\n        return (\n          <SettingsFolders\n            currentScreen={currentScreen}\n            shownScreen={screen}\n            state={foldersState}\n            dispatch={foldersDispatch}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaCongratulations:\n      case SettingsScreens.TwoFaEnabled:\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n      case SettingsScreens.TwoFaChangePasswordHint:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      case SettingsScreens.TwoFaRecoveryEmail:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return (\n          <SettingsTwoFa\n            currentScreen={currentScreen}\n            state={twoFaState}\n            dispatch={twoFaDispatch}\n            shownScreen={screen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeTurnOff:\n        return (\n          <SettingsPasscode\n            currentScreen={currentScreen}\n            passcode={privacyPasscode}\n            onSetPasscode={setPrivacyPasscode}\n            shownScreen={screen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.Performance:\n        return (\n          <SettingsPerformance\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      default:\n        return undefined;\n    }\n  }\n\n  function renderCurrentSection(isScreenActive: boolean, isFrom: boolean, currentKey: SettingsScreens) {\n    return (\n      <>\n        <SettingsHeader\n          currentScreen={currentScreen}\n          onReset={handleReset}\n          onScreenSelect={onScreenSelect}\n          editedFolderId={foldersState.folderId}\n        />\n        {renderCurrentSectionContent(isScreenActive, currentKey)}\n      </>\n    );\n  }\n\n  return (\n    <Transition\n      id=\"Settings\"\n      name={shouldSkipTransition ? 'none' : LAYERS_ANIMATION_NAME}\n      activeKey={currentScreen}\n      renderCount={TRANSITION_RENDER_COUNT}\n      shouldWrap\n    >\n      {renderCurrentSection}\n    </Transition>\n  );\n};\n\nexport default memo(Settings);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useCallback, useMemo, memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiUserStatus } from '../../../api/types';\n\nimport { filterUsersByName, sortUserIds } from '../../../global/helpers';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  filter: string;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  contactIds?: string[];\n};\n\nconst ContactList: FC<OwnProps & StateProps> = ({\n  isActive,\n  filter,\n  usersById,\n  userStatusesById,\n  contactIds,\n  onReset,\n}) => {\n  const {\n    openChat,\n    openNewContactDialog,\n  } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n  }, [openChat]);\n\n  const listIds = useMemo(() => {\n    if (!contactIds) {\n      return undefined;\n    }\n\n    const filteredIds = filterUsersByName(contactIds, usersById, filter);\n\n    return sortUserIds(filteredIds, usersById, userStatusesById);\n  }, [contactIds, filter, usersById, userStatusesById]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, listIds, Boolean(filter));\n\n  return (\n    <InfiniteScroll items={viewportIds} onLoadMore={getMore} className=\"chat-list custom-scroll\">\n      {viewportIds?.length ? (\n        viewportIds.map((id) => (\n          <ListItem\n            key={id}\n            className=\"chat-item-clickable\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(id)}\n            ripple={!isMobile}\n          >\n            <PrivateChatInfo userId={id} forceShowSelf avatarSize=\"large\" />\n          </ListItem>\n        ))\n      ) : viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\" key=\"no-results\" dir=\"auto\">\n          {filter.length ? 'No contacts matched your search.' : 'Contact list is empty.'}\n        </p>\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n      <FloatingActionButton\n        key=\"create-new-contact\"\n        isShown\n        onClick={openNewContactDialog}\n        ariaLabel={lang('CreateNewContact')}\n      >\n        <i className=\"icon icon-add-user-filled\" />\n      </FloatingActionButton>\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: contactIds } = global.contactList || {};\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n\n    return {\n      usersById,\n      userStatusesById,\n      contactIds,\n    };\n  },\n)(ContactList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useCallback, useMemo, memo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport { filterUsersByName, isUserBot, sortChatIds } from '../../../global/helpers';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport Picker from '../../common/Picker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport Button from '../../ui/Button';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  selectedMemberIds: string[];\n  onSelectedMemberIdsChange: (ids: string[]) => void;\n  onNextStep: () => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  chatsById: Record<string, ApiChat>;\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localUserIds?: string[];\n  globalUserIds?: string[];\n};\n\nconst NewChatStep1: FC<OwnProps & StateProps> = ({\n  isChannel,\n  isActive,\n  selectedMemberIds,\n  onSelectedMemberIdsChange,\n  onNextStep,\n  onReset,\n  chatsById,\n  localContactIds,\n  searchQuery,\n  isSearching,\n  localUserIds,\n  globalUserIds,\n}) => {\n  const {\n    setGlobalSearchQuery,\n  } = getActions();\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleFilterChange = useCallback((query: string) => {\n    setGlobalSearchQuery({ query });\n  }, []);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const foundContactIds = localContactIds ? filterUsersByName(localContactIds, usersById, searchQuery) : [];\n\n    return sortChatIds(\n      unique([\n        ...foundContactIds,\n        ...(localUserIds || []),\n        ...(globalUserIds || []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n        if (!user) {\n          return true;\n        }\n\n        return !user.isSelf && (user.canBeInvitedToGroup || !isUserBot(user));\n      }),\n      chatsById,\n      false,\n      selectedMemberIds,\n    );\n  }, [localContactIds, chatsById, searchQuery, localUserIds, globalUserIds, selectedMemberIds]);\n\n  const handleNextStep = useCallback(() => {\n    setGlobalSearchQuery({ query: '' });\n    onNextStep();\n  }, [onNextStep]);\n\n  return (\n    <div className=\"NewChat step-1\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to Chat List\"\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        <h3>{lang('GroupAddMembers')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-1\">\n        <Picker\n          itemIds={displayedIds}\n          selectedIds={selectedMemberIds}\n          filterValue={searchQuery}\n          filterPlaceholder={lang('SendMessageTo')}\n          searchInputId=\"new-group-picker-search\"\n          isLoading={isSearching}\n          isSearchable\n          onSelectedIdsChange={onSelectedMemberIdsChange}\n          onFilterChange={handleFilterChange}\n        />\n\n        <FloatingActionButton\n          isShown\n          onClick={handleNextStep}\n          ariaLabel={isChannel ? 'Continue To Channel Info' : 'Continue To Group Info'}\n        >\n          <i className=\"icon icon-arrow-right\" />\n        </FloatingActionButton>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: localContactIds } = global.contactList || {};\n    const { byId: chatsById } = global.chats;\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalResults,\n      localResults,\n    } = selectTabState(global).globalSearch;\n    const { userIds: globalUserIds } = globalResults || {};\n    const { userIds: localUserIds } = localResults || {};\n\n    return {\n      chatsById,\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus?.chats,\n      globalUserIds,\n      localUserIds,\n    };\n  },\n)(NewChatStep1));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useState, useCallback, useEffect, memo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { ChatCreationProgress } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport InputText from '../../ui/InputText';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport Spinner from '../../ui/Spinner';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  memberIds: string[];\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\ntype StateProps = {\n  creationProgress?: ChatCreationProgress;\n  creationError?: string;\n  maxGroupSize?: number;\n};\n\nconst NewChatStep2: FC<OwnProps & StateProps > = ({\n  isChannel,\n  isActive,\n  memberIds,\n  maxGroupSize,\n  creationProgress,\n  creationError,\n  onReset,\n}) => {\n  const {\n    createGroupChat,\n    createChannel,\n  } = getActions();\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const [title, setTitle] = useState('');\n  const [about, setAbout] = useState('');\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n\n  const chatTitleEmptyError = 'Chat title can\\'t be empty';\n  const channelTitleEmptyError = 'Channel title can\\'t be empty';\n  const chatTooManyUsersError = 'Sorry, creating supergroups is not yet supported';\n\n  const isLoading = creationProgress === ChatCreationProgress.InProgress;\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    const newValue = value.replace(/^\\s+/, '');\n\n    setTitle(newValue);\n\n    if (newValue !== value) {\n      e.currentTarget.value = newValue;\n    }\n  }, []);\n\n  const handleDescriptionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setAbout(e.currentTarget.value);\n  }, []);\n\n  const handleCreateGroup = useCallback(() => {\n    if (!title.length) {\n      setError(chatTitleEmptyError);\n      return;\n    }\n\n    if (maxGroupSize && memberIds.length >= maxGroupSize) {\n      setError(chatTooManyUsersError);\n      return;\n    }\n\n    createGroupChat({\n      title,\n      photo,\n      memberIds,\n    });\n  }, [title, memberIds, maxGroupSize, createGroupChat, photo]);\n\n  const handleCreateChannel = useCallback(() => {\n    if (!title.length) {\n      setError(channelTitleEmptyError);\n      return;\n    }\n\n    createChannel({\n      title,\n      about,\n      photo,\n      memberIds,\n    });\n  }, [title, createChannel, about, photo, memberIds, channelTitleEmptyError]);\n\n  useEffect(() => {\n    if (creationProgress === ChatCreationProgress.Complete) {\n      onReset(true);\n    }\n  }, [creationProgress, onReset]);\n\n  const renderedError = (creationError && lang(creationError)) || (\n    error !== chatTitleEmptyError && error !== channelTitleEmptyError\n      ? error\n      : undefined\n  );\n\n  return (\n    <div className=\"NewChat\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onReset()}\n          ariaLabel=\"Return to member selection\"\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        <h3>{lang(isChannel ? 'NewChannel' : 'NewGroup')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-2\">\n        <AvatarEditable\n          onChange={setPhoto}\n          title={lang('AddPhoto')}\n        />\n        <InputText\n          value={title}\n          onChange={handleTitleChange}\n          label={lang(isChannel ? 'EnterChannelName' : 'GroupName')}\n          error={error === chatTitleEmptyError || error === channelTitleEmptyError ? error : undefined}\n        />\n        {isChannel && (\n          <>\n            <InputText\n              value={about}\n              onChange={handleDescriptionChange}\n              label={lang('DescriptionOptionalPlaceholder')}\n            />\n            <p className=\"note\">{lang('DescriptionInfo')}</p>\n          </>\n        )}\n\n        {renderedError && (\n          <p className=\"error\">{renderedError}</p>\n        )}\n\n        {memberIds.length > 0 && (\n          <>\n            <h3 className=\"chat-members-heading\">{lang('GroupInfo.ParticipantCount', memberIds.length, 'i')}</h3>\n\n            <div className=\"chat-members-list custom-scroll\">\n              {memberIds.map((id) => (\n                <ListItem inactive className=\"chat-item-clickable\">\n                  <PrivateChatInfo userId={id} />\n                </ListItem>\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={title.length !== 0}\n        onClick={isChannel ? handleCreateChannel : handleCreateGroup}\n        disabled={isLoading}\n        ariaLabel={isChannel ? lang('ChannelIntro.CreateChannel') : 'Create Group'}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-arrow-right\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      progress: creationProgress,\n      error: creationError,\n    } = selectTabState(global).chatCreation || {};\n\n    return {\n      creationProgress,\n      creationError,\n      maxGroupSize: global.config?.maxGroupSize,\n    };\n  },\n)(NewChatStep2));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport { LeftColumnContent } from '../../../types';\n\nimport { LAYERS_ANIMATION_NAME } from '../../../util/windowEnvironment';\n\nimport Transition from '../../ui/Transition';\nimport NewChatStep1 from './NewChatStep1';\nimport NewChatStep2 from './NewChatStep2';\n\nimport './NewChat.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isChannel?: boolean;\n  content: LeftColumnContent;\n  onContentChange: (content: LeftColumnContent) => void;\n  onReset: () => void;\n};\n\nconst RENDER_COUNT = Object.keys(LeftColumnContent).length / 2;\n\nconst NewChat: FC<OwnProps> = ({\n  isActive,\n  isChannel = false,\n  content,\n  onContentChange,\n  onReset,\n}) => {\n  const [newChatMemberIds, setNewChatMemberIds] = useState<string[]>([]);\n\n  const handleNextStep = useCallback(() => {\n    onContentChange(isChannel ? LeftColumnContent.NewChannelStep2 : LeftColumnContent.NewGroupStep2);\n  }, [isChannel, onContentChange]);\n\n  return (\n    <Transition\n      id=\"NewChat\"\n      name={LAYERS_ANIMATION_NAME}\n      renderCount={RENDER_COUNT}\n      activeKey={content}\n    >\n      {(isStepActive) => {\n        switch (content) {\n          case LeftColumnContent.NewChannelStep1:\n          case LeftColumnContent.NewGroupStep1:\n            return (\n              <NewChatStep1\n                isChannel={isChannel}\n                isActive={isActive}\n                selectedMemberIds={newChatMemberIds}\n                onSelectedMemberIdsChange={setNewChatMemberIds}\n                onNextStep={handleNextStep}\n                onReset={onReset}\n              />\n            );\n          case LeftColumnContent.NewChannelStep2:\n          case LeftColumnContent.NewGroupStep2:\n            return (\n              <NewChatStep2\n                isChannel={isChannel}\n                isActive={isStepActive && isActive}\n                memberIds={newChatMemberIds}\n                onReset={onReset}\n              />\n            );\n          default:\n            return undefined;\n        }\n      }}\n    </Transition>\n  );\n};\n\nexport default memo(NewChat);\n","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","import { useMemo } from '../../../../lib/teact/teact';\nimport usePrevious from '../../../../hooks/usePrevious';\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePrevious(orderById);\n  const prevChatId = usePrevious(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gljGvMdlFlsKhrMPQ_xa\",\"title-row\":\"GrFgsvT5YSYldl56Hnzu\",\"titleRow\":\"GrFgsvT5YSYldl56Hnzu\",\"loading\":\"bYI9fzK27IbEWGTzvRGf\",\"other-column\":\"RhuR5wto63HGEeY1NdXg\",\"otherColumn\":\"RhuR5wto63HGEeY1NdXg\",\"main-column\":\"VUe4FFBCwClvaU9aiXG1\",\"mainColumn\":\"VUe4FFBCwClvaU9aiXG1\",\"unread\":\"yHnVWii5hDMte2XGiGio\",\"last-message\":\"OyHxp9apV7oixvvxGFDx\",\"lastMessage\":\"OyHxp9apV7oixvvxGFDx\",\"after-wrapper\":\"H4WbKWl7lQI8hw8ryOgF\",\"afterWrapper\":\"H4WbKWl7lQI8hw8ryOgF\",\"after\":\"DGAWy9KRwAZqof7Bt1nx\",\"title\":\"WeBppBs2KkOXzHRzQ2_W\",\"otherColumnIcon\":\"mrAD_CKmksSYVhfxgz_w\",\"other-column-title\":\"Ub9bpPYaMAw0qMouq5_O\",\"otherColumnTitle\":\"Ub9bpPYaMAw0qMouq5_O\",\"other-columns\":\"FJt1oTIn6WgfvH9iKMg3\",\"otherColumns\":\"FJt1oTIn6WgfvH9iKMg3\",\"ellipsis\":\"RL7lx7aP0Fg2LakRlxHp\",\"reverse-corner\":\"RJ0NXk_lx9qewdoGgJsT\",\"reverseCorner\":\"RJ0NXk_lx9qewdoGgJsT\",\"overwritten-width\":\"e4cE7B51DN3MrEY9WuKx\",\"overwrittenWidth\":\"e4cE7B51DN3MrEY9WuKx\"};","import React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiChat } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getOrderedTopics } from '../../global/helpers';\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openChat } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const lastMessage = renderLastMessage();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!chat.topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(chat.topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [chat.topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openChat({\n      id: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, lastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {lastMessage}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, { useLayoutEffect, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { getGlobal } from '../../../../global';\n\nimport type { LangFn } from '../../../../hooks/useLang';\nimport type {\n  ApiChat, ApiTopic, ApiMessage, ApiTypingStatus, ApiUser,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { Thread } from '../../../../global/types';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri, getMessageRoundVideo,\n  getMessageSenderName, getMessageSticker, getMessageVideo, isActionMessage, isChatChannel,\n} from '../../../../global/helpers';\nimport { renderActionMessageText } from '../../../common/helpers/renderActionMessageText';\nimport renderText from '../../../common/helpers/renderText';\nimport buildClassName from '../../../../util/buildClassName';\nimport useLang from '../../../../hooks/useLang';\nimport useEnsureMessage from '../../../../hooks/useEnsureMessage';\nimport useMedia from '../../../../hooks/useMedia';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport MessageSummary from '../../../common/MessageSummary';\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  lastMessage,\n  chatId,\n  typingStatus,\n  draft,\n  actionTargetMessage,\n  actionTargetUserIds,\n  lastMessageTopic,\n  lastMessageSender,\n  actionTargetChatId,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n}: {\n  chat?: ApiChat;\n  lastMessage?: ApiMessage;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: Thread['draft'];\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiUser | ApiChat;\n  actionTargetChatId?: string;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  useEnsureMessage(chatId, isAction ? lastMessage.replyToMessageId : undefined, actionTargetMessage);\n\n  const mediaThumbnail = lastMessage && !getMessageSticker(lastMessage)\n    ? getMessageMediaThumbDataUri(lastMessage)\n    : undefined;\n  const mediaBlobUrl = useMedia(lastMessage ? getMessageMediaHash(lastMessage, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter(Boolean);\n  }, [actionTargetUserIds]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  function renderLastMessageOrTyping() {\n    if (typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (draft?.text.length && (!chat?.isForum || isTopic)) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text,\n            entities: draft.entities,\n            isSimple: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isAction) {\n      const isChat = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId);\n\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            lang,\n            lastMessage,\n            !isChat ? lastMessageSender as ApiUser : undefined,\n            isChat ? chat : undefined,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            lastMessageTopic,\n            { isEmbedded: true },\n            undefined,\n            undefined,\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(lang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {renderSummary(lang, lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      lang={lang}\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport useLang from '../../hooks/useLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst LastMessageMeta: FC<OwnProps> = ({ message, outgoingStatus }) => {\n  const lang = useLang();\n  return (\n    <div className=\"LastMessageMeta\">\n      {outgoingStatus && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">{formatPastTimeShort(lang, message.date * 1000)}</span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport {\n  isUserId,\n  isUserBot,\n  getUserFirstOrLastName,\n  getPrivateChatUserId,\n  isChatBasicGroup,\n  isChatSuperGroup,\n  isChatChannel,\n  getChatTitle,\n} from '../../global/helpers';\nimport useLang from '../../hooks/useLang';\nimport renderText from './helpers/renderText';\n\nimport Avatar from './Avatar';\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockContact,\n  } = getActions();\n\n  const lang = useLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [deleteHistory, chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockContact({ contactId: chat.id, accessHash: chat.accessHash! });\n\n    onClose();\n  }, [deleteHistory, chat.id, chat.accessHash, blockContact, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    onClose,\n    deleteHistory,\n    deleteChatUser,\n    leaveChannel,\n    deleteChannel,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          chat={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={isPrivateChat ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wYxzEPxIxq51N_1Jvb22\",\"indicator\":\"GjqQzJt4PhbEBMchbPMg\",\"indicatorInner\":\"mem3FdA38CqQltSSxUwi\",\"selected\":\"J83lhIRMV9uenQVCQJpB\",\"active\":\"AtRfJ5hbKIb7giL05RZz\",\"bar-animation-transform-2\":\"fvooOFoNHT8RmLcjbCMZ\",\"barAnimationTransform2\":\"fvooOFoNHT8RmLcjbCMZ\",\"bar-animation-transform-1\":\"V89uAJI0AldAPq3h8iKW\",\"barAnimationTransform1\":\"V89uAJI0AldAPq3h8iKW\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { FC } from '../../../lib/teact/teact';\n\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport buildClassName from '../../../util/buildClassName';\n\nimport ShowTransition from '../../ui/ShowTransition';\nimport AnimatedCounter from '../../common/AnimatedCounter';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  forceHidden?: boolean;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic, chat, isPinned, isMuted, shouldShowOnlyMostImportant, wasTopicOpened, forceHidden,\n}) => {\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && chat?.topics ? Object.values(chat.topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [chat, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = chat.topics\n      && Object.values(chat.topics).some((acc) => acc.isMuted && acc.unreadCount);\n\n    return isMuted || (chat.topics && !hasUnmutedUnreadTopics);\n  }, [chat, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const isShown = !forceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened,\n  );\n\n  const isUnread = Boolean(unreadCount || hasUnreadMark);\n  const className = buildClassName(\n    'ChatBadge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', shouldBeMuted && 'muted')}>\n        <i className=\"icon icon-heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <i className=\"icon icon-mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement && (\n      <div className={className}>\n        <i className=\"icon icon-pinned-chat\" />\n      </div>\n    );\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, pinnedElement,\n    ].filter(Boolean);\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport { selectIsChatMuted } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectNotifySettings,\n  selectNotifyExceptions,\n  selectIsForumPanelOpen,\n} from '../../../global/selectors';\n\nimport ChatBadge from './ChatBadge';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  isForumPanelActive?: boolean;\n};\n\nconst AvatarBadge: FC<OwnProps & StateProps> = ({\n  chat,\n  isMuted,\n  isForumPanelActive,\n}) => {\n  return chat && (\n    <div className=\"avatar-badge-wrapper\">\n      <ChatBadge chat={chat} isMuted={isMuted} shouldShowOnlyMostImportant forceHidden={!isForumPanelActive} />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      isForumPanelActive: selectIsForumPanelOpen(global),\n    };\n  },\n)(AvatarBadge));\n","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type {\n  ApiChat,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiTopic,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport {\n  getMessageAction,\n  getPrivateChatUserId,\n  isUserId,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectOutgoingStatus,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport ListItem from '../../ui/ListItem';\nimport Avatar from '../../common/Avatar';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport ReportModal from '../../common/ReportModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatCallStatus from './ChatCallStatus';\nimport ChatBadge from './ChatBadge';\nimport AvatarBadge from './AvatarBadge';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop: number;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiUser | ApiChat;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiFormattedText;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastSyncTime?: number;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  observeIntersection,\n  chat,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  canScrollDown,\n  canChangeFolder,\n  lastSyncTime,\n  lastMessageTopic,\n  typingStatus,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    focusLastMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderReportModal, markRenderReportModal, unmarkRenderReportModal] = useFlag();\n\n  const { lastMessage, isForum } = chat || {};\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isForum) {\n      if (isSelectedForum) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n      } else {\n        openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n      }\n\n      return;\n    }\n\n    openChat({ id: chatId, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    markRenderReportModal();\n    openReportModal();\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && lastSyncTime && isForum && chat && chat.listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chat, chatId, isForum, isIntersecting, lastSyncTime, loadTopics]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={className}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}` : undefined}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className=\"status\">\n        <Avatar\n          chat={chat}\n          user={user}\n          userStatus={userStatus}\n          isSavedMessages={user?.isSelf}\n          lastSyncTime={lastSyncTime}\n        />\n        <AvatarBadge chatId={chatId} />\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={user || chat}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {chat.lastMessage && (\n            <LastMessageMeta\n              message={chat.lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge chat={chat} isPinned={isPinned} isMuted={isMuted} />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderReportModal && (\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          onCloseAnimationEnd={unmarkRenderReportModal}\n          chatId={chatId}\n          subject=\"peer\"\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const { senderId, replyToMessageId, isOutgoing } = chat.lastMessage || {};\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = chat.lastMessage ? getMessageAction(chat.lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = chatId === currentChatId && currentThreadId === MAIN_THREAD_ID;\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const userStatus = privateChatUserId ? selectUserStatus(global, privateChatUserId) : undefined;\n    const lastMessageTopic = chat.lastMessage && selectTopicFromMessage(global, chat.lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      lastSyncTime: global.lastSyncTime,\n      ...(isOutgoing && chat.lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, chat.lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n    };\n  },\n)(Chat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport { SettingsScreens } from '../../../types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport Button from '../../ui/Button';\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <i className=\"icon icon-settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"SQg81XcAI_8yUrDTZsuO\",\"sticker\":\"wJbYOMkKbFvBF3ETHcTe\",\"title\":\"aAjnCIjqnZ5azP_wg1ax\",\"description\":\"xkUox6hbodMU0tsgwbai\",\"is-ios\":\"v_F4YMWOjnwul_FmJtqz\",\"isIos\":\"v_F4YMWOjnwul_FmJtqz\",\"is-macos\":\"I0of4RZnJHb9jdBEQSiA\",\"isMacos\":\"I0of4RZnJHb9jdBEQSiA\",\"button-text\":\"avAW55GP937eCr8UmpfS\",\"buttonText\":\"avAW55GP937eCr8UmpfS\",\"centered\":\"LIiIYVtbGfUXltL06Xbb\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QNEU55wdWY0UBHKcohz_\",\"minimized\":\"HJvl22k3BH70ntnjhIP0\",\"button\":\"RF4n_8QOkb5FMXcpbmBW\",\"title\":\"XFFMu4VlEHKxRihwcGTm\",\"unread-count\":\"jYYtPy1W31sqUc_gw9RW\",\"unreadCount\":\"jYYtPy1W31sqUc_gw9RW\",\"info\":\"fvlwjR3heR1XQKFT_jiv\",\"name\":\"Njj0lF4z1QQ96mlTyHt_\",\"icon\":\"EKj05B3RNFnEMtMNttAq\",\"avatarWrapper\":\"qx5qdiOt16oub2O9sYeg\",\"avatar\":\"n8grGxKGGUr4oa8NVGFW\",\"chatsPreview\":\"m7P0WNHzg_kxle3rxniA\",\"unread\":\"mee_ERQMDxZsfb47JEBb\"};","import React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { GlobalState } from '../../../global/types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\nimport { getChatTitle } from '../../../global/helpers';\n\nimport useLang from '../../../hooks/useLang';\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\n\nimport ListItem from '../../ui/ListItem';\nimport Badge from '../../ui/Badge';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    };\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    };\n\n    const actionHide = {\n      title: lang('lng_context_archive_to_menu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    };\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <i className={buildClassName(styles.icon, 'icon', 'icon-archive-filled')} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <div className={buildClassName('Avatar', styles.avatar)}>\n            <i className=\"icon icon-archive-filled\" />\n          </div>\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","import React, {\n  memo, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { LeftColumnContent } from '../../../types';\nimport type { SettingsScreens } from '../../../types';\nimport type { GlobalState } from '../../../global/types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVED_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n} from '../../../config';\nimport { IS_MAC_OS, IS_APP } from '../../../util/windowEnvironment';\nimport { getPinnedChatsCount, getOrderKey } from '../../../util/folderManager';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport Archive from './Archive';\n\ntype OwnProps = {\n  folderType: 'all' | 'archived' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  lastSyncTime?: number;\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange: (content: LeftColumnContent) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n}) => {\n  const { openChat, openNextChat, closeForumPanel } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n\n  const resolvedFolderId = (\n    folderType === 'all' ? ALL_FOLDER_ID : folderType === 'archived' ? ARCHIVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = folderType === 'all' && canDisplayArchive;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined);\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [archiveSettings, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds, shouldDisplayArchive]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    onLeftColumnContentChange(LeftColumnContent.Archived);\n    closeForumPanel();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open')}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      maxHeight={chatsHeight + archiveHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch}\n            onSettingsScreenSelect={onSettingsScreenSelect}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"YmRS2ZiwKMtqCF87Nsw8\",\"closed-icon\":\"K6QDMKEV2GXbuOQWOS73\",\"closedIcon\":\"K6QDMKEV2GXbuOQWOS73\",\"topic-icon\":\"TB99wQ9nHBumZ6E9ByUz\",\"topicIcon\":\"TB99wQ9nHBumZ6E9ByUz\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type {\n  ApiChat, ApiFormattedText, ApiTopic, ApiMessage, ApiMessageOutgoingStatus,\n  ApiTypingStatus,\n  ApiUser,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus,\n  selectThreadInfo,\n  selectThreadParam,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport renderText from '../../common/helpers/renderText';\nimport { getMessageAction } from '../../../global/helpers';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\n\nimport ListItem from '../../ui/ListItem';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ChatBadge from './ChatBadge';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport TopicIcon from '../../common/TopicIcon';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageSender?: ApiUser | ApiChat;\n  actionTargetChatId?: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiFormattedText;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  actionTargetMessage,\n  actionTargetUserIds,\n  actionTargetChatId,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n}) => {\n  const { openChat, deleteTopic, focusLastMessage } = getActions();\n\n  const lang = useLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openChat({ id: chatId, threadId: topic.id, shouldReplaceHistory: true });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <i className={buildClassName(\n              'icon',\n              'icon-lock-badge',\n              styles.closedIcon,\n            )}\n            />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId)!;\n    const { senderId, replyToMessageId, isOutgoing } = lastMessage || {};\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chatId, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      lastMessage,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { compact } from '../../../../util/iteratees';\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLang from '../../../../hooks/useLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZyX_vkPmR8lkPavXpJ8t\",\"button-text\":\"eyTT7Nz45S4tsccfs60O\",\"buttonText\":\"eyTT7Nz45S4tsccfs60O\",\"sticker\":\"qtGErqZ1CIiAYG3E4UcJ\",\"title\":\"xpDHtODGvlK2Esrg3kFa\",\"description\":\"xqeZm45hTFw3abdn8dYe\",\"is-ios\":\"G5wtv6cwHgiIpRWtvIvu\",\"isIos\":\"G5wtv6cwHgiIpRWtvIvu\",\"is-macos\":\"H92rL6BfAuzokrWOXdQr\",\"isMacos\":\"H92rL6BfAuzokrWOXdQr\"};","import React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiSticker } from '../../../api/types';\n\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport { getHasAdminRight } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport useLang from '../../../hooks/useLang';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport Button from '../../ui/Button';\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","import React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiChat } from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPICS_SLICE, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA,\n} from '../../../config';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport {\n  selectCanAnimateInterface, selectChat, selectCurrentMessageList, selectIsForumPanelOpen, selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { createLocationHash } from '../../../util/routing';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useOrderDiff from './hooks/useOrderDiff';\nimport useLang from '../../../hooks/useLang';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { dispatchHeavyAnimationEvent } from '../../../hooks/useHeavyAnimationCheck';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Button from '../../ui/Button';\nimport Topic from './Topic';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport HeaderActions from '../../middle/HeaderActions';\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport EmptyForum from './EmptyForum';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentTopicId?: number;\n  lastSyncTime?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  lastSyncTime,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (lastSyncTime && chat && !chat.topics) {\n      loadTopics({ chatId: chat.id });\n    }\n  }, [chat, lastSyncTime, loadTopics]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return chat?.topics\n      ? getOrderedTopics(Object.values(chat.topics), chat.orderedPinnedTopicIds).map(({ id }) => id)\n      : [];\n  }, [chat]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat || !lastSyncTime) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !chat?.topicsCount || orderedIds.length >= chat.topicsCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePrevious(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n    hash: chat ? createLocationHash(chat.id, 'thread', MAIN_THREAD_ID) : undefined,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n        waitForTransitionEnd(ref.current, dispatchHeavyAnimationStop);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={chat!.topics![id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = chat?.topics === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              withForumActions\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} hasPinnedOffset={false} className={styles.groupCall} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chat.id} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, ownProps, detachWhenChanged): StateProps => {\n    detachWhenChanged(selectIsForumPanelOpen(global));\n\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      lastSyncTime: global.lastSyncTime,\n      currentTopicId: chatId === currentChatId ? currentThreadId : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n    };\n  },\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GUOX6Q0XzHRhNZvBwjQ9\",\"rtl\":\"_1XehUpS3aX91hWXDmcu\",\"no-animation\":\"mPOFnJvncopcVbbyZrzs\",\"noAnimation\":\"mPOFnJvncopcVbbyZrzs\",\"group-call\":\"OH0LaRqoNDIvvHsCtEte\",\"groupCall\":\"OH0LaRqoNDIvvHsCtEte\",\"notch\":\"UhjDQykjZBYhiVclJl16\",\"scrolled\":\"h_YBka1L8eRICjrO5dF5\",\"scroll-top-handler\":\"cO3iiLSh70tyWuNCUFtX\",\"scrollTopHandler\":\"cO3iiLSh70tyWuNCUFtX\",\"info\":\"mzucaTAH77gNB1V006lS\"};","import React, { memo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { LeftColumnContent, SettingsScreens } from '../../types';\nimport type { FolderEditDispatch } from '../../hooks/reducers/useFoldersReducer';\nimport type { GlobalState } from '../../global/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLang from '../../hooks/useLang';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLeftHeaderButtonRtlForumTransition from './main/hooks/useLeftHeaderButtonRtlForumTransition';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useForumPanelRender from '../../hooks/useForumPanelRender';\n\nimport Button from '../ui/Button';\nimport ChatList from './main/ChatList';\nimport ForumPanel from './main/ForumPanel';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\n\nimport './ArchivedChats.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isForumPanelOpen?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  onReset: () => void;\n  onTopicSearch: NoneToVoidFunction;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n  foldersDispatch: FolderEditDispatch;\n  onLeftColumnContentChange: (content: LeftColumnContent) => void;\n};\n\nconst ArchivedChats: FC<OwnProps> = ({\n  isActive,\n  isForumPanelOpen,\n  archiveSettings,\n  onReset,\n  onTopicSearch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n  foldersDispatch,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDisplayArchiveInChats = useLastCallback(() => {\n    updateArchiveSettings({ isHidden: false });\n  });\n\n  const {\n    shouldDisableDropdownMenuTransitionRef,\n    handleDropdownMenuTransitionEnd,\n  } = useLeftHeaderButtonRtlForumTransition(isForumPanelOpen);\n\n  const {\n    shouldRender: shouldRenderTitle,\n    transitionClassNames: titleClassNames,\n  } = useShowTransition(!isForumPanelOpen);\n\n  const {\n    shouldRenderForumPanel, handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart, isAnimationStarted,\n  } = useForumPanelRender(isForumPanelOpen);\n  const isForumPanelVisible = isForumPanelOpen && isAnimationStarted;\n\n  return (\n    <div className=\"ArchivedChats\">\n      <div className=\"left-header\">\n        {lang.isRtl && <div className=\"DropdownMenuFiller\" />}\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to chat list\"\n          className={buildClassName(\n            lang.isRtl && 'rtl',\n            isForumPanelVisible && lang.isRtl && 'right-aligned',\n            shouldDisableDropdownMenuTransitionRef.current && lang.isRtl && 'disable-transition',\n          )}\n          onTransitionEnd={handleDropdownMenuTransitionEnd}\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        {shouldRenderTitle && <h3 className={titleClassNames}>{lang('ArchivedChats')}</h3>}\n        {archiveSettings.isHidden && (\n          <DropdownMenu\n            className=\"archived-chats-more-menu\"\n            positionX=\"right\"\n            onTransitionEnd={lang.isRtl ? handleDropdownMenuTransitionEnd : undefined}\n          >\n            <MenuItem icon=\"archive-from-main\" onClick={handleDisplayArchiveInChats}>\n              {lang('lng_context_archive_to_list')}\n            </MenuItem>\n          </DropdownMenu>\n        )}\n      </div>\n      <ChatList\n        folderType=\"archived\"\n        isActive={isActive}\n        isForumPanelOpen={isForumPanelVisible}\n        onSettingsScreenSelect={onSettingsScreenSelect}\n        onLeftColumnContentChange={onLeftColumnContentChange}\n        foldersDispatch={foldersDispatch}\n        archiveSettings={archiveSettings}\n      />\n      {shouldRenderForumPanel && (\n        <ForumPanel\n          isOpen={isForumPanelOpen}\n          onTopicSearch={onTopicSearch}\n          onOpenAnimationStart={handleForumPanelAnimationStart}\n          onCloseAnimationEnd={handleForumPanelAnimationEnd}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ArchivedChats);\n","import { useRef } from '../../../../lib/teact/teact';\nimport usePrevious from '../../../../hooks/usePrevious';\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePrevious(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useLastCallback from './useLastCallback';\nimport useForceUpdate from './useForceUpdate';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback, memo, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport { ALL_FOLDER_ID } from '../../config';\nimport useLang from '../../hooks/useLang';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\nimport CheckboxGroup from '../ui/CheckboxGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  foldersById?: Record<number, ApiChatFolder>;\n  folderOrderedIds?: number[];\n};\n\nconst ChatFolderModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  foldersById,\n  folderOrderedIds,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { editChatFolders } = getActions();\n\n  const lang = useLang();\n\n  const initialSelectedFolderIds = useMemo(() => {\n    if (!foldersById) {\n      return [];\n    }\n\n    return Object.keys(foldersById).reduce((result, folderId) => {\n      const { includedChatIds, pinnedChatIds } = foldersById[Number(folderId)];\n      if (includedChatIds.includes(chatId) || pinnedChatIds?.includes(chatId)) {\n        result.push(folderId);\n      }\n\n      return result;\n    }, [] as string[]);\n  }, [chatId, foldersById]);\n\n  const [selectedFolderIds, setSelectedFolderIds] = useState<string[]>(initialSelectedFolderIds);\n\n  const folders = useMemo(() => {\n    return folderOrderedIds?.filter((folderId) => folderId !== ALL_FOLDER_ID).map((folderId) => ({\n      label: foldersById ? foldersById[folderId].title : '',\n      value: String(folderId),\n    })) || [];\n  }, [folderOrderedIds, foldersById]);\n\n  const handleSubmit = useCallback(() => {\n    const idsToRemove = initialSelectedFolderIds.filter((id) => !selectedFolderIds.includes(id)).map(Number);\n    const idsToAdd = selectedFolderIds.filter((id) => !initialSelectedFolderIds.includes(id)).map(Number);\n\n    editChatFolders({ chatId, idsToRemove, idsToAdd });\n    onClose();\n  }, [chatId, editChatFolders, initialSelectedFolderIds, onClose, selectedFolderIds]);\n\n  if (!foldersById || !folderOrderedIds) {\n    return undefined;\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className=\"delete\"\n      title={lang('FilterAddTo')}\n    >\n      <CheckboxGroup\n        options={folders}\n        selected={selectedFolderIds}\n        onChange={setSelectedFolderIds}\n        round\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n          {lang('FilterAddTo')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: foldersById, orderedIds: folderOrderedIds } = global.chatFolders;\n\n    return {\n      foldersById,\n      folderOrderedIds,\n    };\n  },\n)(ChatFolderModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback, memo, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { MAX_INT_32 } from '../../config';\nimport useLang from '../../hooks/useLang';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  topicId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nenum MuteDuration {\n  OneHour = '3600',\n  FourHours = '14400',\n  EightHours = '28800',\n  OneDay = '86400',\n  ThreeDays = '259200',\n  Forever = '-1',\n}\n\nconst MuteChatModal: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  topicId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const [muteUntilOption, setMuteUntilOption] = useState(MuteDuration.Forever);\n  const { updateChatMutedState, updateTopicMutedState } = getActions();\n\n  const lang = useLang();\n\n  const muteForOptions = useMemo(() => [\n    { label: lang('MuteFor.Hours', 1), value: MuteDuration.OneHour },\n    { label: lang('MuteFor.Hours', 4), value: MuteDuration.FourHours },\n    { label: lang('MuteFor.Hours', 8), value: MuteDuration.EightHours },\n    { label: lang('MuteFor.Days', 1), value: MuteDuration.OneDay },\n    { label: lang('MuteFor.Days', 3), value: MuteDuration.ThreeDays },\n    { label: lang('MuteFor.Forever'), value: MuteDuration.Forever },\n  ], [lang]);\n\n  const handleSubmit = useCallback(() => {\n    let muteUntil: number;\n    if (muteUntilOption === MuteDuration.Forever) {\n      muteUntil = MAX_INT_32;\n    } else {\n      muteUntil = Math.floor(Date.now() / 1000) + Number(muteUntilOption);\n    }\n    if (topicId) {\n      updateTopicMutedState({ chatId, topicId, muteUntil });\n    } else {\n      updateChatMutedState({ chatId, muteUntil });\n    }\n    onClose();\n  }, [chatId, muteUntilOption, onClose, topicId]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className=\"delete\"\n      title={lang('Notifications')}\n    >\n      <RadioGroup\n        name=\"muteFor\"\n        options={muteForOptions}\n        selected={muteUntilOption}\n        onChange={setMuteUntilOption as any}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n          {lang('Common.Done')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(MuteChatModal);\n","import type { ApiMessage } from '../../../../api/types';\nimport { ApiMediaFormat } from '../../../../api/types';\n\nimport * as mediaLoader from '../../../../util/mediaLoader';\nimport {\n  getMessageContact,\n  getMessageMediaHash,\n  getMessagePhoto,\n  getMessageText,\n  getMessageTextWithSpoilers,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  hasMessageLocalBlobUrl,\n} from '../../../../global/helpers';\nimport {\n  CLIPBOARD_ITEM_SUPPORTED,\n  copyHtmlToClipboard,\n  copyImageToClipboard,\n  copyTextToClipboard,\n} from '../../../../util/clipboard';\nimport getMessageIdsForSelectedText from '../../../../util/getMessageIdsForSelectedText';\nimport { renderMessageText } from '../../../common/helpers/renderMessageText';\n\ntype ICopyOptions = {\n  label: string;\n  icon: string;\n  handler: () => void;\n}[];\n\nexport function getMessageCopyOptions(\n  message: ApiMessage,\n  href?: string,\n  afterEffect?: () => void,\n  onCopyLink?: () => void,\n  onCopyMessages?: (messageIds: number[]) => void,\n  onCopyNumber?: () => void,\n): ICopyOptions {\n  const options: ICopyOptions = [];\n  const text = getMessageText(message);\n  const photo = getMessagePhoto(message)\n    || (!getMessageWebPageVideo(message) ? getMessageWebPagePhoto(message) : undefined);\n  const contact = getMessageContact(message);\n  const mediaHash = getMessageMediaHash(message, 'inline');\n  const canImageBeCopied = photo && (mediaHash || hasMessageLocalBlobUrl(message)) && CLIPBOARD_ITEM_SUPPORTED;\n  const selection = window.getSelection();\n\n  if (canImageBeCopied) {\n    options.push({\n      label: 'lng_context_copy_image',\n      icon: 'copy-media',\n      handler: () => {\n        Promise.resolve(mediaHash ? mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl) : photo!.blobUrl)\n          .then(copyImageToClipboard);\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (href) {\n    options.push({\n      label: 'lng_context_copy_link',\n      icon: 'copy',\n      handler: () => {\n        copyTextToClipboard(href);\n\n        afterEffect?.();\n      },\n    });\n  } else if (text) {\n    // Detect if the user has selection in the current message\n    const hasSelection = Boolean((\n      selection?.anchorNode?.parentNode\n      && (selection.anchorNode.parentNode as HTMLElement).closest('.Message .content-inner')\n      && selection.toString().replace(/(?:\\r\\n|\\r|\\n)/g, '') !== ''\n    ));\n\n    options.push({\n      label: getCopyLabel(hasSelection),\n      icon: 'copy',\n      handler: () => {\n        const messageIds = getMessageIdsForSelectedText();\n        if (messageIds?.length && onCopyMessages) {\n          onCopyMessages(messageIds);\n        } else if (hasSelection) {\n          document.execCommand('copy');\n        } else {\n          const clipboardText = renderMessageText(\n            message, undefined, undefined, undefined, undefined, undefined, true,\n          );\n          if (clipboardText) copyHtmlToClipboard(clipboardText.join(''), getMessageTextWithSpoilers(message)!);\n        }\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (onCopyLink) {\n    options.push({\n      label: 'lng_context_copy_message_link',\n      icon: 'link',\n      handler: () => {\n        onCopyLink();\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (contact && onCopyNumber) {\n    options.push({\n      label: 'lng_profile_copy_phone',\n      icon: 'copy',\n      handler: () => {\n        onCopyNumber();\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  return options;\n}\n\nfunction getCopyLabel(hasSelection: boolean): string {\n  if (hasSelection) {\n    return 'lng_context_copy_selected';\n  }\n  return 'lng_context_copy_text';\n}\n","let scrollLockEl: HTMLElement | null | undefined;\nlet excludedClosestSelector: string | undefined;\n\nconst IGNORED_KEYS: Record<string, boolean> = {\n  Down: true,\n  ArrowDown: true,\n  Up: true,\n  ArrowUp: true,\n  Left: true,\n  ArrowLeft: true,\n  Right: true,\n  ArrowRight: true,\n  ' ': true,\n  PageUp: true,\n  PageDown: true,\n  End: true,\n  Home: true,\n  Tab: true,\n};\n\nfunction isTextBox(target: EventTarget | null) {\n  if (!target || !(target instanceof HTMLElement)) return false;\n  const element = target;\n  const tagName = element.tagName.toLowerCase();\n  if (tagName === 'textarea') return true;\n  if (tagName !== 'input') return false;\n  const type = element.getAttribute('type');\n  if (!type) return false;\n  const inputTypes = [\n    'text', 'password', 'number', 'email', 'tel', 'url',\n    'search', 'date', 'datetime', 'datetime-local', 'time', 'month', 'week',\n  ];\n  return inputTypes.indexOf(type.toLowerCase()) > -1;\n}\n\nexport const getTouchY = (e: WheelEvent | TouchEvent | React.WheelEvent | React.TouchEvent) => {\n  return ('changedTouches' in e ? e.changedTouches[0].clientY : 0);\n};\n\nconst preventDefault = (e: WheelEvent | TouchEvent) => {\n  const deltaY = 'deltaY' in e ? e.deltaY : getTouchY(e);\n\n  if (\n    !scrollLockEl\n    // Allow overlay scrolling\n    || !scrollLockEl.contains(e.target as HTMLElement)\n    // Prevent top overscroll\n    || (scrollLockEl.scrollTop <= 0 && deltaY <= 0)\n    // Prevent bottom overscroll\n    || (scrollLockEl.scrollTop >= (scrollLockEl.scrollHeight - scrollLockEl.offsetHeight) && deltaY >= 0)\n  ) {\n    if (excludedClosestSelector && (e.target as HTMLElement).closest(excludedClosestSelector)) return;\n    e.preventDefault();\n  }\n};\n\nfunction preventDefaultForScrollKeys(e: KeyboardEvent) {\n  if (IGNORED_KEYS[e.key] && !isTextBox(e.target)) {\n    e.preventDefault();\n  }\n}\n\nexport function disableScrolling(el?: HTMLElement | null, _excludedClosestSelector?: string) {\n  scrollLockEl = el;\n  excludedClosestSelector = _excludedClosestSelector;\n  // Disable scrolling in Chrome\n  document.addEventListener('wheel', preventDefault, { passive: false });\n  document.addEventListener('touchmove', preventDefault, { passive: false });\n  document.onkeydown = preventDefaultForScrollKeys;\n}\n\nexport function enableScrolling() {\n  scrollLockEl = undefined;\n  excludedClosestSelector = undefined;\n  document.removeEventListener('wheel', preventDefault); // Enable scrolling in Chrome\n  document.removeEventListener('touchmove', preventDefault);\n  // eslint-disable-next-line no-null/no-null\n  document.onkeydown = null;\n}\n","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiAvailableReaction, ApiReaction } from '../../../api/types';\n\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport { createClassNameBuilder } from '../../../util/buildClassName';\nimport useMedia from '../../../hooks/useMedia';\nimport useFlag from '../../../hooks/useFlag';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\n\nimport './ReactionSelectorReaction.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelectorReaction');\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={cn('&', chosen && 'chosen')}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={cn('static-icon')}\n          src={staticIconData}\n          alt=\"\"\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiReaction, ApiReactionCount,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport buildClassName, { createClassNameBuilder } from '../../../util/buildClassName';\nimport {\n  isSameReaction, canSendReaction, getReactionUniqueKey, sortReactions,\n} from '../../../global/helpers';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLang from '../../../hooks/useLang';\n\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\nimport Button from '../../ui/Button';\n\nimport './ReactionSelector.scss';\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  maxUniqueReactions?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  onShowMore: (position: IAnchorPosition) => void;\n  className?: string;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 6;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  enabledReactions,\n  currentReactions,\n  maxUniqueReactions,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  onToggleReaction,\n  onShowMore,\n  className,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  const availableReactions = useMemo(() => {\n    const reactions = allAvailableReactions?.map((availableReaction) => {\n      if (availableReaction.isInactive) return undefined;\n      if (!isPrivate && (!enabledReactions || !canSendReaction(availableReaction.reaction, enabledReactions))) {\n        return undefined;\n      }\n      if (maxUniqueReactions && currentReactions && currentReactions.length >= maxUniqueReactions\n        && !currentReactions.some(({ reaction }) => isSameReaction(reaction, availableReaction.reaction))) {\n        return undefined;\n      }\n      return availableReaction;\n    }).filter(Boolean) || [];\n\n    return sortReactions(reactions, topReactions);\n  }, [allAvailableReactions, currentReactions, enabledReactions, isPrivate, maxUniqueReactions, topReactions]);\n\n  const reactionsToRender = useMemo(() => {\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction(r.reaction, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&', lang.isRtl && 'isRtl'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')} dir={lang.isRtl ? 'rtl' : undefined}>\n          {reactionsToRender.map((reaction, i) => (\n            <ReactionSelectorReaction\n              key={getReactionUniqueKey(reaction.reaction)}\n              isReady={isReady}\n              onToggleReaction={onToggleReaction}\n              reaction={reaction}\n              noAppearAnimation={!canPlayAnimatedEmojis}\n              chosen={userReactionIndexes.has(i)}\n            />\n          ))}\n          {withMoreButton && (\n            <Button\n              color=\"translucent\"\n              className={cn('show-more')}\n              onClick={handleShowMoreClick}\n            >\n              <i className=\"icon icon-down\" />\n            </Button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type {\n  ApiAvailableReaction,\n  ApiChatReactions,\n  ApiMessage,\n  ApiReaction,\n  ApiSponsoredMessage,\n  ApiStickerSet,\n  ApiThreadInfo,\n  ApiUser,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport { getMessageCopyOptions } from './helpers/copyOptions';\nimport { disableScrolling, enableScrolling } from '../../../util/scrollLock';\nimport { getUserFullName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useFlag from '../../../hooks/useFlag';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\nimport useLang from '../../../hooks/useLang';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\nimport Skeleton from '../../ui/Skeleton';\nimport Avatar from '../../common/Avatar';\nimport ReactionSelector from './ReactionSelector';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isReactionPickerOpen?: boolean;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  message: ApiMessage | ApiSponsoredMessage;\n  canSendNow?: boolean;\n  enabledReactions?: ApiChatReactions;\n  maxUniqueReactions?: number;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  canPin?: boolean;\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canShowReactionsCount?: boolean;\n  canShowReactionList?: boolean;\n  canBuyPremium?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  isDownloading?: boolean;\n  canShowSeenBy?: boolean;\n  seenByRecentUsers?: ApiUser[];\n  noReplies?: boolean;\n  hasCustomEmoji?: boolean;\n  customEmojiSets?: ApiStickerSet[];\n  canPlayAnimatedEmojis?: boolean;\n  noTransition?: boolean;\n  onReply?: NoneToVoidFunction;\n  onOpenThread?: VoidFunction;\n  onEdit?: NoneToVoidFunction;\n  onPin?: NoneToVoidFunction;\n  onUnpin?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onDelete?: NoneToVoidFunction;\n  onReport?: NoneToVoidFunction;\n  onFaveSticker?: NoneToVoidFunction;\n  onUnfaveSticker?: NoneToVoidFunction;\n  onSelect?: NoneToVoidFunction;\n  onSend?: NoneToVoidFunction;\n  onReschedule?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onCopyLink?: NoneToVoidFunction;\n  onCopyMessages?: (messageIds: number[]) => void;\n  onCopyNumber?: NoneToVoidFunction;\n  onDownload?: NoneToVoidFunction;\n  onSaveGif?: NoneToVoidFunction;\n  onCancelVote?: NoneToVoidFunction;\n  onClosePoll?: NoneToVoidFunction;\n  onShowSeenBy?: NoneToVoidFunction;\n  onShowReactors?: NoneToVoidFunction;\n  onAboutAds?: NoneToVoidFunction;\n  onSponsoredHide?: NoneToVoidFunction;\n  onSponsorInfo?: NoneToVoidFunction;\n  onTranslate?: NoneToVoidFunction;\n  onShowOriginal?: NoneToVoidFunction;\n  onSelectLanguage?: NoneToVoidFunction;\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  onReactionPickerOpen?: (position: IAnchorPosition) => void;\n};\n\nconst SCROLLBAR_WIDTH = 10;\nconst REACTION_BUBBLE_EXTRA_WIDTH = 32;\nconst REACTION_SELECTOR_WIDTH_REM = 19.25;\nconst ANIMATION_DURATION = 200;\n\nconst MessageContextMenu: FC<OwnProps> = ({\n  isReactionPickerOpen,\n  availableReactions,\n  topReactions,\n  isOpen,\n  message,\n  isPrivate,\n  isCurrentUserPremium,\n  enabledReactions,\n  maxUniqueReactions,\n  anchor,\n  targetHref,\n  canSendNow,\n  canReschedule,\n  canBuyPremium,\n  canReply,\n  canEdit,\n  noReplies,\n  canPin,\n  canUnpin,\n  canDelete,\n  canReport,\n  canForward,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canTranslate,\n  canShowOriginal,\n  canSelectLanguage,\n  isDownloading,\n  repliesThreadInfo,\n  canShowSeenBy,\n  canShowReactionsCount,\n  canShowReactionList,\n  seenByRecentUsers,\n  hasCustomEmoji,\n  customEmojiSets,\n  canPlayAnimatedEmojis,\n  noTransition,\n  onReply,\n  onOpenThread,\n  onEdit,\n  onPin,\n  onUnpin,\n  onForward,\n  onDelete,\n  onReport,\n  onFaveSticker,\n  onUnfaveSticker,\n  onSelect,\n  onSend,\n  onReschedule,\n  onClose,\n  onCloseAnimationEnd,\n  onCopyLink,\n  onCopyNumber,\n  onDownload,\n  onSaveGif,\n  onCancelVote,\n  onClosePoll,\n  onShowSeenBy,\n  onShowReactors,\n  onToggleReaction,\n  onCopyMessages,\n  onAboutAds,\n  onSponsoredHide,\n  onSponsorInfo,\n  onReactionPickerOpen,\n  onTranslate,\n  onShowOriginal,\n  onSelectLanguage,\n}) => {\n  const { showNotification, openStickerSet, openCustomEmojiSets } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollableRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const noReactions = !isPrivate && !enabledReactions;\n  const withReactions = canShowReactionList && !noReactions;\n  const isSponsoredMessage = !('id' in message);\n  const messageId = !isSponsoredMessage ? message.id : '';\n  const seenByDates = !isSponsoredMessage ? message.seenByDates : undefined;\n\n  const [areItemsHidden, hideItems] = useFlag();\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n  const { isMobile, isDesktop } = useAppLayout();\n  const seenByDatesCount = useMemo(() => (seenByDates ? Object.keys(seenByDates).length : 0), [seenByDates]);\n\n  const handleAfterCopy = useLastCallback(() => {\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    onClose();\n  });\n\n  useEffect(() => {\n    if (isOpen && areItemsHidden && !isReactionPickerOpen) {\n      onClose();\n    }\n  }, [onClose, isOpen, isReactionPickerOpen, areItemsHidden]);\n\n  const handleOpenCustomEmojiSets = useLastCallback(() => {\n    if (!customEmojiSets) return;\n    if (customEmojiSets.length === 1) {\n      openStickerSet({\n        stickerSetInfo: {\n          shortName: customEmojiSets[0].shortName,\n        },\n      });\n    } else {\n      openCustomEmojiSets({\n        setIds: customEmojiSets.map((set) => set.id),\n      });\n    }\n    onClose();\n  });\n\n  const copyOptions = isSponsoredMessage\n    ? []\n    : getMessageCopyOptions(\n      message, targetHref, handleAfterCopy, canCopyLink ? onCopyLink : undefined, onCopyMessages, onCopyNumber,\n    );\n\n  const getTriggerElement = useLastCallback(() => {\n    return isSponsoredMessage\n      ? document.querySelector('.Transition_slide-active > .MessageList .SponsoredMessage')\n      : document.querySelector(`.Transition_slide-active > .MessageList div[data-message-id=\"${messageId}\"]`);\n  });\n\n  const getRootElement = useLastCallback(() => document.querySelector('.Transition_slide-active > .MessageList'));\n\n  const getMenuElement = useLastCallback(() => document.querySelector('.MessageContextMenu .bubble'));\n\n  const getLayout = useLastCallback(() => {\n    const extraHeightAudioPlayer = (isMobile\n      && (document.querySelector<HTMLElement>('.AudioPlayer-content'))?.offsetHeight) || 0;\n    const pinnedElement = document.querySelector<HTMLElement>('.HeaderPinnedMessageWrapper');\n    const extraHeightPinned = (((isMobile && !extraHeightAudioPlayer)\n        || (!isMobile && pinnedElement?.classList.contains('full-width')))\n      && pinnedElement?.offsetHeight) || 0;\n\n    return {\n      extraPaddingX: SCROLLBAR_WIDTH,\n      extraTopPadding: (document.querySelector<HTMLElement>('.MiddleHeader')!).offsetHeight,\n      marginSides: withReactions ? REACTION_BUBBLE_EXTRA_WIDTH : undefined,\n      extraMarginTop: extraHeightPinned + extraHeightAudioPlayer,\n      shouldAvoidNegativePosition: !isDesktop,\n      menuElMinWidth: withReactions && isMobile ? REACTION_SELECTOR_WIDTH_REM * REM : undefined,\n    };\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style, menuStyle, withScroll,\n  } = useMenuPosition(anchor, getTriggerElement, getRootElement, getMenuElement, getLayout);\n\n  useEffect(() => {\n    disableScrolling(withScroll ? scrollableRef.current : undefined, '.ReactionPicker');\n\n    return enableScrolling;\n  }, [withScroll]);\n\n  const handleOpenReactionPicker = useLastCallback((position: IAnchorPosition) => {\n    onReactionPickerOpen!(position);\n    hideItems();\n  });\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      transformOriginX={transformOriginX}\n      transformOriginY={transformOriginY}\n      positionX={positionX}\n      positionY={positionY}\n      style={style}\n      bubbleStyle={menuStyle}\n      className={buildClassName(\n        'MessageContextMenu', 'fluid', withReactions && 'with-reactions',\n      )}\n      shouldSkipTransition={noTransition}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {withReactions && (\n        <ReactionSelector\n          enabledReactions={enabledReactions}\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          currentReactions={!isSponsoredMessage ? message.reactions?.results : undefined}\n          maxUniqueReactions={maxUniqueReactions}\n          onToggleReaction={onToggleReaction!}\n          isPrivate={isPrivate}\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenReactionPicker}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        className={buildClassName(\n          'MessageContextMenu_items scrollable-content custom-scroll',\n          areItemsHidden && 'MessageContextMenu_items-hidden',\n        )}\n        style={menuStyle}\n        ref={scrollableRef}\n      >\n        {canSendNow && <MenuItem icon=\"send-outline\" onClick={onSend}>{lang('MessageScheduleSend')}</MenuItem>}\n        {canReschedule && (\n          <MenuItem icon=\"schedule\" onClick={onReschedule}>{lang('MessageScheduleEditTime')}</MenuItem>\n        )}\n        {canReply && <MenuItem icon=\"reply\" onClick={onReply}>{lang('Reply')}</MenuItem>}\n        {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n          <MenuItem icon=\"replies\" onClick={onOpenThread}>\n            {lang('Conversation.ContextViewReplies', repliesThreadInfo!.messagesCount, 'i')}\n          </MenuItem>\n        )}\n        {canEdit && <MenuItem icon=\"edit\" onClick={onEdit}>{lang('Edit')}</MenuItem>}\n        {canFaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onFaveSticker}>{lang('AddToFavorites')}</MenuItem>\n        )}\n        {canUnfaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onUnfaveSticker}>{lang('Stickers.RemoveFromFavorites')}</MenuItem>\n        )}\n        {canTranslate && <MenuItem icon=\"language\" onClick={onTranslate}>{lang('TranslateMessage')}</MenuItem>}\n        {canShowOriginal && <MenuItem icon=\"language\" onClick={onShowOriginal}>{lang('ShowOriginalButton')}</MenuItem>}\n        {canSelectLanguage && (\n          <MenuItem icon=\"web\" onClick={onSelectLanguage}>{lang('lng_settings_change_lang')}</MenuItem>\n        )}\n        {canCopy && copyOptions.map((option) => (\n          <MenuItem key={option.label} icon={option.icon} onClick={option.handler}>{lang(option.label)}</MenuItem>\n        ))}\n        {canPin && <MenuItem icon=\"pin\" onClick={onPin}>{lang('DialogPin')}</MenuItem>}\n        {canUnpin && <MenuItem icon=\"unpin\" onClick={onUnpin}>{lang('DialogUnpin')}</MenuItem>}\n        {canSaveGif && <MenuItem icon=\"gifs\" onClick={onSaveGif}>{lang('lng_context_save_gif')}</MenuItem>}\n        {canRevote && <MenuItem icon=\"revote\" onClick={onCancelVote}>{lang('lng_polls_retract')}</MenuItem>}\n        {canClosePoll && <MenuItem icon=\"stop\" onClick={onClosePoll}>{lang('lng_polls_stop')}</MenuItem>}\n        {canDownload && (\n          <MenuItem icon=\"download\" onClick={onDownload}>\n            {isDownloading ? lang('lng_context_cancel_download') : lang('lng_media_download')}\n          </MenuItem>\n        )}\n        {canForward && <MenuItem icon=\"forward\" onClick={onForward}>{lang('Forward')}</MenuItem>}\n        {canSelect && <MenuItem icon=\"select\" onClick={onSelect}>{lang('Common.Select')}</MenuItem>}\n        {canReport && <MenuItem icon=\"flag\" onClick={onReport}>{lang('lng_context_report_msg')}</MenuItem>}\n        {(canShowSeenBy || canShowReactionsCount) && !isSponsoredMessage && (\n          <MenuItem\n            className=\"MessageContextMenu--seen-by\"\n            icon={canShowReactionsCount ? 'heart-outline' : 'group'}\n            onClick={canShowReactionsCount ? onShowReactors : onShowSeenBy}\n            disabled={!canShowReactionsCount && !seenByDatesCount}\n          >\n            <span className=\"MessageContextMenu--seen-by-label\">\n              {canShowReactionsCount && message.reactors?.count ? (\n                canShowSeenBy && seenByDatesCount\n                  ? lang(\n                    'Chat.OutgoingContextMixedReactionCount',\n                    [message.reactors.count, seenByDatesCount],\n                  )\n                  : lang('Chat.ContextReactionCount', message.reactors.count, 'i')\n              ) : (\n                seenByDatesCount === 1 && seenByRecentUsers\n                  ? renderText(getUserFullName(seenByRecentUsers[0])!)\n                  : (seenByDatesCount\n                    ? lang('Conversation.ContextMenuSeen', seenByDatesCount, 'i')\n                    : lang('Conversation.ContextMenuNoViews')\n                  )\n              )}\n            </span>\n            <div className=\"avatars\">\n              {seenByRecentUsers?.map((user) => (\n                <Avatar\n                  size=\"micro\"\n                  user={user}\n                />\n              ))}\n            </div>\n          </MenuItem>\n        )}\n        {canDelete && <MenuItem destructive icon=\"delete\" onClick={onDelete}>{lang('Delete')}</MenuItem>}\n        {hasCustomEmoji && (\n          <>\n            <MenuSeparator />\n            {!customEmojiSets && (\n              <>\n                <Skeleton inline className=\"menu-loading-row\" />\n                <Skeleton inline className=\"menu-loading-row\" />\n              </>\n            )}\n            {customEmojiSets && customEmojiSets.length === 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPack', customEmojiSets[0].title), ['simple_markdown', 'emoji'])}\n              </MenuItem>\n            )}\n            {customEmojiSets && customEmojiSets.length > 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPacks', customEmojiSets.length), ['simple_markdown'])}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {isSponsoredMessage && message.sponsorInfo && (\n          <MenuItem icon=\"channel\" onClick={onSponsorInfo}>{lang('SponsoredMessageSponsor')}</MenuItem>\n        )}\n        {isSponsoredMessage && <MenuItem icon=\"help\" onClick={onAboutAds}>{lang('SponsoredMessageInfo')}</MenuItem>}\n        {isSponsoredMessage && onSponsoredHide && (\n          <MenuItem icon=\"stop\" onClick={onSponsoredHide}>{lang('HideAd')}</MenuItem>\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(MessageContextMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { MessageListType, TabState } from '../../../global/types';\nimport type {\n  ApiAvailableReaction, ApiStickerSetInfo, ApiMessage, ApiStickerSet, ApiChatReactions, ApiReaction, ApiThreadInfo,\n} from '../../../api/types';\nimport type { IAlbum, IAnchorPosition } from '../../../types';\n\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActions,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsCurrentUserPremium,\n  selectIsMessageProtected,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectMessageCustomEmojiSets,\n  selectMessageTranslations,\n  selectRequestedTranslationLanguage,\n  selectStickerSet,\n} from '../../../global/selectors';\nimport {\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isOwnMessage,\n  areReactionsEmpty,\n  isUserId,\n  isMessageLocal,\n  getMessageVideo,\n  getChatMessageLink,\n  isServiceNotificationMessage,\n} from '../../../global/helpers';\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport { IS_TRANSLATION_SUPPORTED } from '../../../util/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { copyTextToClipboard } from '../../../util/clipboard';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useSchedule from '../../../hooks/useSchedule';\n\nimport DeleteMessageModal from '../../common/DeleteMessageModal';\nimport ReportModal from '../../common/ReportModal';\nimport PinMessageModal from '../../common/PinMessageModal';\nimport MessageContextMenu from './MessageContextMenu';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatUsername?: string;\n  message: ApiMessage;\n  album?: IAlbum;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  messageListType: MessageListType;\n  noReplies?: boolean;\n  detectedLanguage?: string;\n  repliesThreadInfo?: ApiThreadInfo;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  customEmojiSetsInfo?: ApiStickerSetInfo[];\n  customEmojiSets?: ApiStickerSet[];\n  noOptions?: boolean;\n  canSendNow?: boolean;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canPin?: boolean;\n  canShowReactionsCount?: boolean;\n  canBuyPremium?: boolean;\n  canShowReactionList?: boolean;\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  hasFullInfo?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  activeDownloads?: TabState['activeDownloads']['byChatId'][number];\n  canShowSeenBy?: boolean;\n  enabledReactions?: ApiChatReactions;\n  canScheduleUntilOnline?: boolean;\n  maxUniqueReactions?: number;\n  threadId?: number;\n  canPlayAnimatedEmojis?: boolean;\n  isReactionPickerOpen?: boolean;\n};\n\nconst ContextMenuContainer: FC<OwnProps & StateProps> = ({\n  availableReactions,\n  topReactions,\n  isOpen,\n  messageListType,\n  chatUsername,\n  message,\n  customEmojiSetsInfo,\n  customEmojiSets,\n  album,\n  anchor,\n  targetHref,\n  noOptions,\n  canSendNow,\n  hasFullInfo,\n  canReschedule,\n  canReply,\n  canPin,\n  repliesThreadInfo,\n  canUnpin,\n  canDelete,\n  canReport,\n  canShowReactionsCount,\n  canShowReactionList,\n  canEdit,\n  enabledReactions,\n  maxUniqueReactions,\n  isPrivate,\n  isCurrentUserPremium,\n  canForward,\n  canBuyPremium,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canPlayAnimatedEmojis,\n  activeDownloads,\n  noReplies,\n  canShowSeenBy,\n  canScheduleUntilOnline,\n  canTranslate,\n  canShowOriginal,\n  canSelectLanguage,\n  threadId,\n  onClose,\n  onCloseAnimationEnd,\n  isReactionPickerOpen,\n}) => {\n  const {\n    openChat,\n    setReplyingToId,\n    setEditingId,\n    pinMessage,\n    openForwardMenu,\n    faveSticker,\n    unfaveSticker,\n    toggleMessageSelection,\n    sendScheduledMessages,\n    rescheduleMessage,\n    downloadMessageMedia,\n    cancelMessageMediaDownload,\n    loadSeenBy,\n    openSeenByModal,\n    openReactorListModal,\n    loadFullChat,\n    loadReactors,\n    copyMessagesByIds,\n    saveGif,\n    loadStickers,\n    cancelPollVote,\n    closePoll,\n    toggleReaction,\n    requestMessageTranslation,\n    showOriginalMessage,\n    openMessageLanguageModal,\n    openReactionPicker,\n  } = getActions();\n\n  const lang = useLang();\n  const { transitionClassNames } = useShowTransition(isOpen, onCloseAnimationEnd, undefined, false);\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isReportModalOpen, setIsReportModalOpen] = useState(false);\n  const [isPinModalOpen, setIsPinModalOpen] = useState(false);\n  const [isClosePollDialogOpen, openClosePollDialog, closeClosePollDialog] = useFlag();\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline, onClose, message.date);\n\n  // `undefined` indicates that emoji are present and loading\n  const hasCustomEmoji = customEmojiSetsInfo === undefined || Boolean(customEmojiSetsInfo.length);\n\n  useEffect(() => {\n    if (canShowSeenBy && isOpen) {\n      loadSeenBy({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [loadSeenBy, isOpen, message.chatId, message.id, canShowSeenBy]);\n\n  useEffect(() => {\n    if (canShowReactionsCount && isOpen) {\n      loadReactors({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canShowReactionsCount, isOpen, loadReactors, message.chatId, message.id]);\n\n  useEffect(() => {\n    if (customEmojiSetsInfo?.length && customEmojiSets?.length !== customEmojiSetsInfo.length) {\n      customEmojiSetsInfo.forEach((set) => {\n        loadStickers({ stickerSetInfo: set });\n      });\n    }\n  }, [customEmojiSetsInfo, customEmojiSets, loadStickers]);\n\n  useEffect(() => {\n    if (!hasFullInfo && !isPrivate && isOpen) {\n      loadFullChat({ chatId: message.chatId });\n    }\n  }, [hasFullInfo, isOpen, isPrivate, loadFullChat, message.chatId]);\n\n  const seenByRecentUsers = useMemo(() => {\n    if (message.reactions?.recentReactions?.length) {\n      // No need for expensive global updates on users, so we avoid them\n      const usersById = getGlobal().users.byId;\n\n      const uniqueReactors = new Set(message.reactions?.recentReactions?.map(({ userId }) => usersById[userId]));\n\n      return Array.from(uniqueReactors).filter(Boolean).slice(0, 3);\n    }\n\n    if (!message.seenByDates) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return Object.keys(message.seenByDates).slice(0, 3).map((id) => usersById[id]).filter(Boolean);\n  }, [message.reactions?.recentReactions, message.seenByDates]);\n\n  const isDownloading = useMemo(() => {\n    if (album) {\n      return album.messages.some((msg) => {\n        return activeDownloads?.[message.isScheduled ? 'scheduledIds' : 'ids']?.includes(msg.id);\n      });\n    }\n\n    return activeDownloads?.[message.isScheduled ? 'scheduledIds' : 'ids']?.includes(message.id);\n  }, [activeDownloads, album, message]);\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsDeleteModalOpen(true);\n  });\n\n  const handleReport = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsReportModalOpen(true);\n  });\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const closeDeleteModal = useLastCallback(() => {\n    setIsDeleteModalOpen(false);\n    onClose();\n  });\n\n  const closeReportModal = useLastCallback(() => {\n    setIsReportModalOpen(false);\n    onClose();\n  });\n\n  const closePinModal = useLastCallback(() => {\n    setIsPinModalOpen(false);\n    onClose();\n  });\n\n  const handleReply = useLastCallback(() => {\n    setReplyingToId({ messageId: message.id });\n    closeMenu();\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openChat({\n      id: message.chatId,\n      threadId: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleEdit = useLastCallback(() => {\n    setEditingId({ messageId: message.id });\n    closeMenu();\n  });\n\n  const handlePin = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsPinModalOpen(true);\n  });\n\n  const handleUnpin = useLastCallback(() => {\n    pinMessage({ messageId: message.id, isUnpin: true });\n    closeMenu();\n  });\n\n  const handleForward = useLastCallback(() => {\n    closeMenu();\n    if (album?.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: message.chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: message.chatId, messageIds: [message.id] });\n    }\n  });\n\n  const handleFaveSticker = useLastCallback(() => {\n    closeMenu();\n    faveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleUnfaveSticker = useLastCallback(() => {\n    closeMenu();\n    unfaveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleCancelVote = useLastCallback(() => {\n    closeMenu();\n    cancelPollVote({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handlePollClose = useLastCallback(() => {\n    closeMenu();\n    closePoll({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleSelectMessage = useLastCallback(() => {\n    const params = album?.messages\n      ? {\n        messageId: message.id,\n        childMessageIds: album.messages.map(({ id }) => id),\n        withShift: false,\n      }\n      : { messageId: message.id, withShift: false };\n\n    toggleMessageSelection(params);\n    closeMenu();\n  });\n\n  const handleScheduledMessageSend = useLastCallback(() => {\n    sendScheduledMessages({ chatId: message.chatId, id: message.id });\n    closeMenu();\n  });\n\n  const handleRescheduleMessage = useLastCallback((scheduledAt: number) => {\n    rescheduleMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      scheduledAt,\n    });\n    onClose();\n  });\n\n  const handleOpenCalendar = useLastCallback(() => {\n    setIsMenuOpen(false);\n    requestCalendar(handleRescheduleMessage);\n  });\n\n  const handleOpenSeenByModal = useLastCallback(() => {\n    closeMenu();\n    openSeenByModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleOpenReactorListModal = useLastCallback(() => {\n    closeMenu();\n    openReactorListModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleCopyMessages = useLastCallback((messageIds: number[]) => {\n    copyMessagesByIds({ messageIds });\n    closeMenu();\n  });\n\n  const handleCopyLink = useLastCallback(() => {\n    copyTextToClipboard(getChatMessageLink(message.chatId, chatUsername, threadId, message.id));\n    closeMenu();\n  });\n\n  const handleCopyNumber = useLastCallback(() => {\n    copyTextToClipboard(message.content.contact!.phoneNumber);\n    closeMenu();\n  });\n\n  const handleDownloadClick = useLastCallback(() => {\n    (album?.messages || [message]).forEach((msg) => {\n      if (isDownloading) {\n        cancelMessageMediaDownload({ message: msg });\n      } else {\n        downloadMessageMedia({ message: msg });\n      }\n    });\n    closeMenu();\n  });\n\n  const handleSaveGif = useLastCallback(() => {\n    const video = getMessageVideo(message);\n    saveGif({ gif: video! });\n    closeMenu();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    toggleReaction({\n      chatId: message.chatId, messageId: message.id, reaction, shouldAddToRecent: true,\n    });\n    closeMenu();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openReactionPicker({ chatId: message.chatId, messageId: message.id, position });\n  });\n\n  const handleTranslate = useLastCallback(() => {\n    requestMessageTranslation({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleShowOriginal = useLastCallback(() => {\n    showOriginalMessage({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleSelectLanguage = useLastCallback(() => {\n    openMessageLanguageModal({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const reportMessageIds = useMemo(() => (album ? album.messages : [message]).map(({ id }) => id), [album, message]);\n\n  if (noOptions) {\n    closeMenu();\n\n    return undefined;\n  }\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  return (\n    <div className={buildClassName('ContextMenuContainer', transitionClassNames)}>\n      <MessageContextMenu\n        isReactionPickerOpen={isReactionPickerOpen}\n        availableReactions={availableReactions}\n        topReactions={topReactions}\n        message={message}\n        isPrivate={isPrivate}\n        isCurrentUserPremium={isCurrentUserPremium}\n        canBuyPremium={canBuyPremium}\n        isOpen={isMenuOpen}\n        enabledReactions={enabledReactions}\n        maxUniqueReactions={maxUniqueReactions}\n        anchor={anchor}\n        targetHref={targetHref}\n        canShowReactionsCount={canShowReactionsCount}\n        canShowReactionList={canShowReactionList}\n        canSendNow={canSendNow}\n        canReschedule={canReschedule}\n        canReply={canReply}\n        canDelete={canDelete}\n        canReport={canReport}\n        canPin={canPin}\n        repliesThreadInfo={repliesThreadInfo}\n        canUnpin={canUnpin}\n        canEdit={canEdit}\n        canForward={canForward}\n        canFaveSticker={canFaveSticker}\n        canUnfaveSticker={canUnfaveSticker}\n        canCopy={canCopy}\n        canCopyLink={canCopyLink}\n        canSelect={canSelect}\n        canDownload={canDownload}\n        canSaveGif={canSaveGif}\n        canRevote={canRevote}\n        canClosePoll={canClosePoll}\n        canShowSeenBy={canShowSeenBy}\n        canTranslate={canTranslate}\n        canShowOriginal={canShowOriginal}\n        canSelectLanguage={canSelectLanguage}\n        canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        hasCustomEmoji={hasCustomEmoji}\n        customEmojiSets={customEmojiSets}\n        isDownloading={isDownloading}\n        seenByRecentUsers={seenByRecentUsers}\n        noReplies={noReplies}\n        onOpenThread={handleOpenThread}\n        onReply={handleReply}\n        onEdit={handleEdit}\n        onPin={handlePin}\n        onUnpin={handleUnpin}\n        onForward={handleForward}\n        onDelete={handleDelete}\n        onReport={handleReport}\n        onFaveSticker={handleFaveSticker}\n        onUnfaveSticker={handleUnfaveSticker}\n        onSelect={handleSelectMessage}\n        onSend={handleScheduledMessageSend}\n        onReschedule={handleOpenCalendar}\n        onClose={closeMenu}\n        onCopyLink={handleCopyLink}\n        onCopyMessages={handleCopyMessages}\n        onCopyNumber={handleCopyNumber}\n        onDownload={handleDownloadClick}\n        onSaveGif={handleSaveGif}\n        onCancelVote={handleCancelVote}\n        onClosePoll={openClosePollDialog}\n        onShowSeenBy={handleOpenSeenByModal}\n        onToggleReaction={handleToggleReaction}\n        onShowReactors={handleOpenReactorListModal}\n        onReactionPickerOpen={handleReactionPickerOpen}\n        onTranslate={handleTranslate}\n        onShowOriginal={handleShowOriginal}\n        onSelectLanguage={handleSelectLanguage}\n      />\n      <DeleteMessageModal\n        isOpen={isDeleteModalOpen}\n        isSchedule={messageListType === 'scheduled'}\n        onClose={closeDeleteModal}\n        album={album}\n        message={message}\n      />\n      <ReportModal\n        isOpen={isReportModalOpen}\n        onClose={closeReportModal}\n        messageIds={reportMessageIds}\n      />\n      <PinMessageModal\n        isOpen={isPinModalOpen}\n        messageId={message.id}\n        chatId={message.chatId}\n        onClose={closePinModal}\n      />\n      <ConfirmDialog\n        isOpen={isClosePollDialogOpen}\n        onClose={closeClosePollDialog}\n        text={lang('lng_polls_stop_warning')}\n        confirmLabel={lang('lng_polls_stop_sure')}\n        confirmHandler={handlePollClose}\n      />\n      {canReschedule && calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, messageListType, detectedLanguage }): StateProps => {\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const activeDownloads = selectActiveDownloads(global, message.chatId);\n    const chat = selectChat(global, message.chatId);\n    const { seenByExpiresAt, seenByMaxChatMembers, maxUniqueReactions } = global.appConfig || {};\n    const {\n      noOptions,\n      canReply,\n      canPin,\n      canUnpin,\n      canDelete,\n      canReport,\n      canEdit,\n      canForward,\n      canFaveSticker,\n      canUnfaveSticker,\n      canCopy,\n      canCopyLink,\n      canSelect,\n      canDownload,\n      canSaveGif,\n      canRevote,\n      canClosePoll,\n    } = (threadId && selectAllowedMessageActions(global, message, threadId)) || {};\n\n    const isPrivate = chat && isUserId(chat.id);\n    const isOwn = isOwnMessage(message);\n    const isPinned = messageListType === 'pinned';\n    const isScheduled = messageListType === 'scheduled';\n    const isChannel = chat && isChatChannel(chat);\n    const isLocal = isMessageLocal(message);\n    const isServiceNotification = isServiceNotificationMessage(message);\n    const canShowSeenBy = Boolean(chat\n      && seenByMaxChatMembers\n      && seenByExpiresAt\n      && isChatGroup(chat)\n      && isOwn\n      && !isScheduled\n      && chat.membersCount\n      && chat.membersCount <= seenByMaxChatMembers\n      && message.date > Date.now() / 1000 - seenByExpiresAt);\n    const isAction = isActionMessage(message);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, message.chatId) : undefined;\n    const canShowReactionsCount = !isLocal && !isChannel && !isScheduled && !isAction && !isPrivate && message.reactions\n      && !areReactionsEmpty(message.reactions) && message.reactions.canSeeList;\n    const isProtected = selectIsMessageProtected(global, message);\n    const canCopyNumber = Boolean(message.content.contact);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const customEmojiSetsInfo = selectMessageCustomEmojiSets(global, message);\n    const customEmojiSetsNotFiltered = customEmojiSetsInfo?.map((set) => selectStickerSet(global, set));\n    const customEmojiSets = customEmojiSetsNotFiltered?.every<ApiStickerSet>(Boolean)\n      ? customEmojiSetsNotFiltered : undefined;\n\n    const translationRequestLanguage = selectRequestedTranslationLanguage(global, message.chatId, message.id);\n    const hasTranslation = translationRequestLanguage\n      ? Boolean(selectMessageTranslations(global, message.chatId, translationRequestLanguage)[message.id]?.text)\n      : undefined;\n\n    const { canTranslate: isTranslationEnabled, doNotTranslate } = global.settings.byKey;\n\n    const canTranslateLanguage = !detectedLanguage || !doNotTranslate.includes(detectedLanguage);\n    const canTranslate = IS_TRANSLATION_SUPPORTED && isTranslationEnabled && message.content.text\n      && canTranslateLanguage && !isLocal && !isServiceNotification && !isScheduled && !isAction && !hasTranslation\n      && !message.emojiOnlyCount;\n\n    return {\n      availableReactions: global.availableReactions,\n      topReactions: global.topReactions,\n      noOptions,\n      canSendNow: isScheduled,\n      canReschedule: isScheduled,\n      canReply: !isPinned && !isScheduled && canReply,\n      canPin: !isScheduled && canPin,\n      canUnpin: !isScheduled && canUnpin,\n      canDelete,\n      canReport,\n      canEdit: !isPinned && canEdit,\n      canForward: !isScheduled && canForward,\n      canFaveSticker: !isScheduled && canFaveSticker,\n      canUnfaveSticker: !isScheduled && canUnfaveSticker,\n      canCopy: canCopyNumber || (!isProtected && canCopy),\n      canCopyLink: !isScheduled && canCopyLink,\n      canSelect,\n      canDownload: !isProtected && canDownload,\n      canSaveGif: !isProtected && canSaveGif,\n      canRevote,\n      canClosePoll: !isScheduled && canClosePoll,\n      activeDownloads,\n      canShowSeenBy,\n      enabledReactions: chat?.isForbidden ? undefined : chatFullInfo?.enabledReactions,\n      maxUniqueReactions,\n      isPrivate,\n      isCurrentUserPremium,\n      hasFullInfo: Boolean(chatFullInfo),\n      canShowReactionsCount,\n      canShowReactionList: !isLocal && !isAction && !isScheduled && chat?.id !== SERVICE_NOTIFICATIONS_USER_ID,\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      customEmojiSetsInfo,\n      customEmojiSets,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, message.chatId),\n      threadId,\n      canTranslate,\n      canShowOriginal: hasTranslation,\n      canSelectLanguage: hasTranslation,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n    };\n  },\n)(ContextMenuContainer));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSponsoredMessage } from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport { selectIsCurrentUserPremium, selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useFlag from '../../../hooks/useFlag';\n\nimport MessageContextMenu from './MessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiSponsoredMessage;\n  anchor: IAnchorPosition;\n  onAboutAds: () => void;\n  onClose: () => void;\n  onCloseAnimationEnd: () => void;\n};\n\ntype StateProps = {\n  canBuyPremium?: boolean;\n};\n\nconst SponsoredMessageContextMenuContainer: FC<OwnProps & StateProps> = ({\n  message,\n  anchor,\n  onAboutAds,\n  onClose,\n  onCloseAnimationEnd,\n  canBuyPremium,\n}) => {\n  const { openPremiumModal, showDialog } = getActions();\n\n  const [isMenuOpen, , closeMenu] = useFlag(true);\n  const { transitionClassNames } = useShowTransition(isMenuOpen, onCloseAnimationEnd, undefined, false);\n\n  const handleAboutAdsOpen = useLastCallback(() => {\n    onAboutAds();\n    closeMenu();\n  });\n\n  const handleSponsoredHide = useLastCallback(() => {\n    closeMenu();\n    openPremiumModal();\n    onClose();\n  });\n\n  const handleSponsorInfo = useLastCallback(() => {\n    closeMenu();\n    showDialog({\n      data: {\n        message: [message.sponsorInfo, message.additionalInfo].join('\\n'),\n      },\n    });\n  });\n\n  if (!anchor) {\n    return undefined;\n  }\n\n  return (\n    <div className={buildClassName('ContextMenuContainer', transitionClassNames)}>\n      <MessageContextMenu\n        isOpen={isMenuOpen}\n        anchor={anchor}\n        message={message}\n        onClose={closeMenu}\n        onCloseAnimationEnd={closeMenu}\n        onAboutAds={handleAboutAdsOpen}\n        onSponsoredHide={canBuyPremium ? handleSponsoredHide : undefined}\n        onSponsorInfo={handleSponsorInfo}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      canBuyPremium: !selectIsCurrentUserPremium(global) && !selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(SponsoredMessageContextMenuContainer));\n","import React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { MessageList } from '../../global/types';\n\nimport { EMOJI_SIZE_MODAL, STICKER_SIZE_MODAL, TME_LINK_PREFIX } from '../../config';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectShouldSchedule,\n  selectStickerSet,\n  selectThreadInfo,\n} from '../../global/selectors';\nimport renderText from './helpers/renderText';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useSchedule from '../../hooks/useSchedule';\nimport usePrevious from '../../hooks/usePrevious';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\nimport Loading from '../ui/Loading';\nimport StickerButton from './StickerButton';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\n\nimport './StickerSetModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  fromSticker?: ApiSticker;\n  stickerSetShortName?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  canSendStickers?: boolean;\n  stickerSet?: ApiStickerSet;\n  canScheduleUntilOnline?: boolean;\n  shouldSchedule?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldUpdateStickerSetOrder?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerSetModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  fromSticker,\n  stickerSetShortName,\n  stickerSet,\n  canSendStickers,\n  canScheduleUntilOnline,\n  shouldSchedule,\n  isSavedMessages,\n  isCurrentUserPremium,\n  shouldUpdateStickerSetOrder,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    loadStickers,\n    toggleStickerSet,\n    sendMessage,\n    showNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n\n  const prevStickerSet = usePrevious(stickerSet);\n  const renderingStickerSet = stickerSet || prevStickerSet;\n\n  const isAdded = Boolean(!renderingStickerSet?.isArchived && renderingStickerSet?.installedDate);\n  const isEmoji = renderingStickerSet?.isEmoji;\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => {\n    if (isOpen && !renderingStickerSet?.stickers) {\n      loadStickers({\n        stickerSetInfo: fromSticker ? fromSticker.stickerSetInfo : { shortName: stickerSetShortName! },\n      });\n    }\n  }, [isOpen, fromSticker, loadStickers, stickerSetShortName, renderingStickerSet]);\n\n  const handleSelect = useCallback((sticker: ApiSticker, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList) {\n      return;\n    }\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (shouldSchedule || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        sendMessage({\n          messageList: currentMessageList, sticker, isSilent, scheduledAt,\n        });\n        onClose();\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && isAdded,\n      });\n      onClose();\n    }\n  }, [currentMessageList, shouldSchedule, requestCalendar, onClose, shouldUpdateStickerSetOrder, isAdded]);\n\n  const handleButtonClick = useCallback(() => {\n    if (renderingStickerSet) {\n      toggleStickerSet({ stickerSetId: renderingStickerSet.id });\n      onClose();\n    }\n  }, [onClose, renderingStickerSet, toggleStickerSet]);\n\n  const handleCopyLink = useCallback(() => {\n    if (!renderingStickerSet) return;\n    const { shortName } = renderingStickerSet;\n    const suffix = isEmoji ? 'addemoji' : 'addstickers';\n    const url = `${TME_LINK_PREFIX}${suffix}/${shortName}`;\n    copyTextToClipboard(url);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [isEmoji, lang, renderingStickerSet, showNotification]);\n\n  const renderButtonText = () => {\n    if (!renderingStickerSet) return lang('Loading');\n\n    const suffix = isEmoji ? 'Emoji' : 'Sticker';\n\n    return lang(\n      isAdded ? `StickerPack.Remove${suffix}Count` : `StickerPack.Add${suffix}Count`,\n      renderingStickerSet.count,\n      'i',\n    );\n  };\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  function renderHeader() {\n    const fullClassName = buildClassName('modal-header', !shouldHideTopBorder && 'with-top-border');\n\n    return (\n      <div className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">\n          {renderingStickerSet ? renderText(renderingStickerSet.title, ['emoji', 'links']) : lang('AccDescrStickerSet')}\n        </div>\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"copy\" onClick={handleCopyLink}>{lang('StickersCopy')}</MenuItem>\n        </DropdownMenu>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={buildClassName('StickerSetModal', isEmoji && 'custom-emoji')}\n      isOpen={isOpen}\n      onClose={onClose}\n      header={renderHeader()}\n    >\n      {renderingStickerSet?.stickers ? (\n        <>\n          <div ref={containerRef} className=\"stickers custom-scroll\" onScroll={handleContentScroll}>\n            <div className=\"shared-canvas-container stickers-grid\">\n              <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n              {renderingStickerSet.stickers.map((sticker) => (\n                <StickerButton\n                  sticker={sticker}\n                  size={isEmoji ? EMOJI_SIZE_MODAL : STICKER_SIZE_MODAL}\n                  observeIntersection={observeIntersection}\n                  onClick={canSendStickers && !isEmoji ? handleSelect : undefined}\n                  clickArg={sticker}\n                  isSavedMessages={isSavedMessages}\n                  isCurrentUserPremium={isCurrentUserPremium}\n                  sharedCanvasRef={sharedCanvasRef}\n                />\n              ))}\n            </div>\n          </div>\n          <div className=\"button-wrapper\">\n            <Button\n              size=\"smaller\"\n              fluid\n              color={isAdded ? 'danger' : 'primary'}\n              onClick={handleButtonClick}\n            >\n              {renderButtonText()}\n            </Button>\n          </div>\n        </>\n      ) : (\n        <Loading />\n      )}\n      {calendar}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { fromSticker, stickerSetShortName }): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    const { chatId, threadId } = currentMessageList || {};\n    const chat = chatId && selectChat(global, chatId);\n    const sendOptions = chat ? getAllowedAttachmentOptions(chat) : undefined;\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isComments = Boolean(threadInfo?.originChannelId);\n    const canSendStickers = Boolean(\n      chat && threadId && getCanPostInChat(chat, threadId, isComments) && sendOptions?.canSendStickers,\n    );\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n\n    const stickerSetInfo = fromSticker ? fromSticker.stickerSetInfo\n      : stickerSetShortName ? { shortName: stickerSetShortName } : undefined;\n\n    const stickerSet = stickerSetInfo ? selectStickerSet(global, stickerSetInfo) : undefined;\n\n    return {\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      canSendStickers,\n      isSavedMessages,\n      shouldSchedule: selectShouldSchedule(global),\n      stickerSet,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      shouldUpdateStickerSetOrder: global.settings.byKey.shouldUpdateStickerSetOrder,\n      currentMessageList,\n    };\n  },\n)(StickerSetModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Qzt_zq5gWHne6P2rw7Wj\",\"sets\":\"Ay41sqhq2QmXdgDHnt2E\"};","import React, {\n  memo, useCallback, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { selectCanPlayAnimatedEmojis } from '../../global/selectors';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport usePrevious from '../../hooks/usePrevious';\nimport useLang from '../../hooks/useLang';\n\nimport Modal from '../ui/Modal';\nimport StickerSetCard from './StickerSetCard';\n\nimport styles from './CustomEmojiSetsModal.module.scss';\n\nexport type OwnProps = {\n  customEmojiSetIds?: string[];\n  onClose: () => void;\n};\n\ntype StateProps = {\n  customEmojiSets?: ApiStickerSet[];\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst CustomEmojiSetsModal: FC<OwnProps & StateProps> = ({\n  customEmojiSets,\n  canPlayAnimatedEmojis,\n  onClose,\n}) => {\n  const { openStickerSet } = getActions();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const customEmojiModalRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({\n    rootRef: customEmojiModalRef, isDisabled: !customEmojiSets,\n  });\n\n  const prevCustomEmojiSets = usePrevious(customEmojiSets);\n  const renderingCustomEmojiSets = customEmojiSets || prevCustomEmojiSets;\n\n  const handleSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  return (\n    <Modal\n      isOpen={Boolean(customEmojiSets)}\n      className={styles.root}\n      onClose={onClose}\n      hasCloseButton\n      title={lang('lng_custom_emoji_used_sets')}\n    >\n      <div className={buildClassName(styles.sets, 'custom-scroll')} ref={customEmojiModalRef} teactFastList>\n        {renderingCustomEmojiSets?.map((customEmojiSet) => (\n          <StickerSetCard\n            key={customEmojiSet.id}\n            className={styles.setCard}\n            stickerSet={customEmojiSet}\n            onClick={handleSetClick}\n            observeIntersection={observeIntersectionForCovers}\n            noPlay={!canPlayAnimatedEmojis}\n          />\n        ))}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { customEmojiSetIds }): StateProps => {\n    const customEmojiSets = customEmojiSetIds?.map((id) => global.stickers.setsById[id]);\n\n    return {\n      customEmojiSets,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(CustomEmojiSetsModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiBotCommand, ApiChat } from '../../api/types';\nimport type { IAnchorPosition } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { REPLIES_USER_ID } from '../../config';\nimport { disableScrolling, enableScrolling } from '../../util/scrollLock';\nimport {\n  selectChat,\n  selectBot,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsPremiumPurchaseBlocked,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport {\n  getCanAddContact,\n  getCanDeleteChat,\n  getCanManageTopic,\n  getHasAdminRight,\n  isChatChannel,\n  isChatGroup,\n  isUserId,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../global/helpers';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useLang from '../../hooks/useLang';\nimport useFlag from '../../hooks/useFlag';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport Portal from '../ui/Portal';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport DeleteChatModal from '../common/DeleteChatModal';\nimport MuteChatModal from '../left/MuteChatModal.async';\nimport ReportModal from '../common/ReportModal';\n\nimport './HeaderMenuContainer.scss';\n\nconst BOT_BUTTONS: Record<string, { icon: string; label: string }> = {\n  settings: {\n    icon: 'bots',\n    label: 'BotSettings',\n  },\n  privacy: {\n    icon: 'info',\n    label: 'Privacy',\n  },\n  help: {\n    icon: 'help',\n    label: 'BotHelp',\n  },\n};\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: number;\n  isOpen: boolean;\n  withExtraActions: boolean;\n  anchor: IAnchorPosition;\n  isChannel?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  withForumActions?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  onSubscribeChannel: () => void;\n  onSearchClick: () => void;\n  onAsMessagesClick: () => void;\n  onClose: () => void;\n  onCloseAnimationEnd: () => void;\n  onJoinRequestsClick?: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  botCommands?: ApiBotCommand[];\n  isPrivate?: boolean;\n  isMuted?: boolean;\n  isTopic?: boolean;\n  isForum?: boolean;\n  canAddContact?: boolean;\n  canReportChat?: boolean;\n  canDeleteChat?: boolean;\n  canGiftPremium?: boolean;\n  canCreateTopic?: boolean;\n  canEditTopic?: boolean;\n  hasLinkedChat?: boolean;\n  isChatInfoShown?: boolean;\n};\n\nconst CLOSE_MENU_ANIMATION_DURATION = 200;\n\nconst HeaderMenuContainer: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  withExtraActions,\n  anchor,\n  isChannel,\n  botCommands,\n  withForumActions,\n  isTopic,\n  isForum,\n  isChatInfoShown,\n  canStartBot,\n  canRestartBot,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  pendingJoinRequests,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  chat,\n  isPrivate,\n  isMuted,\n  canReportChat,\n  canDeleteChat,\n  canGiftPremium,\n  hasLinkedChat,\n  canAddContact,\n  canCreateTopic,\n  canEditTopic,\n  onJoinRequestsClick,\n  onSubscribeChannel,\n  onSearchClick,\n  onAsMessagesClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    updateChatMutedState,\n    enterMessageSelectMode,\n    sendBotCommand,\n    restartBot,\n    requestMasterAndJoinGroupCall,\n    createGroupCall,\n    openLinkedChat,\n    openAddContactDialog,\n    requestMasterAndRequestCall,\n    toggleStatistics,\n    openGiftPremiumModal,\n    openChatWithInfo,\n    openCreateTopicPanel,\n    openEditTopicPanel,\n    openChat,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isReportModalOpen, setIsReportModalOpen] = useState(false);\n  const [isMuteModalOpen, setIsMuteModalOpen] = useState(false);\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const { x, y } = anchor;\n\n  useShowTransition(isOpen, onCloseAnimationEnd, undefined, false);\n  const isViewGroupInfoShown = usePrevDuringAnimation(\n    (!isChatInfoShown && isForum) ? true : undefined, CLOSE_MENU_ANIMATION_DURATION,\n  );\n\n  const handleReport = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsReportModalOpen(true);\n  });\n\n  const closeReportModal = useLastCallback(() => {\n    setIsReportModalOpen(false);\n    onClose();\n  });\n\n  const closeMuteModal = useLastCallback(() => {\n    setIsMuteModalOpen(false);\n    onClose();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsDeleteModalOpen(true);\n  });\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const handleViewGroupInfo = useLastCallback(() => {\n    openChatWithInfo({ id: chatId, threadId });\n    closeMenu();\n  });\n\n  const closeDeleteModal = useLastCallback(() => {\n    setIsDeleteModalOpen(false);\n    onClose();\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnmuteClick = useLastCallback(() => {\n    updateChatMutedState({ chatId, isMuted: false });\n    closeMenu();\n  });\n\n  const handleMuteClick = useLastCallback(() => {\n    markRenderMuteModal();\n    setIsMuteModalOpen(true);\n    setIsMenuOpen(false);\n  });\n\n  const handleCreateTopicClick = useLastCallback(() => {\n    openCreateTopicPanel({ chatId });\n    closeMenu();\n  });\n\n  const handleEditTopicClick = useLastCallback(() => {\n    openEditTopicPanel({ chatId, topicId: threadId });\n    closeMenu();\n  });\n\n  const handleViewAsTopicsClick = useLastCallback(() => {\n    openChat({ id: undefined });\n    closeMenu();\n  });\n\n  const handleEnterVoiceChatClick = useLastCallback(() => {\n    if (canCreateVoiceChat) {\n      // TODO Show popup to schedule\n      createGroupCall({\n        chatId,\n      });\n    } else {\n      requestMasterAndJoinGroupCall({\n        chatId,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleLinkedChatClick = useLastCallback(() => {\n    openLinkedChat({ id: chatId });\n    closeMenu();\n  });\n\n  const handleGiftPremiumClick = useLastCallback(() => {\n    openGiftPremiumModal({ forUserId: chatId });\n    closeMenu();\n  });\n\n  const handleAddContactClick = useLastCallback(() => {\n    openAddContactDialog({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleSubscribe = useLastCallback(() => {\n    onSubscribeChannel();\n    closeMenu();\n  });\n\n  const handleVideoCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId, isVideo: true });\n    closeMenu();\n  });\n\n  const handleCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleSearch = useLastCallback(() => {\n    onSearchClick();\n    closeMenu();\n  });\n\n  const handleStatisticsClick = useLastCallback(() => {\n    toggleStatistics();\n    closeMenu();\n  });\n\n  const handleSelectMessages = useLastCallback(() => {\n    enterMessageSelectMode();\n    closeMenu();\n  });\n\n  const handleOpenAsMessages = useLastCallback(() => {\n    onAsMessagesClick();\n    closeMenu();\n  });\n\n  useEffect(() => {\n    disableScrolling();\n\n    return enableScrolling;\n  }, []);\n\n  const lang = useLang();\n\n  const botButtons = useMemo(() => {\n    return botCommands?.map(({ command }) => {\n      const cmd = BOT_BUTTONS[command];\n      if (!cmd) return undefined;\n      const handleClick = () => {\n        sendBotCommand({ command: `/${command}` });\n        closeMenu();\n      };\n\n      return (\n        <MenuItem\n          key={command}\n          icon={cmd.icon}\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={handleClick}\n        >\n          {lang(cmd.label)}\n        </MenuItem>\n      );\n    });\n  }, [botCommands, closeMenu, lang, sendBotCommand]);\n\n  return (\n    <Portal>\n      <div className=\"HeaderMenuContainer\">\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${x}px;top: ${y}px;`}\n          onClose={closeMenu}\n        >\n          {isMobile && canSearch && (\n            <MenuItem\n              icon=\"search\"\n              onClick={handleSearch}\n            >\n              {lang('Search')}\n            </MenuItem>\n          )}\n          {withForumActions && canCreateTopic && (\n            <>\n              <MenuItem\n                icon=\"comments\"\n                onClick={handleCreateTopicClick}\n              >\n                {lang('lng_forum_create_topic')}\n              </MenuItem>\n              <MenuSeparator />\n            </>\n          )}\n          {isViewGroupInfoShown && (\n            <MenuItem\n              icon=\"info\"\n              onClick={handleViewGroupInfo}\n            >\n              {isTopic ? lang('lng_context_view_topic') : lang('lng_context_view_group')}\n            </MenuItem>\n          )}\n          {canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditTopicClick}\n            >\n              {lang('lng_forum_topic_edit')}\n            </MenuItem>\n          )}\n          {isMobile && !withForumActions && isForum && !isTopic && (\n            <MenuItem\n              icon=\"forums\"\n              onClick={handleViewAsTopicsClick}\n            >\n              {lang('Chat.ContextViewAsTopics')}\n            </MenuItem>\n          )}\n          {withForumActions && Boolean(pendingJoinRequests) && (\n            <MenuItem\n              icon=\"user\"\n              onClick={onJoinRequestsClick}\n            >\n              {isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n              <div className=\"right-badge\">{pendingJoinRequests}</div>\n            </MenuItem>\n          )}\n          {withForumActions && !isTopic && (\n            <MenuItem\n              icon=\"message\"\n              onClick={handleOpenAsMessages}\n            >\n              {lang('lng_forum_view_as_messages')}\n            </MenuItem>\n          )}\n          {withExtraActions && canStartBot && (\n            <MenuItem\n              icon=\"bots\"\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </MenuItem>\n          )}\n          {withExtraActions && canRestartBot && (\n            <MenuItem\n              icon=\"bots\"\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </MenuItem>\n          )}\n          {withExtraActions && canSubscribe && (\n            <MenuItem\n              icon={isChannel ? 'channel' : 'group'}\n              onClick={handleSubscribe}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </MenuItem>\n          )}\n          {canAddContact && (\n            <MenuItem\n              icon=\"add-user\"\n              onClick={handleAddContactClick}\n            >\n              {lang('AddContact')}\n            </MenuItem>\n          )}\n          {isMobile && canCall && (\n            <MenuItem\n              icon=\"phone\"\n              onClick={handleCall}\n            >\n              {lang('Call')}\n            </MenuItem>\n          )}\n          {canCall && (\n            <MenuItem\n              icon=\"video-outlined\"\n              onClick={handleVideoCall}\n            >\n              {lang('VideoCall')}\n            </MenuItem>\n          )}\n          {canMute && (isMuted ? (\n            <MenuItem\n              icon=\"unmute\"\n              onClick={handleUnmuteClick}\n            >\n              {lang('ChatsUnmute')}\n            </MenuItem>\n          )\n            : (\n              <MenuItem\n                icon=\"mute\"\n                onClick={handleMuteClick}\n              >\n                {lang('ChatsMute')}...\n              </MenuItem>\n            )\n          )}\n          {(canEnterVoiceChat || canCreateVoiceChat) && (\n            <MenuItem\n              icon=\"voice-chat\"\n              onClick={handleEnterVoiceChatClick}\n            >\n              {lang(canCreateVoiceChat ? 'StartVoipChat' : 'VoipGroupJoinCall')}\n            </MenuItem>\n          )}\n          {hasLinkedChat && (\n            <MenuItem\n              icon={isChannel ? 'comments' : 'channel'}\n              onClick={handleLinkedChatClick}\n            >\n              {lang(isChannel ? 'ViewDiscussion' : 'lng_profile_view_channel')}\n            </MenuItem>\n          )}\n          {!withForumActions && (\n            <MenuItem\n              icon=\"select\"\n              onClick={handleSelectMessages}\n            >\n              {lang('ReportSelectMessages')}\n            </MenuItem>\n          )}\n          {canViewStatistics && (\n            <MenuItem\n              icon=\"stats\"\n              onClick={handleStatisticsClick}\n            >\n              {lang('Statistics')}\n            </MenuItem>\n          )}\n          {canReportChat && (\n            <MenuItem\n              icon=\"flag\"\n              onClick={handleReport}\n            >\n              {lang('ReportPeer.Report')}\n            </MenuItem>\n          )}\n          {botButtons}\n          {canGiftPremium && (\n            <MenuItem\n              icon=\"gift\"\n              onClick={handleGiftPremiumClick}\n            >\n              {lang('GiftPremium')}\n            </MenuItem>\n          )}\n          {canLeave && (\n            <>\n              <MenuSeparator />\n              <MenuItem\n                destructive\n                icon=\"delete\"\n                onClick={handleDelete}\n              >\n                {lang(isPrivate\n                  ? 'DeleteChatUser'\n                  : (canDeleteChat ? 'GroupInfo.DeleteAndExit' : (isChannel ? 'LeaveChannel' : 'Group.LeaveGroup')))}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n        {chat && (\n          <DeleteChatModal\n            isOpen={isDeleteModalOpen}\n            onClose={closeDeleteModal}\n            chat={chat}\n          />\n        )}\n        {canMute && shouldRenderMuteModal && chat?.id && (\n          <MuteChatModal\n            isOpen={isMuteModalOpen}\n            onClose={closeMuteModal}\n            onCloseAnimationEnd={unmarkRenderMuteModal}\n            chatId={chat.id}\n          />\n        )}\n        {canReportChat && chat?.id && (\n          <ReportModal\n            isOpen={isReportModalOpen}\n            onClose={closeReportModal}\n            subject=\"peer\"\n            chatId={chat.id}\n          />\n        )}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat || chat.isRestricted) {\n      return {};\n    }\n    const isPrivate = isUserId(chat.id);\n    const user = isPrivate ? selectUser(global, chatId) : undefined;\n    const canAddContact = user && getCanAddContact(user);\n    const isMainThread = threadId === MAIN_THREAD_ID;\n    const canReportChat = isMainThread && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    const chatBot = chatId !== REPLIES_USER_ID ? selectBot(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const canGiftPremium = Boolean(\n      global.lastSyncTime\n      && userFullInfo?.premiumGifts?.length\n      && !selectIsPremiumPurchaseBlocked(global),\n    );\n\n    const topic = chat?.topics?.[threadId];\n    const canCreateTopic = chat.isForum && (\n      chat.isCreator || !isUserRightBanned(chat, 'manageTopics') || getHasAdminRight(chat, 'manageTopics')\n    );\n    const canEditTopic = topic && getCanManageTopic(chat, topic);\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      isPrivate,\n      isTopic: chat?.isForum && !isMainThread,\n      isForum: chat?.isForum,\n      canAddContact,\n      canReportChat,\n      canDeleteChat: getCanDeleteChat(chat),\n      canGiftPremium,\n      hasLinkedChat: Boolean(chatFullInfo?.linkedChatId),\n      botCommands: chatBot ? userFullInfo?.botInfo?.commands : undefined,\n      isChatInfoShown: selectTabState(global).isChatInfoShown\n        && currentChatId === chatId && currentThreadId === threadId,\n      canCreateTopic,\n      canEditTopic,\n    };\n  },\n)(HeaderMenuContainer));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState, useLayoutEffect,\n} from '../../lib/teact/teact';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { IS_IOS } from '../../util/windowEnvironment';\nimport { debounce } from '../../util/schedulers';\nimport {\n  selectCurrentTextSearch,\n  selectCurrentChat,\n  selectTabState,\n  selectCurrentMessageList,\n} from '../../global/selectors';\nimport { getDayStartAt } from '../../util/dateFormat';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport SearchInput from '../ui/SearchInput';\n\nimport './MobileSearch.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  isActive?: boolean;\n  chat?: ApiChat;\n  threadId?: number;\n  query?: string;\n  totalCount?: number;\n  foundIds?: number[];\n  isHistoryCalendarOpen?: boolean;\n};\n\nconst runDebouncedForSearch = debounce((cb) => cb(), 200, false);\n\nconst MobileSearchFooter: FC<StateProps> = ({\n  isActive,\n  chat,\n  threadId,\n  query,\n  totalCount,\n  foundIds,\n  isHistoryCalendarOpen,\n}) => {\n  const {\n    setLocalTextSearchQuery,\n    searchTextMessagesLocal,\n    focusMessage,\n    closeLocalTextSearch,\n    openHistoryCalendar,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [focusedIndex, setFocusedIndex] = useState(0);\n\n  // Fix for iOS keyboard\n  useEffect(() => {\n    const { visualViewport } = window as any;\n    if (!visualViewport) {\n      return undefined;\n    }\n\n    const mainEl = document.getElementById('Main') as HTMLDivElement;\n    const handleResize = () => {\n      const { activeElement } = document;\n      if (activeElement && (activeElement === inputRef.current)) {\n        const { pageTop, height } = visualViewport;\n\n        requestMutation(() => {\n          mainEl.style.transform = `translateY(${pageTop}px)`;\n          mainEl.style.height = `${height}px`;\n          document.documentElement.scrollTop = pageTop;\n        });\n      } else {\n        requestMutation(() => {\n          mainEl.style.transform = '';\n          mainEl.style.height = '';\n        });\n      }\n    };\n\n    visualViewport.addEventListener('resize', handleResize);\n\n    return () => {\n      visualViewport.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  // Focus message\n  useEffect(() => {\n    if (chat?.id && foundIds?.length) {\n      focusMessage({ chatId: chat.id, messageId: foundIds[0], threadId });\n      setFocusedIndex(0);\n    } else {\n      setFocusedIndex(-1);\n    }\n  }, [chat?.id, focusMessage, foundIds, threadId]);\n\n  // Disable native up/down buttons on iOS\n  useLayoutEffect(() => {\n    if (!IS_IOS) return;\n\n    Array.from(document.querySelectorAll<HTMLInputElement>('input')).forEach((input) => {\n      input.disabled = Boolean(isActive && input !== inputRef.current);\n    });\n  }, [isActive]);\n\n  // Blur on exit\n  useEffect(() => {\n    if (!isActive) {\n      inputRef.current!.blur();\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    const searchInput = document.querySelector<HTMLInputElement>('#MobileSearch input')!;\n    searchInput.blur();\n  }, [isHistoryCalendarOpen]);\n\n  const handleMessageSearchQueryChange = useLastCallback((newQuery: string) => {\n    setLocalTextSearchQuery({ query: newQuery });\n\n    if (newQuery.length) {\n      runDebouncedForSearch(searchTextMessagesLocal);\n    }\n  });\n\n  const handleUp = useLastCallback(() => {\n    if (chat && foundIds) {\n      const newFocusIndex = focusedIndex + 1;\n      focusMessage({ chatId: chat.id, messageId: foundIds[newFocusIndex], threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  const handleDown = useLastCallback(() => {\n    if (chat && foundIds) {\n      const newFocusIndex = focusedIndex - 1;\n      focusMessage({ chatId: chat.id, messageId: foundIds[newFocusIndex], threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  const handleCloseLocalTextSearch = useLastCallback(() => {\n    closeLocalTextSearch();\n  });\n\n  return (\n    <div id=\"MobileSearch\" className={isActive ? 'active' : ''}>\n      <div className=\"header\">\n        <Button\n          size=\"smaller\"\n          round\n          color=\"translucent\"\n          onClick={handleCloseLocalTextSearch}\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        <SearchInput\n          ref={inputRef}\n          value={query}\n          onChange={handleMessageSearchQueryChange}\n        />\n      </div>\n      <div className=\"footer\">\n        <div className=\"counter\">\n          {query ? (\n            foundIds?.length ? (\n              `${focusedIndex + 1} of ${totalCount}`\n            ) : foundIds && !foundIds.length ? (\n              'No results'\n            ) : (\n              ''\n            )\n          ) : (\n            <Button\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openHistoryCalendar({ selectedAt: getDayStartAt(Date.now()) })}\n              ariaLabel=\"Search messages by date\"\n            >\n              <i className=\"icon icon-calendar\" />\n            </Button>\n          )}\n        </div>\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleUp}\n          disabled={!foundIds || !foundIds.length || focusedIndex === foundIds.length - 1}\n        >\n          <i className=\"icon icon-up\" />\n        </Button>\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleDown}\n          disabled={!foundIds || !foundIds.length || focusedIndex === 0}\n        >\n          <i className=\"icon icon-down\" />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chat = selectCurrentChat(global);\n    if (!chat) {\n      return {};\n    }\n\n    const { query, results } = selectCurrentTextSearch(global) || {};\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const { totalCount, foundIds } = results || {};\n\n    return {\n      chat,\n      query,\n      totalCount,\n      threadId,\n      foundIds,\n      isHistoryCalendarOpen: Boolean(selectTabState(global).historyCalendarSelectedAt),\n    };\n  },\n)(MobileSearchFooter));\n","import React, { memo, useRef, useMemo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiReaction, ApiAvailableReaction, ApiChatReactions } from '../../../api/types';\n\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport buildClassName from '../../../util/buildClassName';\nimport { getReactionUniqueKey, sortReactions } from '../../../global/helpers';\nimport { selectChatFullInfo } from '../../../global/selectors';\n\nimport useWindowSize from '../../../hooks/useWindowSize';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport ReactionEmoji from '../../common/ReactionEmoji';\n\nimport styles from './ReactionPickerLimited.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  loadAndPlay: boolean;\n  onReactionSelect?: (reaction: ApiReaction) => void;\n  selectedReactionIds?: string[];\n};\n\ntype StateProps = {\n  enabledReactions?: ApiChatReactions;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions: ApiReaction[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst REACTION_SIZE = 36;\nconst GRID_GAP_THRESHOLD = 600;\nconst MODAL_PADDING_SIZE_REM = 0.5;\nconst MODAL_MAX_HEIGHT_REM = 18;\nconst MODAL_MAX_WIDTH_REM = 26.25;\nconst GRID_GAP_DESKTOP_REM = 0.625;\nconst GRID_GAP_MOBILE_REM = 0.5;\n\nconst ReactionPickerLimited: FC<OwnProps & StateProps> = ({\n  loadAndPlay,\n  enabledReactions,\n  availableReactions,\n  topReactions,\n  selectedReactionIds,\n  onReactionSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  const { width: windowWidth } = useWindowSize();\n  const { isTouchScreen } = useAppLayout();\n\n  const allAvailableReactions = useMemo(() => {\n    if (!enabledReactions) {\n      return [];\n    }\n\n    if (enabledReactions.type === 'all') {\n      return sortReactions((availableReactions || []).map(({ reaction }) => reaction), topReactions);\n    }\n\n    return sortReactions(enabledReactions.allowed, topReactions);\n  }, [availableReactions, enabledReactions, topReactions]);\n\n  const pickerHeight = useMemo(() => {\n    const pickerWidth = Math.min(MODAL_MAX_WIDTH_REM * REM, windowWidth);\n    const gapWidth = (windowWidth > GRID_GAP_THRESHOLD ? GRID_GAP_DESKTOP_REM : GRID_GAP_MOBILE_REM) * REM;\n    const availableWidth = pickerWidth - MODAL_PADDING_SIZE_REM * REM;\n\n    const itemsInRow = Math.floor((availableWidth + gapWidth) / (REACTION_SIZE + gapWidth));\n    const rowsCount = Math.ceil(allAvailableReactions.length / itemsInRow);\n\n    const pickerMaxHeight = rowsCount * REACTION_SIZE + (rowsCount - 1) * gapWidth + MODAL_PADDING_SIZE_REM * REM * 2;\n\n    return Math.min(MODAL_MAX_HEIGHT_REM * REM, pickerMaxHeight);\n  }, [allAvailableReactions.length, windowWidth]);\n\n  return (\n    <div className={styles.root} style={`height: ${pickerHeight}px`}>\n      <div className={buildClassName(styles.wrapper, 'no-selection', isTouchScreen ? 'no-scrollbar' : 'custom-scroll')}>\n        <div className=\"symbol-set-container shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allAvailableReactions.map((reaction) => {\n            const reactionId = getReactionUniqueKey(reaction);\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            return (\n              <ReactionEmoji\n                key={reactionId}\n                reaction={reaction}\n                isSelected={isSelected}\n                loadAndPlay={loadAndPlay}\n                availableReactions={availableReactions}\n                onClick={onReactionSelect!}\n                sharedCanvasRef={sharedCanvasRef}\n                sharedCanvasHqRef={sharedCanvasHqRef}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { availableReactions, topReactions } = global;\n    const { enabledReactions } = selectChatFullInfo(global, chatId) || {};\n\n    return {\n      enabledReactions,\n      availableReactions,\n      topReactions,\n    };\n  },\n)(ReactionPickerLimited));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"vUbCal8_iSPkPVzQcz24\",\"wrapper\":\"f4pTNqkRRCFtZzheXcV9\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type {\n  ApiMessage, ApiReaction, ApiSticker, ApiReactionCustomEmoji,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { isUserId } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo, selectChatMessage, selectIsContextMenuTranslucent, selectTabState,\n} from '../../../global/selectors';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport ReactionPickerLimited from './ReactionPickerLimited';\nimport Menu from '../../ui/Menu';\n\nimport styles from './ReactionPicker.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  withCustomReactions?: boolean;\n  message?: ApiMessage;\n  position?: IAnchorPosition;\n  isTranslucent?: boolean;\n}\n\nconst FULL_PICKER_SHIFT_DELTA = { x: -23, y: -64 };\nconst LIMITED_PICKER_SHIFT_DELTA = { x: -21, y: -10 };\n\nconst ReactionPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  message,\n  position,\n  isTranslucent,\n  withCustomReactions,\n}) => {\n  const { toggleReaction, closeReactionPicker } = getActions();\n\n  const renderedMessageId = useCurrentOrPrev(message?.id, true);\n  const renderedChatId = useCurrentOrPrev(message?.chatId, true);\n  const storedPosition = useCurrentOrPrev(position, true);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const renderingPosition = useMemo((): IAnchorPosition | undefined => {\n    if (!storedPosition) {\n      return undefined;\n    }\n\n    return {\n      x: storedPosition.x + (withCustomReactions ? FULL_PICKER_SHIFT_DELTA.x : LIMITED_PICKER_SHIFT_DELTA.x),\n      y: storedPosition.y + (withCustomReactions ? FULL_PICKER_SHIFT_DELTA.y : LIMITED_PICKER_SHIFT_DELTA.y),\n    };\n  }, [storedPosition, withCustomReactions]);\n\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style,\n  } = useMenuPosition(renderingPosition, getTriggerElement, getRootElement, getMenuElement, getLayout);\n\n  const handleToggleCustomReaction = useLastCallback((sticker: ApiSticker) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n    const reaction = sticker.isCustomEmoji\n      ? { documentId: sticker.id } as ApiReactionCustomEmoji\n      : { emoticon: sticker.emoji } as ApiReaction;\n\n    toggleReaction({\n      chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n    });\n    closeReactionPicker();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n\n    toggleReaction({\n      chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n    });\n    closeReactionPicker();\n  });\n\n  const selectedReactionIds = useMemo(() => {\n    return (message?.reactions?.results || []).reduce<string[]>((acc, { chosenOrder, reaction }) => {\n      if (chosenOrder !== undefined) {\n        acc.push('emoticon' in reaction ? reaction.emoticon : reaction.documentId);\n      }\n\n      return acc;\n    }, []);\n  }, [message?.reactions?.results]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      ref={menuRef}\n      className={buildClassName(styles.menu, 'ReactionPicker')}\n      bubbleClassName={buildClassName(styles.menuContent, !withCustomReactions && styles.onlyReactions)}\n      withPortal\n      noCompact\n      positionX={positionX}\n      positionY={positionY}\n      transformOriginX={transformOriginX}\n      transformOriginY={transformOriginY}\n      style={style}\n      backdropExcludedSelector=\".Modal.confirm\"\n      onClose={closeReactionPicker}\n    >\n      <CustomEmojiPicker\n        idPrefix=\"message-emoji-set-\"\n        isHidden={!isOpen || !withCustomReactions}\n        loadAndPlay={Boolean(isOpen && withCustomReactions)}\n        isReactionPicker\n        className={!withCustomReactions ? styles.hidden : undefined}\n        selectedReactionIds={selectedReactionIds}\n        isTranslucent={isTranslucent}\n        onCustomEmojiSelect={handleToggleCustomReaction}\n        onReactionSelect={handleToggleReaction}\n      />\n      {!withCustomReactions && Boolean(renderedChatId) && (\n        <ReactionPickerLimited\n          chatId={renderedChatId}\n          loadAndPlay={isOpen}\n          onReactionSelect={handleToggleReaction}\n          selectedReactionIds={selectedReactionIds}\n        />\n      )}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const state = selectTabState(global);\n  const { chatId, messageId, position } = state.reactionPicker || {};\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n  const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n  const isPrivateChat = chatId ? isUserId(chatId) : false;\n  const areSomeReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'some';\n  const areCustomReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'all'\n    && chatFullInfo?.enabledReactions?.areCustomAllowed;\n\n  return {\n    message,\n    position,\n    withCustomReactions: chat?.isForbidden || areSomeReactionsAllowed\n      ? false\n      : areCustomReactionsAllowed || isPrivateChat,\n    isTranslucent: selectIsContextMenuTranslucent(global),\n  };\n})(ReactionPicker));\n\nfunction getTriggerElement(): HTMLElement | null {\n  return document.querySelector('body');\n}\n\nfunction getRootElement() {\n  return document.querySelector('body');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"menu\":\"s4eo5UICU4xBMDvMxWU_\",\"menuContent\":\"Q2c4gWaMXfXzLL_Jbbjr\",\"onlyReactions\":\"rWa1hIFdrb4U0xFrHLic\",\"hidden\":\"P95Gk2sUhvBJ70LKg_vc\"};","import { fixImageContent } from '../../../../util/parseMessageInput';\n\nconst div = document.createElement('div');\n\nexport function getHtmlTextLength(html: string) {\n  div.innerHTML = html;\n  fixImageContent(div);\n  div.querySelectorAll('br').forEach((br) => {\n    br.replaceWith('\\n');\n  });\n  return div.textContent?.trim().length || 0;\n}\n","export default function findInViewport(\n  container: HTMLElement,\n  selectorOrElements: string | NodeListOf<HTMLElement> | HTMLElement[],\n  margin = 0,\n  isDense = false,\n  shouldContainBottom = false,\n  isHorizontal = false,\n) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const allElements = typeof selectorOrElements === 'string'\n    ? container.querySelectorAll<HTMLElement>(selectorOrElements)\n    : selectorOrElements;\n  const { length } = allElements;\n  const visibleIndexes: number[] = [];\n  let isFound = false;\n\n  for (let i = 0; i < length; i++) {\n    const element = allElements[i];\n    const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n    const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n    const isVisible = shouldContainBottom\n      ? y2 >= viewportY1 - margin && y2 <= viewportY2 + margin\n      : y1 <= viewportY2 + margin && y2 >= viewportY1 - margin;\n\n    if (isVisible) {\n      visibleIndexes.push(i);\n      isFound = true;\n    } else if (isFound && !isDense) {\n      break;\n    }\n  }\n\n  return { allElements, visibleIndexes };\n}\n","function isFullyVisible(container: HTMLElement, element: HTMLElement, isHorizontal = false) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n  const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  return y1 > viewportY1 && y2 < viewportY2;\n}\n\nexport default isFullyVisible;\n","import findInViewport from './findInViewport';\nimport isFullyVisible from './isFullyVisible';\nimport animateScroll from './animateScroll';\n\nconst VIEWPORT_MARGIN = 8;\nconst SCROLL_MARGIN = 10;\n\nexport default function setTooltipItemVisible(selector: string, index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container || index < 0) {\n    return;\n  }\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    selector,\n    VIEWPORT_MARGIN,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first]))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    animateScroll(container, allElements[index], position, SCROLL_MARGIN);\n  }\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport captureKeyboardListeners from '../../../../util/captureKeyboardListeners';\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport function useKeyboardNavigation({\n  isActive,\n  isHorizontal,\n  shouldSaveSelectionOnUpdateItems,\n  shouldRemoveSelectionOnReset,\n  noArrowNavigation,\n  items,\n  shouldSelectOnTab,\n  onSelect,\n  onClose,\n}: {\n  isActive: boolean;\n  isHorizontal?: boolean;\n  shouldSaveSelectionOnUpdateItems?: boolean;\n  shouldRemoveSelectionOnReset?: boolean;\n  noArrowNavigation?: boolean;\n  items?: any[];\n  shouldSelectOnTab?: boolean;\n  onSelect: (item: any) => void | boolean;\n  onClose: NoneToVoidFunction;\n}) {\n  const [selectedItemIndex, setSelectedItemIndex] = useState(-1);\n\n  const getSelectedIndex = useLastCallback((newIndex: number) => {\n    if (!items) {\n      return -1;\n    }\n\n    return cycleRestrict(items.length, newIndex);\n  });\n\n  const handleArrowKey = useLastCallback((value: number, e: KeyboardEvent) => {\n    e.preventDefault();\n    setSelectedItemIndex((index) => (getSelectedIndex(index + value)));\n  });\n\n  const handleItemSelect = useLastCallback((e: KeyboardEvent) => {\n    // Prevent action on key combinations\n    if (e.altKey || e.ctrlKey || e.metaKey || e.shiftKey) return false;\n    if (items && items.length && selectedItemIndex > -1) {\n      const item = items[selectedItemIndex];\n      if (item) {\n        if (onSelect(item) === false) {\n          return false;\n        }\n\n        e.preventDefault();\n      }\n    }\n\n    return true;\n  });\n\n  const isSelectionOutOfRange = !items || selectedItemIndex > items.length - 1;\n  useEffect(() => {\n    if (!shouldSaveSelectionOnUpdateItems || isSelectionOutOfRange) {\n      setSelectedItemIndex(shouldRemoveSelectionOnReset ? -1 : 0);\n    }\n  }, [isSelectionOutOfRange, shouldRemoveSelectionOnReset, shouldSaveSelectionOnUpdateItems]);\n\n  useEffect(() => (isActive ? captureKeyboardListeners({\n    onEsc: onClose,\n    onUp: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onDown: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onLeft: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onRight: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onTab: shouldSelectOnTab ? handleItemSelect : undefined,\n    onEnter: handleItemSelect,\n  }) : undefined), [\n    noArrowNavigation, handleArrowKey, handleItemSelect, isActive, isHorizontal, onClose, shouldSelectOnTab,\n  ]);\n\n  return selectedItemIndex;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useEffect, useRef, memo } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport ListItem from '../../ui/ListItem';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\n\nimport './MentionTooltip.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onInsertUserName: (user: ApiUser, forceFocus?: boolean) => void;\n  filteredUsers?: ApiUser[];\n};\n\nconst MentionTooltip: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onInsertUserName,\n  filteredUsers,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n\n  const handleUserSelect = useLastCallback((userId: string, forceFocus = false) => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const user = usersById[userId];\n    if (!user) {\n      return;\n    }\n\n    onInsertUserName(user, forceFocus);\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent, id: string) => {\n    e.preventDefault();\n\n    handleUserSelect(id);\n  });\n\n  const handleSelectMention = useLastCallback((member: ApiUser) => {\n    handleUserSelect(member.id, true);\n  });\n\n  const selectedMentionIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: filteredUsers,\n    onSelect: handleSelectMention,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedMentionIndex, containerRef);\n  }, [selectedMentionIndex]);\n\n  useEffect(() => {\n    if (filteredUsers && !filteredUsers.length) {\n      onClose();\n    }\n  }, [filteredUsers, onClose]);\n\n  const prevChatMembers = usePrevious(\n    filteredUsers?.length\n      ? filteredUsers\n      : undefined,\n    shouldRender,\n  );\n  const renderedChatMembers = filteredUsers && !filteredUsers.length\n    ? prevChatMembers\n    : filteredUsers;\n\n  if (!shouldRender || (renderedChatMembers && !renderedChatMembers.length)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'MentionTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {renderedChatMembers?.map(({ id }, index) => (\n        <ListItem\n          key={id}\n          className=\"chat-item-clickable scroll-item smaller-icon\"\n          onClick={handleClick}\n          clickArg={id}\n          focus={selectedMentionIndex === index}\n        >\n          <PrivateChatInfo\n            userId={id}\n            avatarSize=\"small\"\n            withUsername\n          />\n        </ListItem>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(MentionTooltip);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport type { OwnProps } from './EmojiTooltip';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default memo(EmojiTooltipAsync);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport type { OwnProps } from './CustomSendMenu';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default memo(CustomSendMenuAsync);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport type { OwnProps } from './CustomEmojiTooltip';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default memo(CustomEmojiTooltipAsync);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZqafRENXro3B4A2UTp9s\",\"preview\":\"FfTpBGrctDEiFLXC4aqP\",\"duration\":\"Igo3Vsou5areTsmh2Ng3\",\"single\":\"ZJNnn8HUzq8cC3WwTzY0\",\"no-grouping\":\"Aj1qc6z4t_pSWrsXi0qf\",\"noGrouping\":\"Aj1qc6z4t_pSWrsXi0qf\",\"file\":\"QAlzNLWBYdWR4UMMaiGm\",\"overlay\":\"YOoQRXIFINVsu3FFIKR0\",\"action-item\":\"y5JLmIFtCzK05l40rdHJ\",\"actionItem\":\"y5JLmIFtCzK05l40rdHJ\",\"delete-file\":\"Qqp72_dWGSui9ORCN3MT\",\"deleteFile\":\"Qqp72_dWGSui9ORCN3MT\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiAttachment } from '../../../api/types';\n\nimport { GIF_MIME_TYPE, SUPPORTED_IMAGE_CONTENT_TYPES, SUPPORTED_VIDEO_CONTENT_TYPES } from '../../../config';\nimport { getFileExtension } from '../../common/helpers/documentInfo';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dateFormat';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport File from '../../common/File';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nimport styles from './AttachmentModalItem.module.scss';\n\ntype OwnProps = {\n  attachment: ApiAttachment;\n  className?: string;\n  shouldDisplayCompressed?: boolean;\n  shouldDisplayGrouped?: boolean;\n  isSingle?: boolean;\n  index: number;\n  onDelete?: (index: number) => void;\n  onToggleSpoiler?: (index: number) => void;\n};\n\nconst BLUR_CANVAS_SIZE = 15 * REM;\n\nconst AttachmentModalItem: FC<OwnProps> = ({\n  attachment,\n  className,\n  isSingle,\n  shouldDisplayCompressed,\n  shouldDisplayGrouped,\n  index,\n  onDelete,\n  onToggleSpoiler,\n}) => {\n  const displayType = getDisplayType(attachment, shouldDisplayCompressed);\n\n  const handleSpoilerClick = useLastCallback(() => {\n    onToggleSpoiler?.(index);\n  });\n\n  const content = useMemo(() => {\n    switch (displayType) {\n      case 'image':\n        return (\n          <img\n            className={styles.preview}\n            src={attachment.blobUrl}\n            alt=\"\"\n            draggable={false}\n          />\n        );\n      case 'video':\n        return (\n          <>\n            {Boolean(attachment.quick?.duration) && (\n              <div className={styles.duration}>{formatMediaDuration(attachment.quick!.duration)}</div>\n            )}\n            <video\n              className={styles.preview}\n              src={attachment.blobUrl}\n              autoPlay\n              muted\n              loop\n              disablePictureInPicture\n            />\n          </>\n        );\n      default:\n        return (\n          <>\n            <File\n              className={styles.file}\n              name={attachment.filename}\n              extension={getFileExtension(attachment.filename, attachment.mimeType)}\n              previewData={attachment.previewBlobUrl}\n              size={attachment.size}\n              smaller\n            />\n            {onDelete && (\n              <i\n                className={buildClassName('icon', 'icon-delete', styles.actionItem, styles.deleteFile)}\n                onClick={() => onDelete(index)}\n              />\n            )}\n          </>\n        );\n    }\n  }, [attachment, displayType, index, onDelete]);\n\n  const shouldSkipGrouping = displayType === 'file' || !shouldDisplayGrouped;\n  const canDisplaySpoilerButton = attachment.mimeType !== GIF_MIME_TYPE;\n  const shouldDisplaySpoiler = Boolean(displayType !== 'file' && canDisplaySpoilerButton\n    && attachment.shouldSendAsSpoiler);\n  const shouldRenderOverlay = displayType !== 'file';\n\n  const rootClassName = buildClassName(\n    className, styles.root, isSingle && styles.single, shouldSkipGrouping && styles.noGrouping,\n  );\n\n  return (\n    <div className={rootClassName}>\n      {content}\n      <MediaSpoiler\n        isVisible={shouldDisplaySpoiler}\n        thumbDataUri={attachment.previewBlobUrl || attachment.blobUrl}\n        width={BLUR_CANVAS_SIZE}\n        height={BLUR_CANVAS_SIZE}\n      />\n      {shouldRenderOverlay && (\n        <div className={styles.overlay}>\n          {canDisplaySpoilerButton && (\n            <i\n              className={buildClassName(\n                'icon',\n                attachment.shouldSendAsSpoiler ? 'icon-spoiler-disable' : 'icon-spoiler',\n                styles.actionItem,\n              )}\n              onClick={handleSpoilerClick}\n            />\n          )}\n          {onDelete && (\n            <i\n              className={buildClassName('icon', 'icon-delete', styles.actionItem)}\n              onClick={() => onDelete(index)}\n            />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction getDisplayType(attachment: ApiAttachment, shouldDisplayCompressed?: boolean) {\n  if (shouldDisplayCompressed && attachment.quick) {\n    if (SUPPORTED_IMAGE_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'image';\n    }\n    if (SUPPORTED_VIDEO_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'video';\n    }\n  }\n  return 'file';\n}\n\nexport default memo(AttachmentModalItem);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useRef, memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as ButtonProps } from './Button';\n\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from './Button';\n\ntype OwnProps = {\n  onActivate: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n} & Omit<ButtonProps, (\n  'onClick' | 'onMouseDown' |\n  'onMouseEnter' | 'onMouseLeave' |\n  'onFocus'\n)>;\n\nconst BUTTON_ACTIVATE_DELAY = 200;\nlet openTimeout: number | undefined;\nlet isFirstTimeActivation = true;\n\nconst ResponsiveHoverButton: FC<OwnProps> = ({ onActivate, ...buttonProps }) => {\n  const isMouseInside = useRef(false);\n\n  const handleMouseEnter = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    isMouseInside.current = true;\n\n    // This is used to counter additional delay caused by asynchronous module loading\n    if (isFirstTimeActivation) {\n      isFirstTimeActivation = false;\n      onActivate(e);\n      return;\n    }\n\n    if (openTimeout) {\n      clearTimeout(openTimeout);\n      openTimeout = undefined;\n    }\n    openTimeout = window.setTimeout(() => {\n      if (isMouseInside.current) {\n        onActivate(e);\n      }\n    }, BUTTON_ACTIVATE_DELAY);\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    isMouseInside.current = true;\n    onActivate(e);\n  });\n\n  return (\n    <Button\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...buttonProps}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      onClick={!IS_TOUCH_ENV ? onActivate : handleClick}\n    />\n  );\n};\n\nexport default memo(ResponsiveHoverButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport type { OwnProps } from './SymbolMenu';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default memo(SymbolMenuAsync);\n","import React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { IAnchorPosition } from '../../../types';\nimport type { ApiVideo, ApiSticker } from '../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useFlag from '../../../hooks/useFlag';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\n\nimport Button from '../../ui/Button';\nimport Spinner from '../../ui/Spinner';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: number;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isReady,\n  isSymbolMenuOpen,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  isAttachmentModal,\n  canSendPlainText,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n  isSymbolMenuForced,\n  className,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuPosition, setContextMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuPosition({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : EDITABLE_INPUT_CSS_SELECTOR,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <i className=\"icon icon-smile\" />\n          <i className=\"icon icon-keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <i className=\"icon icon-smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={className}\n        positionX={isAttachmentModal ? positionX : undefined}\n        positionY={isAttachmentModal ? positionY : undefined}\n        transformOriginX={isAttachmentModal ? transformOriginX : undefined}\n        transformOriginY={isAttachmentModal ? transformOriginY : undefined}\n        style={isAttachmentModal ? menuStyle : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"VncEpkgqABgA8MUCarxh\",\"mobile\":\"EBYYWwiG6Uj4Aqt4DKGy\",\"symbolMenuOpen\":\"eVLBe8iLKwjR6B31YwJj\",\"header-border\":\"u08mL9ikB7S0oRZKxvsA\",\"headerBorder\":\"u08mL9ikB7S0oRZKxvsA\",\"attachments\":\"d_uMaJ26HlkCfSn5XiQp\",\"attachments-bottom-padding\":\"DUGHCuTKi7H5d_1_vYqj\",\"attachmentsBottomPadding\":\"DUGHCuTKi7H5d_1_vYqj\",\"caption-wrapper\":\"BKyeut4mBbq_uw8uGfSU\",\"captionWrapper\":\"BKyeut4mBbq_uw8uGfSU\",\"caption-top-border\":\"UrYInfws7roRktEiMxvT\",\"captionTopBorder\":\"UrYInfws7roRktEiMxvT\",\"caption\":\"c4dyk1Emgpla8BvDJMAz\",\"drop-target\":\"iWmxxlUXOjTzbvJzWF8g\",\"dropTarget\":\"iWmxxlUXOjTzbvJzWF8g\",\"hovered\":\"B5wzgwCPupbnO1XB5Rwc\",\"send-wrapper\":\"z4wF5bBjL74eNUj_UYeu\",\"sendWrapper\":\"z4wF5bBjL74eNUj_UYeu\",\"send\":\"eFD46lVH5GCILXEOx9BO\",\"is-pointer-env\":\"Os76p3jpmhB2IWYxXigi\",\"isPointerEnv\":\"Os76p3jpmhB2IWYxXigi\"};","import React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type {\n  ApiAttachment, ApiChatMember, ApiSticker,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { Signal } from '../../../util/signals';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport { isUserId } from '../../../global/helpers';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\nimport { getHtmlTextLength } from './helpers/getHtmlTextLength';\nimport { selectChatFullInfo, selectIsChatWithSelf } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport buildClassName from '../../../util/buildClassName';\nimport { validateFiles } from '../../../util/files';\nimport { removeAllSelections } from '../../../util/selection';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useMentionTooltip from './hooks/useMentionTooltip';\nimport useEmojiTooltip from './hooks/useEmojiTooltip';\nimport useLang from '../../../hooks/useLang';\nimport useFlag from '../../../hooks/useFlag';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCustomEmojiTooltip from './hooks/useCustomEmojiTooltip';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useGetSelectionRange from '../../../hooks/useGetSelectionRange';\nimport useDerivedState from '../../../hooks/useDerivedState';\n\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport MessageInput from './MessageInput';\nimport MentionTooltip from './MentionTooltip';\nimport EmojiTooltip from './EmojiTooltip.async';\nimport CustomSendMenu from './CustomSendMenu.async';\nimport CustomEmojiTooltip from './CustomEmojiTooltip.async';\nimport AttachmentModalItem from './AttachmentModalItem';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\nimport SymbolMenuButton from './SymbolMenuButton';\n\nimport styles from './AttachmentModal.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: number;\n  attachments: ApiAttachment[];\n  getHtml: Signal<string>;\n  canShowCustomSendMenu?: boolean;\n  isReady: boolean;\n  shouldSchedule?: boolean;\n  shouldSuggestCompression?: boolean;\n  shouldForceCompression?: boolean;\n  shouldForceAsFile?: boolean;\n  isForCurrentMessageList?: boolean;\n  onCaptionUpdate: (html: string) => void;\n  onSend: (sendCompressed: boolean, sendGrouped: boolean) => void;\n  onFileAppend: (files: File[], isSpoiler?: boolean) => void;\n  onAttachmentsUpdate: (attachments: ApiAttachment[]) => void;\n  onClear: NoneToVoidFunction;\n  onSendSilent: (sendCompressed: boolean, sendGrouped: boolean) => void;\n  onSendScheduled: (sendCompressed: boolean, sendGrouped: boolean) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n};\n\ntype StateProps = {\n  isChatWithSelf?: boolean;\n  currentUserId?: string;\n  groupChatMembers?: ApiChatMember[];\n  recentEmojis: string[];\n  baseEmojiKeywords?: Record<string, string[]>;\n  emojiKeywords?: Record<string, string[]>;\n  shouldSuggestCustomEmoji?: boolean;\n  customEmojiForEmoji?: ApiSticker[];\n  captionLimit: number;\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst ATTACHMENT_MODAL_INPUT_ID = 'caption-input-text';\nconst DROP_LEAVE_TIMEOUT_MS = 150;\nconst MAX_LEFT_CHARS_TO_SHOW = 100;\n\nconst AttachmentModal: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  attachments,\n  getHtml,\n  canShowCustomSendMenu,\n  captionLimit,\n  isReady,\n  isChatWithSelf,\n  currentUserId,\n  groupChatMembers,\n  recentEmojis,\n  baseEmojiKeywords,\n  emojiKeywords,\n  shouldSchedule,\n  shouldSuggestCustomEmoji,\n  customEmojiForEmoji,\n  attachmentSettings,\n  shouldSuggestCompression,\n  shouldForceCompression,\n  shouldForceAsFile,\n  isForCurrentMessageList,\n  onAttachmentsUpdate,\n  onCaptionUpdate,\n  onSend,\n  onFileAppend,\n  onClear,\n  onSendSilent,\n  onSendScheduled,\n  onCustomEmojiSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n}) => {\n  const { addRecentCustomEmoji, addRecentEmoji, updateAttachmentSettings } = getActions();\n\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const mainButtonRef = useRef<HTMLButtonElement | null>(null);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  const hideTimeoutRef = useRef<number>();\n  const prevAttachments = usePrevious(attachments);\n  const renderingAttachments = attachments.length ? attachments : prevAttachments;\n  const { isMobile } = useAppLayout();\n\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n\n  const [shouldSendCompressed, setShouldSendCompressed] = useState(\n    shouldSuggestCompression ?? attachmentSettings.shouldCompress,\n  );\n  const isSendingCompressed = Boolean((shouldSendCompressed || shouldForceCompression) && !shouldForceAsFile);\n  const [shouldSendGrouped, setShouldSendGrouped] = useState(attachmentSettings.shouldSendGrouped);\n\n  const {\n    handleScroll: handleAttachmentsScroll,\n    isAtBeginning: areAttachmentsNotScrolled,\n    isAtEnd: areAttachmentsScrolledToBottom,\n  } = useScrolledState();\n\n  const { handleScroll: handleCaptionScroll, isAtBeginning: isCaptionNotScrolled } = useScrolledState();\n\n  const isOpen = Boolean(attachments.length);\n  const renderingIsOpen = Boolean(renderingAttachments?.length);\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  useEffect(() => {\n    if (!isOpen) {\n      closeSymbolMenu();\n    }\n  }, [closeSymbolMenu, isOpen]);\n\n  const [hasMedia, hasOnlyMedia] = useMemo(() => {\n    const onlyMedia = Boolean(renderingAttachments?.every((a) => a.quick || a.audio));\n    if (onlyMedia) return [true, true];\n    const oneMedia = Boolean(renderingAttachments?.some((a) => a.quick || a.audio));\n    return [oneMedia, false];\n  }, [renderingAttachments]);\n\n  const [hasSpoiler, isEverySpoiler] = useMemo(() => {\n    const areAllSpoilers = Boolean(renderingAttachments?.every((a) => a.shouldSendAsSpoiler));\n    if (areAllSpoilers) return [true, true];\n    const hasOneSpoiler = Boolean(renderingAttachments?.some((a) => a.shouldSendAsSpoiler));\n    return [hasOneSpoiler, false];\n  }, [renderingAttachments]);\n\n  const getSelectionRange = useGetSelectionRange(`#${EDITABLE_INPUT_MODAL_ID}`);\n\n  const {\n    isEmojiTooltipOpen,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n    closeEmojiTooltip,\n  } = useEmojiTooltip(\n    Boolean(isReady && isForCurrentMessageList && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    EDITABLE_INPUT_MODAL_ID,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    insertCustomEmoji,\n    closeCustomEmojiTooltip,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isForCurrentMessageList && renderingIsOpen && shouldSuggestCustomEmoji),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isReady && isForCurrentMessageList && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    undefined,\n    currentUserId,\n  );\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldSendCompressed(shouldSuggestCompression ?? attachmentSettings.shouldCompress);\n      setShouldSendGrouped(attachmentSettings.shouldSendGrouped);\n    }\n  }, [attachmentSettings, isOpen, shouldSuggestCompression]);\n\n  useEffect(() => {\n    if (isOpen && isMobile) {\n      removeAllSelections();\n    }\n  }, [isMobile, isOpen]);\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !canShowCustomSendMenu || !isOpen);\n\n  const sendAttachments = useLastCallback((isSilent?: boolean, shouldSendScheduled?: boolean) => {\n    if (isOpen) {\n      const send = (shouldSchedule || shouldSendScheduled) ? onSendScheduled\n        : isSilent ? onSendSilent : onSend;\n      send(isSendingCompressed, shouldSendGrouped);\n      updateAttachmentSettings({\n        shouldCompress: isSendingCompressed,\n        shouldSendGrouped,\n      });\n    }\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendAttachments(true);\n  });\n\n  const handleSendClick = useLastCallback(() => {\n    sendAttachments();\n  });\n\n  const handleScheduleClick = useLastCallback(() => {\n    sendAttachments(false, true);\n  });\n\n  const handleDragLeave = (e: React.DragEvent<HTMLElement>) => {\n    const { relatedTarget: toTarget, target: fromTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches(`.${styles.dropTarget}`) && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(unmarkHovered, DROP_LEAVE_TIMEOUT_MS);\n    }\n\n    // Prevent DragLeave event from firing when the pointer moves inside the AttachmentModal drop target\n    if (fromTarget && (fromTarget as HTMLElement).closest(`.${styles.hovered}`)) {\n      return;\n    }\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    unmarkHovered();\n\n    const { dataTransfer } = e;\n\n    const files = await getFilesFromDataTransferItems(dataTransfer.items);\n    if (files?.length) {\n      onFileAppend(files, isEverySpoiler);\n    }\n  });\n\n  function handleDragOver(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.preventDefault();\n\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n      hideTimeoutRef.current = undefined;\n    }\n  }\n\n  const handleFileSelect = useLastCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileAppend(validatedFiles, isEverySpoiler);\n    }\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog('*', (e) => handleFileSelect(e));\n  });\n\n  const handleDelete = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.filter((a, i) => i !== index));\n  });\n\n  const handleEnableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({\n      ...a,\n      shouldSendAsSpoiler: a.mimeType !== GIF_MIME_TYPE ? true : undefined,\n    })));\n  });\n\n  const handleDisableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({ ...a, shouldSendAsSpoiler: undefined })));\n  });\n\n  const handleToggleSpoiler = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.map((attachment, i) => {\n      if (i === index) {\n        return {\n          ...attachment,\n          shouldSendAsSpoiler: !attachment.shouldSendAsSpoiler || undefined,\n        };\n      }\n\n      return attachment;\n    }));\n  });\n\n  useEffect(() => {\n    const mainButton = mainButtonRef.current;\n    const input = document.getElementById(ATTACHMENT_MODAL_INPUT_ID);\n\n    if (!mainButton || !input) return;\n\n    const { width } = mainButton.getBoundingClientRect();\n\n    requestMutation(() => {\n      input.style.setProperty('--margin-for-scrollbar', `${width}px`);\n    });\n  }, [lang, isOpen]);\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const leftChars = useDerivedState(() => {\n    if (!renderingIsOpen) return undefined;\n\n    const leftCharsBeforeLimit = captionLimit - getHtmlTextLength(getHtml());\n    return leftCharsBeforeLimit <= MAX_LEFT_CHARS_TO_SHOW ? leftCharsBeforeLimit : undefined;\n  }, [captionLimit, getHtml, renderingIsOpen]);\n\n  const isQuickGallery = isSendingCompressed && hasOnlyMedia;\n\n  const [areAllPhotos, areAllVideos, areAllAudios] = useMemo(() => {\n    if (!isQuickGallery || !renderingAttachments) return [false, false, false];\n    const everyPhoto = renderingAttachments.every((a) => SUPPORTED_IMAGE_CONTENT_TYPES.has(a.mimeType));\n    const everyVideo = renderingAttachments.every((a) => SUPPORTED_VIDEO_CONTENT_TYPES.has(a.mimeType));\n    const everyAudio = renderingAttachments.every((a) => SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n    return [everyPhoto, everyVideo, everyAudio];\n  }, [renderingAttachments, isQuickGallery]);\n\n  const hasAnySpoilerable = useMemo(() => {\n    if (!renderingAttachments) return false;\n    return renderingAttachments.some((a) => a.mimeType !== GIF_MIME_TYPE\n      && !SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n  }, [renderingAttachments]);\n\n  if (!renderingAttachments) {\n    return undefined;\n  }\n\n  const isMultiple = renderingAttachments.length > 1;\n\n  let title = '';\n  if (areAllPhotos) {\n    title = lang('PreviewSender.SendPhoto', renderingAttachments.length, 'i');\n  } else if (areAllVideos) {\n    title = lang('PreviewSender.SendVideo', renderingAttachments.length, 'i');\n  } else if (areAllAudios) {\n    title = lang('PreviewSender.SendAudio', renderingAttachments.length, 'i');\n  } else {\n    title = lang('PreviewSender.SendFile', renderingAttachments.length, 'i');\n  }\n\n  function renderHeader() {\n    if (!renderingAttachments) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel attachments\" onClick={onClear}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{title}</div>\n        <DropdownMenu\n          className=\"attachment-modal-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"add\" onClick={handleDocumentSelect}>{lang('Add')}</MenuItem>\n          {hasMedia && (\n            <>\n              {\n                !shouldForceAsFile && !shouldForceCompression && (isSendingCompressed ? (\n                  // eslint-disable-next-line react/jsx-no-bind\n                  <MenuItem icon=\"document\" onClick={() => setShouldSendCompressed(false)}>\n                    {lang(isMultiple ? 'Attachment.SendAsFiles' : 'Attachment.SendAsFile')}\n                  </MenuItem>\n                ) : (\n                  // eslint-disable-next-line react/jsx-no-bind\n                  <MenuItem icon=\"photo\" onClick={() => setShouldSendCompressed(true)}>\n                    {isMultiple ? 'Send All as Media' : 'Send as Media'}\n                  </MenuItem>\n                ))\n              }\n              {isSendingCompressed && hasAnySpoilerable && (\n                hasSpoiler ? (\n                  <MenuItem icon=\"spoiler-disable\" onClick={handleDisableSpoilers}>\n                    {lang('Attachment.DisableSpoiler')}\n                  </MenuItem>\n                ) : (\n                  <MenuItem icon=\"spoiler\" onClick={handleEnableSpoilers}>\n                    {lang('Attachment.EnableSpoiler')}\n                  </MenuItem>\n                )\n              )}\n            </>\n          )}\n          {isMultiple && (\n            shouldSendGrouped ? (\n              <MenuItem\n                icon=\"grouped-disable\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => setShouldSendGrouped(false)}\n              >\n                Ungroup All Media\n              </MenuItem>\n            ) : (\n              // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"grouped\" onClick={() => setShouldSendGrouped(true)}>\n                Group All Media\n              </MenuItem>\n            )\n          )}\n        </DropdownMenu>\n      </div>\n    );\n  }\n\n  const isBottomDividerShown = !areAttachmentsScrolledToBottom || !isCaptionNotScrolled;\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClear}\n      header={renderHeader()}\n      className={buildClassName(\n        styles.root,\n        isHovered && styles.hovered,\n        !areAttachmentsNotScrolled && styles.headerBorder,\n        isMobile && styles.mobile,\n        isSymbolMenuOpen && styles.symbolMenuOpen,\n      )}\n      noBackdropClose\n    >\n      <div\n        className={styles.dropTarget}\n        onDragEnter={markHovered}\n        onDrop={handleFilesDrop}\n        onDragOver={handleDragOver}\n        onDragLeave={handleDragLeave}\n        onClick={unmarkHovered}\n        data-attach-description={lang('Preview.Dragging.AddItems', 10)}\n        data-dropzone\n      >\n        <div\n          className={buildClassName(\n            styles.attachments,\n            'custom-scroll',\n            isBottomDividerShown && styles.attachmentsBottomPadding,\n          )}\n          onScroll={handleAttachmentsScroll}\n        >\n          {renderingAttachments.map((attachment, i) => (\n            <AttachmentModalItem\n              attachment={attachment}\n              shouldDisplayCompressed={isSendingCompressed}\n              shouldDisplayGrouped={shouldSendGrouped}\n              isSingle={renderingAttachments.length === 1}\n              index={i}\n              key={attachment.uniqueId || i}\n              onDelete={handleDelete}\n              onToggleSpoiler={handleToggleSpoiler}\n            />\n          ))}\n        </div>\n        <div\n          className={buildClassName(\n            styles.captionWrapper,\n            isBottomDividerShown && styles.captionTopBorder,\n          )}\n        >\n          <MentionTooltip\n            isOpen={isMentionTooltipOpen}\n            filteredUsers={mentionFilteredUsers}\n            onInsertUserName={insertMention}\n            onClose={closeMentionTooltip}\n          />\n          <EmojiTooltip\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n          <CustomEmojiTooltip\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onCustomEmojiSelect={insertCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <div className={styles.caption}>\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              onCustomEmojiSelect={onCustomEmojiSelect}\n              onRemoveSymbol={onRemoveSymbol}\n              onEmojiSelect={onEmojiSelect}\n              isAttachmentModal\n              canSendPlainText\n              className=\"attachment-modal-symbol-menu with-menu-transitions\"\n            />\n            <MessageInput\n              ref={inputRef}\n              id={ATTACHMENT_MODAL_INPUT_ID}\n              chatId={chatId}\n              threadId={threadId}\n              isAttachmentModalInput\n              isReady={isReady}\n              isActive={isOpen}\n              getHtml={getHtml}\n              editableInputId={EDITABLE_INPUT_MODAL_ID}\n              placeholder={lang('AddCaption')}\n              onUpdate={onCaptionUpdate}\n              onSend={handleSendClick}\n              onScroll={handleCaptionScroll}\n              canAutoFocus={Boolean(isReady && isForCurrentMessageList && attachments.length)}\n              captionLimit={leftChars}\n              shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n              onSuppressedFocus={closeSymbolMenu}\n            />\n            <div className={styles.sendWrapper}>\n              <Button\n                ref={mainButtonRef}\n                className={styles.send}\n                onClick={handleSendClick}\n                onContextMenu={canShowCustomSendMenu ? handleContextMenu : undefined}\n              >\n                {shouldSchedule ? lang('Next') : lang('Send')}\n              </Button>\n              {canShowCustomSendMenu && (\n                <CustomSendMenu\n                  isOpen={isCustomSendMenuOpen}\n                  onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n                  onSendSchedule={handleScheduleClick}\n                  onClose={handleContextMenuClose}\n                  onCloseAnimationEnd={handleContextMenuHide}\n                  isSavedMessages={isChatWithSelf}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      currentUserId,\n      recentEmojis,\n      customEmojis,\n      attachmentSettings,\n    } = global;\n\n    const chatFullInfo = !isUserId(chatId) ? selectChatFullInfo(global, chatId) : undefined;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const { language, shouldSuggestCustomEmoji } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n\n    return {\n      isChatWithSelf,\n      currentUserId,\n      groupChatMembers: chatFullInfo?.members,\n      recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      shouldSuggestCustomEmoji,\n      customEmojiForEmoji: customEmojis.forEmoji.stickers,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      attachmentSettings,\n    };\n  },\n)(AttachmentModal));\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\n\nimport type { ApiNewPoll } from '../../../api/types';\n\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport parseMessageInput from '../../../util/parseMessageInput';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport InputText from '../../ui/InputText';\nimport Checkbox from '../../ui/Checkbox';\nimport RadioGroup from '../../ui/RadioGroup';\nimport TextArea from '../../ui/TextArea';\n\nimport './PollModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  shouldBeAnonymous?: boolean;\n  isQuiz?: boolean;\n  onSend: (pollSummary: ApiNewPoll) => void;\n  onClear: () => void;\n};\n\nconst MAX_LIST_HEIGHT = 320;\nconst MAX_OPTIONS_COUNT = 10;\nconst MAX_OPTION_LENGTH = 100;\nconst MAX_QUESTION_LENGTH = 255;\nconst MAX_SOLUTION_LENGTH = 200;\n\nconst PollModal: FC<OwnProps> = ({\n  isOpen, isQuiz, shouldBeAnonymous, onSend, onClear,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const questionInputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const optionsListRef = useRef<HTMLDivElement>(null);\n\n  const [question, setQuestion] = useState<string>('');\n  const [options, setOptions] = useState<string[]>(['']);\n  const [isAnonymous, setIsAnonymous] = useState(true);\n  const [isMultipleAnswers, setIsMultipleAnswers] = useState(false);\n  const [isQuizMode, setIsQuizMode] = useState(isQuiz || false);\n  const [solution, setSolution] = useState<string>('');\n  const [correctOption, setCorrectOption] = useState<number | undefined>();\n  const [hasErrors, setHasErrors] = useState<boolean>(false);\n\n  const lang = useLang();\n\n  const handleSolutionChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setSolution(e.target.value);\n  });\n\n  const focusInput = useLastCallback((ref: RefObject<HTMLInputElement>) => {\n    if (isOpen && ref.current) {\n      ref.current.focus();\n    }\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n  useEffect(() => {\n    if (!isOpen) {\n      setQuestion('');\n      setOptions(['']);\n      setIsAnonymous(true);\n      setIsMultipleAnswers(false);\n      setIsQuizMode(isQuiz || false);\n      setSolution('');\n      setCorrectOption(undefined);\n      setHasErrors(false);\n    }\n  }, [isQuiz, isOpen]);\n\n  useEffect(() => focusInput(questionInputRef), [focusInput, isOpen]);\n\n  const addNewOption = useLastCallback((newOptions: string[] = []) => {\n    setOptions([...newOptions, '']);\n\n    requestNextMutation(() => {\n      const list = optionsListRef.current;\n      if (!list) {\n        return;\n      }\n\n      list.classList.toggle('overflown', list.scrollHeight > MAX_LIST_HEIGHT);\n      list.scrollTo({ top: list.scrollHeight, behavior: 'smooth' });\n    });\n  });\n\n  const handleCreate = useLastCallback(() => {\n    setHasErrors(false);\n    if (!isOpen) {\n      return;\n    }\n\n    const questionTrimmed = question.trim().substring(0, MAX_QUESTION_LENGTH);\n    const optionsTrimmed = options.map((o) => o.trim().substring(0, MAX_OPTION_LENGTH)).filter((o) => o.length);\n\n    if (!questionTrimmed || optionsTrimmed.length < 2) {\n      setQuestion(questionTrimmed);\n      if (optionsTrimmed.length) {\n        if (optionsTrimmed.length < 2) {\n          addNewOption(optionsTrimmed);\n        } else {\n          setOptions(optionsTrimmed);\n        }\n      } else {\n        addNewOption();\n      }\n      setHasErrors(true);\n      return;\n    }\n\n    if (isQuizMode && (correctOption === undefined || !optionsTrimmed[correctOption])) {\n      setHasErrors(true);\n      return;\n    }\n\n    const answers = optionsTrimmed\n      .map((text, index) => ({\n        text: text.trim(),\n        option: String(index),\n        ...(index === correctOption && { correct: true }),\n      }));\n\n    const payload: ApiNewPoll = {\n      summary: {\n        question: questionTrimmed,\n        answers,\n        ...(!isAnonymous && { isPublic: true }),\n        ...(isMultipleAnswers && { multipleChoice: true }),\n        ...(isQuizMode && { quiz: true }),\n      },\n    };\n\n    if (isQuizMode) {\n      const { text, entities } = (solution && parseMessageInput(solution.substring(0, MAX_SOLUTION_LENGTH))) || {};\n\n      payload.quiz = {\n        correctAnswers: [String(correctOption)],\n        ...(text && { solution: text }),\n        ...(entities && { solutionEntities: entities }),\n      };\n    }\n\n    onSend(payload);\n  });\n\n  const updateOption = useLastCallback((index: number, text: string) => {\n    const newOptions = [...options];\n    newOptions[index] = text;\n    if (newOptions[newOptions.length - 1].trim().length && newOptions.length < MAX_OPTIONS_COUNT) {\n      addNewOption(newOptions);\n    } else {\n      setOptions(newOptions);\n    }\n  });\n\n  const removeOption = useLastCallback((index: number) => {\n    const newOptions = [...options];\n    newOptions.splice(index, 1);\n    setOptions(newOptions);\n\n    if (correctOption !== undefined) {\n      if (correctOption === index) {\n        setCorrectOption(undefined);\n      } else if (index < correctOption) {\n        setCorrectOption(correctOption - 1);\n      }\n    }\n\n    requestNextMutation(() => {\n      if (!optionsListRef.current) {\n        return;\n      }\n\n      optionsListRef.current.classList.toggle('overflown', optionsListRef.current.scrollHeight > MAX_LIST_HEIGHT);\n    });\n  });\n\n  const handleCorrectOptionChange = useLastCallback((newValue: string) => {\n    setCorrectOption(Number(newValue));\n  });\n\n  const handleIsAnonymousChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsAnonymous(e.target.checked);\n  });\n\n  const handleMultipleAnswersChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsMultipleAnswers(e.target.checked);\n  });\n\n  const handleQuizModeChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsQuizMode(e.target.checked);\n  });\n\n  const handleKeyPress = useLastCallback((e: React.KeyboardEvent<HTMLDivElement>) => {\n    if (e.keyCode === 13) {\n      handleCreate();\n    }\n  });\n\n  const handleQuestionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setQuestion(e.target.value);\n  });\n\n  const getQuestionError = useLastCallback(() => {\n    if (hasErrors && !question.trim().length) {\n      return lang('lng_polls_choose_question');\n    }\n\n    return undefined;\n  });\n\n  const getOptionsError = useLastCallback((index: number) => {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n    if (hasErrors && optionsTrimmed.length < 2 && !options[index].trim().length) {\n      return lang('lng_polls_choose_answers');\n    }\n    return undefined;\n  });\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\">\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel poll creation\" onClick={onClear}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('NewPoll')}</div>\n        <Button\n          color=\"primary\"\n          size=\"smaller\"\n          className=\"modal-action-button\"\n          onClick={handleCreate}\n        >\n          {lang('Create')}\n        </Button>\n      </div>\n    );\n  }\n\n  function renderOptions() {\n    return options.map((option, index) => (\n      <div className=\"option-wrapper\">\n        <InputText\n          label={index !== options.length - 1 || options.length === MAX_OPTIONS_COUNT\n            ? lang('OptionHint')\n            : lang('CreatePoll.AddOption')}\n          error={getOptionsError(index)}\n          value={option}\n          // eslint-disable-next-line react/jsx-no-bind\n          onChange={(e) => updateOption(index, e.currentTarget.value)}\n          onKeyPress={handleKeyPress}\n        />\n        {index !== options.length - 1 && (\n          <Button\n            className=\"option-remove-button\"\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Delete')}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => removeOption(index)}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n        )}\n      </div>\n    ));\n  }\n\n  function renderRadioOptions() {\n    return renderOptions()\n      .map((label, index) => ({ value: String(index), label, hidden: index === options.length - 1 }));\n  }\n\n  function renderQuizNoOptionError() {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n\n    return isQuizMode && (correctOption === undefined || !optionsTrimmed[correctOption]) && (\n      <p className=\"poll-error\">{lang('lng_polls_choose_correct')}</p>\n    );\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClear} header={renderHeader()} className=\"PollModal\">\n      <InputText\n        ref={questionInputRef}\n        label={lang('AskAQuestion')}\n        value={question}\n        error={getQuestionError()}\n        onChange={handleQuestionChange}\n        onKeyPress={handleKeyPress}\n      />\n      <div className=\"options-divider\" />\n\n      <div className=\"options-list custom-scroll\" ref={optionsListRef}>\n        <h3 className=\"options-header\">{lang('PollOptions')}</h3>\n\n        {hasErrors && renderQuizNoOptionError()}\n        {isQuizMode ? (\n          <RadioGroup\n            name=\"correctOption\"\n            options={renderRadioOptions()}\n            selected={String(correctOption)}\n            onChange={handleCorrectOptionChange}\n          />\n        ) : (\n          renderOptions()\n        )}\n\n      </div>\n\n      <div className=\"options-divider\" />\n\n      <div className=\"quiz-mode\">\n        {!shouldBeAnonymous && (\n          <Checkbox\n            label={lang('PollAnonymous')}\n            checked={isAnonymous}\n            onChange={handleIsAnonymousChange}\n          />\n        )}\n        <Checkbox\n          label={lang('PollMultiple')}\n          checked={isMultipleAnswers}\n          disabled={isQuizMode}\n          onChange={handleMultipleAnswersChange}\n        />\n        <Checkbox\n          label={lang('PollQuiz')}\n          checked={isQuizMode}\n          disabled={isMultipleAnswers || isQuiz !== undefined}\n          onChange={handleQuizModeChange}\n        />\n        {isQuizMode && (\n          <>\n            <h3 className=\"options-header\">{lang('lng_polls_solution_title')}</h3>\n            <TextArea\n              value={solution}\n              onChange={handleSolutionChange}\n              noReplaceNewlines\n            />\n            <div className=\"note\">{lang('CreatePoll.ExplanationInfo')}</div>\n          </>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PollModal);\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\n\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { FC } from '../../../lib/teact/teact';\n\nimport { IS_ELECTRON, PRODUCTION_URL } from '../../../config';\nimport { IS_EMOJI_SUPPORTED } from '../../../util/windowEnvironment';\nimport { handleEmojiLoad, LOADED_EMOJIS } from '../../../util/emoji';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport './EmojiButton.scss';\n\ntype OwnProps = {\n  emoji: Emoji;\n  focus?: boolean;\n  onClick: (emoji: string, name: string) => void;\n};\n\nconst EmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick(emoji.native, emoji.id);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  const src = `${IS_ELECTRON ? PRODUCTION_URL : '.'}/img-apple-64/${emoji.image}.png`;\n  const isLoaded = LOADED_EMOJIS.has(src);\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={`:${emoji.names[0]}:`}\n    >\n      {IS_EMOJI_SUPPORTED ? emoji.native : (\n        <img\n          src={src}\n          className={!isLoaded ? 'opacity-transition shown' : undefined}\n          alt={emoji.native}\n          loading=\"lazy\"\n          data-path={src}\n          onLoad={!isLoaded ? handleEmojiLoad : undefined}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(EmojiButton);\n","import React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport { EMOJI_SIZE_PICKER, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport windowSize from '../../../util/windowSize';\n\nimport { useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useLang from '../../../hooks/useLang';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport EmojiButton from './EmojiButton';\n\nconst EMOJIS_PER_ROW_ON_DESKTOP = 8;\nconst EMOJI_MARGIN = 0.625 * REM;\nconst EMOJI_VERTICAL_MARGIN = 0.25 * REM;\nconst EMOJI_VERTICAL_MARGIN_MOBILE = 0.5 * REM;\nconst MOBILE_CONTAINER_PADDING = 0.5 * REM;\n\ntype OwnProps = {\n  category: EmojiCategory;\n  index: number;\n  allEmojis: AllEmojis;\n  observeIntersection: ObserveFn;\n  shouldRender: boolean;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\nconst EmojiCategory: FC<OwnProps> = ({\n  category, index, allEmojis, observeIntersection, shouldRender, onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersection);\n\n  const transitionClassNames = useMediaTransition(shouldRender);\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const emojisPerRow = isMobile\n    ? Math.floor(\n      (windowSize.get().width - MOBILE_CONTAINER_PADDING + EMOJI_MARGIN) / (EMOJI_SIZE_PICKER + EMOJI_MARGIN),\n    )\n    : EMOJIS_PER_ROW_ON_DESKTOP;\n  const height = Math.ceil(category.emojis.length / emojisPerRow)\n    * (EMOJI_SIZE_PICKER + (isMobile ? EMOJI_VERTICAL_MARGIN_MOBILE : EMOJI_VERTICAL_MARGIN));\n\n  return (\n    <div\n      ref={ref}\n      key={category.id}\n      id={`emoji-category-${index}`}\n      className=\"symbol-set\"\n    >\n      <div className=\"symbol-set-header\">\n        <p className=\"symbol-set-name\" dir=\"auto\">\n          {lang(category.id === RECENT_SYMBOL_SET_ID ? 'RecentStickers' : `Emoji${index}`)}\n        </p>\n      </div>\n      <div\n        className={buildClassName('symbol-set-container', transitionClassNames)}\n        style={`height: ${height}px;`}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldRender && category.emojis.map((name) => {\n          const emoji = allEmojis[name];\n          // Recent emojis may contain emoticons that are no longer in the list\n          if (!emoji) {\n            return undefined;\n          }\n          // Some emojis have multiple skins and are represented as an Object with emojis for all skins.\n          // For now, we select only the first emoji with 'neutral' skin.\n          const displayedEmoji = 'id' in emoji ? emoji : emoji[1];\n\n          return (\n            <EmojiButton\n              key={displayedEmoji.id}\n              emoji={displayedEmoji}\n              onClick={onEmojiSelect}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(EmojiCategory);\n","import React, {\n  useState, useEffect, memo, useRef, useMemo,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { GlobalState } from '../../../global/types';\nimport type {\n  EmojiModule,\n  EmojiRawData,\n  EmojiData,\n} from '../../../util/emoji';\n\nimport { MENU_TRANSITION_DURATION, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { uncompressEmoji } from '../../../util/emoji';\nimport animateScroll from '../../../util/animateScroll';\nimport { pick } from '../../../util/iteratees';\nimport buildClassName from '../../../util/buildClassName';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useScrolledState from '../../../hooks/useScrolledState';\n\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport EmojiCategory from './EmojiCategory';\n\nimport './EmojiPicker.scss';\n\ntype OwnProps = {\n  className?: string;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\ntype StateProps = Pick<GlobalState, 'recentEmojis'>;\n\ntype EmojiCategoryData = { id: string; name: string; emojis: string[] };\n\nconst ICONS_BY_CATEGORY: Record<string, string> = {\n  recent: 'icon-recent',\n  people: 'icon-smile',\n  nature: 'icon-animals',\n  foods: 'icon-eats',\n  activity: 'icon-sport',\n  places: 'icon-car',\n  objects: 'icon-lamp',\n  symbols: 'icon-language',\n  flags: 'icon-flag',\n};\n\nconst OPEN_ANIMATION_DELAY = 200;\nconst SMOOTH_SCROLL_DISTANCE = 100;\nconst FOCUS_MARGIN = 3.25 * REM;\nconst HEADER_BUTTON_WIDTH = 2.625 * REM; // Includes margins\nconst INTERSECTION_THROTTLE = 200;\n\nconst categoryIntersections: boolean[] = [];\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nconst EmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  recentEmojis,\n  onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n\n  const [categories, setCategories] = useState<EmojiCategoryData[]>();\n  const [emojis, setEmojis] = useState<AllEmojis>();\n  const [activeCategoryIndex, setActiveCategoryIndex] = useState(0);\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const { observe: observeIntersection } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  }, (entries) => {\n    entries.forEach((entry) => {\n      const { id } = entry.target as HTMLDivElement;\n      if (!id || !id.startsWith('emoji-category-')) {\n        return;\n      }\n\n      const index = Number(id.replace('emoji-category-', ''));\n      categoryIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = categoryIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveCategoryIndex(minIntersectingIndex);\n  });\n\n  const canRenderContents = useAsyncRendering([], MENU_TRANSITION_DURATION);\n  const shouldRenderContent = emojis && canRenderContents;\n\n  useHorizontalScroll(headerRef, !(isMobile && shouldRenderContent));\n\n  // Scroll header when active set updates\n  useEffect(() => {\n    if (!categories) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeCategoryIndex * HEADER_BUTTON_WIDTH - header.offsetWidth / 2 + HEADER_BUTTON_WIDTH / 2;\n\n    animateHorizontalScroll(header, newLeft);\n  }, [categories, activeCategoryIndex]);\n\n  const lang = useLang();\n\n  const allCategories = useMemo(() => {\n    if (!categories) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const themeCategories = [...categories];\n    if (recentEmojis?.length) {\n      themeCategories.unshift({\n        id: RECENT_SYMBOL_SET_ID,\n        name: lang('RecentStickers'),\n        emojis: recentEmojis,\n      });\n    }\n\n    return themeCategories;\n  }, [categories, lang, recentEmojis]);\n\n  // Initialize data on first render.\n  useEffect(() => {\n    setTimeout(() => {\n      const exec = () => {\n        setCategories(emojiData.categories);\n\n        setEmojis(emojiData.emojis as AllEmojis);\n      };\n\n      if (emojiData) {\n        exec();\n      } else {\n        ensureEmojiData()\n          .then(exec);\n      }\n    }, OPEN_ANIMATION_DELAY);\n  }, []);\n\n  const selectCategory = useLastCallback((index: number) => {\n    setActiveCategoryIndex(index);\n    const categoryEl = containerRef.current!.closest<HTMLElement>('.SymbolMenu-main')!\n      .querySelector(`#emoji-category-${index}`)! as HTMLElement;\n    animateScroll(containerRef.current!, categoryEl, 'start', FOCUS_MARGIN, SMOOTH_SCROLL_DISTANCE);\n  });\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    onEmojiSelect(emoji, name);\n  });\n\n  function renderCategoryButton(category: EmojiCategoryData, index: number) {\n    const icon = ICONS_BY_CATEGORY[category.id];\n\n    return icon && (\n      <Button\n        className={`symbol-set-button ${index === activeCategoryIndex ? 'activated' : ''}`}\n        round\n        faded\n        color=\"translucent\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => selectCategory(index)}\n        ariaLabel={category.name}\n      >\n        <i className={buildClassName('icon', icon)} />\n      </Button>\n    );\n  }\n\n  const containerClassName = buildClassName('EmojiPicker', className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={containerClassName}>\n        <Loading />\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    'EmojiPicker-header',\n    !shouldHideTopBorder && 'with-top-border',\n  );\n\n  return (\n    <div className={containerClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {allCategories.map(renderCategoryButton)}\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={buildClassName('EmojiPicker-main no-selection', IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {allCategories.map((category, i) => (\n          <EmojiCategory\n            category={category}\n            index={i}\n            allEmojis={emojis}\n            observeIntersection={observeIntersection}\n            shouldRender={activeCategoryIndex >= i - 1 && activeCategoryIndex <= i + 1}\n            onEmojiSelect={handleEmojiSelect}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => pick(global, ['recentEmojis']),\n)(EmojiPicker));\n","import React, {\n  useEffect, memo, useRef, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiStickerSet, ApiSticker, ApiChat } from '../../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../../types';\nimport type { FC } from '../../../lib/teact/teact';\n\nimport {\n  CHAT_STICKER_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  PREMIUM_STICKER_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n} from '../../../config';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport { pickTruthy, uniqueByField } from '../../../util/iteratees';\nimport {\n  selectChat, selectChatFullInfo, selectIsChatWithSelf, selectIsCurrentUserPremium, selectShouldLoopStickers,\n} from '../../../global/selectors';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport { useStickerPickerObservers } from '../../common/hooks/useStickerPickerObservers';\nimport useScrolledState from '../../../hooks/useScrolledState';\n\nimport Avatar from '../../common/Avatar';\nimport Loading from '../../ui/Loading';\nimport Button from '../../ui/Button';\nimport StickerButton from '../../common/StickerButton';\nimport StickerSet from '../../common/StickerSet';\nimport StickerSetCover from './StickerSetCover';\nimport PremiumIcon from '../../common/PremiumIcon';\n\nimport styles from './StickerPicker.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: number;\n  className: string;\n  isHidden?: boolean;\n  isTranslucent?: boolean;\n  loadAndPlay: boolean;\n  canSendStickers?: boolean;\n  onStickerSelect: (\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  recentStickers: ApiSticker[];\n  favoriteStickers: ApiSticker[];\n  premiumStickers: ApiSticker[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  chatStickerSetId?: string;\n  addedSetIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst StickerPicker: FC<OwnProps & StateProps> = ({\n  chat,\n  threadId,\n  className,\n  isHidden,\n  isTranslucent,\n  loadAndPlay,\n  canSendStickers,\n  recentStickers,\n  favoriteStickers,\n  premiumStickers,\n  addedSetIds,\n  stickerSetsById,\n  chatStickerSetId,\n  canAnimate,\n  isSavedMessages,\n  isCurrentUserPremium,\n  onStickerSelect,\n}) => {\n  const {\n    loadRecentStickers,\n    addRecentSticker,\n    unfaveSticker,\n    faveSticker,\n    removeRecentSticker,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const sendMessageAction = useSendMessageAction(chat!.id, threadId);\n\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, 'sticker-set', isHidden);\n\n  const lang = useLang();\n\n  const areAddedLoaded = Boolean(addedSetIds);\n\n  const allSets = useMemo(() => {\n    if (!addedSetIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    const defaultSets = [];\n\n    const existingAddedSetIds = Object.values(pickTruthy(stickerSetsById, addedSetIds));\n\n    if (favoriteStickers.length) {\n      defaultSets.push({\n        id: FAVORITE_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('FavoriteStickers'),\n        stickers: favoriteStickers,\n        count: favoriteStickers.length,\n      });\n    }\n\n    if (recentStickers.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('RecentStickers'),\n        stickers: recentStickers,\n        count: recentStickers.length,\n      });\n    }\n\n    if (isCurrentUserPremium) {\n      const addedPremiumStickers = existingAddedSetIds\n        .map(({ stickers }) => stickers?.filter((sticker) => sticker.hasEffect))\n        .flat()\n        .filter(Boolean);\n\n      const totalPremiumStickers = uniqueByField([...addedPremiumStickers, ...premiumStickers], 'id');\n\n      if (totalPremiumStickers.length) {\n        defaultSets.push({\n          id: PREMIUM_STICKER_SET_ID,\n          accessHash: '0',\n          title: lang('PremiumStickers'),\n          stickers: totalPremiumStickers,\n          count: totalPremiumStickers.length,\n        });\n      }\n    }\n\n    if (chatStickerSetId) {\n      const fullSet = stickerSetsById[chatStickerSetId];\n      if (fullSet) {\n        defaultSets.push({\n          id: CHAT_STICKER_SET_ID,\n          accessHash: fullSet.accessHash,\n          title: lang('GroupStickers'),\n          stickers: fullSet.stickers,\n          count: fullSet.stickers!.length,\n        });\n      }\n    }\n\n    return [\n      ...defaultSets,\n      ...existingAddedSetIds,\n    ];\n  }, [\n    addedSetIds, stickerSetsById, favoriteStickers, recentStickers, isCurrentUserPremium, chatStickerSetId, lang,\n    premiumStickers,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  useEffect(() => {\n    if (!loadAndPlay) return;\n    loadRecentStickers();\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  }, [canSendStickers, loadAndPlay, loadRecentStickers, sendMessageAction]);\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContents = areAddedLoaded && canRenderContents && !noPopulatedSets && canSendStickers;\n\n  useHorizontalScroll(headerRef, !shouldRenderContents || !headerRef.current);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleStickerSelect = useLastCallback((sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onStickerSelect(sticker, isSilent, shouldSchedule, true);\n    addRecentSticker({ sticker });\n  });\n\n  const handleStickerUnfave = useLastCallback((sticker: ApiSticker) => {\n    unfaveSticker({ sticker });\n  });\n\n  const handleStickerFave = useLastCallback((sticker: ApiSticker) => {\n    faveSticker({ sticker });\n  });\n\n  const handleMouseMove = useLastCallback(() => {\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  });\n\n  const handleRemoveRecentSticker = useLastCallback((sticker: ApiSticker) => {\n    removeRecentSticker({ sticker });\n  });\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(styles.stickerCover, index === activeSetIndex && styles.activated);\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n\n    if (stickerSet.id === RECENT_SYMBOL_SET_ID\n      || stickerSet.id === FAVORITE_SYMBOL_SET_ID\n      || stickerSet.id === CHAT_STICKER_SET_ID\n      || stickerSet.id === PREMIUM_STICKER_SET_ID\n      || stickerSet.hasThumbnail\n      || !firstSticker\n    ) {\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === FAVORITE_SYMBOL_SET_ID}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(index)}\n        >\n          {stickerSet.id === PREMIUM_STICKER_SET_ID ? (\n            <PremiumIcon withGradient big />\n          ) : stickerSet.id === RECENT_SYMBOL_SET_ID ? (\n            <i className=\"icon icon-recent\" />\n          ) : stickerSet.id === FAVORITE_SYMBOL_SET_ID ? (\n            <i className=\"icon icon-favorite\" />\n          ) : stickerSet.id === CHAT_STICKER_SET_ID ? (\n            <Avatar chat={chat} size=\"small\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !loadAndPlay}\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n            />\n          )}\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          key={stickerSet.id}\n          sticker={firstSticker}\n          size={STICKER_SIZE_PICKER_HEADER}\n          title={stickerSet.title}\n          className={buttonClassName}\n          noPlay={!canAnimate || !loadAndPlay}\n          observeIntersection={observeIntersectionForCovers}\n          noContextMenu\n          isCurrentUserPremium\n          sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n          withTranslucentThumb={isTranslucent}\n          onClick={selectStickerSet}\n          clickArg={index}\n        />\n      );\n    }\n  }\n\n  const fullClassName = buildClassName(styles.root, className);\n\n  if (!shouldRenderContents) {\n    return (\n      <div className={fullClassName}>\n        {!canSendStickers ? (\n          <div className={styles.pickerDisabled}>{lang('ErrorSendRestrictedStickersAll')}</div>\n        ) : noPopulatedSets ? (\n          <div className={styles.pickerDisabled}>{lang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    styles.header,\n    'no-selection no-scrollbar',\n    !shouldHideTopBorder && styles.headerWithBorder,\n  );\n\n  return (\n    <div className={fullClassName}>\n      <div ref={headerRef} className={headerClassName}>\n        <div className=\"shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          {allSets.map(renderCover)}\n        </div>\n      </div>\n      <div\n        ref={containerRef}\n        onMouseMove={handleMouseMove}\n        onScroll={handleContentScroll}\n        className={buildClassName(styles.main, 'no-selection', IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {allSets.map((stickerSet, i) => (\n          <StickerSet\n            key={stickerSet.id}\n            stickerSet={stickerSet}\n            loadAndPlay={Boolean(canAnimate && loadAndPlay)}\n            index={i}\n            observeIntersection={observeIntersectionForSet}\n            observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n            observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n            isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n            favoriteStickers={favoriteStickers}\n            isSavedMessages={isSavedMessages}\n            isCurrentUserPremium={isCurrentUserPremium}\n            isTranslucent={isTranslucent}\n            onStickerSelect={handleStickerSelect}\n            onStickerUnfave={handleStickerUnfave}\n            onStickerFave={handleStickerFave}\n            onStickerRemoveRecent={handleRemoveRecentSticker}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      setsById,\n      added,\n      recent,\n      favorite,\n      premiumSet,\n    } = global.stickers;\n\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const chatStickerSetId = !isUserId(chatId) ? selectChatFullInfo(global, chatId)?.stickerSet?.id : undefined;\n\n    return {\n      chat,\n      recentStickers: recent.stickers,\n      favoriteStickers: favorite.stickers,\n      premiumStickers: premiumSet.stickers,\n      stickerSetsById: setsById,\n      addedSetIds: added.setIds,\n      canAnimate: selectShouldLoopStickers(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      chatStickerSetId,\n    };\n  },\n)(StickerPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiVideo } from '../../api/types';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useMedia from '../../hooks/useMedia';\nimport useBuffering from '../../hooks/useBuffering';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLang from '../../hooks/useLang';\nimport useMenuPosition from '../../hooks/useMenuPosition';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\n\nimport Spinner from '../ui/Spinner';\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\n\nimport './GifButton.scss';\nimport useLastCallback from '../../hooks/useLastCallback';\n\ntype OwnProps = {\n  gif: ApiVideo;\n  observeIntersection: ObserveFn;\n  isDisabled?: boolean;\n  className?: string;\n  onClick?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onUnsaveClick?: (gif: ApiVideo) => void;\n  isSavedMessages?: boolean;\n};\n\nconst GifButton: FC<OwnProps> = ({\n  gif,\n  isDisabled,\n  className,\n  observeIntersection,\n  onClick,\n  onUnsaveClick,\n  isSavedMessages,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const localMediaHash = `gif${gif.id}`;\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const loadAndPlay = isIntersecting && !isDisabled;\n  const previewBlobUrl = useMedia(`${localMediaHash}?size=m`, !loadAndPlay, ApiMediaFormat.BlobUrl);\n  const [withThumb] = useState(gif.thumbnail?.dataUri && !previewBlobUrl);\n  const thumbRef = useCanvasBlur(gif.thumbnail?.dataUri, !withThumb);\n  const videoData = useMedia(localMediaHash, !loadAndPlay, ApiMediaFormat.BlobUrl);\n  const shouldRenderVideo = Boolean(loadAndPlay && videoData);\n  const { isBuffered, bufferingHandlers } = useBuffering(true);\n  const shouldRenderSpinner = loadAndPlay && !isBuffered;\n  const isVideoReady = loadAndPlay && isBuffered;\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.gif-context-menu .bubble'));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen || !onClick) return;\n    onClick({\n      ...gif,\n      blobUrl: videoData,\n    });\n  });\n\n  const handleUnsaveClick = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    onUnsaveClick!(gif);\n  });\n\n  const handleContextDelete = useLastCallback(() => {\n    onUnsaveClick?.(gif);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, undefined, true);\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (isDisabled) handleContextMenuClose();\n  }, [handleContextMenuClose, isDisabled]);\n\n  const fullClassName = buildClassName(\n    'GifButton',\n    gif.width && gif.height && gif.width < gif.height ? 'vertical' : 'horizontal',\n    onClick && 'interactive',\n    localMediaHash,\n    className,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {!IS_TOUCH_ENV && onUnsaveClick && (\n        <Button\n          className=\"gif-unsave-button\"\n          color=\"dark\"\n          pill\n          noFastClick\n          onClick={handleUnsaveClick}\n        >\n          <i className=\"icon icon-close gif-unsave-button-icon\" />\n        </Button>\n      )}\n      {withThumb && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n          // We need to always render to avoid blur re-calculation\n          style={isVideoReady ? 'display: none;' : undefined}\n        />\n      )}\n      {previewBlobUrl && !isVideoReady && (\n        <img\n          src={previewBlobUrl}\n          alt=\"\"\n          className=\"preview\"\n        />\n      )}\n      {shouldRenderVideo && (\n        <OptimizedVideo\n          canPlay\n          src={videoData}\n          autoPlay\n          loop\n          muted\n          disablePictureInPicture\n          playsInline\n          preload=\"none\"\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n        />\n      )}\n      {shouldRenderSpinner && (\n        <Spinner color={previewBlobUrl || withThumb ? 'white' : 'black'} />\n      )}\n      {onClick && contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"gif-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {!isSavedMessages && <MenuItem onClick={handleSendQuiet} icon=\"mute\">{lang('SendWithoutSound')}</MenuItem>}\n          <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n            {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n          </MenuItem>\n          {onUnsaveClick && (\n            <MenuItem destructive icon=\"delete\" onClick={handleContextDelete}>{lang('Delete')}</MenuItem>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(GifButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect, memo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiVideo } from '../../../api/types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { selectCurrentMessageList, selectIsChatWithSelf } from '../../../global/selectors';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Loading from '../../ui/Loading';\nimport GifButton from '../../common/GifButton';\n\nimport './GifPicker.scss';\n\ntype OwnProps = {\n  className: string;\n  loadAndPlay: boolean;\n  canSendGifs?: boolean;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\ntype StateProps = {\n  savedGifs?: ApiVideo[];\n  isSavedMessages?: boolean;\n};\n\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifPicker: FC<OwnProps & StateProps> = ({\n  className,\n  loadAndPlay,\n  canSendGifs,\n  savedGifs,\n  isSavedMessages,\n  onGifSelect,\n}) => {\n  const { loadSavedGifs, saveGif } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  useEffect(() => {\n    if (loadAndPlay) {\n      loadSavedGifs();\n    }\n  }, [loadAndPlay, loadSavedGifs]);\n\n  const handleUnsaveClick = useLastCallback((gif: ApiVideo) => {\n    saveGif({ gif, shouldUnsave: true });\n  });\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n\n  return (\n    <div>\n      <div\n        ref={containerRef}\n        className={buildClassName('GifPicker', className, IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {!canSendGifs ? (\n          <div className=\"picker-disabled\">Sending GIFs is not allowed in this chat.</div>\n        ) : canRenderContents && savedGifs && savedGifs.length ? (\n          savedGifs.map((gif) => (\n            <GifButton\n              key={gif.id}\n              gif={gif}\n              observeIntersection={observeIntersection}\n              isDisabled={!loadAndPlay}\n              onClick={canSendGifs ? onGifSelect : undefined}\n              onUnsaveClick={handleUnsaveClick}\n              isSavedMessages={isSavedMessages}\n            />\n          ))\n        ) : canRenderContents && savedGifs ? (\n          <div className=\"picker-disabled\">No saved GIFs.</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    return {\n      savedGifs: global.gifs.saved.gifs,\n      isSavedMessages,\n    };\n  },\n)(GifPicker));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  activeTab: SymbolMenuTabs;\n  onSwitchTab: (tab: SymbolMenuTabs) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n};\n\nexport enum SymbolMenuTabs {\n  'Emoji',\n  'CustomEmoji',\n  'Stickers',\n  'GIFs',\n}\n\nexport const SYMBOL_MENU_TAB_TITLES: Record<SymbolMenuTabs, string> = {\n  [SymbolMenuTabs.Emoji]: 'Emoji',\n  [SymbolMenuTabs.CustomEmoji]: 'StickersList.EmojiItem',\n  [SymbolMenuTabs.Stickers]: 'AccDescrStickers',\n  [SymbolMenuTabs.GIFs]: 'GifsTab',\n};\n\nconst SYMBOL_MENU_TAB_ICONS = {\n  [SymbolMenuTabs.Emoji]: 'icon-smile',\n  [SymbolMenuTabs.CustomEmoji]: 'icon-favorite',\n  [SymbolMenuTabs.Stickers]: 'icon-stickers',\n  [SymbolMenuTabs.GIFs]: 'icon-gifs',\n};\n\nconst SymbolMenuFooter: FC<OwnProps> = ({\n  activeTab, onSwitchTab, onRemoveSymbol, onSearchOpen, isAttachmentModal,\n  canSendPlainText,\n}) => {\n  const lang = useLang();\n\n  function renderTabButton(tab: SymbolMenuTabs) {\n    return (\n      <Button\n        className={`symbol-tab-button ${activeTab === tab ? 'activated' : ''}`}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => onSwitchTab(tab)}\n        ariaLabel={lang(SYMBOL_MENU_TAB_TITLES[tab])}\n        round\n        faded\n        color=\"translucent\"\n      >\n        <i className={buildClassName('icon', SYMBOL_MENU_TAB_ICONS[tab])} />\n      </Button>\n    );\n  }\n\n  const handleSearchOpen = useLastCallback(() => {\n    onSearchOpen(activeTab === SymbolMenuTabs.Stickers ? 'stickers' : 'gifs');\n  });\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  return (\n    <div className=\"SymbolMenu-footer\" onClick={stopPropagation} dir={lang.isRtl ? 'rtl' : undefined}>\n      {activeTab !== SymbolMenuTabs.Emoji && activeTab !== SymbolMenuTabs.CustomEmoji && (\n        <Button\n          className=\"symbol-search-button\"\n          ariaLabel={activeTab === SymbolMenuTabs.Stickers ? 'Search Stickers' : 'Search GIFs'}\n          round\n          faded\n          color=\"translucent\"\n          onClick={handleSearchOpen}\n        >\n          <i className=\"icon icon-search\" />\n        </Button>\n      )}\n\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.Emoji)}\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.CustomEmoji)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.Stickers)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.GIFs)}\n\n      {(activeTab === SymbolMenuTabs.Emoji || activeTab === SymbolMenuTabs.CustomEmoji) && (\n        <Button\n          className=\"symbol-delete-button\"\n          onClick={onRemoveSymbol}\n          ariaLabel=\"Remove Symbol\"\n          round\n          faded\n          color=\"translucent\"\n        >\n          <i className=\"icon icon-delete-left\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SymbolMenuFooter);\n","import React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\n\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { selectTabState, selectIsCurrentUserPremium, selectIsContextMenuTranslucent } from '../../../global/selectors';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useLang from '../../../hooks/useLang';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport Transition from '../../ui/Transition';\nimport EmojiPicker from './EmojiPicker';\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport StickerPicker from './StickerPicker';\nimport GifPicker from './GifPicker';\nimport SymbolMenuFooter, { SYMBOL_MENU_TAB_TITLES, SymbolMenuTabs } from './SymbolMenuFooter';\nimport Portal from '../../ui/Portal';\n\nimport './SymbolMenu.scss';\n\nconst ANIMATION_DURATION = 350;\nconst STICKERS_TAB_INDEX = 2;\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: number;\n  isOpen: boolean;\n  canSendStickers?: boolean;\n  canSendGifs?: boolean;\n  onLoad: () => void;\n  onClose: () => void;\n  onEmojiSelect: (emoji: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  addRecentEmoji: GlobalActions['addRecentEmoji'];\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  className?: string;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  positionX?: 'left' | 'right';\n  positionY?: 'top' | 'bottom';\n  transformOriginX?: number;\n  transformOriginY?: number;\n  style?: string;\n};\n\ntype StateProps = {\n  isLeftColumnShown: boolean;\n  isCurrentUserPremium?: boolean;\n  lastSyncTime?: number;\n  isBackgroundTranslucent?: boolean;\n};\n\nlet isActivated = false;\n\nconst SymbolMenu: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  canSendStickers,\n  canSendGifs,\n  isLeftColumnShown,\n  isCurrentUserPremium,\n  lastSyncTime,\n  onLoad,\n  onClose,\n  onEmojiSelect,\n  isAttachmentModal,\n  canSendPlainText,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  className,\n  onGifSelect,\n  onRemoveSymbol,\n  onSearchOpen,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n  positionX,\n  positionY,\n  transformOriginX,\n  transformOriginY,\n  style,\n  isBackgroundTranslucent,\n}) => {\n  const { loadPremiumSetStickers } = getActions();\n  const [activeTab, setActiveTab] = useState<number>(0);\n  const [recentEmojis, setRecentEmojis] = useState<string[]>([]);\n  const [recentCustomEmojis, setRecentCustomEmojis] = useState<string[]>([]);\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, onClose, false, false);\n\n  if (!isActivated && isOpen) {\n    isActivated = true;\n  }\n\n  useEffect(() => {\n    onLoad();\n  }, [onLoad]);\n\n  // If we can't send plain text, we should always show the stickers tab\n  useEffect(() => {\n    if (canSendPlainText) return;\n    setActiveTab(STICKERS_TAB_INDEX);\n  }, [canSendPlainText]);\n\n  useEffect(() => {\n    if (lastSyncTime && isCurrentUserPremium) {\n      loadPremiumSetStickers();\n    }\n  }, [isCurrentUserPremium, lastSyncTime, loadPremiumSetStickers]);\n\n  useLayoutEffect(() => {\n    if (!isMobile || !isOpen || isAttachmentModal) {\n      return undefined;\n    }\n\n    document.body.classList.add('enable-symbol-menu-transforms');\n    document.body.classList.add('is-symbol-menu-open');\n\n    return () => {\n      document.body.classList.remove('is-symbol-menu-open');\n\n      setTimeout(() => {\n        requestMutation(() => {\n          document.body.classList.remove('enable-symbol-menu-transforms');\n        });\n      }, ANIMATION_DURATION);\n    };\n  }, [isAttachmentModal, isMobile, isOpen]);\n\n  const recentEmojisRef = useRef(recentEmojis);\n  recentEmojisRef.current = recentEmojis;\n  useEffect(() => {\n    if (!recentEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentEmojisRef.current.forEach((name) => {\n      addRecentEmoji({ emoji: name });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentEmoji]);\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    setRecentEmojis((emojis) => [...emojis, name]);\n\n    onEmojiSelect(emoji);\n  });\n\n  const recentCustomEmojisRef = useRef(recentCustomEmojis);\n  recentCustomEmojisRef.current = recentCustomEmojis;\n  useEffect(() => {\n    if (!recentCustomEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentCustomEmojisRef.current.forEach((documentId) => {\n      addRecentCustomEmoji({\n        documentId,\n      });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentCustomEmoji]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    setRecentCustomEmojis((ids) => [...ids, emoji.id]);\n\n    onCustomEmojiSelect(emoji);\n  });\n\n  const handleSearch = useLastCallback((type: 'stickers' | 'gifs') => {\n    onClose();\n    onSearchOpen(type);\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    onStickerSelect?.(sticker, isSilent, shouldSchedule, true, canUpdateStickerSetsOrder);\n  });\n\n  const lang = useLang();\n\n  function renderContent(isActive: boolean, isFrom: boolean) {\n    switch (activeTab) {\n      case SymbolMenuTabs.Emoji:\n        return (\n          <EmojiPicker\n            className=\"picker-tab\"\n            onEmojiSelect={handleEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.CustomEmoji:\n        return (\n          <CustomEmojiPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            loadAndPlay={isOpen && (isActive || isFrom)}\n            chatId={chatId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.Stickers:\n        return (\n          <StickerPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            loadAndPlay={canSendStickers ? isOpen && (isActive || isFrom) : false}\n            canSendStickers={canSendStickers}\n            chatId={chatId}\n            threadId={threadId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onStickerSelect={handleStickerSelect}\n          />\n        );\n      case SymbolMenuTabs.GIFs:\n        return (\n          <GifPicker\n            className=\"picker-tab\"\n            loadAndPlay={canSendGifs ? isOpen && (isActive || isFrom) : false}\n            canSendGifs={canSendGifs}\n            onGifSelect={onGifSelect}\n          />\n        );\n    }\n\n    return undefined;\n  }\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  const content = (\n    <>\n      <div className=\"SymbolMenu-main\" onClick={stopPropagation}>\n        {isActivated && (\n          <Transition\n            name=\"slide\"\n            activeKey={activeTab}\n            renderCount={Object.values(SYMBOL_MENU_TAB_TITLES).length}\n          >\n            {renderContent}\n          </Transition>\n        )}\n      </div>\n      {isMobile && (\n        <Button\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('Close')}\n          className=\"symbol-close-button\"\n          size=\"tiny\"\n          onClick={onClose}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      )}\n      <SymbolMenuFooter\n        activeTab={activeTab}\n        onSwitchTab={setActiveTab}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearch}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n      />\n    </>\n  );\n\n  if (isMobile) {\n    if (!shouldRender) {\n      return undefined;\n    }\n\n    const mobileClassName = buildClassName(\n      'SymbolMenu mobile-menu',\n      transitionClassNames,\n      isLeftColumnShown && 'left-column-open',\n      isAttachmentModal && 'in-attachment-modal',\n    );\n\n    if (isAttachmentModal) {\n      return (\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      );\n    }\n\n    return (\n      <Portal>\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      </Portal>\n    );\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX={isAttachmentModal ? positionX : 'left'}\n      positionY={isAttachmentModal ? positionY : 'bottom'}\n      onClose={onClose}\n      withPortal={isAttachmentModal}\n      className={buildClassName('SymbolMenu', className)}\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n      transformOriginX={transformOriginX}\n      transformOriginY={transformOriginY}\n      style={style}\n    >\n      {content}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isLeftColumnShown: selectTabState(global).isLeftColumnShown,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      lastSyncTime: global.lastSyncTime,\n      isBackgroundTranslucent: selectIsContextMenuTranslucent(global),\n    };\n  },\n)(SymbolMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiUser } from '../../../api/types';\n\nimport renderText from '../../common/helpers/renderText';\nimport buildClassName from '../../../util/buildClassName';\n\nimport ListItem from '../../ui/ListItem';\nimport Avatar from '../../common/Avatar';\n\nimport './BotCommand.scss';\n\ntype OwnProps = {\n  botCommand: ApiBotCommand;\n  bot?: ApiUser;\n  withAvatar?: boolean;\n  focus?: boolean;\n  onClick: (botCommand: ApiBotCommand) => void;\n};\n\nconst BotCommand: FC<OwnProps> = ({\n  withAvatar,\n  focus,\n  botCommand,\n  bot,\n  onClick,\n}) => {\n  return (\n    <ListItem\n      key={botCommand.command}\n      className={buildClassName('BotCommand chat-item-clickable scroll-item', withAvatar && 'with-avatar')}\n      multiline\n      // eslint-disable-next-line react/jsx-no-bind\n      onClick={() => onClick(botCommand)}\n      focus={focus}\n    >\n      {withAvatar && (\n        <Avatar size=\"small\" user={bot} />\n      )}\n      <div className=\"content-inner\">\n        <span className=\"title\">/{botCommand.command}</span>\n        <span className=\"subtitle\">{renderText(botCommand.description)}</span>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(BotCommand);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useEffect, useRef, memo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { Signal } from '../../../util/signals';\nimport type { ApiBotCommand } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport usePrevious from '../../../hooks/usePrevious';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport BotCommand from './BotCommand';\n\nimport './BotCommandTooltip.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withUsername?: boolean;\n  botCommands?: ApiBotCommand[];\n  getHtml: Signal<string>;\n  onClick: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\nconst BotCommandTooltip: FC<OwnProps> = ({\n  isOpen,\n  withUsername,\n  botCommands,\n  getHtml,\n  onClick,\n  onClose,\n}) => {\n  const { sendBotCommand } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n\n  const handleSendCommand = useLastCallback(({ botId, command }: ApiBotCommand) => {\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const bot = usersById[botId];\n\n    sendBotCommand({\n      command: `/${command}${withUsername && bot ? `@${bot.usernames![0].username}` : ''}`,\n    });\n    onClick();\n  });\n\n  const handleSelect = useLastCallback((botCommand: ApiBotCommand) => {\n    // We need an additional check because tooltip is updated with throttling\n    if (!botCommand.command.startsWith(getHtml().slice(1))) {\n      return false;\n    }\n\n    handleSendCommand(botCommand);\n    return true;\n  });\n\n  const selectedCommandIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: botCommands,\n    onSelect: handleSelect,\n    onClose,\n  });\n\n  useEffect(() => {\n    if (botCommands && !botCommands.length) {\n      onClose();\n    }\n  }, [botCommands, onClose]);\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedCommandIndex, containerRef);\n  }, [selectedCommandIndex]);\n\n  const prevCommands = usePrevious(botCommands && botCommands.length ? botCommands : undefined, shouldRender);\n  const renderedCommands = botCommands && !botCommands.length ? prevCommands : botCommands;\n\n  if (!shouldRender || (renderedCommands && !renderedCommands.length)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'BotCommandTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {renderedCommands && renderedCommands.map((chatBotCommand, index) => (\n        <BotCommand\n          key={`${chatBotCommand.botId}_${chatBotCommand.command}`}\n          botCommand={chatBotCommand}\n          // No need for expensive global updates on users and chats, so we avoid them\n          bot={getGlobal().users.byId[chatBotCommand.botId]}\n          withAvatar\n          onClick={handleSendCommand}\n          focus={selectedCommandIndex === index}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(BotCommandTooltip);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiBotCommand } from '../../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport Menu from '../../ui/Menu';\nimport BotCommand from './BotCommand';\n\nimport './BotCommandMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botCommands: ApiBotCommand[];\n  onClose: NoneToVoidFunction;\n};\n\nconst BotCommandMenu: FC<OwnProps> = ({\n  isOpen, botCommands, onClose,\n}) => {\n  const { sendBotCommand } = getActions();\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n\n  const handleClick = useLastCallback((botCommand: ApiBotCommand) => {\n    sendBotCommand({\n      command: `/${botCommand.command}`,\n    });\n    onClose();\n  });\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotCommandMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      {botCommands.map((botCommand) => (\n        <BotCommand\n          key={botCommand.command}\n          botCommand={botCommand}\n          onClick={handleClick}\n        />\n      ))}\n    </Menu>\n  );\n};\n\nexport default memo(BotCommandMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { STICKER_SIZE_PICKER } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\n\nimport Loading from '../../ui/Loading';\nimport StickerButton from '../../common/StickerButton';\n\nimport './StickerTooltip.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: number;\n  isOpen: boolean;\n  onStickerSelect: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  stickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerTooltip: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  onStickerSelect,\n  onClose,\n  stickers,\n  isSavedMessages,\n  isCurrentUserPremium,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n  const prevStickers = usePrevious(stickers, true);\n  const displayedStickers = stickers || prevStickers;\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleMouseMove = () => {\n    sendMessageAction({ type: 'chooseSticker' });\n  };\n\n  const className = buildClassName(\n    'StickerTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n    !(displayedStickers?.length) && 'hidden',\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      onMouseMove={handleMouseMove}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            size={STICKER_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={isOpen ? onStickerSelect : undefined}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers } = global.stickers.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n    return { stickers, isSavedMessages, isCurrentUserPremium };\n  },\n)(StickerTooltip));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"o7fHB9vMHP_k5l9rZC2R\",\"emojiButton\":\"LzdBMbvLbmND0s2zfaff\"};","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiSticker } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\n\nimport { COMPOSER_EMOJI_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\n\nimport Loading from '../../ui/Loading';\nimport StickerButton from '../../common/StickerButton';\n\nimport styles from './CustomEmojiTooltip.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  isOpen: boolean;\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  onCustomEmojiSelect: (customEmoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  noPlay?: boolean;\n};\n\ntype StateProps = {\n  customEmoji?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst CustomEmojiTooltip: FC<OwnProps & StateProps> = ({\n  isOpen,\n  addRecentCustomEmoji,\n  onCustomEmojiSelect,\n  onClose,\n  customEmoji,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noPlay,\n}) => {\n  const { clearCustomEmojiForEmoji } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n  const prevStickers = usePrevious(customEmoji, true);\n  const displayedStickers = customEmoji || prevStickers;\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleCustomEmojiSelect = useLastCallback((ce: ApiSticker) => {\n    if (!isOpen) return;\n    onCustomEmojiSelect(ce);\n    addRecentCustomEmoji({\n      documentId: ce.id,\n    });\n    clearCustomEmojiForEmoji();\n  });\n\n  const className = buildClassName(\n    styles.root,\n    'composer-tooltip custom-scroll-x',\n    transitionClassNames,\n    !displayedStickers?.length && styles.hidden,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            className={styles.emojiButton}\n            size={COMPOSER_EMOJI_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={handleCustomEmojiSelect}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n            noPlay={noPlay}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers: customEmoji } = global.customEmojis.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return { customEmoji, isSavedMessages, isCurrentUserPremium };\n  },\n)(CustomEmojiTooltip));\n","import React, { memo, useState } from '../../../lib/teact/teact';\n\nimport type { FC } from '../../../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useLang from '../../../hooks/useLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\n\nimport './CustomSendMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isOpenToBottom?: boolean;\n  isSavedMessages?: boolean;\n  canScheduleUntilOnline?: boolean;\n  onSendSilent?: NoneToVoidFunction;\n  onSendSchedule?: NoneToVoidFunction;\n  onSendWhenOnline?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\nconst CustomSendMenu: FC<OwnProps> = ({\n  isOpen,\n  isOpenToBottom = false,\n  isSavedMessages,\n  canScheduleUntilOnline,\n  onSendSilent,\n  onSendSchedule,\n  onSendWhenOnline,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const [displayScheduleUntilOnline, setDisplayScheduleUntilOnline] = useState(false);\n\n  const lang = useLang();\n\n  useEffectWithPrevDeps(([prevIsOpen]) => {\n    // Avoid context menu item shuffling when opened\n    if (isOpen && !prevIsOpen) {\n      setDisplayScheduleUntilOnline(Boolean(canScheduleUntilOnline));\n    }\n  }, [isOpen, canScheduleUntilOnline]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose\n      positionX=\"right\"\n      positionY={isOpenToBottom ? 'top' : 'bottom'}\n      className=\"CustomSendMenu with-menu-transitions\"\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n    >\n      {onSendSilent && <MenuItem icon=\"mute\" onClick={onSendSilent}>{lang('SendWithoutSound')}</MenuItem>}\n      {onSendSchedule && (\n        <MenuItem icon=\"schedule\" onClick={onSendSchedule}>\n          {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n        </MenuItem>\n      )}\n      {onSendSchedule && displayScheduleUntilOnline && (\n        <MenuItem icon=\"user-online\" onClick={onSendWhenOnline}>\n          {lang('SendWhenOnline')}\n        </MenuItem>\n      )}\n    </Menu>\n  );\n};\n\nexport default memo(CustomSendMenu);\n","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport './EmojiButton.scss';\n\nconst CUSTOM_EMOJI_SIZE = 32;\n\ntype OwnProps = {\n  emoji: ApiSticker;\n  focus?: boolean;\n  onClick?: (emoji: ApiSticker) => void;\n  observeIntersection?: ObserveFn;\n};\n\nconst CustomEmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick, observeIntersection,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick?.(emoji);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={emoji.emoji}\n    >\n      <CustomEmoji\n        documentId={emoji.id}\n        size={CUSTOM_EMOJI_SIZE}\n        withSharedAnimation\n        shouldPreloadPreview\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiButton);\n","import React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { FC } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport findInViewport from '../../../util/findInViewport';\nimport isFullyVisible from '../../../util/isFullyVisible';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport usePrevDuringAnimation from '../../../hooks/usePrevDuringAnimation';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\n\nimport Loading from '../../ui/Loading';\nimport EmojiButton from './EmojiButton';\nimport CustomEmojiButton from './CustomEmojiButton';\n\nimport './EmojiTooltip.scss';\n\nconst VIEWPORT_MARGIN = 8;\nconst EMOJI_BUTTON_WIDTH = 44;\nconst CLOSE_DURATION = 350;\n\nfunction setItemVisible(index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container) {\n    return;\n  }\n\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    '.EmojiButton',\n    VIEWPORT_MARGIN,\n    true,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first], true))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    const newLeft = position === 'start' ? index * EMOJI_BUTTON_WIDTH : 0;\n\n    animateHorizontalScroll(container, newLeft);\n  }\n}\n\nexport type OwnProps = {\n  isOpen: boolean;\n  emojis: Emoji[];\n  customEmojis: ApiSticker[];\n  onEmojiSelect: (text: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  addRecentEmoji: ({ emoji }: { emoji: string }) => void;\n  addRecentCustomEmoji: ({ documentId }: { documentId: string }) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst EmojiTooltip: FC<OwnProps> = ({\n  isOpen,\n  emojis,\n  customEmojis,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n  const listEmojis: (Emoji | ApiSticker)[] = usePrevDuringAnimation(\n    emojis.length ? [...customEmojis, ...emojis] : undefined, CLOSE_DURATION,\n  ) || [];\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  const handleSelectEmoji = useLastCallback((emoji: Emoji) => {\n    onEmojiSelect(emoji.native);\n    addRecentEmoji({ emoji: emoji.id });\n  });\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const handleSelect = useLastCallback((emoji: Emoji | ApiSticker) => {\n    if ('native' in emoji) {\n      handleSelectEmoji(emoji);\n    } else {\n      handleCustomEmojiSelect(emoji);\n    }\n  });\n\n  const handleClick = useLastCallback((native: string, id: string) => {\n    onEmojiSelect(native);\n    addRecentEmoji({ emoji: id });\n  });\n\n  const handleCustomEmojiClick = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    isHorizontal: true,\n    items: listEmojis,\n    onSelect: handleSelect,\n    onClose,\n  });\n\n  useEffectWithPrevDeps(([prevSelectedIndex]) => {\n    if (prevSelectedIndex === undefined || prevSelectedIndex === -1) {\n      return;\n    }\n\n    setItemVisible(selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const className = buildClassName(\n    'EmojiTooltip composer-tooltip custom-scroll-x',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && listEmojis ? (\n        listEmojis.map((emoji, index) => (\n          'native' in emoji ? (\n            <EmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleClick}\n            />\n          ) : (\n            <CustomEmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleCustomEmojiClick}\n              observeIntersection={observeIntersection}\n            />\n          )\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(EmojiTooltip);\n","import type { FC, TeactNode } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiWebDocument } from '../../../../api/types';\n\nimport { getFirstLetters } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\nimport useMedia from '../../../../hooks/useMedia';\nimport { preventMessageInputBlurWithBubbling } from '../../helpers/preventMessageInputBlur';\n\nimport ListItem from '../../../ui/ListItem';\n\nimport './BaseResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  thumbnail?: ApiWebDocument;\n  thumbUrl?: string;\n  title?: string;\n  description?: string;\n  transitionClassNames?: string;\n  onClick: NoneToVoidFunction;\n};\n\nconst BaseResult: FC<OwnProps> = ({\n  title,\n  description,\n  thumbnail,\n  thumbUrl,\n  focus,\n  transitionClassNames = '',\n  onClick,\n}) => {\n  let content: TeactNode | undefined;\n\n  const thumbnailDataUrl = useMedia(thumbnail ? `webDocument:${thumbnail.url}` : undefined);\n  thumbUrl = thumbUrl || thumbnailDataUrl;\n\n  if (thumbUrl) {\n    content = (\n      <img src={thumbUrl} className={transitionClassNames} alt=\"\" decoding=\"async\" draggable={false} />\n    );\n  } else if (title) {\n    content = getFirstLetters(title, 1);\n  }\n\n  return (\n    <ListItem\n      focus={focus}\n      className=\"BaseResult chat-item-clickable\"\n      onMouseDown={preventMessageInputBlurWithBubbling}\n      onClick={onClick}\n    >\n      <span className=\"thumb\">\n        {typeof content === 'string' ? renderText(content) : content}\n      </span>\n      <div className=\"content-inner\">\n        {title && (<div className=\"title\">{title}</div>)}\n        {description && (<div className=\"description\">{description}</div>)}\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(BaseResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiPhoto, ApiThumbnail, ApiWebDocument,\n} from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransition from '../../../../hooks/useMediaTransition';\n\nimport BaseResult from './BaseResult';\n\nimport './MediaResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  isForGallery?: boolean;\n  inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult;\n  onClick: (result: ApiBotInlineResult) => void;\n};\n\nconst MediaResult: FC<OwnProps> = ({\n  focus, isForGallery, inlineResult, onClick,\n}) => {\n  let photo: ApiPhoto | undefined;\n  let thumbnail: ApiThumbnail | undefined;\n  let webThumbnail: ApiWebDocument | undefined;\n\n  if ('photo' in inlineResult) {\n    photo = inlineResult.photo;\n  }\n  // For results with type=video (for example @stikstokbot)\n  if ('thumbnail' in inlineResult) {\n    thumbnail = inlineResult.thumbnail;\n  }\n  if ('webThumbnail' in inlineResult && isForGallery) {\n    webThumbnail = inlineResult.webThumbnail;\n  }\n\n  const thumbnailDataUrl = useMedia(webThumbnail ? `webDocument:${webThumbnail.url}` : undefined);\n  const mediaBlobUrl = useMedia(photo && `photo${photo.id}?size=m`);\n  const transitionClassNames = useMediaTransition(mediaBlobUrl);\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  if (isForGallery) {\n    return (\n      <div className=\"MediaResult chat-item-clickable\" onClick={handleClick}>\n        <img src={(photo?.thumbnail?.dataUri) || thumbnailDataUrl} alt=\"\" />\n        <img src={mediaBlobUrl} className={buildClassName('full-media', transitionClassNames)} alt=\"\" />\n      </div>\n    );\n  }\n\n  const { title, description } = inlineResult;\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbUrl={mediaBlobUrl || (thumbnail?.dataUri || thumbnailDataUrl)}\n      transitionClassNames={transitionClassNames}\n      title={title}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(MediaResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineResult } from '../../../../api/types';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport BaseResult from './BaseResult';\n\nexport type OwnProps = {\n  focus?: boolean;\n  inlineResult: ApiBotInlineResult;\n  onClick: (result: ApiBotInlineResult) => void;\n};\n\nconst ArticleResult: FC<OwnProps> = ({ focus, inlineResult, onClick }) => {\n  const {\n    title, url, description, webThumbnail,\n  } = inlineResult;\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbnail={webThumbnail}\n      title={title || url}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(ArticleResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiBotInlineResult, ApiVideo } from '../../../../api/types';\n\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport GifButton from '../../../common/GifButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\nconst GifResult: FC<OwnProps> = ({\n  inlineResult, isSavedMessages, canSendGifs, observeIntersection, onClick,\n}) => {\n  const { gif } = inlineResult;\n\n  const handleClick = useLastCallback((_gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onClick(inlineResult, isSilent, shouldSchedule);\n  });\n\n  if (!gif) {\n    return undefined;\n  }\n\n  return (\n    <GifButton\n      gif={gif}\n      observeIntersection={observeIntersection}\n      className=\"chat-item-clickable\"\n      onClick={canSendGifs ? handleClick : undefined}\n      isSavedMessages={isSavedMessages}\n    />\n  );\n};\n\nexport default memo(GifResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiBotInlineResult } from '../../../../api/types';\n\nimport { STICKER_SIZE_INLINE_BOT_RESULT } from '../../../../config';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport StickerButton from '../../../common/StickerButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StickerResult: FC<OwnProps> = ({\n  inlineResult,\n  isSavedMessages,\n  observeIntersection,\n  onClick,\n  isCurrentUserPremium,\n}) => {\n  const { sticker } = inlineResult;\n\n  if (!sticker) {\n    return undefined;\n  }\n\n  return (\n    <StickerButton\n      sticker={sticker}\n      size={STICKER_SIZE_INLINE_BOT_RESULT}\n      observeIntersection={observeIntersection}\n      title={sticker.emoji}\n      className=\"chat-item-clickable\"\n      onClick={onClick}\n      clickArg={inlineResult}\n      isSavedMessages={isSavedMessages}\n      canViewSet\n      noShowPremium\n      isCurrentUserPremium={isCurrentUserPremium}\n    />\n  );\n};\n\nexport default memo(StickerResult);\n","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiBotInlineSwitchPm, ApiBotInlineSwitchWebview,\n} from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport buildClassName from '../../../util/buildClassName';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { throttle } from '../../../util/schedulers';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport MediaResult from './inlineResults/MediaResult';\nimport ArticleResult from './inlineResults/ArticleResult';\nimport GifResult from './inlineResults/GifResult';\nimport StickerResult from './inlineResults/StickerResult';\nimport ListItem from '../../ui/ListItem';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\n\nimport './InlineBotTooltip.scss';\n\nconst INTERSECTION_DEBOUNCE_MS = 200;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botId?: string;\n  isGallery?: boolean;\n  inlineBotResults?: (ApiBotInlineResult | ApiBotInlineMediaResult)[];\n  switchPm?: ApiBotInlineSwitchPm;\n  switchWebview?: ApiBotInlineSwitchWebview;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  onSelectResult: (\n    inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean,\n  ) => void;\n  loadMore: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  isCurrentUserPremium?: boolean;\n};\n\nconst InlineBotTooltip: FC<OwnProps> = ({\n  isOpen,\n  botId,\n  isGallery,\n  inlineBotResults,\n  switchPm,\n  switchWebview,\n  isSavedMessages,\n  canSendGifs,\n  loadMore,\n  onClose,\n  onSelectResult,\n  isCurrentUserPremium,\n}) => {\n  const {\n    openChat,\n    startBot,\n    requestSimpleWebView,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n  const renderedIsGallery = useCurrentOrPrev(isGallery, shouldRender);\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    debounceMs: INTERSECTION_DEBOUNCE_MS,\n    isDisabled: !isOpen,\n  });\n\n  const handleLoadMore = useLastCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(loadMore);\n    }\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    shouldRemoveSelectionOnReset: renderedIsGallery,\n    noArrowNavigation: renderedIsGallery,\n    items: inlineBotResults,\n    onSelect: onSelectResult,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const handleSendPm = useLastCallback(() => {\n    openChat({ id: botId });\n    startBot({ botId: botId!, param: switchPm!.startParam });\n  });\n\n  const handleOpenWebview = useLastCallback(() => {\n    const theme = extractCurrentThemeParams();\n\n    requestSimpleWebView({\n      botId: botId!,\n      url: switchWebview!.url,\n      buttonText: switchWebview!.text,\n      theme,\n    });\n  });\n\n  const prevInlineBotResults = usePrevious(\n    inlineBotResults?.length\n      ? inlineBotResults\n      : undefined,\n    shouldRender,\n  );\n  const renderedInlineBotResults = inlineBotResults?.length ? inlineBotResults : prevInlineBotResults;\n\n  if (!shouldRender || !(renderedInlineBotResults?.length || switchPm)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'InlineBotTooltip composer-tooltip',\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    renderedIsGallery && 'gallery',\n    transitionClassNames,\n  );\n\n  function renderSwitchPm() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleSendPm}>\n        <span className=\"title\">{switchPm!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderSwitchWebview() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleOpenWebview}>\n        <span className=\"title\">{switchWebview!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderContent() {\n    return renderedInlineBotResults!.map((inlineBotResult, index) => {\n      switch (inlineBotResult.type) {\n        case 'gif':\n          return (\n            <GifResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              canSendGifs={canSendGifs}\n            />\n          );\n\n        case 'photo':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              isForGallery={renderedIsGallery}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        case 'sticker':\n          return (\n            <StickerResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              isCurrentUserPremium={isCurrentUserPremium}\n            />\n          );\n\n        case 'video':\n        case 'file':\n        case 'game':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n        case 'article':\n        case 'audio':\n        case 'voice':\n          return (\n            <ArticleResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        default:\n          return undefined;\n      }\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      ref={containerRef}\n      className={className}\n      items={renderedInlineBotResults}\n      itemSelector=\".chat-item-clickable\"\n      noFastList\n      onLoadMore={handleLoadMore}\n      sensitiveArea={160}\n    >\n      {switchPm && renderSwitchPm()}\n      {switchWebview && renderSwitchWebview()}\n      {Boolean(renderedInlineBotResults?.length) && renderContent()}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(InlineBotTooltip);\n","import React, { useEffect, useRef, memo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiSendAsPeerId } from '../../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport { isUserId } from '../../../global/helpers';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useLang from '../../../hooks/useLang';\n\nimport ListItem from '../../ui/ListItem';\nimport Avatar from '../../common/Avatar';\nimport Menu from '../../ui/Menu';\nimport FullNameTitle from '../../common/FullNameTitle';\n\nimport './SendAsMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  selectedSendAsId?: string;\n  sendAsPeerIds?: ApiSendAsPeerId[];\n  isCurrentUserPremium?: boolean;\n  onClose: () => void;\n};\n\nconst SendAsMenu: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  selectedSendAsId,\n  sendAsPeerIds,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { saveDefaultSendAs, showNotification } = getActions();\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const chatsById = getGlobal().chats.byId;\n\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isOpen, onClose, undefined);\n\n  useEffect(() => {\n    if (isOpen) {\n      markMouseInside();\n    }\n  }, [isOpen, markMouseInside]);\n\n  const handleUserSelect = useLastCallback((id: string) => {\n    onClose();\n    saveDefaultSendAs({ chatId: chatId!, sendAsId: id });\n  });\n\n  const selectedSendAsIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: sendAsPeerIds,\n    onSelect: handleUserSelect,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedSendAsIndex, containerRef);\n  }, [selectedSendAsIndex]);\n\n  useEffect(() => {\n    if (sendAsPeerIds && !sendAsPeerIds.length) {\n      onClose();\n    }\n  }, [sendAsPeerIds, onClose]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"SendAsMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      <div className=\"send-as-title\" dir=\"auto\">{lang('SendMessageAsTitle')}</div>\n      {usersById && chatsById && sendAsPeerIds?.map(({ id, isPremium }, index) => {\n        const user = isUserId(id) ? usersById[id] : undefined;\n        const chat = !user ? chatsById[id] : undefined;\n        const userOrChat = user || chat;\n\n        const handleClick = () => {\n          if (!isPremium || isCurrentUserPremium) {\n            handleUserSelect(id);\n          } else {\n            showNotification({\n              message: lang('SelectSendAsPeerPremiumHint'),\n              actionText: lang('Open'),\n              action: {\n                action: 'openPremiumModal',\n                payload: {},\n              },\n            });\n          }\n        };\n\n        const avatarClassName = buildClassName(selectedSendAsId === id && 'selected');\n\n        return (\n          <ListItem\n            key={id}\n            className=\"SendAsItem chat-item-clickable scroll-item with-avatar\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClick}\n            focus={selectedSendAsIndex === index}\n            rightElement={!isCurrentUserPremium && isPremium\n              && <i className=\"icon icon-lock-badge send-as-icon-locked\" />}\n          >\n            <Avatar\n              size=\"small\"\n              chat={chat}\n              user={user}\n              className={avatarClassName}\n            />\n            <div className=\"info\">\n              {userOrChat && <FullNameTitle peer={userOrChat} noFake />}\n              <span className=\"subtitle\">{user\n                ? lang('VoipGroupPersonalAccount')\n                : lang('Subscribers', chat?.membersCount, 'i')}\n              </span>\n            </div>\n          </ListItem>\n        );\n      })}\n    </Menu>\n  );\n};\n\nexport default memo(SendAsMenu);\n","import React, {\n  useMemo, memo, useRef, useEffect, useCallback,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiMessage, ApiUser, ApiChat } from '../../api/types';\n\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport {\n  selectUser,\n  selectChatMessages,\n  selectChat,\n  selectCurrentTextSearch,\n} from '../../global/selectors';\nimport { isChatChannel } from '../../global/helpers';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { renderMessageSummary } from '../common/helpers/renderMessageText';\nimport useLang from '../../hooks/useLang';\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\n\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport LastMessageMeta from '../common/LastMessageMeta';\nimport Avatar from '../common/Avatar';\nimport FullNameTitle from '../common/FullNameTitle';\n\nimport './RightSearch.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: number;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  messagesById?: Record<number, ApiMessage>;\n  query?: string;\n  totalCount?: number;\n  foundIds?: number[];\n};\n\nconst RightSearch: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isActive,\n  chat,\n  messagesById,\n  query,\n  totalCount,\n  foundIds,\n  onClose,\n}) => {\n  const {\n    searchTextMessagesLocal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n\n    return enableDirectTextInput;\n  }, [isActive]);\n\n  const handleSearchTextMessagesLocal = useCallback(() => {\n    searchTextMessagesLocal();\n  }, [searchTextMessagesLocal]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(handleSearchTextMessagesLocal, foundIds);\n\n  const viewportResults = useMemo(() => {\n    if (!query || !viewportIds?.length || !messagesById) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return viewportIds.map((id) => {\n      const message = messagesById[id];\n      if (!message) {\n        return undefined;\n      }\n\n      const senderUser = message.senderId ? selectUser(getGlobal(), message.senderId) : undefined;\n\n      let senderChat;\n      if (chat && isChatChannel(chat)) {\n        senderChat = chat;\n      } else if (message.forwardInfo) {\n        const { isChannelPost, fromChatId } = message.forwardInfo;\n        senderChat = isChannelPost && fromChatId ? selectChat(getGlobal(), fromChatId) : undefined;\n      } else {\n        senderChat = message.senderId ? selectChat(getGlobal(), message.senderId) : undefined;\n      }\n\n      return {\n        message,\n        senderUser,\n        senderChat,\n        onClick: () => focusMessage({ chatId, threadId, messageId: id }),\n      };\n    }).filter(Boolean);\n  }, [query, viewportIds, messagesById, chat, focusMessage, chatId, threadId]);\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, true, (index) => {\n    const foundResult = viewportResults?.[index === -1 ? 0 : index];\n    if (foundResult) {\n      foundResult.onClick();\n    }\n  }, '.ListItem-button', true);\n\n  const renderSearchResult = ({\n    message, senderUser, senderChat, onClick,\n  }: {\n    message: ApiMessage;\n    senderUser?: ApiUser;\n    senderChat?: ApiChat;\n    onClick: NoneToVoidFunction;\n  }) => {\n    const text = renderMessageSummary(lang, message, undefined, query);\n\n    return (\n      <ListItem\n        key={message.id}\n        teactOrderKey={-message.date}\n        className=\"chat-item-clickable search-result-message m-0\"\n        onClick={onClick}\n      >\n        <Avatar\n          chat={senderChat}\n          user={senderUser}\n        />\n        <div className=\"info\">\n          <div className=\"search-result-message-top\">\n            <FullNameTitle peer={(senderUser || senderChat)!} withEmojiStatus />\n            <LastMessageMeta message={message} />\n          </div>\n          <div className=\"subtitle\" dir=\"auto\">\n            {text}\n          </div>\n        </div>\n      </ListItem>\n    );\n  };\n\n  const isOnTop = viewportIds?.[0] === foundIds?.[0];\n\n  return (\n    <InfiniteScroll\n      ref={containerRef}\n      className=\"RightSearch custom-scroll\"\n      items={viewportResults}\n      preloadBackwards={0}\n      onLoadMore={getMore}\n      onKeyDown={handleKeyDown}\n    >\n      {isOnTop && (\n        <p key=\"helper-text\" className=\"helper-text\" dir=\"auto\">\n          {!query ? (\n            lang('lng_dlg_search_for_messages')\n          ) : (totalCount === 0 || !viewportResults.length) ? (\n            lang('lng_search_no_results')\n          ) : totalCount === 1 ? (\n            '1 message found'\n          ) : (\n            `${(viewportResults.length && (totalCount || viewportResults.length))} messages found`\n          )}\n        </p>\n      )}\n      {viewportResults.map(renderSearchResult)}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const messagesById = chat && selectChatMessages(global, chat.id);\n    if (!chat || !messagesById) {\n      return {};\n    }\n\n    const { query, results } = selectCurrentTextSearch(global) || {};\n    const { totalCount, foundIds } = results || {};\n\n    return {\n      chat,\n      messagesById,\n      query,\n      totalCount,\n      foundIds,\n    };\n  },\n)(RightSearch));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, memo, useMemo, useCallback, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_SEARCH } from '../../config';\nimport { selectIsCurrentUserPremium, selectShouldLoopStickers, selectStickerSet } from '../../global/selectors';\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport StickerButton from '../common/StickerButton';\nimport Spinner from '../ui/Spinner';\n\ntype OwnProps = {\n  stickerSetId: string;\n  observeIntersection: ObserveFn;\n  isModalOpen?: boolean;\n};\n\ntype StateProps = {\n  set?: ApiStickerSet;\n  shouldPlay?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst PREMIUM_STICKERS_TO_DISPLAY = 3;\nconst STICKERS_TO_DISPLAY = 5;\n\nconst StickerSetResult: FC<OwnProps & StateProps> = ({\n  stickerSetId, observeIntersection, set, shouldPlay,\n  isModalOpen, isCurrentUserPremium,\n}) => {\n  const { loadStickers, toggleStickerSet, openStickerSet } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useLang();\n  const isAdded = set && !set.isArchived && Boolean(set.installedDate);\n  const areStickersLoaded = Boolean(set?.stickers);\n\n  const displayedStickers = useMemo(() => {\n    if (!set) {\n      return [];\n    }\n\n    const premiumStickerIds = (set.stickers?.filter(({ hasEffect }) => hasEffect) ?? [])\n      .slice(0, PREMIUM_STICKERS_TO_DISPLAY);\n    const coverStickerIds = (set.covers || []).map(({ id }) => id);\n    const otherStickers = set.stickers ? set.stickers.filter(({ id }) => !coverStickerIds.includes(id)) : [];\n\n    return [...premiumStickerIds, ...(set.covers || []), ...otherStickers].slice(0, STICKERS_TO_DISPLAY);\n  }, [set]);\n\n  useEffect(() => {\n    // Featured stickers are initialized with one sticker in collection (cover of SickerSet)\n    if (!areStickersLoaded && displayedStickers.length < STICKERS_TO_DISPLAY && set) {\n      loadStickers({\n        stickerSetInfo: {\n          shortName: set.shortName,\n        },\n      });\n    }\n  }, [areStickersLoaded, displayedStickers.length, loadStickers, set, stickerSetId]);\n\n  const handleAddClick = useCallback(() => {\n    toggleStickerSet({ stickerSetId });\n  }, [toggleStickerSet, stickerSetId]);\n\n  const handleStickerClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({ stickerSetInfo: sticker.stickerSetInfo });\n  }, [openStickerSet]);\n\n  if (!set) {\n    return undefined;\n  }\n\n  const canRenderStickers = displayedStickers.length > 0;\n\n  return (\n    <div key={set.id} className=\"sticker-set\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className=\"sticker-set-header\">\n        <div className=\"title-wrapper\">\n          <h3 className=\"title\" dir=\"auto\">{set.title}</h3>\n          <p className=\"count\" dir=\"auto\">{lang('Stickers', set.count, 'i')}</p>\n        </div>\n        <Button\n          className={isAdded ? 'is-added' : undefined}\n          color=\"primary\"\n          size=\"tiny\"\n          pill\n          fluid\n          onClick={handleAddClick}\n        >\n          {lang(isAdded ? 'Stickers.Installed' : 'Stickers.Install')}\n        </Button>\n      </div>\n      <div className=\"sticker-set-main shared-canvas-container\">\n        <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n        {!canRenderStickers && <Spinner />}\n        {canRenderStickers && displayedStickers.map((sticker) => (\n          <StickerButton\n            sticker={sticker}\n            size={STICKER_SIZE_SEARCH}\n            observeIntersection={observeIntersection}\n            noPlay={!shouldPlay || isModalOpen}\n            clickArg={sticker}\n            onClick={handleStickerClick}\n            noContextMenu\n            isCurrentUserPremium={isCurrentUserPremium}\n            sharedCanvasRef={sharedCanvasRef}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { stickerSetId }): StateProps => {\n    return {\n      set: selectStickerSet(global, stickerSetId),\n      shouldPlay: selectShouldLoopStickers(global),\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(StickerSetResult));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { throttle } from '../../util/schedulers';\nimport { selectCurrentStickerSearch, selectTabState } from '../../global/selectors';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useHistoryBack from '../../hooks/useHistoryBack';\n\nimport Loading from '../ui/Loading';\nimport StickerSetResult from './StickerSetResult';\n\nimport './StickerSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  featuredIds?: string[];\n  resultIds?: string[];\n  isModalOpen: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst StickerSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  featuredIds,\n  resultIds,\n  isModalOpen,\n  onClose,\n}) => {\n  const { loadFeaturedStickers } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadFeaturedStickers();\n    });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!query && featuredIds) {\n      return featuredIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    if (resultIds) {\n      if (!resultIds.length) {\n        return <p className=\"helper-text\" dir=\"auto\">Nothing found.</p>;\n      }\n\n      return resultIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    return <Loading />;\n  }\n\n  return (\n    <div ref={containerRef} className=\"StickerSearch custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n      {renderContent()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentStickerSearch(global);\n    const { query, resultIds } = currentSearch || {};\n    const { featured } = global.stickers;\n\n    return {\n      query,\n      featuredIds: featured.setIds,\n      resultIds,\n      isModalOpen: Boolean(selectTabState(global).openedStickerSetShortName),\n    };\n  },\n)(StickerSearch));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiVideo } from '../../api/types';\nimport type { MessageList } from '../../global/types';\n\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport {\n  selectCurrentGifSearch,\n  selectChat,\n  selectIsChatWithBot,\n  selectCurrentMessageList,\n  selectCanScheduleUntilOnline,\n  selectIsChatWithSelf, selectThreadInfo,\n} from '../../global/selectors';\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useSchedule from '../../hooks/useSchedule';\n\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport GifButton from '../common/GifButton';\nimport Loading from '../ui/Loading';\n\nimport './GifSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  results?: ApiVideo[];\n  chat?: ApiChat;\n  isChatWithBot?: boolean;\n  canScheduleUntilOnline?: boolean;\n  isSavedMessages?: boolean;\n  canPostInChat?: boolean;\n  currentMessageList?: MessageList;\n};\n\nconst PRELOAD_BACKWARDS = 96; // GIF Search bot results are multiplied by 24\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  results,\n  chat,\n  isChatWithBot,\n  canScheduleUntilOnline,\n  isSavedMessages,\n  canPostInChat,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    searchMoreGifs,\n    sendMessage,\n    setGifSearchQuery,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  const canSendGifs = canPostInChat && getAllowedAttachmentOptions(chat, isChatWithBot).canSendGifs;\n\n  const handleGifClick = useCallback((gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    if (canSendGifs) {\n      if (!currentMessageList) {\n        return;\n      }\n\n      if (shouldSchedule) {\n        requestCalendar((scheduledAt) => {\n          sendMessage({\n            messageList: currentMessageList,\n            gif,\n            scheduledAt,\n            isSilent,\n          });\n        });\n      } else {\n        sendMessage({ messageList: currentMessageList, gif, isSilent });\n      }\n    }\n\n    if (IS_TOUCH_ENV) {\n      setGifSearchQuery({ query: undefined });\n    }\n  }, [canSendGifs, currentMessageList, requestCalendar]);\n\n  const handleSearchMoreGifs = useCallback(() => {\n    searchMoreGifs();\n  }, [searchMoreGifs]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!results) {\n      return (\n        <Loading />\n      );\n    }\n\n    if (!results.length) {\n      return (\n        <p className=\"helper-text\" dir=\"auto\">{lang('NoGIFsFound')}</p>\n      );\n    }\n\n    return results.map((gif) => (\n      <GifButton\n        key={gif.id}\n        gif={gif}\n        observeIntersection={observeIntersection}\n        onClick={canSendGifs ? handleGifClick : undefined}\n        isSavedMessages={isSavedMessages}\n      />\n    ));\n  }\n\n  const hasResults = Boolean(query !== undefined && results && results.length);\n\n  return (\n    <div className=\"GifSearch\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <InfiniteScroll\n        ref={containerRef}\n        className={buildClassName('gif-container custom-scroll', hasResults && 'grid')}\n        items={results}\n        itemSelector=\".GifButton\"\n        preloadBackwards={PRELOAD_BACKWARDS}\n        noFastList\n        onLoadMore={handleSearchMoreGifs}\n      >\n        {renderContent()}\n      </InfiniteScroll>\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentGifSearch(global);\n    const { query, results } = currentSearch || {};\n    const { chatId, threadId } = selectCurrentMessageList(global) || {};\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const isChatWithBot = chat ? selectIsChatWithBot(global, chat) : undefined;\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isComments = Boolean(threadInfo?.originChannelId);\n    const canPostInChat = Boolean(chat) && Boolean(threadId) && getCanPostInChat(chat, threadId, isComments);\n\n    return {\n      query,\n      results,\n      chat,\n      isChatWithBot,\n      isSavedMessages,\n      canPostInChat,\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(GifSearch));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChannelStatistics, ApiGroupStatistics, ApiMessageStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\nimport { formatFullDate } from '../../../util/dateFormat';\nimport buildClassName from '../../../util/buildClassName';\nimport useLang from '../../../hooks/useLang';\n\nimport './StatisticsOverview.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'views', title: 'Stats.Message.Views', isPlain: true },\n    {\n      name: 'forwards', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n  [\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n];\n\nexport type OwnProps = {\n  isGroup?: boolean;\n  isMessage?: boolean;\n  statistics: ApiChannelStatistics | ApiGroupStatistics | ApiMessageStatistics;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({ isGroup, isMessage, statistics }) => {\n  const lang = useLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName('StatisticsOverview__value', isChangeNegative && 'negative')}>\n        {isChangeNegative ? `-${formatIntegerCompact(Math.abs(change))}` : `+${formatIntegerCompact(change)}`}\n        {percentage && (\n          <>\n            {' '}\n            ({percentage}%)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const { period } = (statistics as ApiGroupStatistics);\n\n  return (\n    <div className=\"StatisticsOverview\">\n      <div className=\"StatisticsOverview__header\">\n        <div className=\"StatisticsOverview__title\">{lang('StatisticOverview')}</div>\n\n        {period && (\n          <div className=\"StatisticsOverview__caption\">\n            {formatFullDate(lang, period.minDate * 1000)} — {formatFullDate(lang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className=\"StatisticsOverview__table\">\n        {(isMessage ? MESSAGE_OVERVIEW : isGroup ? GROUP_OVERVIEW : CHANNEL_OVERVIEW).map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className=\"StatisticsOverview__table-cell\">\n                    <b className=\"StatisticsOverview__table-value\">\n                      {cell.isApproximate ? `≈${formatInteger(field)}` : formatInteger(field)}\n                    </b>\n                    <h3 className=\"StatisticsOverview__table-heading\">{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                return (\n                  <td className=\"StatisticsOverview__table-cell\">\n                    <b className=\"StatisticsOverview__table-value\">{field.percentage}%</b>\n                    <h3 className=\"StatisticsOverview__table-heading\">{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className=\"StatisticsOverview__table-cell\">\n                  <b className=\"StatisticsOverview__table-value\">\n                    {formatIntegerCompact(field.current)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className=\"StatisticsOverview__table-heading\">{lang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n    </div>\n  );\n};\n\nexport default memo(StatisticsOverview);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\n\nimport type { LangFn } from '../../../hooks/useLang';\nimport useLang from '../../../hooks/useLang';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, StatisticsRecentMessage as StatisticsRecentMessageType } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dateFormat';\nimport {\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n  getMessageRoundVideo,\n} from '../../../global/helpers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\nimport useMedia from '../../../hooks/useMedia';\n\nimport './StatisticsRecentMessage.scss';\n\nexport type OwnProps = {\n  message: ApiMessage & StatisticsRecentMessageType;\n};\n\nconst StatisticsRecentMessage: FC<OwnProps> = ({ message }) => {\n  const lang = useLang();\n  const { toggleMessageStatistics } = getActions();\n\n  const mediaThumbnail = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useCallback(() => {\n    toggleMessageStatistics({ messageId: message.id });\n  }, [toggleMessageStatistics, message.id]);\n\n  return (\n    <div\n      className={buildClassName(\n        'StatisticsRecentMessage',\n        Boolean(mediaBlobUrl || mediaThumbnail) && 'StatisticsRecentMessage--with-image',\n      )}\n      onClick={handleClick}\n    >\n      <div className=\"StatisticsRecentMessage__title\">\n        <div className=\"StatisticsRecentMessage__summary\">\n          {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n        </div>\n        <div className=\"StatisticsRecentMessage__meta\">\n          {lang('ChannelStats.ViewsCount', message.views, 'i')}\n        </div>\n      </div>\n\n      <div className=\"StatisticsRecentMessage__info\">\n        <div className=\"StatisticsRecentMessage__date\">\n          {formatDateTimeToString(message.date * 1000, lang.code)}\n        </div>\n        <div className=\"StatisticsRecentMessage__meta\">\n          {message.forwards ? lang('ChannelStats.SharesCount', message.forwards) : 'No shares'}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction renderSummary(lang: LangFn, message: ApiMessage, blobUrl?: string, isRoundVideo?: boolean) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message);\n  }\n\n  return (\n    <span className=\"media-preview\">\n      <img src={blobUrl} alt=\"\" className={buildClassName('media-preview__image', isRoundVideo && 'round')} />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {renderMessageSummary(lang, message, true)}\n    </span>\n  );\n}\n\nexport default memo(StatisticsRecentMessage);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useState, useEffect, useRef, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { callApi } from '../../../api/gramjs';\nimport type {\n  ApiMessage,\n  ApiChannelStatistics,\n  ApiGroupStatistics,\n  StatisticsRecentMessage as StatisticsRecentMessageType,\n  StatisticsGraph,\n} from '../../../api/types';\nimport { selectChat, selectChatFullInfo, selectStatistics } from '../../../global/selectors';\n\nimport buildClassName from '../../../util/buildClassName';\nimport useLang from '../../../hooks/useLang';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\n\nimport Loading from '../../ui/Loading';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsRecentMessage from './StatisticsRecentMessage';\n\nimport './Statistics.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst CHANNEL_GRAPHS_TITLES = {\n  growthGraph: 'ChannelStats.Graph.Growth',\n  followersGraph: 'ChannelStats.Graph.Followers',\n  muteGraph: 'ChannelStats.Graph.Notifications',\n  topHoursGraph: 'ChannelStats.Graph.ViewsByHours',\n  viewsBySourceGraph: 'ChannelStats.Graph.ViewsBySource',\n  newFollowersBySourceGraph: 'ChannelStats.Graph.NewFollowersBySource',\n  languagesGraph: 'ChannelStats.Graph.Language',\n  interactionsGraph: 'ChannelStats.Graph.Interactions',\n};\nconst CHANNEL_GRAPHS = Object.keys(CHANNEL_GRAPHS_TITLES) as (keyof ApiChannelStatistics)[];\n\nconst GROUP_GRAPHS_TITLES = {\n  growthGraph: 'Stats.GroupGrowthTitle',\n  membersGraph: 'Stats.GroupMembersTitle',\n  languagesGraph: 'Stats.GroupLanguagesTitle',\n  messagesGraph: 'Stats.GroupMessagesTitle',\n  actionsGraph: 'Stats.GroupActionsTitle',\n  topHoursGraph: 'Stats.GroupTopHoursTitle',\n};\nconst GROUP_GRAPHS = Object.keys(GROUP_GRAPHS_TITLES) as (keyof ApiGroupStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n};\n\nexport type StateProps = {\n  statistics: ApiChannelStatistics | ApiGroupStatistics;\n  dcId?: number;\n  isGroup: boolean;\n};\n\nconst Statistics: FC<OwnProps & StateProps> = ({\n  chatId,\n  statistics,\n  dcId,\n  isGroup,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadStatistics, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    loadStatistics({ chatId, isGroup });\n  }, [chatId, loadStatistics, isGroup]);\n\n  const graphs = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS : CHANNEL_GRAPHS;\n  }, [isGroup]);\n\n  const graphTitles = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS_TITLES : CHANNEL_GRAPHS_TITLES;\n  }, [isGroup]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    graphs.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({\n          name,\n          chatId,\n          token: graph,\n          // Hardcode percentage for languages graph, since API does not return `percentage` flag\n          isPercentage: name === 'languagesGraph',\n        });\n      }\n    });\n  }, [graphs, chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      graphs.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((graphTitles as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n\n        containerRef.current!.children[index].classList.remove('hidden');\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    graphs, graphTitles, isReady, statistics, lang, chatId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  if (!isReady || !statistics) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName('Statistics custom-scroll', isReady && 'ready')}>\n      <StatisticsOverview statistics={statistics} isGroup={isGroup} />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {graphs.map((graph) => (\n          <div key={graph} className=\"Statistics__graph hidden\" />\n        ))}\n      </div>\n\n      {Boolean((statistics as ApiChannelStatistics).recentTopMessages?.length) && (\n        <div className=\"Statistics__messages\">\n          <h2 className=\"Statistics__messages-title\">{lang('ChannelStats.Recent.Header')}</h2>\n\n          {(statistics as ApiChannelStatistics).recentTopMessages.map((message) => (\n            <StatisticsRecentMessage message={message as ApiMessage & StatisticsRecentMessageType} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const statistics = selectStatistics(global, chatId);\n    const chat = selectChat(global, chatId);\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const isGroup = chat?.type === 'chatTypeSuperGroup';\n\n    return {\n      statistics, dcId, isGroup,\n    };\n  },\n)(Statistics));\n","import React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiMessagePublicForward } from '../../../api/types';\n\nimport { getActions } from '../../../global';\n\nimport { getMainUsername } from '../../../global/helpers';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\n\nimport './StatisticsPublicForward.scss';\n\nexport type OwnProps = {\n  data: ApiMessagePublicForward;\n};\n\nconst StatisticsPublicForward: FC<OwnProps> = ({ data }) => {\n  const lang = useLang();\n  const { openChatByUsername } = getActions();\n\n  const username = useMemo(() => getMainUsername(data.chat), [data.chat]);\n  const handleClick = useCallback(() => {\n    openChatByUsername({ username: username!, messageId: data.messageId });\n  }, [data.messageId, openChatByUsername, username]);\n\n  return (\n    <div className=\"StatisticsPublicForward\" onClick={handleClick}>\n      <Avatar size=\"medium\" chat={data.chat} />\n\n      <div className=\"StatisticsPublicForward__info\">\n        <div className=\"StatisticsPublicForward__title\">\n          {data.title}\n        </div>\n\n        <div className=\"StatisticsPublicForward__views\">\n          {lang('ChannelStats.ViewsCount', data.views, 'i')}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(StatisticsPublicForward);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useState, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { callApi } from '../../../api/gramjs';\nimport type { ApiMessageStatistics, ApiMessagePublicForward, StatisticsGraph } from '../../../api/types';\n\nimport { selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport useLang from '../../../hooks/useLang';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\n\nimport Loading from '../../ui/Loading';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsPublicForward from './StatisticsPublicForward';\n\nimport './Statistics.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst GRAPH_TITLES = {\n  viewsGraph: 'Stats.MessageInteractionsTitle',\n};\nconst GRAPHS = Object.keys(GRAPH_TITLES) as (keyof ApiMessageStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n};\n\nexport type StateProps = {\n  statistics?: ApiMessageStatistics;\n  messageId?: number;\n  dcId?: number;\n};\n\nconst Statistics: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  statistics,\n  dcId,\n  messageId,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadMessageStatistics, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (messageId) {\n      loadMessageStatistics({ chatId, messageId });\n    }\n  }, [chatId, loadMessageStatistics, messageId]);\n\n  useEffect(() => {\n    if (!isActive || messageId) {\n      loadedCharts.current = [];\n      setIsReady(false);\n    }\n  }, [isActive, messageId]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    GRAPHS.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({ name, chatId, token: graph });\n      }\n    });\n  }, [chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph as StatisticsGraph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((GRAPH_TITLES as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    isReady, statistics, lang, chatId, messageId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  if (!isReady || !statistics || !messageId) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName('Statistics custom-scroll', isReady && 'ready')}>\n      <StatisticsOverview statistics={statistics} isMessage />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {GRAPHS.map((graph) => (\n          <div className={buildClassName('Statistics__graph', !loadedCharts.current.includes(graph) && 'hidden')} />\n        ))}\n      </div>\n\n      {Boolean(statistics.publicForwards) && (\n        <div className=\"Statistics__public-forwards\">\n          <h2 className=\"Statistics__public-forwards-title\">{lang('Stats.Message.PublicShares')}</h2>\n\n          {statistics.publicForwardsData!.map((item: ApiMessagePublicForward) => (\n            <StatisticsPublicForward data={item} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const tabState = selectTabState(global);\n    const statistics = tabState.statistics.currentMessage;\n    const messageId = tabState.statistics.currentMessageId;\n\n    return { statistics, dcId, messageId };\n  },\n)(Statistics));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback, useState, memo, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiPollAnswer,\n  ApiPollResult,\n} from '../../api/types';\nimport { selectTabState } from '../../global/selectors';\nimport usePrevious from '../../hooks/usePrevious';\nimport useLang from '../../hooks/useLang';\n\nimport ShowMoreButton from '../ui/ShowMoreButton';\nimport Loading from '../ui/Loading';\nimport ListItem from '../ui/ListItem';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\n\nimport './PollAnswerResults.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  message: ApiMessage;\n  answer: ApiPollAnswer;\n  answerVote: ApiPollResult;\n  totalVoters: number;\n};\n\ntype StateProps = {\n  voters?: string[];\n  offset: string;\n};\n\nconst INITIAL_LIMIT = 4;\nconst VIEW_MORE_LIMIT = 50;\n\nconst PollAnswerResults: FC<OwnProps & StateProps> = ({\n  chat,\n  message,\n  answer,\n  answerVote,\n  totalVoters,\n  voters,\n  offset,\n}) => {\n  const {\n    loadPollOptionResults,\n    openChat,\n    closePollResults,\n  } = getActions();\n\n  const prevVotersCount = usePrevious<number>(answerVote.votersCount);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const areVotersLoaded = Boolean(voters);\n  const { option, text } = answer;\n  const lang = useLang();\n\n  useEffect(() => {\n    // For update when new votes arrive or when the user takes back his vote\n    if (!areVotersLoaded || prevVotersCount !== answerVote.votersCount) {\n      loadPollOptionResults({\n        chat, messageId: message.id, option, offset, limit: INITIAL_LIMIT, shouldResetVoters: true,\n      });\n    }\n    // eslint-disable-next-line\n  }, [answerVote.votersCount, areVotersLoaded]);\n\n  const handleViewMoreClick = useCallback(() => {\n    setIsLoading(true);\n    loadPollOptionResults({\n      chat, messageId: message.id, option, offset, limit: VIEW_MORE_LIMIT,\n    });\n  }, [chat, loadPollOptionResults, message.id, offset, option]);\n\n  useEffect(() => {\n    setIsLoading(false);\n  }, [voters]);\n\n  const handleMemberClick = useCallback((id: string) => {\n    openChat({ id });\n    closePollResults();\n  }, [closePollResults, openChat]);\n\n  function renderViewMoreButton() {\n    const leftVotersCount = answerVote.votersCount - voters!.length;\n\n    return answerVote.votersCount > INITIAL_LIMIT && leftVotersCount > 0 && (\n      <ShowMoreButton\n        count={leftVotersCount}\n        itemName=\"voter\"\n        isLoading={isLoading}\n        onClick={handleViewMoreClick}\n      />\n    );\n  }\n\n  return (\n    <div className=\"PollAnswerResults\">\n      <div className=\"poll-voters\">\n        {voters\n          ? voters.map((id) => (\n            <ListItem\n              key={id}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleMemberClick(id)}\n            >\n              <PrivateChatInfo\n                avatarSize=\"tiny\"\n                userId={id}\n                forceShowSelf\n                noStatusOrTyping\n              />\n            </ListItem>\n          ))\n          : <Loading />}\n        {voters && renderViewMoreButton()}\n      </div>\n      <div className=\"answer-head\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <span className=\"answer-title\" dir=\"auto\">{text}</span>\n        <span className=\"answer-percent\" dir={lang.isRtl ? 'auto' : undefined}>\n          {getPercentage(answerVote.votersCount, totalVoters)}%\n        </span>\n      </div>\n    </div>\n  );\n};\n\nfunction getPercentage(value: number, total: number) {\n  return total > 0 ? ((value / total) * 100).toFixed() : 0;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { answer }: OwnProps): StateProps => {\n    const { voters, offsets } = selectTabState(global).pollResults;\n\n    return {\n      voters: voters?.[answer.option],\n      offset: (offsets?.[answer.option]) || '',\n    };\n  },\n)(PollAnswerResults));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiMessage, ApiChat } from '../../api/types';\nimport { selectChat, selectChatMessage, selectTabState } from '../../global/selectors';\nimport { buildCollectionByKey } from '../../util/iteratees';\nimport { getMessagePoll } from '../../global/helpers';\nimport renderText from '../common/helpers/renderText';\nimport useLang from '../../hooks/useLang';\nimport useHistoryBack from '../../hooks/useHistoryBack';\n\nimport PollAnswerResults from './PollAnswerResults';\nimport Loading from '../ui/Loading';\n\nimport './PollResults.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  message?: ApiMessage;\n  lastSyncTime?: number;\n};\n\nconst PollResults: FC<OwnProps & StateProps> = ({\n  onClose,\n  isActive,\n  chat,\n  message,\n  lastSyncTime,\n}) => {\n  const lang = useLang();\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  if (!message || !chat) {\n    return <Loading />;\n  }\n\n  const { summary, results } = getMessagePoll(message)!;\n  if (!results.results) {\n    return undefined;\n  }\n\n  const resultsByOption = buildCollectionByKey(results.results, 'option');\n\n  return (\n    <div className=\"PollResults\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <h3 className=\"poll-question\" dir=\"auto\">{renderText(summary.question, ['emoji', 'br'])}</h3>\n      <div className=\"poll-results-list custom-scroll\">\n        {Boolean(lastSyncTime) && summary.answers.map((answer) => (\n          <PollAnswerResults\n            key={`${message.id}-${answer.option}`}\n            chat={chat}\n            message={message}\n            answer={answer}\n            answerVote={resultsByOption[answer.option]}\n            totalVoters={results.totalVoters!}\n          />\n        ))}\n        {!lastSyncTime && <Loading />}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      pollResults: { chatId, messageId },\n    } = selectTabState(global);\n    const { lastSyncTime } = global;\n\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    const chat = selectChat(global, chatId);\n    const message = selectChatMessage(global, chatId, messageId);\n\n    return {\n      chat,\n      message,\n      lastSyncTime,\n    };\n  },\n)(PollResults));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Qj1MQaLfhumlxACIpkUl\",\"content\":\"ph5g3hCSQ_72FnZ3YkuA\",\"section\":\"bYZBp9H7Ks8tqaBvQm57\",\"top\":\"sV6D57DhbsFwQhRNzw9K\",\"bottom\":\"pUkmozcBdIn4yWGGPoX1\",\"iconWrapper\":\"JT0__kgf23rGv5BWQF2s\",\"icon\":\"gx85t_IsGh2fgS2yDGtk\",\"clickable\":\"TVwtYFuxdwJH5LZ7yvwu\",\"heading\":\"o9l56jP2uXfAul061gXq\",\"icon-picker\":\"ByQF8Qg3NcYnBCvGwoH0\",\"iconPicker\":\"ByQF8Qg3NcYnBCvGwoH0\"};","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiChat, ApiSticker } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID } from '../../config';\nimport { selectChat, selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport { getTopicColors } from '../../util/forumColors';\nimport cycleRestrict from '../../util/cycleRestrict';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useLang from '../../hooks/useLang';\nimport useHistoryBack from '../../hooks/useHistoryBack';\n\nimport TopicIcon from '../common/TopicIcon';\nimport InputText from '../ui/InputText';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport Spinner from '../ui/Spinner';\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  createTopicPanel?: TabState['createTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst CreateTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  createTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { createTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconColorIndex, setIconColorIndex] = useState(0);\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useLang();\n\n  const isTouched = Boolean(title);\n  const isLoading = Boolean(createTopicPanel?.isLoading);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleIconClick = useCallback(() => {\n    setIconColorIndex((prev) => cycleRestrict(getTopicColors().length, prev + 1));\n  }, []);\n\n  const handleCreateTopic = useCallback(() => {\n    createTopic({\n      chatId: chat!.id,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    });\n  }, [chat, createTopic, iconColorIndex, iconEmojiId, title]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(undefined);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      id: 0,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    };\n  }, [iconColorIndex, iconEmojiId, title]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        <div className={buildClassName(styles.section, styles.top)}>\n          <span className={styles.heading}>{lang('CreateTopicTitle')}</span>\n          <Transition\n            name=\"zoomFade\"\n            activeKey={Number(dummyTopic.iconEmojiId) || 0}\n            shouldCleanup\n            direction={1}\n            className={styles.iconWrapper}\n          >\n            <TopicIcon\n              topic={dummyTopic}\n              className={buildClassName(styles.icon, styles.clickable)}\n              onClick={handleIconClick}\n              size={ICON_SIZE}\n              noLoopLimit\n            />\n          </Transition>\n          <InputText\n            value={title}\n            onChange={handleTitleChange}\n            label={lang('lng_forum_topic_title')}\n            disabled={isLoading}\n            teactExperimentControlled\n          />\n        </div>\n        <div className={buildClassName(styles.section, styles.bottom)}>\n          <CustomEmojiPicker\n            idPrefix=\"create-topic-icons-set-\"\n            isHidden={!isActive}\n            loadAndPlay={isActive}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n            className={styles.iconPicker}\n            withDefaultTopicIcons\n          />\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleCreateTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { createTopicPanel } = selectTabState(global);\n    return {\n      chat: createTopicPanel?.chatId ? selectChat(global, createTopicPanel.chatId) : undefined,\n      createTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(CreateTopic));\n","import React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiChat, ApiSticker, ApiTopic } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID, GENERAL_TOPIC_ID } from '../../config';\nimport { REM } from '../common/helpers/mediaDimensions';\nimport { selectChat, selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\nimport useHistoryBack from '../../hooks/useHistoryBack';\n\nimport TopicIcon from '../common/TopicIcon';\nimport InputText from '../ui/InputText';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport Spinner from '../ui/Spinner';\nimport Loading from '../ui/Loading';\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\nconst RESET_ICON_ID = '0';\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topic?: ApiTopic;\n  editTopicPanel?: TabState['editTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst EditTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  topic,\n  editTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { editTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useLang();\n\n  const isLoading = Boolean(editTopicPanel?.isLoading);\n  const isGeneral = topic?.id === GENERAL_TOPIC_ID;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (topic?.title || topic?.iconEmojiId) {\n      setTitle(topic.title);\n      setIconEmojiId(topic.iconEmojiId);\n    }\n  }, [topic]);\n\n  const isTouched = useMemo(() => {\n    return title !== topic?.title || iconEmojiId !== topic?.iconEmojiId;\n  }, [iconEmojiId, title, topic?.iconEmojiId, topic?.title]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const newTitle = e.target.value;\n    setTitle(newTitle);\n  }, []);\n\n  const handleEditTopic = useCallback(() => {\n    editTopic({\n      chatId: chat!.id,\n      title,\n      topicId: topic!.id,\n      iconEmojiId,\n    });\n  }, [chat, editTopic, iconEmojiId, title, topic]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(RESET_ICON_ID);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      ...topic!,\n      title,\n      iconEmojiId,\n    };\n  }, [iconEmojiId, title, topic]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        {!topic && <Loading />}\n        {topic && (\n          <>\n            <div className={buildClassName(styles.section, styles.top)}>\n              <span className={styles.heading}>{lang('CreateTopicTitle')}</span>\n              <Transition\n                name=\"zoomFade\"\n                activeKey={Number(dummyTopic.iconEmojiId) || 0}\n                shouldCleanup\n                direction={1}\n                className={styles.iconWrapper}\n              >\n                <TopicIcon\n                  topic={dummyTopic}\n                  className={styles.icon}\n                  size={ICON_SIZE}\n                  noLoopLimit\n                />\n              </Transition>\n              <InputText\n                value={title}\n                onChange={handleTitleChange}\n                label={lang('lng_forum_topic_title')}\n                disabled={isLoading}\n                teactExperimentControlled\n              />\n            </div>\n            {!isGeneral && (\n              <div className={buildClassName(styles.section, styles.bottom)}>\n                <CustomEmojiPicker\n                  idPrefix=\"edit-topic-icons-set-\"\n                  isHidden={!isActive}\n                  loadAndPlay={isActive}\n                  onCustomEmojiSelect={handleCustomEmojiSelect}\n                  className={styles.iconPicker}\n                  withDefaultTopicIcons\n                />\n              </div>\n            )}\n          </>\n        )}\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleEditTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { editTopicPanel } = selectTabState(global);\n    const chat = editTopicPanel?.chatId ? selectChat(global, editTopicPanel.chatId) : undefined;\n    const topic = editTopicPanel?.topicId ? chat?.topics?.[editTopicPanel?.topicId] : undefined;\n\n    return {\n      chat,\n      topic,\n      editTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(EditTopic));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto, ApiUser } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  selectChat,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { isUserBot, selectIsChatMuted } from '../../../global/helpers';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport Spinner from '../../ui/Spinner';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport SelectAvatar from '../../ui/SelectAvatar';\nimport Avatar from '../../common/Avatar';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  userId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  progress?: ManagementProgress;\n  isMuted?: boolean;\n  personalPhoto?: ApiPhoto;\n  notPersonalPhoto?: ApiPhoto;\n};\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide first name';\n\nconst ManageUser: FC<OwnProps & StateProps> = ({\n  userId,\n  user,\n  progress,\n  isMuted,\n  onClose,\n  isActive,\n  personalPhoto,\n  notPersonalPhoto,\n}) => {\n  const {\n    updateContact,\n    deleteContact,\n    closeManagement,\n    uploadContactProfilePhoto,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isResetPersonalPhotoDialogOpen, openResetPersonalPhotoDialog, closeResetPersonalPhotoDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const currentFirstName = user ? (user.firstName || '') : '';\n  const currentLastName = user ? (user.lastName || '') : '';\n\n  const [firstName, setFirstName] = useState(currentFirstName);\n  const [lastName, setLastName] = useState(currentLastName);\n  const [isNotificationsEnabled, setIsNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setIsNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, userId]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName);\n    setLastName(currentLastName);\n  }, [currentFirstName, currentLastName, user]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n      closeDeleteDialog();\n    }\n  }, [closeDeleteDialog, progress]);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n\n    if (error === ERROR_FIRST_NAME_MISSING) {\n      setError(undefined);\n    }\n  }, [error]);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsNotificationsEnabled(e.target.checked);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateContact({\n      userId,\n      isMuted: !isNotificationsEnabled,\n      firstName: trimmedFirstName,\n      lastName: trimmedLastName,\n    });\n  }, [firstName, lastName, updateContact, userId, isNotificationsEnabled]);\n\n  const handleDeleteContact = useCallback(() => {\n    deleteContact({ userId });\n    closeDeleteDialog();\n    closeManagement();\n  }, [closeDeleteDialog, closeManagement, deleteContact, userId]);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isSuggestRef = useRef(false);\n\n  const handleSuggestPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = true;\n  }, []);\n\n  const handleSetPersonalPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = false;\n  }, []);\n\n  const handleResetPersonalAvatar = useCallback(() => {\n    closeResetPersonalPhotoDialog();\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId });\n  }, [closeResetPersonalPhotoDialog, uploadContactProfilePhoto, userId]);\n\n  const handleSelectAvatar = useCallback((file: File) => {\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId, file, isSuggest: isSuggestRef.current });\n  }, [uploadContactProfilePhoto, userId]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  const canSetPersonalPhoto = !isUserBot(user) && user.id !== SERVICE_NOTIFICATIONS_USER_ID;\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <PrivateChatInfo\n            userId={user.id}\n            avatarSize=\"jumbo\"\n            status=\"original name\"\n            withFullInfo\n          />\n          <InputText\n            id=\"user-first-name\"\n            label={lang('UserInfo.FirstNamePlaceholder')}\n            onChange={handleFirstNameChange}\n            value={firstName}\n            error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n          />\n          <InputText\n            id=\"user-last-name\"\n            label={lang('UserInfo.LastNamePlaceholder')}\n            onChange={handleLastNameChange}\n            value={lastName}\n          />\n          <div className=\"ListItem no-selection narrow\">\n            <Checkbox\n              checked={isNotificationsEnabled}\n              label={lang('Notifications')}\n              subLabel={lang(isNotificationsEnabled\n                ? 'UserInfo.NotificationsEnabled'\n                : 'UserInfo.NotificationsDisabled')}\n              onChange={handleNotificationChange}\n            />\n          </div>\n        </div>\n        {canSetPersonalPhoto && (\n          <div className=\"section\">\n            <ListItem icon=\"camera-add\" ripple onClick={handleSuggestPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SuggestPhoto', user.firstName)}</span>\n            </ListItem>\n            <ListItem icon=\"camera-add\" ripple onClick={handleSetPersonalPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SetCustomPhoto', user.firstName)}</span>\n            </ListItem>\n            {personalPhoto && (\n              <ListItem\n                leftElement={(\n                  <Avatar\n                    photo={notPersonalPhoto}\n                    noPersonalPhoto\n                    user={user}\n                    size=\"mini\"\n                    className=\"personal-photo\"\n                  />\n                )}\n                ripple\n                onClick={openResetPersonalPhotoDialog}\n              >\n                {lang('UserInfo.ResetCustomPhoto')}\n              </ListItem>\n            )}\n            <p className=\"text-muted\" dir=\"auto\">{lang('UserInfo.CustomPhotoInfo', user.firstName)}</p>\n          </div>\n        )}\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteContact')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={lang('AreYouSureDeleteContact')}\n        confirmLabel={lang('DeleteContact')}\n        confirmHandler={handleDeleteContact}\n        confirmIsDestructive\n      />\n      <ConfirmDialog\n        isOpen={isResetPersonalPhotoDialogOpen}\n        onClose={closeResetPersonalPhotoDialog}\n        text={lang('UserInfo.ResetToOriginalAlertText', user.firstName)}\n        confirmLabel={lang('Reset')}\n        confirmHandler={handleResetPersonalAvatar}\n        confirmIsDestructive\n      />\n      <SelectAvatar\n        onChange={handleSelectAvatar}\n        inputRef={inputRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n    const chat = selectChat(global, userId);\n    const userFullInfo = selectUserFullInfo(global, userId);\n    const { progress } = selectTabState(global).management;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const personalPhoto = userFullInfo?.personalPhoto;\n    const notPersonalPhoto = userFullInfo?.profilePhoto || userFullInfo?.fallbackPhoto;\n\n    return {\n      user, progress, isMuted, personalPhoto, notPersonalPhoto,\n    };\n  },\n)(ManageUser));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { ManagementProgress, ManagementScreens } from '../../../types';\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatBannedRights, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getHasAdminRight,\n  isChatBasicGroup,\n  isChatPublic,\n} from '../../../global/helpers';\nimport { debounce } from '../../../util/schedulers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\nimport useMedia from '../../../hooks/useMedia';\nimport useLang from '../../../hooks/useLang';\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Checkbox from '../../ui/Checkbox';\nimport Spinner from '../../ui/Spinner';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport TextArea from '../../ui/TextArea';\nimport Switcher from '../../ui/Switcher';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  isBasicGroup: boolean;\n  hasLinkedChannel: boolean;\n  canChangeInfo?: boolean;\n  canBanUsers?: boolean;\n  canInvite?: boolean;\n  canEditForum?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  lastSyncTime?: number;\n  isChannelsPremiumLimitReached: boolean;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst GROUP_TITLE_EMPTY = 'Group title can\\'t be empty';\nconst GROUP_MAX_DESCRIPTION = 255;\n\nconst ALL_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'sendMessages',\n  'embedLinks',\n  'sendPolls',\n  'changeInfo',\n  'inviteUsers',\n  'pinMessages',\n  'manageTopics',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n];\n// Some checkboxes control multiple rights, and some rights are not controlled from Permissions screen,\n// so we need to define the amount manually\nconst TOTAL_PERMISSIONS_COUNT = ALL_PERMISSIONS.length + 1;\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ManageGroup: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  isBasicGroup,\n  hasLinkedChannel,\n  canChangeInfo,\n  canBanUsers,\n  canInvite,\n  canEditForum,\n  isActive,\n  exportedInvites,\n  lastSyncTime,\n  isChannelsPremiumLimitReached,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    togglePreHistoryHidden,\n    updateChat,\n    deleteChat,\n    leaveChannel,\n    deleteChannel,\n    closeManagement,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n    toggleForum,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const currentTitle = chat.title;\n  const currentAbout = chatFullInfo?.about || '';\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const [isForumEnabled, setIsForumEnabled] = useState(chat.isForum);\n  const imageHash = getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const isPublicGroup = useMemo(() => isChatPublic(chat), [chat]);\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const isPreHistoryHiddenCheckboxRef = useRef<HTMLDivElement>(null);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (lastSyncTime && canInvite) {\n      loadExportedChatInvites({ chatId });\n      loadExportedChatInvites({ chatId, isRevoked: true });\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chatId, loadExportedChatInvites, lastSyncTime, canInvite, loadChatJoinRequests]);\n\n  // Resetting `isForum` switch on flood wait error\n  useEffect(() => {\n    setIsForumEnabled(Boolean(chat.isForum));\n  }, [chat.isForum]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handleClickEditType = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  }, [onScreenSelect]);\n\n  const handleClickDiscussion = useCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  }, [onScreenSelect]);\n\n  const handleClickReactions = useCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  }, [onScreenSelect]);\n\n  const handleClickPermissions = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupPermissions);\n  }, [onScreenSelect]);\n\n  const handleClickAdministrators = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  }, [onScreenSelect]);\n\n  const handleClickInvites = useCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  }, [onScreenSelect]);\n\n  const handleClickRequests = useCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  }, [onScreenSelect]);\n\n  const handleSetPhoto = useCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleAboutChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUpdateGroup = useCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(GROUP_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  }, [about, chatId, photo, title, updateChat]);\n\n  const handleClickMembers = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupMembers);\n  }, [onScreenSelect]);\n\n  const handleTogglePreHistory = useCallback(() => {\n    if (!chatFullInfo) {\n      return;\n    }\n\n    const { isPreHistoryHidden } = chatFullInfo;\n\n    togglePreHistoryHidden({ chatId: chat.id, isEnabled: !isPreHistoryHidden });\n  }, [chat.id, chatFullInfo]);\n\n  const handleForumToggle = useCallback(() => {\n    setIsForumEnabled((current) => {\n      const newIsForumEnabled = !current;\n\n      runDebounced(() => {\n        toggleForum({ chatId, isEnabled: newIsForumEnabled });\n      });\n\n      return newIsForumEnabled;\n    });\n  }, [chatId, toggleForum]);\n\n  useEffect(() => {\n    if (!isChannelsPremiumLimitReached) {\n      return;\n    }\n\n    // Teact does not have full support of controlled form components, we need to \"disable\" input value change manually\n    // TODO Teact support added, this can now be removed\n    const checkbox = isPreHistoryHiddenCheckboxRef.current?.querySelector('input') as HTMLInputElement;\n    checkbox.checked = !chatFullInfo?.isPreHistoryHidden;\n  }, [isChannelsPremiumLimitReached, chatFullInfo?.isPreHistoryHidden]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength\n      ? `${enabledLength} / ${totalLength}`\n      : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n\n  const enabledPermissionsCount = useMemo(() => {\n    if (!chat.defaultBannedRights) {\n      return 0;\n    }\n\n    let totalCount = ALL_PERMISSIONS.filter(\n      (key) => {\n        if (key === 'manageTopics' && !isForumEnabled) return false;\n        return !chat.defaultBannedRights![key as keyof ApiChatBannedRights];\n      },\n    ).length;\n\n    const { sendStickers, sendGifs } = chat.defaultBannedRights;\n\n    // These two rights are controlled with a single checkbox\n    if (!sendStickers && !sendGifs) {\n      totalCount += 1;\n    }\n\n    return totalCount;\n  }, [chat.defaultBannedRights, isForumEnabled]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n\n  const handleDeleteGroup = useCallback(() => {\n    if (isBasicGroup) {\n      deleteChat({ chatId: chat.id });\n    } else if (!chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else {\n      deleteChannel({ chatId: chat.id });\n    }\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  }, [\n    isBasicGroup, chat.isCreator, chat.id,\n    closeDeleteDialog, closeManagement, leaveChannel, deleteChannel, deleteChat, openChat,\n  ]);\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            isForForum={isForumEnabled}\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <InputText\n            id=\"group-title\"\n            label={lang('GroupName')}\n            onChange={handleTitleChange}\n            value={title}\n            error={error === GROUP_TITLE_EMPTY ? error : undefined}\n            disabled={!canChangeInfo}\n          />\n          <TextArea\n            id=\"group-about\"\n            className=\"mb-2\"\n            label={lang('DescriptionPlaceholder')}\n            maxLength={GROUP_MAX_DESCRIPTION}\n            maxLengthIndicator={(GROUP_MAX_DESCRIPTION - about.length).toString()}\n            onChange={handleAboutChange}\n            value={about}\n            disabled={!canChangeInfo}\n            noReplaceNewlines\n          />\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('GroupType')}</span>\n              <span className=\"subtitle\">{isPublicGroup ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          {hasLinkedChannel && (\n            <ListItem\n              icon=\"message\"\n              multiline\n              onClick={handleClickDiscussion}\n            >\n              <span className=\"title\">{lang('LinkedChannel')}</span>\n              <span className=\"subtitle\">{lang('DiscussionUnlink')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"permissions\"\n            multiline\n            onClick={handleClickPermissions}\n            disabled={!canBanUsers}\n          >\n            <span className=\"title\">{lang('ChannelPermissions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {enabledPermissionsCount}/{TOTAL_PERMISSIONS_COUNT - (isForumEnabled ? 0 : 1)}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{formatInteger(adminsCount)}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('MemberRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          {canEditForum && (\n            <>\n              <ListItem icon=\"forums\" ripple onClick={handleForumToggle}>\n                <span>{lang('ChannelTopics')}</span>\n                <Switcher\n                  id=\"group-notifications\"\n                  label={lang('ChannelTopics')}\n                  checked={isForumEnabled}\n                  inactive\n                />\n              </ListItem>\n              <div className=\"section-info section-info_push\">{lang('ForumToggleDescription')}</div>\n            </>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"group\" multiline onClick={handleClickMembers}>\n            <span className=\"title\">{lang('GroupMembers')}</span>\n            <span className=\"subtitle\">{formatInteger(chat.membersCount ?? 0)}</span>\n          </ListItem>\n\n          {!isPublicGroup && !hasLinkedChannel && Boolean(chatFullInfo) && (\n            <div className=\"ListItem narrow no-selection\" ref={isPreHistoryHiddenCheckboxRef}>\n              <Checkbox\n                checked={!chatFullInfo.isPreHistoryHidden}\n                label={lang('ChatHistory')}\n                onChange={handleTogglePreHistory}\n                disabled={!canBanUsers}\n              />\n            </div>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteMega')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateGroup}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        textParts={renderText(\n          isBasicGroup || !chat.isCreator\n            ? lang('AreYouSureDeleteAndExit')\n            : lang('AreYouSureDeleteThisChatWithGroup', chat.title),\n          ['br', 'simple_markdown'],\n        )}\n        confirmLabel={isBasicGroup || !chat.isCreator ? lang('DeleteMega') : lang('DeleteGroupForAll')}\n        confirmHandler={handleDeleteGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const chatFullInfo = selectChatFullInfo(global, chatId);\n    const { management, limitReachedModal } = selectTabState(global);\n    const { progress } = management;\n    const hasLinkedChannel = Boolean(chatFullInfo?.linkedChatId);\n    const isBasicGroup = isChatBasicGroup(chat);\n    const { invites } = management.byChatId[chatId] || {};\n    const canEditForum = !hasLinkedChannel && (getHasAdminRight(chat, 'changeInfo') || chat.isCreator);\n\n    return {\n      chat,\n      chatFullInfo,\n      progress,\n      isBasicGroup,\n      hasLinkedChannel,\n      canChangeInfo: isBasicGroup ? chat.isCreator : getHasAdminRight(chat, 'changeInfo'),\n      canBanUsers: isBasicGroup ? chat.isCreator : getHasAdminRight(chat, 'banUsers'),\n      canInvite: isBasicGroup ? chat.isCreator : getHasAdminRight(chat, 'inviteUsers'),\n      exportedInvites: invites,\n      lastSyncTime: global.lastSyncTime,\n      isChannelsPremiumLimitReached: limitReachedModal?.limit === 'channels',\n      availableReactions: global.availableReactions,\n      canEditForum,\n    };\n  },\n)(ManageGroup));\n","import type React from '../../../lib/teact/teact';\nimport { useCallback, useEffect, useState } from '../../../lib/teact/teact';\n\nimport type { ApiChatBannedRights } from '../../../api/types';\n\nconst FLOATING_BUTTON_ANIMATION_TIMEOUT_MS = 250;\nconst MEDIA_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'embedLinks',\n  'sendPolls',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n  'sendStickers',\n  'sendGifs',\n];\nconst MESSAGE_PERMISSIONS: typeof MEDIA_PERMISSIONS = [...MEDIA_PERMISSIONS, 'sendPlain'];\n\nexport default function useManagePermissions(defaultPermissions: ApiChatBannedRights | undefined) {\n  const [permissions, setPermissions] = useState<ApiChatBannedRights>({});\n  const [havePermissionChanged, setHavePermissionChanged] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setPermissions(defaultPermissions || {});\n    setHavePermissionChanged(false);\n    setTimeout(() => {\n      setIsLoading(false);\n    }, FLOATING_BUTTON_ANIMATION_TIMEOUT_MS);\n  }, [defaultPermissions]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name: targetName } = e.target;\n\n    const name = targetName as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    const oldPermissions = permissions;\n\n    let newPermissions: ApiChatBannedRights = {\n      ...oldPermissions,\n      [name]: getUpdatedPermissionValue(oldPermissions[name]),\n      ...(name === 'sendStickers' && {\n        sendGifs: getUpdatedPermissionValue(oldPermissions[name]),\n      }),\n    };\n\n    const checkMedia = () => {\n      const mediaPermissions = MEDIA_PERMISSIONS.map((key) => newPermissions[key]);\n      if (mediaPermissions.some((v) => !v)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: undefined,\n        };\n      } else if (mediaPermissions.every(Boolean)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: true,\n        };\n      }\n    };\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    } else {\n      newPermissions = {\n        ...newPermissions,\n        ...(MEDIA_PERMISSIONS.reduce((acc, key) => (\n          Object.assign(acc, { [key]: newPermissions.sendMedia })\n        ), {})),\n      };\n    }\n\n    // Embed links can't be enabled if plain text is banned\n    if (name !== 'embedLinks' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        embedLinks: true,\n      };\n    }\n\n    if (name !== 'sendPlain' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        sendPlain: undefined,\n      };\n    }\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    }\n\n    const sendMessages = MESSAGE_PERMISSIONS.every((key) => newPermissions[key]);\n    newPermissions = {\n      ...newPermissions,\n      sendMessages: sendMessages ? true : undefined,\n    };\n\n    setPermissions(newPermissions);\n\n    setHavePermissionChanged(!defaultPermissions || Object.keys(newPermissions).some((k) => {\n      const key = k as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n      return Boolean(defaultPermissions[key]) !== Boolean(newPermissions[key]);\n    }));\n  }, [defaultPermissions, permissions]);\n\n  return {\n    permissions,\n    isLoading,\n    havePermissionChanged,\n    handlePermissionChange,\n    setIsLoading,\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { ManagementScreens } from '../../../types';\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\n\nimport stopEvent from '../../../util/stopEvent';\nimport buildClassName from '../../../util/buildClassName';\nimport { isChatPublic } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport ListItem from '../../ui/ListItem';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport Spinner from '../../ui/Spinner';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentUserId?: string;\n  hasLinkedChat?: boolean;\n  removedUsersCount: number;\n  members?: ApiChatMember[];\n};\n\nconst ITEM_HEIGHT = 24 + 32;\nconst BEFORE_ITEMS_COUNT = 2;\nconst ITEMS_COUNT = 9;\n\nfunction getLangKeyForBannedRightKey(key: keyof ApiChatBannedRights) {\n  switch (key) {\n    case 'sendMessages':\n      return 'UserRestrictionsNoSend';\n    case 'sendMedia':\n      return 'UserRestrictionsNoSendMedia';\n    case 'sendStickers':\n      return 'UserRestrictionsNoSendStickers';\n    case 'embedLinks':\n      return 'UserRestrictionsNoEmbedLinks';\n    case 'sendPolls':\n      return 'UserRestrictionsNoSendPolls';\n    case 'changeInfo':\n      return 'UserRestrictionsNoChangeInfo';\n    case 'inviteUsers':\n      return 'UserRestrictionsInviteUsers';\n    case 'pinMessages':\n      return 'UserRestrictionsPinMessages';\n    case 'manageTopics':\n      return 'GroupPermission.NoManageTopics';\n    case 'sendPlain':\n      return 'UserRestrictionsNoSendText';\n    case 'sendDocs':\n      return 'UserRestrictionsNoSendDocs';\n    case 'sendRoundvideos':\n      return 'UserRestrictionsNoSendRound';\n    case 'sendVoices':\n      return 'UserRestrictionsNoSendVoice';\n    case 'sendAudios':\n      return 'UserRestrictionsNoSendMusic';\n    case 'sendVideos':\n      return 'UserRestrictionsNoSendVideos';\n    case 'sendPhotos':\n      return 'UserRestrictionsNoSendPhotos';\n    default:\n      return undefined;\n  }\n}\n\nconst ManageGroupPermissions: FC<OwnProps & StateProps> = ({\n  onScreenSelect,\n  onChatMemberSelect,\n  chat,\n  currentUserId,\n  hasLinkedChat,\n  removedUsersCount,\n  members,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatDefaultBannedRights, showNotification } = getActions();\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(chat?.defaultBannedRights);\n  const lang = useLang();\n  const { isForum } = chat || {};\n  const isPublic = useMemo(() => chat && isChatPublic(chat), [chat]);\n  const shouldDisablePermissionForPublicGroup = hasLinkedChat || isPublic;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleAddExceptionClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupUserPermissionsCreate);\n  }, [onScreenSelect]);\n\n  const handleExceptionMemberClick = useCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [currentUserId, onChatMemberSelect, onScreenSelect]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n  const handleOpenMediaDropdown = useCallback((e: React.MouseEvent) => {\n    stopEvent(e);\n    setIsMediaDropdownOpen(!isMediaDropdownOpen);\n  }, [isMediaDropdownOpen]);\n\n  const handleDisabledClick = useCallback(() => {\n    showNotification({ message: lang('lng_rights_permission_unavailable') });\n  }, [lang, showNotification]);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatDefaultBannedRights({ chatId: chat.id, bannedRights: permissions });\n  }, [chat, permissions, setIsLoading, updateChatDefaultBannedRights]);\n\n  const exceptionMembers = useMemo(() => {\n    if (!members) {\n      return [];\n    }\n\n    return members.filter(({ bannedRights }) => Boolean(bannedRights));\n  }, [members]);\n\n  const getMemberExceptions = useCallback((member: ApiChatMember) => {\n    const { bannedRights } = member;\n    if (!bannedRights || !chat) {\n      return undefined;\n    }\n\n    const { defaultBannedRights } = chat;\n\n    return Object.keys(bannedRights).reduce((result, k) => {\n      const key = k as keyof ApiChatBannedRights;\n      if (\n        !bannedRights[key]\n        || (defaultBannedRights?.[key])\n        || key === 'sendInline' || key === 'viewMessages' || key === 'sendGames'\n      ) {\n        return result;\n      }\n\n      const langKey = getLangKeyForBannedRightKey(key);\n\n      if (!langKey) {\n        return result;\n      }\n\n      const translatedString = lang(langKey);\n\n      return `${result}${!result.length ? translatedString : `, ${translatedString}`}`;\n    }, '');\n  }, [chat, lang]);\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT}px;`\n        + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT}px;`}\n    >\n      <div className=\"custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('ChannelPermissionsHeader')}</h3>\n\n          <div className=\"ListItem no-selection with-checkbox\">\n            <Checkbox\n              name=\"sendPlain\"\n              checked={!permissions.sendPlain}\n              label={lang('UserRestrictionsSend')}\n              blocking\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem no-selection with-checkbox\">\n            <Checkbox\n              name=\"sendMedia\"\n              checked={!permissions.sendMedia}\n              label={lang('UserRestrictionsSendMedia')}\n              blocking\n              rightIcon={isMediaDropdownOpen ? 'up' : 'down'}\n              onChange={handlePermissionChange}\n              onClickLabel={handleOpenMediaDropdown}\n            />\n          </div>\n          <div className=\"DropdownListTrap\">\n            <div\n              className={buildClassName(\n                'DropdownList',\n                isMediaDropdownOpen && 'DropdownList--open',\n              )}\n            >\n              <div className=\"ListItem no-selection with-checkbox\">\n                <Checkbox\n                  name=\"sendPhotos\"\n                  checked={!permissions.sendPhotos}\n                  label={lang('UserRestrictionsSendPhotos')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem no-selection with-checkbox\">\n                <Checkbox\n                  name=\"sendVideos\"\n                  checked={!permissions.sendVideos}\n                  label={lang('UserRestrictionsSendVideos')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem no-selection with-checkbox\">\n                <Checkbox\n                  name=\"sendStickers\"\n                  checked={!permissions.sendStickers && !permissions.sendGifs}\n                  label={lang('UserRestrictionsSendStickers')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem no-selection with-checkbox\">\n                <Checkbox\n                  name=\"sendAudios\"\n                  checked={!permissions.sendAudios}\n                  label={lang('UserRestrictionsSendMusic')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem no-selection with-checkbox\">\n                <Checkbox\n                  name=\"sendDocs\"\n                  checked={!permissions.sendDocs}\n                  label={lang('UserRestrictionsSendFiles')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem no-selection with-checkbox\">\n                <Checkbox\n                  name=\"sendVoices\"\n                  checked={!permissions.sendVoices}\n                  label={lang('UserRestrictionsSendVoices')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem no-selection with-checkbox\">\n                <Checkbox\n                  name=\"sendRoundvideos\"\n                  checked={!permissions.sendRoundvideos}\n                  label={lang('UserRestrictionsSendRound')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem no-selection with-checkbox\">\n                <Checkbox\n                  name=\"embedLinks\"\n                  checked={!permissions.embedLinks}\n                  label={lang('UserRestrictionsEmbedLinks')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem no-selection with-checkbox\">\n                <Checkbox\n                  name=\"sendPolls\"\n                  checked={!permissions.sendPolls}\n                  label={lang('UserRestrictionsSendPolls')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className={buildClassName('part', isMediaDropdownOpen && 'shifted')}>\n            <div className=\"ListItem no-selection with-checkbox\">\n              <Checkbox\n                name=\"inviteUsers\"\n                checked={!permissions.inviteUsers}\n                label={lang('UserRestrictionsInviteUsers')}\n                blocking\n                onChange={handlePermissionChange}\n              />\n            </div>\n            <div\n              className=\"ListItem no-selection with-checkbox\"\n              onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n            >\n              <Checkbox\n                name=\"pinMessages\"\n                checked={!permissions.pinMessages}\n                label={lang('UserRestrictionsPinMessages')}\n                disabled={shouldDisablePermissionForPublicGroup}\n                blocking\n                onChange={handlePermissionChange}\n              />\n            </div>\n            <div\n              className=\"ListItem no-selection with-checkbox\"\n              onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n            >\n              <Checkbox\n                name=\"changeInfo\"\n                checked={!permissions.changeInfo}\n                label={lang('UserRestrictionsChangeInfo')}\n                blocking\n                disabled={shouldDisablePermissionForPublicGroup}\n                onChange={handlePermissionChange}\n              />\n            </div>\n            {isForum && (\n              <div className=\"ListItem no-selection with-checkbox\">\n                <Checkbox\n                  name=\"manageTopics\"\n                  checked={!permissions.manageTopics}\n                  label={lang('CreateTopicsPermission')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            narrow\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('PrivacyExceptions')}</h3>\n\n          <ListItem\n            icon=\"add-user\"\n            onClick={handleAddExceptionClick}\n          >\n            {lang('ChannelAddException')}\n          </ListItem>\n\n          {exceptionMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable exceptions-member\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleExceptionMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberExceptions(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const hasLinkedChat = Boolean(fullInfo?.linkedChatId);\n\n    return {\n      chat,\n      currentUserId: global.currentUserId,\n      hasLinkedChat,\n      removedUsersCount: fullInfo?.kickedMembers?.length || 0,\n      members: fullInfo?.members,\n    };\n  },\n)(ManageGroupPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useMemo, useState, memo, useCallback,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport { selectChatFullInfo } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\n\nimport ChatOrUserPicker from '../../common/ChatOrUserPicker';\n\nexport type OwnProps = {\n  chat: ApiChat;\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  chatMembers?: ApiChatMember[];\n};\n\nconst RemoveGroupUserModal: FC<OwnProps & StateProps> = ({\n  chat,\n  currentUserId,\n  chatMembers,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    loadMoreMembers,\n    deleteChatMember,\n  } = getActions();\n\n  const lang = useLang();\n  const [search, setSearch] = useState('');\n\n  const usersId = useMemo(() => {\n    const availableMemberIds = (chatMembers || [])\n      .reduce((acc: string[], member) => {\n        if (!member.isAdmin && !member.isOwner && member.userId !== currentUserId) {\n          acc.push(member.userId);\n        }\n        return acc;\n      }, []);\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n\n    return filterUsersByName(availableMemberIds, usersById, search);\n  }, [chatMembers, currentUserId, search]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    deleteChatMember({ chatId: chat.id, userId });\n    onClose();\n  }, [chat.id, deleteChatMember, onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={usersId}\n      searchPlaceholder={lang('ChannelBlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMoreMembers}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const { currentUserId } = global;\n\n    return {\n      currentUserId,\n      chatMembers: selectChatFullInfo(global, chat.id)?.members,\n    };\n  },\n)(RemoveGroupUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember, ApiUser } from '../../../api/types';\n\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { getHasAdminRight, getUserFullName, isChatChannel } from '../../../global/helpers';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useFlag from '../../../hooks/useFlag';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport RemoveGroupUserModal from './RemoveGroupUserModal';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  usersById: Record<string, ApiUser>;\n  removedMembers: ApiChatMember[];\n  canDeleteMembers?: boolean;\n  isChannel?: boolean;\n};\n\nconst ManageChatRemovedUsers: FC<OwnProps & StateProps> = ({\n  chat,\n  usersById,\n  canDeleteMembers,\n  removedMembers,\n  isChannel,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const lang = useLang();\n  const [isRemoveUserModalOpen, openRemoveUserModal, closeRemoveUserModal] = useFlag();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const getRemovedBy = useCallback((member: ApiChatMember) => {\n    if (!member.kickedByUserId) {\n      return undefined;\n    }\n\n    const kickedByUser = usersById[member.kickedByUserId];\n    if (!kickedByUser) {\n      return undefined;\n    }\n\n    return lang('UserRemovedBy', getUserFullName(kickedByUser));\n  }, [lang, usersById]);\n\n  const getContextActions = useCallback((member: ApiChatMember) => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return [{\n      title: lang('Unblock'),\n      icon: 'delete',\n      destructive: true,\n      handler: () => updateChatMemberBannedRights({\n        chatId: chat.id,\n        userId: member.userId,\n        bannedRights: {},\n      }),\n    }];\n  }, [lang, chat, updateChatMemberBannedRights]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"text-muted\">{lang(isChannel ? 'NoBlockedChannel2' : 'NoBlockedGroup2')}</p>\n\n          {removedMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              ripple\n              contextActions={getContextActions(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getRemovedBy(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n          {canDeleteMembers && (\n            <FloatingActionButton\n              isShown\n              onClick={openRemoveUserModal}\n              ariaLabel={lang('Channel.EditAdmin.Permission.BanUsers')}\n            >\n              <i className=\"icon icon-add-user-filled\" />\n            </FloatingActionButton>\n          )}\n          {chat && canDeleteMembers && (\n            <RemoveGroupUserModal\n              chat={chat}\n              isOpen={isRemoveUserModalOpen}\n              onClose={closeRemoveUserModal}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById } = global.users;\n    const canDeleteMembers = chat && (getHasAdminRight(chat, 'banUsers') || chat.isCreator);\n\n    return {\n      chat,\n      usersById,\n      canDeleteMembers,\n      removedMembers: selectChatFullInfo(global, chatId)?.kickedMembers || MEMO_EMPTY_ARRAY,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageChatRemovedUsers));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { ManagementProgress, ManagementScreens } from '../../../types';\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getChatAvatarHash, getHasAdminRight, isChatPublic } from '../../../global/helpers';\nimport useMedia from '../../../hooks/useMedia';\nimport useLang from '../../../hooks/useLang';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { formatInteger } from '../../../util/textFormat';\n\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Checkbox from '../../ui/Checkbox';\nimport Spinner from '../../ui/Spinner';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  isSignaturesShown: boolean;\n  canChangeInfo?: boolean;\n  canInvite?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  lastSyncTime?: number;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CHANNEL_TITLE_EMPTY = 'Channel title can\\'t be empty';\nconst CHANNEL_MAX_DESCRIPTION = 255;\n\nconst ManageChannel: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  isSignaturesShown,\n  canChangeInfo,\n  canInvite,\n  exportedInvites,\n  lastSyncTime,\n  isActive,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    updateChat,\n    toggleSignatures,\n    closeManagement,\n    leaveChannel,\n    deleteChannel,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n  } = getActions();\n\n  const currentTitle = chat?.title || '';\n  const currentAbout = chatFullInfo?.about || '';\n  const hasLinkedChat = Boolean(chatFullInfo?.linkedChatId);\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const imageHash = chat && getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (lastSyncTime) {\n      loadExportedChatInvites({ chatId });\n      loadExportedChatInvites({ chatId, isRevoked: true });\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chatId, loadExportedChatInvites, lastSyncTime, loadChatJoinRequests]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n  const removedUsersCount = chatFullInfo?.kickedMembers?.length || 0;\n\n  const handleClickEditType = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  }, [onScreenSelect]);\n\n  const handleClickDiscussion = useCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  }, [onScreenSelect]);\n\n  const handleClickReactions = useCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  }, [onScreenSelect]);\n\n  const handleClickAdministrators = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  }, [onScreenSelect]);\n\n  const handleClickInvites = useCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  }, [onScreenSelect]);\n\n  const handleClickRequests = useCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  }, [onScreenSelect]);\n\n  const handleSetPhoto = useCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleAboutChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUpdateChannel = useCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(CHANNEL_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  }, [about, chatId, photo, title, updateChat]);\n\n  const handleToggleSignatures = useCallback(() => {\n    toggleSignatures({ chatId, isEnabled: !isSignaturesShown });\n  }, [chatId, isSignaturesShown, toggleSignatures]);\n\n  const handleClickSubscribers = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelSubscribers);\n  }, [onScreenSelect]);\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleDeleteChannel = useCallback(() => {\n    if (chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    } else {\n      leaveChannel({ chatId: chat.id });\n    }\n\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  }, [chat.isCreator, chat.id, closeDeleteDialog, closeManagement, leaveChannel, deleteChannel, openChat]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength ? `${enabledLength} / ${totalLength}` : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n  const isChannelPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <InputText\n            id=\"channel-title\"\n            label={lang('EnterChannelName')}\n            onChange={handleTitleChange}\n            value={title}\n            error={error === CHANNEL_TITLE_EMPTY ? error : undefined}\n            disabled={!canChangeInfo}\n          />\n          <TextArea\n            id=\"channel-about\"\n            className=\"mb-2\"\n            label={lang('DescriptionPlaceholder')}\n            onChange={handleAboutChange}\n            value={about}\n            maxLength={CHANNEL_MAX_DESCRIPTION}\n            maxLengthIndicator={(CHANNEL_MAX_DESCRIPTION - about.length).toString()}\n            disabled={!canChangeInfo}\n            noReplaceNewlines\n          />\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('ChannelType')}</span>\n              <span className=\"subtitle\">{isChannelPublic ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"message\"\n            multiline\n            onClick={handleClickDiscussion}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Discussion')}</span>\n            <span className=\"subtitle\">{hasLinkedChat ? lang('DiscussionUnlink') : lang('Add')}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('SubscribeRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n          <div className=\"ListItem no-selection narrow\">\n            <Checkbox\n              checked={isSignaturesShown}\n              label={lang('ChannelSignMessages')}\n              onChange={handleToggleSignatures}\n            />\n          </div>\n        </div>\n        <div className=\"section\">\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{adminsCount}</span>\n          </ListItem>\n          <ListItem\n            icon=\"group\"\n            multiline\n            onClick={handleClickSubscribers}\n          >\n            <span className=\"title\" dir=\"auto\">{lang('ChannelSubscribers')}</span>\n            <span className=\"subtitle\" dir=\"auto\">{lang('Subscribers', chat.membersCount ?? 0, 'i')}</span>\n          </ListItem>\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            narrow\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateChannel}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={chat.isCreator ? lang('ChannelDeleteAlert') : lang('ChannelLeaveAlert')}\n        confirmLabel={chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n        confirmHandler={handleDeleteChannel}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { management } = selectTabState(global);\n    const { progress } = management;\n    const isSignaturesShown = Boolean(chat?.isSignaturesShown);\n    const { invites } = management.byChatId[chatId] || {};\n\n    return {\n      chat,\n      chatFullInfo: selectChatFullInfo(global, chatId),\n      progress,\n      isSignaturesShown,\n      canChangeInfo: getHasAdminRight(chat, 'changeInfo'),\n      canInvite: getHasAdminRight(chat, 'inviteUsers'),\n      lastSyncTime: global.lastSyncTime,\n      exportedInvites: invites,\n      availableReactions: global.availableReactions,\n    };\n  },\n)(ManageChannel));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport {\n  selectChat, selectTabState, selectManagement, selectChatFullInfo,\n} from '../../../global/selectors';\nimport { isChatChannel, isChatPublic } from '../../../global/helpers';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport SafeLink from '../../common/SafeLink';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport Loading from '../../ui/Loading';\nimport Spinner from '../../ui/Spinner';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport UsernameInput from '../../common/UsernameInput';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ManageUsernames from '../../common/ManageUsernames';\n\ntype PrivacyType = 'private' | 'public';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  isChannel: boolean;\n  progress?: ManagementProgress;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  error?: string;\n  isProtected?: boolean;\n  maxPublicLinks: number;\n  privateInviteLink?: string;\n};\n\nconst ManageChatPrivacyType: FC<OwnProps & StateProps> = ({\n  chat,\n  isActive,\n  isChannel,\n  progress,\n  isUsernameAvailable,\n  checkedUsername,\n  error,\n  isProtected,\n  maxPublicLinks,\n  privateInviteLink,\n  onClose,\n}) => {\n  const {\n    updatePublicLink,\n    updatePrivateLink,\n    toggleIsProtected,\n    openLimitReachedModal,\n    resetManagementError,\n  } = getActions();\n\n  const firstEditableUsername = useMemo(() => chat.usernames?.find(({ isEditable }) => isEditable), [chat.usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const isPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [privacyType, setPrivacyType] = useState<PrivacyType>(isPublic ? 'public' : 'private');\n  const [editableUsername, setEditableUsername] = useState<string>();\n  const [isRevokeConfirmDialogOpen, openRevokeConfirmDialog, closeRevokeConfirmDialog] = useFlag();\n  const [isUsernameLostDialogOpen, openUsernameLostDialog, closeUsernameLostDialog] = useFlag();\n\n  const previousIsUsernameAvailable = usePrevious(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n\n  const canUpdate = isProfileFieldsTouched && Boolean(\n    (privacyType === 'public'\n      && (editableUsername || (currentUsername && editableUsername === ''))\n      && renderingIsUsernameAvailable)\n    || (privacyType === 'private' && isPublic),\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (privacyType && !privateInviteLink) {\n      updatePrivateLink();\n    }\n  }, [privacyType, privateInviteLink, updatePrivateLink]);\n\n  const handleUsernameChange = useCallback((value: string) => {\n    setEditableUsername(value);\n    setIsProfileFieldsTouched(true);\n\n    if (error) {\n      resetManagementError({\n        chatId: chat.id,\n      });\n    }\n  }, [chat.id, error]);\n\n  const handleOptionChange = useCallback((value: string, e: ChangeEvent<HTMLInputElement>) => {\n    const myChats = Object.values(getGlobal().chats.byId)\n      .filter(({ isCreator, usernames }) => isCreator && usernames?.some((c) => c.isActive));\n\n    if (myChats.length >= maxPublicLinks && value === 'public') {\n      openLimitReachedModal({ limit: 'channelsPublic' });\n      const radioGroup = e.currentTarget.closest('.radio-group') as HTMLDivElement;\n      // Patch for Teact bug with controlled inputs\n      // TODO Teact support added, this can now be removed\n      (radioGroup.querySelector('[value=public]') as HTMLInputElement).checked = false;\n      (radioGroup.querySelector('[value=private]') as HTMLInputElement).checked = true;\n      return;\n    }\n    setPrivacyType(value as PrivacyType);\n    setIsProfileFieldsTouched(true);\n  }, [maxPublicLinks, openLimitReachedModal]);\n\n  const handleForwardingOptionChange = useCallback((value: string) => {\n    toggleIsProtected({\n      chatId: chat.id,\n      isProtected: value === 'protected',\n    });\n  }, [chat.id, toggleIsProtected]);\n\n  const handleSave = useCallback(() => {\n    if (isPublic && privacyType === 'private') {\n      openUsernameLostDialog();\n    } else {\n      updatePublicLink({ username: privacyType === 'public' ? (editableUsername || '') : '' });\n    }\n  }, [isPublic, openUsernameLostDialog, privacyType, updatePublicLink, editableUsername]);\n\n  const handleMakeChannelPrivateConfirm = useCallback(() => {\n    updatePublicLink({ username: '' });\n    closeUsernameLostDialog();\n  }, [closeUsernameLostDialog, updatePublicLink]);\n\n  const handleRevokePrivateLink = useCallback(() => {\n    closeRevokeConfirmDialog();\n    updatePrivateLink();\n  }, [closeRevokeConfirmDialog, updatePrivateLink]);\n\n  const lang = useLang();\n  const langPrefix1 = isChannel ? 'Channel' : 'Mega';\n  const langPrefix2 = isChannel ? 'Channel' : 'Group';\n\n  const options = [\n    { value: 'private', label: lang(`${langPrefix1}Private`), subLabel: lang(`${langPrefix1}PrivateInfo`) },\n    { value: 'public', label: lang(`${langPrefix1}Public`), subLabel: lang(`${langPrefix1}PublicInfo`) },\n  ];\n\n  const forwardingOptions = [{\n    value: 'allowed',\n    label: lang('ChannelVisibility.Forwarding.Enabled'),\n  }, {\n    value: 'protected',\n    label: lang('ChannelVisibility.Forwarding.Disabled'),\n  }];\n\n  const isLoading = progress === ManagementProgress.InProgress;\n  const shouldRenderUsernamesManage = privacyType === 'public' && chat.usernames && chat.usernames.length > 1;\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"section-info\" dir=\"auto\">\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">{lang(`${langPrefix2}Type`)}</h3>\n          <RadioGroup\n            selected={privacyType}\n            name=\"channel-type\"\n            options={options}\n            onChange={handleOptionChange}\n          />\n        </div>\n        {privacyType === 'private' ? (\n          <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {privateInviteLink ? (\n              <>\n                <SafeLink url={privateInviteLink} className=\"group-link\" text={privateInviteLink} />\n                <p className=\"section-info\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {lang(`${langPrefix1}PrivateLinkHelp`)}\n                </p>\n\n                <ListItem icon=\"delete\" ripple destructive onClick={openRevokeConfirmDialog}>\n                  {lang('RevokeLink')}\n                </ListItem>\n                <ConfirmDialog\n                  isOpen={isRevokeConfirmDialogOpen}\n                  onClose={closeRevokeConfirmDialog}\n                  text={lang('RevokeAlert')}\n                  confirmLabel={lang('RevokeButton')}\n                  confirmHandler={handleRevokePrivateLink}\n                  confirmIsDestructive\n                />\n              </>\n            ) : (\n              <Loading />\n            )}\n          </div>\n        ) : (\n          <div className=\"section no-border\">\n            <UsernameInput\n              asLink\n              currentUsername={currentUsername}\n              isLoading={isLoading}\n              isUsernameAvailable={isUsernameAvailable}\n              checkedUsername={checkedUsername}\n              onChange={handleUsernameChange}\n            />\n            {error === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n            <p className=\"section-info\" dir=\"auto\">\n              {lang(`${langPrefix2}.Username.CreatePublicLinkHelp`)}\n            </p>\n          </div>\n        )}\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            chatId={chat.id}\n            usernames={chat.usernames!}\n            onEditUsername={handleUsernameChange}\n          />\n        )}\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">\n            {lang(isChannel ? 'ChannelVisibility.Forwarding.ChannelTitle' : 'ChannelVisibility.Forwarding.GroupTitle')}\n          </h3>\n          <RadioGroup\n            selected={isProtected ? 'protected' : 'allowed'}\n            name=\"forwarding-type\"\n            options={forwardingOptions}\n            onChange={handleForwardingOptionChange}\n          />\n          <p className=\"section-info\">\n            {isChannel\n              ? lang('ChannelVisibility.Forwarding.ChannelInfo')\n              : lang('ChannelVisibility.Forwarding.GroupInfo')}\n          </p>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={canUpdate}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n        onClick={handleSave}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isUsernameLostDialogOpen}\n        onClose={closeUsernameLostDialog}\n        text={lang('ChannelVisibility.Confirm.MakePrivate.Channel', currentUsername)}\n        confirmHandler={handleMakeChannelPrivateConfirm}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { isUsernameAvailable, checkedUsername, error } = selectManagement(global, chatId)!;\n\n    return {\n      chat,\n      isChannel: isChatChannel(chat),\n      progress: selectTabState(global).management.progress,\n      error,\n      isUsernameAvailable,\n      checkedUsername,\n      isProtected: chat?.isProtected,\n      maxPublicLinks: selectCurrentLimit(global, 'channelsPublic'),\n      privateInviteLink: selectChatFullInfo(global, chatId)?.inviteLink,\n    };\n  },\n)(ManageChatPrivacyType));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_DISCUSSION_GROUPS } from '../../../config';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ListItem from '../../ui/ListItem';\nimport NothingFound from '../../common/NothingFound';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport useFlag from '../../../hooks/useFlag';\nimport renderText from '../../common/helpers/renderText';\nimport Avatar from '../../common/Avatar';\nimport { isChatChannel } from '../../../global/helpers';\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Checkbox from '../../ui/Checkbox';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  chatsByIds: Record<string, ApiChat>;\n  linkedChat?: ApiChat;\n  forDiscussionIds?: string[];\n  isChannel?: boolean;\n};\n\nconst ManageDiscussion: FC<OwnProps & StateProps> = ({\n  chat,\n  onClose,\n  isActive,\n  chatId,\n  chatsByIds,\n  linkedChat,\n  forDiscussionIds,\n  isChannel,\n  onScreenSelect,\n}) => {\n  const {\n    loadGroupsForDiscussion,\n    linkDiscussionGroup,\n    unlinkDiscussionGroup,\n    toggleJoinRequest,\n    toggleJoinToSend,\n  } = getActions();\n\n  const [linkedGroupId, setLinkedGroupId] = useState<string>();\n  const [isConfirmUnlinkGroupDialogOpen, openConfirmUnlinkGroupDialog, closeConfirmUnlinkGroupDialog] = useFlag();\n  const [isConfirmLinkGroupDialogOpen, openConfirmLinkGroupDialog, closeConfirmLinkGroupDialog] = useFlag();\n  const [isJoinToSend, setIsJoinToSend] = useState(Boolean(linkedChat?.isJoinToSend));\n  const [isJoinRequest, setIsJoinRequest] = useState(Boolean(linkedChat?.isJoinRequest));\n  const lang = useLang();\n  const linkedChatId = linkedChat?.id;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    loadGroupsForDiscussion();\n  }, [loadGroupsForDiscussion]);\n\n  useEffect(() => {\n    if (isActive) {\n      setIsJoinToSend(linkedChat?.isJoinToSend || false);\n      setIsJoinRequest(linkedChat?.isJoinRequest || false);\n    }\n  }, [linkedChat, isActive]);\n\n  const handleUnlinkGroupSessions = useCallback(() => {\n    closeConfirmUnlinkGroupDialog();\n    unlinkDiscussionGroup({ channelId: isChannel ? chatId : linkedChatId! });\n    if (!isChannel) {\n      onScreenSelect(ManagementScreens.Initial);\n    }\n  }, [closeConfirmUnlinkGroupDialog, unlinkDiscussionGroup, isChannel, chatId, linkedChatId, onScreenSelect]);\n\n  const handleLinkGroupSessions = useCallback(() => {\n    closeConfirmLinkGroupDialog();\n    linkDiscussionGroup({ channelId: chatId, chatId: linkedGroupId! });\n  }, [closeConfirmLinkGroupDialog, linkDiscussionGroup, chatId, linkedGroupId]);\n\n  const handleJoinToSendCheck = useCallback((checked: boolean) => {\n    setIsJoinToSend(checked);\n    toggleJoinToSend({ chatId: linkedChatId!, isEnabled: checked });\n    if (!checked) {\n      setIsJoinRequest(false);\n    }\n  }, [linkedChatId, toggleJoinToSend]);\n\n  const handleJoinRequestCheck = useCallback((checked: boolean) => {\n    setIsJoinRequest(checked);\n    toggleJoinRequest({ chatId: linkedChatId!, isEnabled: checked });\n  }, [linkedChatId, toggleJoinRequest]);\n\n  const onDiscussionClick = (groupId: string) => {\n    setLinkedGroupId(groupId);\n    openConfirmLinkGroupDialog();\n  };\n\n  function renderUnlinkGroupHeader() {\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          chat={linkedChat}\n        />\n        <div className=\"modal-title\">\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupHeader() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          chat={linkedGroup}\n        />\n        <div className=\"modal-title\">\n          {lang('Channel.DiscussionGroup.LinkGroup')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupConfirmText() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    if (linkedGroup.hasPrivateLink) {\n      return renderText(\n        `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?`,\n        ['br', 'simple_markdown'],\n      );\n    }\n\n    return renderText(\n      // eslint-disable-next-line max-len\n      `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?\\n\\nAnyone from the channel will be able to see messages in this group.`,\n      ['br', 'simple_markdown'],\n    );\n  }\n\n  function renderLinkedGroup() {\n    return (\n      <div>\n        <ListItem\n          className=\"chat-item-clickable\"\n          inactive\n        >\n          <GroupChatInfo chatId={linkedChat!.id} />\n        </ListItem>\n        <ListItem\n          icon=\"delete\"\n          ripple\n          destructive\n          onClick={openConfirmUnlinkGroupDialog}\n        >\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </ListItem>\n        <ConfirmDialog\n          isOpen={isConfirmUnlinkGroupDialogOpen}\n          onClose={closeConfirmUnlinkGroupDialog}\n          header={renderUnlinkGroupHeader()}\n          textParts={renderText(\n            lang(isChannel ? 'DiscussionUnlinkChannelAlert' : 'DiscussionUnlinkGroupAlert', linkedChat!.title),\n            ['br', 'simple_markdown'],\n          )}\n          confirmLabel={lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n          confirmHandler={handleUnlinkGroupSessions}\n          confirmIsDestructive\n        />\n      </div>\n    );\n  }\n\n  function renderDiscussionGroups() {\n    return (\n      <div>\n        <p className=\"section-help\" dir=\"auto\">{lang('DiscussionChannelHelp')}</p>\n\n        <div teactFastList>\n          <ListItem\n            key=\"create-group\"\n            icon=\"group\"\n            ripple\n            teactOrderKey={0}\n            disabled\n          >\n            {lang('DiscussionCreateGroup')}\n          </ListItem>\n          {forDiscussionIds ? (\n            forDiscussionIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i + 1}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => {\n                  onDiscussionClick(id);\n                }}\n              >\n                <GroupChatInfo chatId={id} />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound key=\"nothing-found\" teactOrderKey={0} text=\"No discussion groups found\" />\n          )}\n        </div>\n        <p className=\"mt-4 mb-0 section-help\" dir=\"auto\">{lang('DiscussionChannelHelp2')}</p>\n        <ConfirmDialog\n          isOpen={isConfirmLinkGroupDialogOpen}\n          onClose={closeConfirmLinkGroupDialog}\n          header={renderLinkGroupHeader()}\n          textParts={renderLinkGroupConfirmText()}\n          confirmLabel={lang('DiscussionLinkGroup')}\n          confirmHandler={handleLinkGroupSessions}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.DiscussionGroups}\n            size={STICKER_SIZE_DISCUSSION_GROUPS}\n            className=\"section-icon\"\n          />\n          {linkedChat && renderLinkedGroup()}\n          {!linkedChat && renderDiscussionGroups()}\n        </div>\n        {linkedChat && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">{lang('ChannelSettingsJoinTitle')}</h3>\n            <Checkbox\n              checked={isJoinToSend}\n              onCheck={handleJoinToSendCheck}\n              label={lang('ChannelSettingsJoinToSend')}\n            />\n            {isJoinToSend && (\n              <Checkbox\n                checked={isJoinRequest}\n                onCheck={handleJoinRequestCheck}\n                label={lang('ChannelSettingsJoinRequest')}\n              />\n            )}\n            <p className=\"text-muted\">\n              {isJoinToSend ? lang('ChannelSettingsJoinRequestInfo') : lang('ChannelSettingsJoinToSendInfo')}\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { linkedChatId } = selectChatFullInfo(global, chatId) || {};\n    const { forDiscussionIds, byId: chatsByIds } = global.chats;\n    const linkedChat = linkedChatId\n      ? selectChat(global, linkedChatId)\n      : undefined;\n\n    return {\n      chat,\n      chatsByIds,\n      forDiscussionIds,\n      linkedChat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageDiscussion));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport stopEvent from '../../../util/stopEvent';\nimport buildClassName from '../../../util/buildClassName';\nimport useManagePermissions from '../hooks/useManagePermissions';\nimport useLang from '../../../hooks/useLang';\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport Spinner from '../../ui/Spinner';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\ntype OwnProps = {\n  chatId: string;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  hasFullInfo?: boolean;\n  members?: ApiChatMember[];\n  isFormFullyDisabled?: boolean;\n};\n\nconst ITEM_HEIGHT = 24 + 32;\nconst SHIFT_HEIGHT_MINUS = 1;\nconst BEFORE_ITEMS_COUNT = 2;\nconst BEFORE_USER_INFO_HEIGHT = 96;\nconst ITEMS_COUNT = 9;\n\nconst ManageGroupUserPermissions: FC<OwnProps & StateProps> = ({\n  chat,\n  selectedChatMemberId,\n  hasFullInfo,\n  members,\n  onScreenSelect,\n  isFormFullyDisabled,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const selectedChatMember = useMemo(() => {\n    if (!members) {\n      return undefined;\n    }\n\n    return members.find(({ userId }) => userId === selectedChatMemberId);\n  }, [members, selectedChatMemberId]);\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(selectedChatMember?.bannedRights || chat?.defaultBannedRights);\n  const [isBanConfirmationDialogOpen, openBanConfirmationDialog, closeBanConfirmationDialog] = useFlag();\n  const lang = useLang();\n\n  const { isForum } = chat || {};\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (hasFullInfo && selectedChatMemberId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.GroupPermissions);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedChatMemberId]);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: permissions,\n    });\n  }, [chat, selectedChatMemberId, setIsLoading, updateChatMemberBannedRights, permissions]);\n\n  const handleBanFromGroup = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: {\n        viewMessages: true,\n      },\n    });\n  }, [chat, selectedChatMemberId, updateChatMemberBannedRights]);\n\n  const getControlIsDisabled = useCallback((key: Exclude<keyof ApiChatBannedRights, 'untilDate'>) => {\n    if (isFormFullyDisabled) {\n      return true;\n    }\n\n    if (!chat || !chat.defaultBannedRights) {\n      return false;\n    }\n\n    return chat.defaultBannedRights[key];\n  }, [chat, isFormFullyDisabled]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n  const handleOpenMediaDropdown = useCallback((e: React.MouseEvent) => {\n    stopEvent(e);\n    setIsMediaDropdownOpen(!isMediaDropdownOpen);\n  }, [isMediaDropdownOpen]);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT - SHIFT_HEIGHT_MINUS}px;`\n           + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT + BEFORE_USER_INFO_HEIGHT}px;`}\n    >\n      <div className=\"custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo userId={selectedChatMember.userId} forceShowSelf />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{lang('UserRestrictionsCanDo')}</h3>\n\n          <div className=\"ListItem no-selection\">\n            <Checkbox\n              name=\"sendPlain\"\n              checked={!permissions.sendPlain}\n              label={lang('UserRestrictionsSend')}\n              blocking\n              disabled={getControlIsDisabled('sendPlain')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n\n          <div className=\"ListItem no-selection\">\n            <Checkbox\n              name=\"sendMedia\"\n              checked={!permissions.sendMedia}\n              label={lang('UserRestrictionsSendMedia')}\n              blocking\n              rightIcon={isMediaDropdownOpen ? 'up' : 'down'}\n              disabled={getControlIsDisabled('sendMedia')}\n              onChange={handlePermissionChange}\n              onClickLabel={handleOpenMediaDropdown}\n            />\n          </div>\n\n          <div className=\"DropdownListTrap\">\n            <div\n              className={buildClassName(\n                'DropdownList',\n                isMediaDropdownOpen && 'DropdownList--open',\n              )}\n            >\n              <div className=\"ListItem no-selection\">\n                <Checkbox\n                  name=\"sendPhotos\"\n                  checked={!permissions.sendPhotos}\n                  label={lang('UserRestrictionsSendPhotos')}\n                  blocking\n                  disabled={getControlIsDisabled('sendPhotos')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem no-selection\">\n                <Checkbox\n                  name=\"sendVideos\"\n                  checked={!permissions.sendVideos}\n                  label={lang('UserRestrictionsSendVideos')}\n                  blocking\n                  disabled={getControlIsDisabled('sendVideos')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem no-selection\">\n                <Checkbox\n                  name=\"sendStickers\"\n                  checked={!permissions.sendStickers && !permissions.sendGifs}\n                  label={lang('UserRestrictionsSendStickers')}\n                  blocking\n                  disabled={getControlIsDisabled('sendStickers')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem no-selection\">\n                <Checkbox\n                  name=\"sendAudios\"\n                  checked={!permissions.sendAudios}\n                  label={lang('UserRestrictionsSendMusic')}\n                  blocking\n                  disabled={getControlIsDisabled('sendAudios')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem no-selection\">\n                <Checkbox\n                  name=\"sendDocs\"\n                  checked={!permissions.sendDocs}\n                  label={lang('UserRestrictionsSendFiles')}\n                  blocking\n                  disabled={getControlIsDisabled('sendDocs')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem no-selection\">\n                <Checkbox\n                  name=\"sendVoices\"\n                  checked={!permissions.sendVoices}\n                  label={lang('UserRestrictionsSendVoices')}\n                  blocking\n                  disabled={getControlIsDisabled('sendVoices')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem no-selection\">\n                <Checkbox\n                  name=\"sendRoundvideos\"\n                  checked={!permissions.sendRoundvideos}\n                  label={lang('UserRestrictionsSendRound')}\n                  blocking\n                  disabled={getControlIsDisabled('sendRoundvideos')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem no-selection\">\n                <Checkbox\n                  name=\"embedLinks\"\n                  checked={!permissions.embedLinks}\n                  label={lang('UserRestrictionsEmbedLinks')}\n                  blocking\n                  disabled={getControlIsDisabled('embedLinks')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem no-selection\">\n                <Checkbox\n                  name=\"sendPolls\"\n                  checked={!permissions.sendPolls}\n                  label={lang('UserRestrictionsSendPolls')}\n                  blocking\n                  disabled={getControlIsDisabled('sendPolls')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className={buildClassName('part', isMediaDropdownOpen && 'shifted')}>\n\n            <div className=\"ListItem no-selection\">\n              <Checkbox\n                name=\"inviteUsers\"\n                checked={!permissions.inviteUsers}\n                label={lang('UserRestrictionsInviteUsers')}\n                blocking\n                disabled={getControlIsDisabled('inviteUsers')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n            <div className=\"ListItem no-selection\">\n              <Checkbox\n                name=\"pinMessages\"\n                checked={!permissions.pinMessages}\n                label={lang('UserRestrictionsPinMessages')}\n                blocking\n                disabled={getControlIsDisabled('pinMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n            <div className=\"ListItem no-selection\">\n              <Checkbox\n                name=\"changeInfo\"\n                checked={!permissions.changeInfo}\n                label={lang('UserRestrictionsChangeInfo')}\n                blocking\n                disabled={getControlIsDisabled('changeInfo')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n            {isForum && (\n              <div className=\"ListItem no-selection\">\n                <Checkbox\n                  name=\"manageTopics\"\n                  checked={!permissions.manageTopics}\n                  label={lang('CreateTopicsPermission')}\n                  blocking\n                  disabled={getControlIsDisabled('manageTopics')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n\n        {!isFormFullyDisabled && (\n          <div\n            className={buildClassName(\n              'section',\n              isMediaDropdownOpen && 'shifted',\n            )}\n          >\n            <ListItem icon=\"delete-user\" ripple destructive onClick={openBanConfirmationDialog}>\n              {lang('UserRestrictionsBlock')}\n            </ListItem>\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n\n      <ConfirmDialog\n        isOpen={isBanConfirmationDialogOpen}\n        onClose={closeBanConfirmationDialog}\n        text=\"Are you sure you want to ban and remove this user from the group?\"\n        confirmLabel=\"Remove\"\n        confirmHandler={handleBanFromGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n\n    return {\n      chat,\n      isFormFullyDisabled,\n      hasFullInfo: Boolean(fullInfo),\n      members: fullInfo?.members,\n    };\n  },\n)(ManageGroupUserPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../../global';\n\nimport { ManagementScreens } from '../../../types';\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\n\nimport { getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ListItem from '../../ui/ListItem';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  currentUserId?: string;\n  isChannel: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n};\n\nconst ManageChatAdministrators: FC<OwnProps & StateProps> = ({\n  chat,\n  isChannel,\n  currentUserId,\n  adminMembersById,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n}) => {\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const canAddNewAdmins = Boolean(chat.isCreator || chat.adminRights?.addAdmins);\n\n  const adminMembers = useMemo(() => {\n    if (!adminMembersById) {\n      return [];\n    }\n\n    return Object.values(adminMembersById).sort((a, b) => {\n      if (a.isOwner) {\n        return -1;\n      } else if (b.isOwner) {\n        return 1;\n      }\n\n      return 0;\n    });\n  }, [adminMembersById]);\n\n  const handleAdminMemberClick = useCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.ChatAdminRights);\n  }, [currentUserId, onChatMemberSelect, onScreenSelect]);\n\n  const handleAddAdminClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupAddAdmins);\n  }, [onScreenSelect]);\n\n  const getMemberStatus = useCallback((member: ApiChatMember) => {\n    if (member.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const promotedByUser = member.promotedByUserId ? usersById[member.promotedByUserId] : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  }, [lang]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <ListItem\n            icon=\"recent\"\n            multiline\n            disabled\n          >\n            <span className=\"title\">{lang('EventLog')}</span>\n            <span className=\"subtitle\">{lang(isChannel ? 'EventLogInfoDetailChannel' : 'EventLogInfoDetail')}</span>\n          </ListItem>\n        </div>\n\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"text-muted\" dir=\"auto\">\n            {isChannel\n              ? 'You can add administrators to help you manage your channel.'\n              : 'You can add administrators to help you manage your group.'}\n          </p>\n\n          {adminMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleAdminMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberStatus(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n\n          <FloatingActionButton\n            isShown={canAddNewAdmins}\n            onClick={handleAddAdminClick}\n            ariaLabel={lang('Channel.Management.AddModerator')}\n          >\n            <i className=\"icon icon-add-user-filled\" />\n          </FloatingActionButton>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n\n    return {\n      chat,\n      currentUserId: global.currentUserId,\n      isChannel: isChatChannel(chat),\n      adminMembersById: selectChatFullInfo(global, chatId)?.adminMembersById,\n    };\n  },\n)(ManageChatAdministrators));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiChatAdminRights, ApiChatMember, ApiUser,\n} from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { getUserFullName, isChatBasicGroup, isChatChannel } from '../../../global/helpers';\nimport useLang from '../../../hooks/useLang';\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport Spinner from '../../ui/Spinner';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport InputText from '../../ui/InputText';\n\ntype OwnProps = {\n  chatId: string;\n  selectedUserId?: string;\n  isPromotedByCurrentUser?: boolean;\n  isNewAdmin?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  usersById: Record<string, ApiUser>;\n  adminMembersById?: Record<string, ApiChatMember>;\n  hasFullInfo: boolean;\n  currentUserId?: string;\n  isChannel: boolean;\n  isFormFullyDisabled: boolean;\n  isForum?: boolean;\n  defaultRights?: ApiChatAdminRights;\n};\n\nconst CUSTOM_TITLE_MAX_LENGTH = 16;\n\nconst ManageGroupAdminRights: FC<OwnProps & StateProps> = ({\n  isNewAdmin,\n  selectedUserId,\n  defaultRights,\n  onScreenSelect,\n  chat,\n  usersById,\n  currentUserId,\n  adminMembersById,\n  hasFullInfo,\n  isChannel,\n  isForum,\n  isFormFullyDisabled,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatAdmin } = getActions();\n\n  const [permissions, setPermissions] = useState<ApiChatAdminRights>({});\n  const [isTouched, setIsTouched] = useState(Boolean(isNewAdmin));\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDismissConfirmationDialogOpen, openDismissConfirmationDialog, closeDismissConfirmationDialog] = useFlag();\n  const [customTitle, setCustomTitle] = useState('');\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const selectedChatMember = useMemo(() => {\n    const selectedAdminMember = selectedUserId ? adminMembersById?.[selectedUserId] : undefined;\n\n    // If `selectedAdminMember` variable is filled with a value, then we have already saved the administrator,\n    // so now we need to return to the list of administrators\n    if (isNewAdmin && (selectedAdminMember || !selectedUserId)) {\n      return undefined;\n    }\n\n    if (isNewAdmin) {\n      const user = getGlobal().users.byId[selectedUserId!];\n\n      return user ? {\n        userId: user.id,\n        adminRights: defaultRights,\n        customTitle: lang('ChannelAdmin'),\n        isOwner: false,\n        promotedByUserId: undefined,\n      } : undefined;\n    }\n\n    return selectedAdminMember;\n  }, [adminMembersById, defaultRights, isNewAdmin, lang, selectedUserId]);\n\n  useEffect(() => {\n    if (hasFullInfo && selectedUserId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.ChatAdministrators);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedUserId]);\n\n  useEffect(() => {\n    setPermissions(selectedChatMember?.adminRights || {});\n    setCustomTitle((selectedChatMember?.customTitle || '').substr(0, CUSTOM_TITLE_MAX_LENGTH));\n    setIsTouched(Boolean(isNewAdmin));\n    setIsLoading(false);\n  }, [defaultRights, isNewAdmin, selectedChatMember]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name } = e.target;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    setPermissions((p) => ({\n      ...p,\n      [name]: getUpdatedPermissionValue(p[name as keyof ApiChatAdminRights]),\n    }));\n    setIsTouched(true);\n  }, []);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: permissions,\n      customTitle,\n    });\n  }, [selectedUserId, updateChatAdmin, chat.id, permissions, customTitle]);\n\n  const handleDismissAdmin = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: {},\n    });\n    closeDismissConfirmationDialog();\n  }, [chat.id, closeDismissConfirmationDialog, selectedUserId, updateChatAdmin]);\n\n  const getControlIsDisabled = useCallback((key: keyof ApiChatAdminRights) => {\n    if (isChatBasicGroup(chat)) {\n      return false;\n    }\n\n    if (isFormFullyDisabled || !chat.adminRights) {\n      return true;\n    }\n\n    if (chat.isCreator) {\n      return false;\n    }\n\n    return !chat.adminRights![key];\n  }, [chat, isFormFullyDisabled]);\n\n  const memberStatus = useMemo(() => {\n    if (isNewAdmin || !selectedChatMember) {\n      return undefined;\n    }\n\n    if (selectedChatMember.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    const promotedByUser = selectedChatMember.promotedByUserId\n      ? usersById[selectedChatMember.promotedByUserId]\n      : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  }, [isNewAdmin, selectedChatMember, usersById, lang]);\n\n  const handleCustomTitleChange = useCallback((e) => {\n    const { value } = e.target;\n    setCustomTitle(value);\n    setIsTouched(true);\n  }, []);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo\n              userId={selectedChatMember.userId}\n              status={memberStatus}\n              forceShowSelf\n            />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{lang('EditAdminWhatCanDo')}</h3>\n\n          <div className=\"ListItem no-selection\">\n            <Checkbox\n              name=\"changeInfo\"\n              checked={Boolean(permissions.changeInfo)}\n              label={lang(isChannel ? 'EditAdminChangeChannelInfo' : 'EditAdminChangeGroupInfo')}\n              blocking\n              disabled={getControlIsDisabled('changeInfo')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isChannel && (\n            <div className=\"ListItem no-selection\">\n              <Checkbox\n                name=\"postMessages\"\n                checked={Boolean(permissions.postMessages)}\n                label={lang('EditAdminPostMessages')}\n                blocking\n                disabled={getControlIsDisabled('postMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {isChannel && (\n            <div className=\"ListItem no-selection\">\n              <Checkbox\n                name=\"editMessages\"\n                checked={Boolean(permissions.editMessages)}\n                label={lang('EditAdminEditMessages')}\n                blocking\n                disabled={getControlIsDisabled('editMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem no-selection\">\n            <Checkbox\n              name=\"deleteMessages\"\n              checked={Boolean(permissions.deleteMessages)}\n              label={lang(isChannel ? 'EditAdminDeleteMessages' : 'EditAdminGroupDeleteMessages')}\n              blocking\n              disabled={getControlIsDisabled('deleteMessages')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem no-selection\">\n              <Checkbox\n                name=\"banUsers\"\n                checked={Boolean(permissions.banUsers)}\n                label={lang('EditAdminBanUsers')}\n                blocking\n                disabled={getControlIsDisabled('banUsers')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem no-selection\">\n            <Checkbox\n              name=\"inviteUsers\"\n              checked={Boolean(permissions.inviteUsers)}\n              label={lang('EditAdminAddUsers')}\n              blocking\n              disabled={getControlIsDisabled('inviteUsers')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem no-selection\">\n              <Checkbox\n                name=\"pinMessages\"\n                checked={Boolean(permissions.pinMessages)}\n                label={lang('EditAdminPinMessages')}\n                blocking\n                disabled={getControlIsDisabled('pinMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem no-selection\">\n            <Checkbox\n              name=\"addAdmins\"\n              checked={Boolean(permissions.addAdmins)}\n              label={lang('EditAdminAddAdmins')}\n              blocking\n              disabled={getControlIsDisabled('addAdmins')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem no-selection\">\n            <Checkbox\n              name=\"manageCall\"\n              checked={Boolean(permissions.manageCall)}\n              label={lang('StartVoipChatPermission')}\n              blocking\n              disabled={getControlIsDisabled('manageCall')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isForum && (\n            <div className=\"ListItem no-selection\">\n              <Checkbox\n                name=\"manageTopics\"\n                checked={Boolean(permissions.manageTopics)}\n                label={lang('ManageTopicsPermission')}\n                blocking\n                disabled={getControlIsDisabled('manageTopics')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {!isChannel && (\n            <div className=\"ListItem no-selection\">\n              <Checkbox\n                name=\"anonymous\"\n                checked={Boolean(permissions.anonymous)}\n                label={lang('EditAdminSendAnonymously')}\n                blocking\n                disabled={getControlIsDisabled('anonymous')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n\n          {isFormFullyDisabled && (\n            <p className=\"section-info mb-4\" dir=\"auto\">\n              {lang('Channel.EditAdmin.CannotEdit')}\n            </p>\n          )}\n\n          {!isChannel && (\n            <InputText\n              id=\"admin-title\"\n              label={lang('EditAdminRank')}\n              onChange={handleCustomTitleChange}\n              value={customTitle}\n              disabled={isFormFullyDisabled}\n              maxLength={CUSTOM_TITLE_MAX_LENGTH}\n            />\n          )}\n\n          {currentUserId !== selectedUserId && !isFormFullyDisabled && !isNewAdmin && (\n            <ListItem icon=\"delete\" ripple destructive onClick={openDismissConfirmationDialog}>\n              {lang('EditAdminRemoveAdmin')}\n            </ListItem>\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n\n      {!isNewAdmin && (\n        <ConfirmDialog\n          isOpen={isDismissConfirmationDialogOpen}\n          onClose={closeDismissConfirmationDialog}\n          text=\"Are you sure you want to dismiss this admin?\"\n          confirmLabel={lang('Channel.Admin.Dismiss')}\n          confirmHandler={handleDismissAdmin}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const { byId: usersById } = global.users;\n    const { currentUserId } = global;\n    const isChannel = isChatChannel(chat);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n    const isForum = chat.isForum;\n\n    return {\n      chat,\n      usersById,\n      currentUserId,\n      isChannel,\n      isForum,\n      isFormFullyDisabled,\n      defaultRights: chat.adminRights,\n      hasFullInfo: Boolean(fullInfo),\n      adminMembersById: fullInfo?.adminMembersById,\n    };\n  },\n)(ManageGroupAdminRights));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { unique } from '../../../util/iteratees';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport {\n  sortUserIds, isChatChannel, filterUsersByName, sortChatIds, isUserBot, getHasAdminRight, isChatBasicGroup,\n} from '../../../global/helpers';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport NothingFound from '../../common/NothingFound';\nimport ListItem from '../../ui/ListItem';\nimport InputText from '../../ui/InputText';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport DeleteMemberModal from '../DeleteMemberModal';\nimport Switcher from '../../ui/Switcher';\n\ntype OwnProps = {\n  chatId: string;\n  isActive: boolean;\n  noAdmins?: boolean;\n  onClose: NoneToVoidFunction;\n  onScreenSelect?: (screen: ManagementScreens) => void;\n  onChatMemberSelect?: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n};\n\ntype StateProps = {\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  adminMembersById?: Record<string, ApiChatMember>;\n  isChannel?: boolean;\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localUserIds?: string[];\n  globalUserIds?: string[];\n  currentUserId?: string;\n  canDeleteMembers?: boolean;\n  areParticipantsHidden?: boolean;\n  canHideParticipants?: boolean;\n};\n\nconst ManageGroupMembers: FC<OwnProps & StateProps> = ({\n  chatId,\n  noAdmins,\n  members,\n  adminMembersById,\n  userStatusesById,\n  isChannel,\n  isActive,\n  globalUserIds,\n  localContactIds,\n  localUserIds,\n  isSearching,\n  searchQuery,\n  currentUserId,\n  canDeleteMembers,\n  areParticipantsHidden,\n  canHideParticipants,\n  onClose,\n  onScreenSelect,\n  onChatMemberSelect,\n}) => {\n  const {\n    openChat, setUserSearchQuery, closeManagement, toggleParticipantsHidden,\n  } = getActions();\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [deletingUserId, setDeletingUserId] = useState<string | undefined>();\n\n  const adminIds = useMemo(() => {\n    return noAdmins && adminMembersById ? Object.keys(adminMembersById) : [];\n  }, [adminMembersById, noAdmins]);\n\n  const memberIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!members || !usersById) {\n      return [];\n    }\n\n    const userIds = sortUserIds(\n      members.map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n\n    return noAdmins ? userIds.filter((userId) => !adminIds.includes(userId)) : userIds;\n  }, [members, userStatusesById, noAdmins, adminIds]);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n    const shouldUseSearchResults = Boolean(searchQuery);\n    const listedIds = !shouldUseSearchResults\n      ? memberIds\n      : (localContactIds ? filterUsersByName(localContactIds, usersById, searchQuery) : []);\n\n    return sortChatIds(\n      unique([\n        ...listedIds,\n        ...(shouldUseSearchResults ? localUserIds || [] : []),\n        ...(shouldUseSearchResults ? globalUserIds || [] : []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n        if (!user) {\n          return true;\n        }\n\n        return (isChannel || user.canBeInvitedToGroup || !isUserBot(user))\n          && (!noAdmins || !adminIds.includes(contactId));\n      }),\n      chatsById,\n      true,\n    );\n  }, [memberIds, localContactIds, searchQuery, localUserIds, globalUserIds, isChannel, noAdmins, adminIds]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, displayedIds, Boolean(searchQuery));\n\n  const handleMemberClick = useCallback((id: string) => {\n    if (noAdmins) {\n      onChatMemberSelect!(id, true);\n      onScreenSelect!(ManagementScreens.ChatNewAdminRights);\n    } else {\n      closeManagement();\n      openChat({ id });\n    }\n  }, [closeManagement, noAdmins, onChatMemberSelect, onScreenSelect, openChat]);\n\n  const handleFilterChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserSearchQuery({ query: e.target.value });\n  }, [setUserSearchQuery]);\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      handleMemberClick(viewportIds[index === -1 ? 0 : index]);\n    }\n  }, '.ListItem-button', true);\n\n  const handleDeleteMembersModalClose = useCallback(() => {\n    setDeletingUserId(undefined);\n  }, []);\n\n  const handleToggleParticipantsHidden = useCallback(() => {\n    toggleParticipantsHidden({ chatId, isEnabled: !areParticipantsHidden });\n  }, [areParticipantsHidden, chatId, toggleParticipantsHidden]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function getMemberContextAction(memberId: string) {\n    return memberId === currentUserId || !canDeleteMembers ? undefined : [{\n      title: lang('lng_context_remove_from_group'),\n      icon: 'stop',\n      handler: () => {\n        setDeletingUserId(memberId);\n      },\n    }];\n  }\n\n  function renderSearchField() {\n    return (\n      <div className=\"Management__filter\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <InputText\n          ref={inputRef}\n          value={searchQuery}\n          onChange={handleFilterChange}\n          placeholder={lang('Search')}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      {noAdmins && renderSearchField()}\n      <div className=\"custom-scroll\">\n        {canHideParticipants && (\n          <div className=\"section\">\n            <ListItem icon=\"group\" ripple onClick={handleToggleParticipantsHidden}>\n              <span>{lang('ChannelHideMembers')}</span>\n              <Switcher label={lang('ChannelHideMembers')} checked={areParticipantsHidden} />\n            </ListItem>\n            <p className=\"section-info\">\n              {lang(areParticipantsHidden ? 'GroupMembers.MembersHiddenOn' : 'GroupMembers.MembersHiddenOff')}\n            </p>\n          </div>\n        )}\n        <div className=\"section\">\n          {viewportIds?.length ? (\n            <InfiniteScroll\n              className=\"picker-list custom-scroll\"\n              items={displayedIds}\n              onLoadMore={getMore}\n              noScrollRestore={Boolean(searchQuery)}\n              ref={containerRef}\n              onKeyDown={handleKeyDown}\n            >\n              {viewportIds.map((id) => (\n                <ListItem\n                  key={id}\n                  className=\"chat-item-clickable scroll-item\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => handleMemberClick(id)}\n                  contextActions={getMemberContextAction(id)}\n                >\n                  <PrivateChatInfo userId={id} forceShowSelf />\n                </ListItem>\n              ))}\n            </InfiniteScroll>\n          ) : !isSearching && viewportIds && !viewportIds.length ? (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          ) : (\n            <Loading />\n          )}\n        </div>\n      </div>\n      {canDeleteMembers && (\n        <DeleteMemberModal\n          isOpen={Boolean(deletingUserId)}\n          userId={deletingUserId}\n          onClose={handleDeleteMembersModalClose}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { statusesById: userStatusesById } = global.users;\n    const { members, adminMembersById, areParticipantsHidden } = selectChatFullInfo(global, chatId) || {};\n    const isChannel = chat && isChatChannel(chat);\n    const { userIds: localContactIds } = global.contactList || {};\n    const hiddenMembersMinCount = global.appConfig?.hiddenMembersMinCount;\n\n    const canDeleteMembers = chat && (chat.isCreator || getHasAdminRight(chat, 'banUsers'));\n\n    const canHideParticipants = canDeleteMembers && !isChatBasicGroup(chat) && chat.membersCount !== undefined\n    && hiddenMembersMinCount !== undefined && chat.membersCount >= hiddenMembersMinCount;\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalUserIds,\n      localUserIds,\n    } = selectTabState(global).userSearch;\n\n    return {\n      areParticipantsHidden: Boolean(chat && areParticipantsHidden),\n      members,\n      adminMembersById,\n      userStatusesById,\n      isChannel,\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus,\n      globalUserIds,\n      localUserIds,\n      canDeleteMembers,\n      currentUserId: global.currentUserId,\n      canHideParticipants,\n    };\n  },\n)(ManageGroupMembers));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUser, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { sortUserIds, isChatChannel } from '../../../global/helpers';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\nimport NothingFound from '../../common/NothingFound';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  isChannel?: boolean;\n};\n\nconst ManageGroupUserPermissionsCreate: FC<OwnProps & StateProps> = ({\n  usersById,\n  userStatusesById,\n  members,\n  isChannel,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n}) => {\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const memberIds = useMemo(() => {\n    if (!members || !usersById) {\n      return undefined;\n    }\n\n    return sortUserIds(\n      members.filter((member) => !member.isOwner).map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n  }, [members, usersById, userStatusesById]);\n\n  const handleExceptionMemberClick = useCallback((memberId: string) => {\n    onChatMemberSelect(memberId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [onChatMemberSelect, onScreenSelect]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" teactFastList>\n          {memberIds ? (\n            memberIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleExceptionMemberClick(id)}\n              >\n                <PrivateChatInfo userId={id} forceShowSelf />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n    const members = selectChatFullInfo(global, chatId)?.members;\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      members,\n      usersById,\n      userStatusesById,\n      isChannel,\n    };\n  },\n)(ManageGroupUserPermissionsCreate));\n","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiChat, ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_INVITES, TME_LINK_PREFIX } from '../../../config';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport { formatCountdown, MILLISECONDS_IN_DAY } from '../../../util/dateFormat';\nimport { getMainUsername, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { getServerTime } from '../../../util/serverTime';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useInterval from '../../../hooks/useInterval';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useFlag from '../../../hooks/useFlag';\n\nimport ListItem from '../../ui/ListItem';\nimport NothingFound from '../../common/NothingFound';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport InviteLink from '../../common/InviteLink';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  revokedExportedInvites?: ApiExportedInvite[];\n};\n\nconst BULLET = '\\u2022';\n\nfunction inviteComparator(i1: ApiExportedInvite, i2: ApiExportedInvite) {\n  const { isPermanent: i1IsPermanent, usage: i1Usage = 0, date: i1Date } = i1;\n  const { isPermanent: i2IsPermanent, usage: i2Usage = 0, date: i2Date } = i2;\n  if (i1IsPermanent || i2IsPermanent) return Number(i1IsPermanent) - Number(i2IsPermanent);\n  if (i1Usage || i2Usage) return i2Usage - i1Usage;\n  return i2Date - i1Date;\n}\n\nconst ManageInvites: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  exportedInvites,\n  revokedExportedInvites,\n  isActive,\n  isChannel,\n  onClose,\n  onScreenSelect,\n}) => {\n  const {\n    setEditingExportedInvite,\n    showNotification,\n    editExportedChatInvite,\n    deleteExportedChatInvite,\n    deleteRevokedExportedChatInvites,\n    setOpenedInviteInfo,\n  } = getActions();\n\n  const lang = useLang();\n\n  const [isDeleteRevokeAllDialogOpen, openDeleteRevokeAllDialog, closeDeleteRevokeAllDialog] = useFlag();\n  const [isRevokeDialogOpen, openRevokeDialog, closeRevokeDialog] = useFlag();\n  const [revokingInvite, setRevokingInvite] = useState<ApiExportedInvite | undefined>();\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [deletingInvite, setDeletingInvite] = useState<ApiExportedInvite | undefined>();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const hasDetailedCountdown = useMemo(() => {\n    if (!exportedInvites) return undefined;\n    return exportedInvites\n      .some(({ expireDate }) => (\n        expireDate && (expireDate - getServerTime() < MILLISECONDS_IN_DAY / 1000)\n      ));\n  }, [exportedInvites]);\n  const forceUpdate = useForceUpdate();\n  useInterval(() => {\n    forceUpdate();\n  }, hasDetailedCountdown ? 1000 : undefined);\n\n  const chatMainUsername = useMemo(() => chat && getMainUsername(chat), [chat]);\n  const primaryInvite = exportedInvites?.find(({ isPermanent }) => isPermanent);\n  const primaryInviteLink = chatMainUsername ? `${TME_LINK_PREFIX}${chatMainUsername}` : primaryInvite?.link;\n  const temporalInvites = useMemo(() => {\n    const invites = chat?.usernames ? exportedInvites : exportedInvites?.filter(({ isPermanent }) => !isPermanent);\n    return invites?.sort(inviteComparator);\n  }, [chat?.usernames, exportedInvites]);\n\n  const editInvite = (invite: ApiExportedInvite) => {\n    setEditingExportedInvite({ chatId, invite });\n    onScreenSelect(ManagementScreens.EditInvite);\n  };\n\n  const revokeInvite = useCallback((invite: ApiExportedInvite) => {\n    const {\n      link, title, isRequestNeeded, expireDate, usageLimit,\n    } = invite;\n    editExportedChatInvite({\n      chatId,\n      link,\n      title,\n      isRequestNeeded,\n      expireDate,\n      usageLimit,\n      isRevoked: true,\n    });\n  }, [chatId, editExportedChatInvite]);\n\n  const askToRevoke = useCallback((invite: ApiExportedInvite) => {\n    setRevokingInvite(invite);\n    openRevokeDialog();\n  }, [openRevokeDialog]);\n\n  const handleRevoke = useCallback(() => {\n    if (!revokingInvite) return;\n    revokeInvite(revokingInvite);\n    setRevokingInvite(undefined);\n    closeRevokeDialog();\n  }, [closeRevokeDialog, revokeInvite, revokingInvite]);\n\n  const handleCreateNewClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.EditInvite);\n  }, [onScreenSelect]);\n\n  const handlePrimaryRevoke = useCallback(() => {\n    if (primaryInvite) {\n      askToRevoke(primaryInvite);\n    }\n  }, [askToRevoke, primaryInvite]);\n\n  const handleDeleteAllRevoked = useCallback(() => {\n    deleteRevokedExportedChatInvites({ chatId });\n    closeDeleteRevokeAllDialog();\n  }, [chatId, closeDeleteRevokeAllDialog, deleteRevokedExportedChatInvites]);\n\n  const showInviteInfo = useCallback((invite: ApiExportedInvite) => {\n    setOpenedInviteInfo({ chatId, invite });\n    onScreenSelect(ManagementScreens.InviteInfo);\n  }, [chatId, onScreenSelect, setOpenedInviteInfo]);\n\n  const deleteInvite = useCallback((invite: ApiExportedInvite) => {\n    deleteExportedChatInvite({ chatId, link: invite.link });\n  }, [chatId, deleteExportedChatInvite]);\n\n  const askToDelete = useCallback((invite: ApiExportedInvite) => {\n    setDeletingInvite(invite);\n    openDeleteDialog();\n  }, [openDeleteDialog]);\n\n  const handleDelete = useCallback(() => {\n    if (!deletingInvite) return;\n    deleteInvite(deletingInvite);\n    setDeletingInvite(undefined);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, deleteInvite, deletingInvite]);\n\n  const copyLink = useCallback((link: string) => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [lang, showNotification]);\n\n  const prepareUsageText = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, expireDate, isPermanent, requested, isRevoked,\n    } = invite;\n    let text = '';\n    if (!isRevoked && usageLimit && usage < usageLimit) {\n      text = lang('CanJoin', usageLimit - usage);\n    } else if (usage) {\n      text = lang('PeopleJoined', usage);\n    } else {\n      text = lang('NoOneJoined');\n    }\n\n    if (isRevoked) {\n      text += ` ${BULLET} ${lang('Revoked')}`;\n      return text;\n    }\n\n    if (requested) {\n      text += ` ${BULLET} ${lang('JoinRequests', requested)}`;\n    }\n\n    if (usageLimit !== undefined && usage === usageLimit) {\n      text += ` ${BULLET} ${lang('LinkLimitReached')}`;\n    } else if (expireDate) {\n      const diff = (expireDate - getServerTime()) * 1000;\n      text += ` ${BULLET} `;\n      if (diff > 0) {\n        text += lang('InviteLink.ExpiresIn', formatCountdown(lang, diff));\n      } else {\n        text += lang('InviteLink.Expired');\n      }\n    } else if (isPermanent) {\n      text += ` ${BULLET} ${lang('Permanent')}`;\n    }\n\n    return text;\n  };\n\n  const getInviteIconClass = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, isRevoked, expireDate,\n    } = invite;\n    if (isRevoked) {\n      return 'link-status-icon-gray';\n    }\n    if (usageLimit && usage < usageLimit) {\n      return 'link-status-icon-green';\n    }\n    if (expireDate) {\n      const diff = (expireDate - getServerTime()) * 1000;\n      if (diff <= 0) {\n        return 'link-status-icon-red';\n      }\n    }\n    return 'link-status-icon-blue';\n  };\n\n  const prepareContextActions = (invite: ApiExportedInvite) => {\n    const actions = [];\n    actions.push({\n      title: lang('Copy'),\n      icon: 'copy',\n      handler: () => copyLink(invite.link),\n    });\n\n    if (!invite.isPermanent && !invite.isRevoked) {\n      actions.push({\n        title: lang('Edit'),\n        icon: 'edit',\n        handler: () => editInvite(invite),\n      });\n    }\n\n    if (!invite.isRevoked) {\n      actions.push({\n        title: lang('RevokeButton'),\n        icon: 'delete',\n        handler: () => askToRevoke(invite),\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        title: lang('DeleteLink'),\n        icon: 'delete',\n        handler: () => askToDelete(invite),\n        destructive: true,\n      });\n    }\n    return actions;\n  };\n\n  return (\n    <div className=\"Management ManageInvites\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.Invite}\n            size={STICKER_SIZE_INVITES}\n            className=\"section-icon\"\n          />\n          <p className=\"text-muted\">{isChannel ? lang('PrimaryLinkHelpChannel') : lang('PrimaryLinkHelp')}</p>\n        </div>\n        {primaryInviteLink && (\n          <InviteLink\n            inviteLink={primaryInviteLink}\n            onRevoke={!chat?.usernames ? handlePrimaryRevoke : undefined}\n            title={chat?.usernames ? lang('PublicLink') : lang('lng_create_permanent_link_title')}\n          />\n        )}\n        <div className=\"section\" teactFastList>\n          <Button isText key=\"create\" className=\"create-link\" onClick={handleCreateNewClick}>\n            {lang('CreateNewLink')}\n          </Button>\n          {(!temporalInvites || !temporalInvites.length) && <NothingFound text=\"No links found\" key=\"nothing\" />}\n          {temporalInvites?.map((invite) => (\n            <ListItem\n              leftElement={<i className={`icon icon-link link-status-icon ${getInviteIconClass(invite)}`} />}\n              secondaryIcon=\"more\"\n              multiline\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => showInviteInfo(invite)}\n              contextActions={prepareContextActions(invite)}\n              key={invite.link}\n            >\n              <span className=\"title invite-title\">{invite.title || invite.link}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {prepareUsageText(invite)}\n              </span>\n            </ListItem>\n          ))}\n          <p className=\"text-muted hint\" key=\"links-hint\">{lang('ManageLinksInfoHelp')}</p>\n        </div>\n        {revokedExportedInvites && Boolean(revokedExportedInvites.length) && (\n          <div className=\"section\" teactFastList>\n            <p className=\"text-muted\" key=\"title\">{lang('RevokedLinks')}</p>\n            <ListItem\n              icon=\"delete\"\n              destructive\n              key=\"delete\"\n              onClick={openDeleteRevokeAllDialog}\n            >\n              <span className=\"title\">{lang('DeleteAllRevokedLinks')}</span>\n            </ListItem>\n            {revokedExportedInvites?.map((invite) => (\n              <ListItem\n                leftElement={<i className={`icon icon-link link-status-icon ${getInviteIconClass(invite)}`} />}\n                secondaryIcon=\"more\"\n                multiline\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => showInviteInfo(invite)}\n                contextActions={prepareContextActions(invite)}\n                key={invite.link}\n              >\n                <span className=\"title\">{invite.title || invite.link}</span>\n                <span className=\"subtitle\" dir=\"auto\">\n                  {prepareUsageText(invite)}\n                </span>\n              </ListItem>\n            ))}\n          </div>\n        )}\n      </div>\n      <ConfirmDialog\n        isOpen={isDeleteRevokeAllDialogOpen}\n        onClose={closeDeleteRevokeAllDialog}\n        title={lang('DeleteAllRevokedLinks')}\n        text={lang('DeleteAllRevokedLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={lang('DeleteAll')}\n        confirmHandler={handleDeleteAllRevoked}\n      />\n      <ConfirmDialog\n        isOpen={isRevokeDialogOpen}\n        onClose={closeRevokeDialog}\n        title={lang('RevokeLink')}\n        text={lang('RevokeAlert')}\n        confirmIsDestructive\n        confirmLabel={lang('RevokeButton')}\n        confirmHandler={handleRevoke}\n      />\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        title={lang('DeleteLink')}\n        text={lang('DeleteLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={lang('Delete')}\n        confirmHandler={handleDelete}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { invites, revokedInvites } = selectTabState(global).management.byChatId[chatId];\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      exportedInvites: invites,\n      revokedExportedInvites: revokedInvites,\n      chat,\n      isChannel,\n    };\n  },\n)(ManageInvites));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport { formatFullDate, formatTime } from '../../../util/dateFormat';\nimport useFlag from '../../../hooks/useFlag';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InputText from '../../ui/InputText';\nimport RadioGroup from '../../ui/RadioGroup';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\nimport CalendarModal from '../../common/CalendarModal';\n\nconst DEFAULT_USAGE_LIMITS = [1, 10, 100];\nconst DEFAULT_EXPIRE_DATE = {\n  hour: 3600000,\n  day: 86400000,\n  week: 604800000,\n};\nconst DEFAULT_CUSTOM_EXPIRE_DATE = DEFAULT_EXPIRE_DATE.hour;\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  editingInvite?: ApiExportedInvite;\n};\n\nconst ManageInvite: FC<OwnProps & StateProps> = ({\n  chatId,\n  editingInvite,\n  isActive,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { editExportedChatInvite, exportChatInvite } = getActions();\n\n  const lang = useLang();\n  const [isCalendarOpened, openCalendar, closeCalendar] = useFlag();\n  const [isRequestNeeded, setIsRequestNeeded] = useState(false);\n  const [title, setTitle] = useState('');\n  const [customExpireDate, setCustomExpireDate] = useState<number>(Date.now() + DEFAULT_CUSTOM_EXPIRE_DATE);\n  const [selectedExpireOption, setSelectedExpireOption] = useState('unlimited');\n  const [customUsageLimit, setCustomUsageLimit] = useState<number | undefined>(10);\n  const [selectedUsageOption, setSelectedUsageOption] = useState('0');\n  const [isSubmitBlocked, setIsSubmitBlocked] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useSyncEffect(([oldEditingInvite]) => {\n    if (oldEditingInvite === editingInvite) return;\n    if (!editingInvite) {\n      setTitle('');\n      setSelectedExpireOption('unlimited');\n      setSelectedUsageOption('0');\n      setCustomExpireDate(getServerTime() * 1000 + DEFAULT_CUSTOM_EXPIRE_DATE);\n      setCustomUsageLimit(10);\n      setIsRequestNeeded(false);\n    } else {\n      const {\n        title: editingTitle, usageLimit, expireDate, isRequestNeeded: editingIsRequestNeeded,\n      } = editingInvite;\n      if (editingTitle) setTitle(editingTitle);\n      if (usageLimit) {\n        setSelectedUsageOption(DEFAULT_USAGE_LIMITS.includes(usageLimit) ? usageLimit.toString() : 'custom');\n        setCustomUsageLimit(usageLimit);\n      }\n      if (expireDate) {\n        const minSafeDate = getServerTime() + DEFAULT_CUSTOM_EXPIRE_DATE;\n        setSelectedExpireOption('custom');\n        setCustomExpireDate(Math.max(expireDate, minSafeDate) * 1000);\n      }\n      if (editingIsRequestNeeded) {\n        setIsRequestNeeded(true);\n      }\n    }\n  }, [editingInvite]);\n\n  const handleIsRequestChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsRequestNeeded(e.target.checked);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleCustomUsageLimitChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setCustomUsageLimit(Number.parseInt(e.target.value, 10));\n  }, []);\n\n  const handleExpireDateChange = useCallback((date: Date) => {\n    setCustomExpireDate(date.getTime());\n    closeCalendar();\n  }, [closeCalendar]);\n\n  const handleSaveClick = useCallback(() => {\n    setIsSubmitBlocked(true);\n    const usageLimit = selectedUsageOption === 'custom' ? customUsageLimit : Number(selectedUsageOption);\n    let expireDate;\n    switch (selectedExpireOption) {\n      case 'custom':\n        expireDate = getServerTime() + (customExpireDate - Date.now()) / 1000;\n        break;\n      case 'hour':\n      case 'day':\n      case 'week':\n        expireDate = getServerTime() + DEFAULT_EXPIRE_DATE[selectedExpireOption] / 1000;\n        break;\n      case 'unlimited':\n        expireDate = 0;\n        break;\n      default:\n        expireDate = undefined;\n    }\n\n    if (editingInvite) {\n      editExportedChatInvite({\n        link: editingInvite.link,\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    } else {\n      exportChatInvite({\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    }\n    onScreenSelect(ManagementScreens.Invites);\n  }, [\n    chatId, customExpireDate, customUsageLimit, editExportedChatInvite, editingInvite,\n    exportChatInvite, isRequestNeeded, selectedExpireOption, selectedUsageOption, title, onScreenSelect,\n  ]);\n\n  return (\n    <div className=\"Management ManageInvite\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <Checkbox\n            label={lang('ApproveNewMembers')}\n            subLabel={lang('ApproveNewMembersDescription')}\n            checked={isRequestNeeded}\n            onChange={handleIsRequestChange}\n          />\n        </div>\n        <div className=\"section\">\n          <InputText\n            className=\"link-name\"\n            placeholder={lang('LinkNameHint')}\n            value={title}\n            onChange={handleTitleChange}\n          />\n          <p className=\"text-muted hint\">{lang('LinkNameHelp')}</p>\n        </div>\n        <div className=\"section\">\n          <div className=\"section-header\">{lang('LimitByPeriod')}</div>\n          <RadioGroup\n            name=\"expireOptions\"\n            options={[\n              {\n                value: 'hour',\n                label: lang('Hours', 1),\n              },\n              {\n                value: 'day',\n                label: lang('Days', 1),\n              },\n              {\n                value: 'week',\n                label: lang('Weeks', 1),\n              },\n              {\n                value: 'unlimited',\n                label: lang('NoLimit'),\n              },\n              {\n                value: 'custom',\n                label: lang('lng_group_invite_expire_custom'),\n              },\n            ]}\n            onChange={setSelectedExpireOption}\n            selected={selectedExpireOption}\n          />\n          {selectedExpireOption === 'custom' && (\n            <Button className=\"expire-limit\" isText onClick={openCalendar}>\n              {formatFullDate(lang, customExpireDate)} {formatTime(lang, customExpireDate)}\n            </Button>\n          )}\n          <p className=\"text-muted hint\">{lang('TimeLimitHelp')}</p>\n        </div>\n        {!isRequestNeeded && (\n          <div className=\"section\">\n            <div className=\"section-header\">{lang('LimitNumberOfUses')}</div>\n            <RadioGroup\n              name=\"usageOptions\"\n              options={[\n                ...DEFAULT_USAGE_LIMITS.map((n) => ({ value: n.toString(), label: n })),\n                {\n                  value: '0',\n                  label: lang('NoLimit'),\n                },\n                {\n                  value: 'custom',\n                  label: lang('lng_group_invite_usage_custom'),\n                },\n              ]}\n              onChange={setSelectedUsageOption}\n              selected={selectedUsageOption}\n            />\n            {selectedUsageOption === 'custom' && (\n              <input\n                className=\"form-control usage-limit\"\n                type=\"number\"\n                min=\"1\"\n                max=\"99999\"\n                value={customUsageLimit}\n                onChange={handleCustomUsageLimitChange}\n              />\n            )}\n            <p className=\"text-muted hint\">{lang('UsesLimitHelp')}</p>\n          </div>\n        )}\n        <FloatingActionButton\n          isShown\n          onClick={handleSaveClick}\n          disabled={isSubmitBlocked}\n          ariaLabel={editingInvite ? lang('SaveLink') : lang('CreateLink')}\n        >\n          <i className=\"icon icon-check\" />\n        </FloatingActionButton>\n      </div>\n      <CalendarModal\n        isOpen={isCalendarOpened}\n        isFutureMode\n        withTimePicker\n        onClose={closeCalendar}\n        onSubmit={handleExpireDateChange}\n        selectedAt={customExpireDate}\n        submitButtonLabel={lang('Save')}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { editingInvite } = selectTabState(global).management.byChatId[chatId];\n\n    return {\n      editingInvite,\n    };\n  },\n)(ManageInvite));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatReactions, ApiReaction,\n} from '../../../api/types';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ReactionStaticEmoji from '../../common/ReactionStaticEmoji';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport Spinner from '../../ui/Spinner';\nimport RadioGroup from '../../ui/RadioGroup';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  availableReactions?: ApiAvailableReaction[];\n  enabledReactions?: ApiChatReactions;\n};\n\nconst ManageReactions: FC<OwnProps & StateProps> = ({\n  availableReactions,\n  enabledReactions,\n  chat,\n  isActive,\n  onClose,\n}) => {\n  const { setChatEnabledReactions } = getActions();\n\n  const lang = useLang();\n  const [isTouched, setIsTouched] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [localEnabledReactions, setLocalEnabledReactions] = useState<ApiChatReactions | undefined>(enabledReactions);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const reactionsOptions = useMemo(() => [{\n    value: 'all',\n    label: lang('AllReactions'),\n  }, {\n    value: 'some',\n    label: lang('SomeReactions'),\n  }, {\n    value: 'none',\n    label: lang('NoReactions'),\n  }], [lang]);\n\n  const handleSaveReactions = useCallback(() => {\n    if (!chat) return;\n    setIsLoading(true);\n\n    setChatEnabledReactions({\n      chatId: chat.id,\n      enabledReactions: localEnabledReactions,\n    });\n  }, [chat, localEnabledReactions, setChatEnabledReactions]);\n\n  useEffect(() => {\n    setIsLoading(false);\n    setIsTouched(false);\n    setLocalEnabledReactions(enabledReactions);\n  }, [enabledReactions]);\n\n  const availableActiveReactions = useMemo<ApiAvailableReaction[] | undefined>(\n    () => availableReactions?.filter(({ isInactive }) => !isInactive),\n    [availableReactions],\n  );\n\n  const handleReactionsOptionChange = useCallback((value: string) => {\n    if (value === 'all') {\n      setLocalEnabledReactions({ type: 'all' });\n    } else if (value === 'some') {\n      setLocalEnabledReactions({\n        type: 'some',\n        allowed: enabledReactions?.type === 'some' ? enabledReactions.allowed : [],\n      });\n    } else {\n      setLocalEnabledReactions(undefined);\n    }\n    setIsTouched(true);\n  }, [enabledReactions]);\n\n  const handleReactionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (!chat || !availableActiveReactions) return;\n\n    const { name, checked } = e.currentTarget;\n    if (localEnabledReactions?.type === 'some') {\n      const reaction = { emoticon: name } as ApiReaction;\n      if (checked) {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: [...localEnabledReactions.allowed, reaction],\n        });\n      } else {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: localEnabledReactions.allowed.filter((local) => !isSameReaction(local, reaction)),\n        });\n      }\n    }\n    setIsTouched(true);\n  }, [availableActiveReactions, chat, localEnabledReactions]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <h3 className=\"section-heading\">\n            {lang('AvailableReactions')}\n          </h3>\n          <RadioGroup\n            selected={localEnabledReactions?.type || 'none'}\n            name=\"reactions\"\n            options={reactionsOptions}\n            onChange={handleReactionsOptionChange}\n          />\n          <p className=\"section-info mt-4\">\n            {localEnabledReactions?.type === 'all' && lang('EnableAllReactionsInfo')}\n            {localEnabledReactions?.type === 'some' && lang('EnableSomeReactionsInfo')}\n            {!localEnabledReactions && lang('DisableReactionsInfo')}\n          </p>\n        </div>\n        {localEnabledReactions?.type === 'some' && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">\n              {lang('AvailableReactions')}\n            </h3>\n            {availableActiveReactions?.map(({ reaction, title }) => (\n              <div className=\"ListItem no-selection\">\n                <Checkbox\n                  name={reaction.emoticon}\n                  checked={localEnabledReactions?.allowed.some((r) => isSameReaction(reaction, r))}\n                  label={(\n                    <div className=\"Reaction\">\n                      <ReactionStaticEmoji reaction={reaction} availableReactions={availableReactions} />\n                      {title}\n                    </div>\n                  )}\n                  onChange={handleReactionChange}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSaveReactions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n\n    return {\n      enabledReactions: selectChatFullInfo(global, chatId)?.enabledReactions,\n      availableReactions: global.availableReactions,\n      chat,\n    };\n  },\n)(ManageReactions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatInviteImporter, ApiExportedInvite, ApiUser } from '../../../api/types';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { getServerTime } from '../../../util/serverTime';\nimport { formatFullDate, formatMediaDateTime, formatTime } from '../../../util/dateFormat';\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\nimport Button from '../../ui/Button';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  invite?: ApiExportedInvite;\n  importers?: ApiChatInviteImporter[];\n  requesters?: ApiChatInviteImporter[];\n  admin?: ApiUser;\n  isChannel?: boolean;\n};\n\nconst BULLET = '\\u2022';\n\nconst ManageInviteInfo: FC<OwnProps & StateProps> = ({\n  chatId,\n  invite,\n  importers,\n  requesters,\n  isChannel,\n  isActive,\n  onClose,\n}) => {\n  const {\n    showNotification,\n    loadChatInviteImporters,\n    loadChatInviteRequesters,\n    openChat,\n  } = getActions();\n\n  const lang = useLang();\n  const {\n    usage = 0, usageLimit, link, adminId,\n  } = invite || {};\n  const expireDate = invite?.expireDate && (invite.expireDate - getServerTime()) * 1000 + Date.now();\n  const isExpired = ((invite?.expireDate || 0) - getServerTime()) < 0;\n\n  useEffect(() => {\n    if (link) {\n      loadChatInviteImporters({ chatId, link });\n      loadChatInviteRequesters({ chatId, link });\n    }\n  }, [chatId, link, loadChatInviteImporters, loadChatInviteRequesters]);\n\n  const handleCopyClicked = useCallback(() => {\n    copyTextToClipboard(invite!.link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [invite, lang, showNotification]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const renderImporters = () => {\n    if (!importers?.length && requesters?.length) return undefined;\n    if (!importers) return <Spinner />;\n    return (\n      <div className=\"section\">\n        <p>{importers.length ? lang('PeopleJoined', usage) : lang('NoOneJoined')}</p>\n        <p className=\"text-muted\">\n          {!importers.length && (\n            usageLimit ? lang('PeopleCanJoinViaLinkCount', usageLimit - usage) : lang('NoOneJoinedYet')\n          )}\n          {importers.map((importer) => {\n            const joinTime = formatMediaDateTime(lang, importer.date * 1000, true);\n            const status = importer.isFromChatList ? `${joinTime} ${BULLET} ${lang('JoinedViaFolder')}` : joinTime;\n            return (\n              <ListItem\n                className=\"chat-item-clickable scroll-item small-icon\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => openChat({ id: importer.userId })}\n              >\n                <PrivateChatInfo\n                  userId={importer.userId}\n                  status={status}\n                  forceShowSelf\n                />\n              </ListItem>\n            );\n          })}\n        </p>\n      </div>\n    );\n  };\n\n  const renderRequesters = () => {\n    if (invite?.isRevoked) return undefined;\n    if (!requesters && importers) return <Spinner />;\n    if (!requesters?.length) return undefined;\n    return (\n      <div className=\"section\">\n        <p>{isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}</p>\n        <p className=\"text-muted\">\n          {requesters.map((requester) => (\n            <ListItem\n              className=\"chat-item-clickable scroll-item small-icon\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openChat({ id: requester.userId })}\n            >\n              <PrivateChatInfo\n                userId={requester.userId}\n                status={formatMediaDateTime(lang, requester.date * 1000, true)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </p>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"Management ManageInviteInfo\">\n      <div className=\"custom-scroll\">\n        {!invite && (\n          <p className=\"text-muted\">{lang('Loading')}</p>\n        )}\n        {invite && (\n          <>\n            <div className=\"section\">\n              <h3 className=\"link-title\">{invite.title || invite.link}</h3>\n              <input\n                className=\"form-control\"\n                value={invite.link}\n                readOnly\n                onClick={handleCopyClicked}\n              />\n              <Button className=\"copy-link\" onClick={handleCopyClicked}>{lang('CopyLink')}</Button>\n              {Boolean(expireDate) && (\n                <p className=\"text-muted\">\n                  {isExpired\n                    ? lang('ExpiredLink')\n                    : lang('LinkExpiresIn', `${formatFullDate(lang, expireDate)} ${formatTime(lang, expireDate)}`)}\n                </p>\n              )}\n            </div>\n            {adminId && (\n              <div className=\"section\">\n                <p>{lang('LinkCreatedeBy')}</p>\n                <ListItem\n                  className=\"chat-item-clickable scroll-item small-icon\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => openChat({ id: adminId })}\n                >\n                  <PrivateChatInfo\n                    userId={adminId}\n                    status={formatMediaDateTime(lang, invite.date * 1000, true)}\n                    forceShowSelf\n                  />\n                </ListItem>\n              </div>\n            )}\n            {renderImporters()}\n            {renderRequesters()}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { inviteInfo } = selectTabState(global).management.byChatId[chatId];\n    const { invite, importers, requesters } = inviteInfo || {};\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      invite,\n      importers,\n      requesters,\n      isChannel,\n    };\n  },\n)(ManageInviteInfo));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { formatHumanDate, formatTime, isToday } from '../../../util/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { createClassNameBuilder } from '../../../util/buildClassName';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\n\nimport './JoinRequest.scss';\n\ntype OwnProps = {\n  userId: string;\n  about?: string;\n  isChannel?: boolean;\n  date: number;\n  chatId: string;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\nconst JoinRequest: FC<OwnProps & StateProps> = ({\n  userId,\n  chatId,\n  about,\n  date,\n  isChannel,\n  user,\n}) => {\n  const { openChat, hideChatJoinRequest } = getActions();\n\n  const buildClassName = createClassNameBuilder('JoinRequest');\n  const lang = useLang();\n\n  const fullName = getUserFullName(user);\n  const fixedDate = (date - getServerTime()) * 1000 + Date.now();\n\n  const dateString = isToday(new Date(fixedDate))\n    ? formatTime(lang, fixedDate) : formatHumanDate(lang, fixedDate, true, false, true);\n\n  const handleUserClick = () => {\n    openChat({ id: userId });\n  };\n\n  const handleAcceptRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: true });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  const handleRejectRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: false });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  return (\n    <div className={buildClassName('&')}>\n      <div className={buildClassName('top')}>\n        <div className={buildClassName('user')} onClick={handleUserClick}>\n          <Avatar\n            key={userId}\n            size=\"medium\"\n            user={user}\n          />\n          <div className={buildClassName('user-info')}>\n            <div className={buildClassName('user-name')}>{fullName}</div>\n            <div className={buildClassName('user-subtitle')}>{about}</div>\n          </div>\n        </div>\n        <div className={buildClassName('date')}>{dateString}</div>\n      </div>\n      <div className={buildClassName('buttons')}>\n        <Button className={buildClassName('button')} onClick={handleAcceptRequest}>\n          {isChannel ? lang('ChannelAddToChannel') : lang('ChannelAddToGroup')}\n        </Button>\n        <Button className={buildClassName('button')} isText onClick={handleRejectRequest}>\n          {lang('DismissRequest')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n\n    return {\n      user,\n    };\n  },\n)(JoinRequest));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport { STICKER_SIZE_JOIN_REQUESTS } from '../../../config';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { selectChat } from '../../../global/selectors';\nimport { isChatChannel, isUserId } from '../../../global/helpers';\nimport useLang from '../../../hooks/useLang';\nimport useFlag from '../../../hooks/useFlag';\n\nimport JoinRequest from './JoinRequest';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Spinner from '../../ui/Spinner';\nimport AnimatedIcon from '../../common/AnimatedIcon';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n};\n\nconst ManageJoinRequests: FC<OwnProps & StateProps> = ({\n  chat,\n  chatId,\n  isActive,\n  isChannel,\n  onClose,\n}) => {\n  const { hideAllChatJoinRequests, loadChatJoinRequests } = getActions();\n  const [isAcceptAllDialogOpen, openAcceptAllDialog, closeAcceptAllDialog] = useFlag();\n  const [isRejectAllDialogOpen, openRejectAllDialog, closeRejectAllDialog] = useFlag();\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!chat?.joinRequests && !isUserId(chatId)) {\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chat, chatId, loadChatJoinRequests]);\n\n  const handleAcceptAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: true });\n    closeAcceptAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeAcceptAllDialog]);\n\n  const handleRejectAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: false });\n    closeRejectAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeRejectAllDialog]);\n\n  return (\n    <div className=\"Management ManageJoinRequests\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.JoinRequest}\n            size={STICKER_SIZE_JOIN_REQUESTS}\n            className=\"section-icon\"\n          />\n          {Boolean(chat?.joinRequests?.length) && (\n            <div className=\"bulk-actions\">\n              <Button className=\"bulk-action-button\" onClick={openAcceptAllDialog}>Accept all</Button>\n              <Button className=\"bulk-action-button\" onClick={openRejectAllDialog} isText>Dismiss all</Button>\n            </div>\n          )}\n        </div>\n        <div className=\"section\" teactFastList>\n          <p key=\"title\">\n            {!chat?.joinRequests ? lang('Loading') : chat.joinRequests.length\n              ? lang('JoinRequests', chat.joinRequests.length) : lang('NoMemberRequests')}\n          </p>\n          {!chat?.joinRequests && (\n            <Spinner key=\"loading\" />\n          )}\n          {chat?.joinRequests?.length === 0 && (\n            <p className=\"text-muted\" key=\"empty\">\n              {isChannel ? lang('NoSubscribeRequestsDescription') : lang('NoMemberRequestsDescription')}\n            </p>\n          )}\n          {chat?.joinRequests?.map(({ userId, about, date }) => (\n            <JoinRequest\n              userId={userId}\n              about={about}\n              date={date}\n              isChannel={isChannel}\n              chatId={chatId}\n              key={userId}\n            />\n          ))}\n        </div>\n      </div>\n      <ConfirmDialog\n        isOpen={isAcceptAllDialogOpen}\n        onClose={closeAcceptAllDialog}\n        title=\"Accept all requests?\"\n        text=\"Are you sure you want to accept all requests?\"\n        confirmHandler={handleAcceptAllRequests}\n      />\n      <ConfirmDialog\n        isOpen={isRejectAllDialogOpen}\n        onClose={closeRejectAllDialog}\n        title=\"Reject all requests?\"\n        text=\"Are you sure you want to reject all requests?\"\n        confirmHandler={handleRejectAllRequests}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n\n    return {\n      chat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageJoinRequests));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ManagementType } from '../../../types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectCurrentManagementType } from '../../../global/selectors';\n\nimport ManageUser from './ManageUser';\nimport ManageGroup from './ManageGroup';\nimport ManageGroupPermissions from './ManageGroupPermissions';\nimport ManageChatRemovedUsers from './ManageChatRemovedUsers';\nimport ManageChannel from './ManageChannel';\nimport ManageChatPrivacyType from './ManageChatPrivacyType';\nimport ManageDiscussion from './ManageDiscussion';\nimport ManageGroupUserPermissions from './ManageGroupUserPermissions';\nimport ManageChatAdministrators from './ManageChatAdministrators';\nimport ManageGroupAdminRights from './ManageGroupAdminRights';\nimport ManageGroupMembers from './ManageGroupMembers';\nimport ManageGroupUserPermissionsCreate from './ManageGroupUserPermissionsCreate';\nimport ManageInvites from './ManageInvites';\nimport ManageInvite from './ManageInvite';\nimport ManageReactions from './ManageReactions';\nimport ManageInviteInfo from './ManageInviteInfo';\nimport ManageJoinRequests from './ManageJoinRequests';\n\nexport type OwnProps = {\n  chatId: string;\n  currentScreen: ManagementScreens;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  managementType?: ManagementType;\n};\n\nconst Management: FC<OwnProps & StateProps> = ({\n  chatId,\n  currentScreen,\n  selectedChatMemberId,\n  isPromotedByCurrentUser,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n  managementType,\n}) => {\n  switch (currentScreen) {\n    case ManagementScreens.Initial: {\n      switch (managementType) {\n        case 'user':\n          return (\n            <ManageUser\n              key={chatId}\n              userId={chatId}\n              onClose={onClose}\n              isActive={isActive}\n            />\n          );\n        case 'group':\n          return (\n            <ManageGroup\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.Discussion,\n                ManagementScreens.GroupPermissions,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.GroupRemovedUsers,\n                ManagementScreens.GroupUserPermissionsCreate,\n                ManagementScreens.GroupUserPermissions,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n        case 'channel':\n          return (\n            <ManageChannel\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChannelSubscribers,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.ChannelRemovedUsers,\n                ManagementScreens.Discussion,\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n      }\n\n      break;\n    }\n\n    case ManagementScreens.ChatPrivacyType:\n      return (\n        <ManageChatPrivacyType\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.Discussion:\n      return (\n        <ManageDiscussion\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupPermissions:\n      return (\n        <ManageGroupPermissions\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupRemovedUsers,\n            ManagementScreens.GroupUserPermissionsCreate,\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelRemovedUsers:\n    case ManagementScreens.GroupRemovedUsers:\n      return (\n        <ManageChatRemovedUsers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissionsCreate:\n      return (\n        <ManageGroupUserPermissionsCreate\n          chatId={chatId}\n          onChatMemberSelect={onChatMemberSelect}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissions:\n      return (\n        <ManageGroupUserPermissions\n          chatId={chatId}\n          selectedChatMemberId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatAdministrators:\n      return (\n        <ManageChatAdministrators\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.ChatAdminRights,\n            ManagementScreens.ChatNewAdminRights,\n            ManagementScreens.GroupRecentActions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatNewAdminRights:\n    case ManagementScreens.ChatAdminRights:\n      return (\n        <ManageGroupAdminRights\n          chatId={chatId}\n          isNewAdmin={currentScreen === ManagementScreens.ChatNewAdminRights}\n          selectedUserId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelSubscribers:\n    case ManagementScreens.GroupMembers:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.Invites:\n      return (\n        <ManageInvites\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.EditInvite:\n      return (\n        <ManageInvite\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.GroupAddAdmins:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          noAdmins\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n        />\n      );\n\n    case ManagementScreens.Reactions:\n      return (\n        <ManageReactions\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.InviteInfo:\n      return (\n        <ManageInviteInfo\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.JoinRequests:\n      return (\n        <ManageJoinRequests\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n  }\n\n  return undefined; // Never reached\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const managementType = selectCurrentManagementType(global);\n\n    return {\n      managementType,\n    };\n  },\n)(Management));\n","const VISA = /^4\\d/;\nconst MASTERCARD1 = /^5[1-5]/;\nconst MASTERCARD2 = /^2[2-7]\\d{2}/;\nconst MIR = /^220[0-4]/;\n\nexport enum CardType {\n  Default,\n  Visa,\n  Mastercard,\n  Mir,\n}\n\nconst cards: Record<number, string> = {\n  [CardType.Default]: '',\n  [CardType.Visa]: 'visa',\n  [CardType.Mastercard]: 'mastercard',\n  [CardType.Mir]: 'mir',\n};\n\nexport function detectCardType(cardNumber: string): number {\n  cardNumber = cardNumber.replace(/\\s/g, '');\n  if (VISA.test(cardNumber)) {\n    return CardType.Visa;\n  }\n  if (MIR.test(cardNumber)) {\n    return CardType.Mir;\n  }\n  if (MASTERCARD1.test(cardNumber) || MASTERCARD2.test(cardNumber)) {\n    return CardType.Mastercard;\n  }\n  return CardType.Default;\n}\n\nexport function detectCardTypeText(cardNumber: string): string {\n  const cardType = detectCardType(cardNumber);\n  return cards[cardType as number] || '';\n}\n","import type { StateReducer, Dispatch } from '../useReducer';\nimport useReducer from '../useReducer';\n\nexport type FormState = {\n  streetLine1: string;\n  streetLine2: string;\n  city: string;\n  state: string;\n  countryIso2: string;\n  postCode: string;\n  fullName: string;\n  email: string;\n  phone: string;\n  shipping: string;\n  cardNumber: string;\n  cardholder: string;\n  expiry: string;\n  cvv: string;\n  billingCountry: string;\n  billingZip: string;\n  saveInfo: boolean;\n  saveCredentials: boolean;\n  formErrors: Record<string, string>;\n  tipAmount: number;\n  savedCredentialId: string;\n};\n\nexport type FormActions = (\n  'changeAddress1' | 'changeAddress2' | 'changeCity' | 'changeState' | 'changeCountry' |\n  'changePostCode' | 'changeFullName' | 'changeEmail' | 'changePhone' | 'changeShipping' | 'updateUserInfo' |\n  'changeCardNumber' | 'changeCardholder' | 'changeExpiryDate' | 'changeCvvCode' | 'changeBillingCountry' |\n  'changeBillingZip' | 'changeSaveInfo' | 'changeSaveCredentials' | 'setFormErrors' | 'resetState' | 'setTipAmount' |\n  'changeSavedCredentialId'\n);\nexport type FormEditDispatch = Dispatch<FormState, FormActions>;\n\nconst INITIAL_STATE: FormState = {\n  streetLine1: '',\n  streetLine2: '',\n  city: '',\n  state: '',\n  countryIso2: '',\n  postCode: '',\n  fullName: '',\n  email: '',\n  phone: '',\n  shipping: '',\n  cardNumber: '',\n  cardholder: '',\n  expiry: '',\n  cvv: '',\n  billingCountry: '',\n  billingZip: '',\n  saveInfo: true,\n  saveCredentials: false,\n  formErrors: {},\n  tipAmount: 0,\n  savedCredentialId: '',\n};\n\nconst reducer: StateReducer<FormState, FormActions> = (state, action) => {\n  switch (action.type) {\n    case 'changeAddress1':\n      return {\n        ...state,\n        streetLine1: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine1: undefined,\n        },\n      };\n    case 'changeAddress2':\n      return {\n        ...state,\n        streetLine2: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine2: undefined,\n        },\n      };\n    case 'changeCity':\n      return {\n        ...state,\n        city: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          city: undefined,\n        },\n      };\n    case 'changeState':\n      return {\n        ...state,\n        state: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          state: undefined,\n        },\n      };\n    case 'changeCountry':\n      return {\n        ...state,\n        countryIso2: action.payload.iso2,\n        billingCountry: action.payload.defaultName,\n        formErrors: {\n          ...state.formErrors,\n          countryIso2: undefined,\n        },\n      };\n    case 'changePostCode':\n      return {\n        ...state,\n        postCode: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          postCode: undefined,\n        },\n      };\n    case 'changeFullName':\n      return {\n        ...state,\n        fullName: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          fullName: undefined,\n        },\n      };\n    case 'changeEmail':\n      return {\n        ...state,\n        email: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          email: undefined,\n        },\n      };\n    case 'changePhone':\n      return {\n        ...state,\n        phone: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          phone: undefined,\n        },\n      };\n    case 'changeShipping':\n      return { ...state, shipping: action.payload };\n    case 'changeCardNumber':\n      return {\n        ...state,\n        cardNumber: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardNumber: undefined,\n        },\n      };\n    case 'changeCardholder':\n      return {\n        ...state,\n        cardholder: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardholder: undefined,\n        },\n      };\n    case 'changeExpiryDate':\n      return {\n        ...state,\n        expiry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          expiry: undefined,\n        },\n      };\n    case 'changeCvvCode':\n      return {\n        ...state,\n        cvv: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cvv: undefined,\n        },\n      };\n    case 'changeBillingCountry':\n      return {\n        ...state,\n        billingCountry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingCountry: undefined,\n        },\n      };\n    case 'changeBillingZip':\n      return {\n        ...state,\n        billingZip: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingZip: undefined,\n        },\n      };\n    case 'changeSaveInfo':\n      return { ...state, saveInfo: action.payload };\n    case 'changeSaveCredentials':\n      return { ...state, saveCredentials: action.payload };\n    case 'updateUserInfo':\n      if (action.payload.country) {\n        return {\n          ...state,\n          ...action.payload,\n          billingCountry: action.payload.country,\n        };\n      }\n      return { ...state, ...action.payload };\n    case 'setFormErrors':\n      return {\n        ...state,\n        formErrors: {\n          ...state.formErrors,\n          ...action.payload,\n        },\n      };\n    case 'setTipAmount':\n      return {\n        ...state,\n        tipAmount: action.payload,\n      };\n    case 'changeSavedCredentialId':\n      return {\n        ...state,\n        savedCredentialId: action.payload,\n      };\n    case 'resetState':\n      return {\n        ...INITIAL_STATE,\n      };\n    default:\n      return state;\n  }\n};\n\nconst usePaymentReducer = () => {\n  return useReducer(reducer, INITIAL_STATE);\n};\n\nexport default usePaymentReducer;\n","import type { RefObject } from 'react';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\nimport { useEffect } from '../lib/teact/teact';\n\nconst DEFAULT_DURATION = 400;\n\nexport default function useFocusAfterAnimation(\n  ref: RefObject<HTMLInputElement>, animationDuration = DEFAULT_DURATION,\n) {\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        ref.current?.focus();\n      });\n    }, animationDuration);\n  }, [ref, animationDuration]);\n}\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\ntype OwnProps = {\n  id?: string;\n  value?: string;\n  label?: string;\n  error?: string;\n  ref?: RefObject<HTMLSelectElement>;\n  hasArrow?: boolean;\n  placeholder?: string;\n  tabIndex?: number;\n  onChange?: (e: ChangeEvent<HTMLSelectElement>) => void;\n  children: React.ReactNode;\n};\n\nconst Select: FC<OwnProps> = (props) => {\n  const {\n    id,\n    value,\n    label,\n    hasArrow,\n    error,\n    ref,\n    placeholder,\n    tabIndex,\n    onChange,\n    children,\n  } = props;\n  const labelText = error || label;\n  const fullClassName = buildClassName(\n    'input-group',\n    value && 'touched',\n    error && 'error',\n    labelText && 'with-label',\n    hasArrow && 'with-arrow',\n    'input-group',\n  );\n\n  return (\n    <div className={fullClassName}>\n      <select\n        className=\"form-control\"\n        id={id}\n        value={value || ''}\n        onChange={onChange}\n        placeholder={placeholder || label}\n        tabIndex={tabIndex}\n        ref={ref}\n      >\n        {children}\n      </select>\n      {labelText && id && (\n        <label htmlFor={id}>{labelText}</label>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Select);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useRef, useCallback, useEffect, memo,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormState, FormEditDispatch } from '../../hooks/reducers/usePaymentReducer';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useLang from '../../hooks/useLang';\n\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\nimport Checkbox from '../ui/Checkbox';\n\nimport './ShippingInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  needEmail: boolean;\n  needPhone: boolean;\n  needName: boolean;\n  needAddress: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst ShippingInfo: FC<OwnProps> = ({\n  state,\n  needEmail,\n  needPhone,\n  needName,\n  needAddress,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const phoneRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.countryIso2) {\n      selectCountryRef.current.value = state.countryIso2;\n    }\n  }, [state.countryIso2]);\n\n  const lang = useLang();\n\n  useFocusAfterAnimation(inputRef);\n\n  const handleAddress1Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress1', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleAddress2Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress2', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCityChange = useCallback((e) => {\n    dispatch({ type: 'changeCity', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleStateChange = useCallback((e) => {\n    dispatch({ type: 'changeState', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeCountry', payload: countryList.find((country) => country.iso2 === e.target.value) });\n  }, [countryList, dispatch]);\n\n  const handlePostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changePostCode', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleFullNameChange = useCallback((e) => {\n    dispatch({ type: 'changeFullName', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleEmailChange = useCallback((e) => {\n    dispatch({ type: 'changeEmail', payload: e.target.value });\n  }, [dispatch]);\n\n  const handlePhoneChange = useCallback((e) => {\n    let { value } = e.target;\n    value = `+${value.replace(/\\D/g, '')}`;\n    if (phoneRef.current) {\n      phoneRef.current.value = value;\n    }\n    dispatch({ type: 'changePhone', payload: value });\n  }, [dispatch]);\n\n  const handleSaveInfoChange = useCallback((e) => {\n    dispatch({ type: 'changeSaveInfo', payload: e.target.value });\n  }, [dispatch]);\n\n  const { formErrors } = state;\n  return (\n    <div className=\"ShippingInfo\">\n      <form>\n        {needAddress ? (\n          <div>\n            <h5>{lang('PaymentShippingAddress')}</h5>\n            <InputText\n              ref={inputRef}\n              label={lang('PaymentShippingAddress1Placeholder')}\n              onChange={handleAddress1Change}\n              value={state.streetLine1}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine1}\n            />\n            <InputText\n              label={lang('PaymentShippingAddress2Placeholder')}\n              onChange={handleAddress2Change}\n              value={state.streetLine2}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine2}\n            />\n            <InputText\n              label={lang('PaymentShippingCityPlaceholder')}\n              onChange={handleCityChange}\n              value={state.city}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.city}\n            />\n            <InputText\n              label={lang('PaymentShippingStatePlaceholder')}\n              onChange={handleStateChange}\n              value={state.state}\n              inputMode=\"text\"\n              error={formErrors.state}\n            />\n            <Select\n              label={lang('PaymentShippingCountry')}\n              placeholder={lang('PaymentShippingCountry')}\n              onChange={handleCountryChange}\n              value={state.countryIso2}\n              hasArrow={Boolean(true)}\n              id=\"shipping-country\"\n              error={formErrors.countryIso2}\n              ref={selectCountryRef}\n              tabIndex={0}\n            >\n              {countryList.map(({ defaultName, name, iso2 }) => (\n                <option\n                  value={iso2}\n                  className=\"county-item\"\n                  selected={iso2 === state.countryIso2}\n                >\n                  {defaultName || name}\n                </option>\n              ))}\n            </Select>\n\n            <InputText\n              label={lang('PaymentShippingZipPlaceholder')}\n              onChange={handlePostCodeChange}\n              value={state.postCode}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.postCode}\n            />\n          </div>\n        ) : undefined}\n        { needName || needEmail || needPhone ? (\n          <h5>{lang('PaymentShippingReceiver')}</h5>\n        ) : undefined }\n        { needName && (\n          <InputText\n            label={lang('PaymentShippingName')}\n            onChange={handleFullNameChange}\n            value={state.fullName}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.fullName}\n          />\n        ) }\n        { needEmail && (\n          <InputText\n            label={lang('PaymentShippingEmailPlaceholder')}\n            onChange={handleEmailChange}\n            value={state.email}\n            inputMode=\"email\"\n            tabIndex={0}\n            error={formErrors.email}\n          />\n        ) }\n        { needPhone && (\n          <InputText\n            label={lang('PaymentShippingPhoneNumber')}\n            onChange={handlePhoneChange}\n            value={state.phone}\n            inputMode=\"tel\"\n            tabIndex={0}\n            error={formErrors.phone}\n            ref={phoneRef}\n          />\n        ) }\n        <Checkbox\n          label={lang('PaymentShippingSave')}\n          subLabel={lang('PaymentShippingSaveInfo')}\n          checked={Boolean(state.saveInfo)}\n          tabIndex={0}\n          onChange={handleSaveInfoChange}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(ShippingInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback, memo, useMemo, useEffect,\n} from '../../lib/teact/teact';\n\nimport type { ShippingOption } from '../../types';\n\nimport { formatCurrency } from '../../util/formatCurrency';\nimport type { FormState, FormEditDispatch } from '../../hooks/reducers/usePaymentReducer';\nimport useLang from '../../hooks/useLang';\n\nimport RadioGroup from '../ui/RadioGroup';\n\nimport './Shipping.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  shippingOptions: ShippingOption[];\n  currency: string;\n  dispatch: FormEditDispatch;\n};\n\nconst Shipping: FC<OwnProps> = ({\n  state,\n  shippingOptions,\n  currency,\n  dispatch,\n}) => {\n  const lang = useLang();\n\n  useEffect(() => {\n    if (!shippingOptions || !shippingOptions.length || state.shipping) {\n      return;\n    }\n    dispatch({ type: 'changeShipping', payload: shippingOptions[0].id });\n  }, [shippingOptions, state.shipping, dispatch]);\n\n  const handleShippingSelect = useCallback((value) => {\n    dispatch({ type: 'changeShipping', payload: value });\n  }, [dispatch]);\n\n  const options = useMemo(() => (shippingOptions.map(({ id: value, title: label, amount }) => ({\n    label,\n    subLabel: formatCurrency(amount, currency, lang.code),\n    value,\n  }))), [shippingOptions, currency, lang.code]);\n\n  return (\n    <div className=\"Shipping\">\n      <form>\n        <p>{lang('PaymentShippingMethod')}</p>\n        <RadioGroup\n          name=\"shipping-options\"\n          options={options}\n          onChange={handleShippingSelect}\n          selected={state.shipping}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(Shipping);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"SM3T4awhZJvKn_c8aRuY\",\"description\":\"RWoBZem6PCNMF5hu6Shs\",\"checkout-picture\":\"prUKJGh6W9LIyjSnRbZc\",\"checkoutPicture\":\"prUKJGh6W9LIyjSnRbZc\",\"text\":\"xUG3uFeTiPPFkWHQELCc\",\"checkout-title\":\"MO45Rkd2ksVxfzAONvQ6\",\"checkoutTitle\":\"MO45Rkd2ksVxfzAONvQ6\",\"checkout-description\":\"LqaZe1TRdNI17BEa1gcl\",\"checkoutDescription\":\"LqaZe1TRdNI17BEa1gcl\",\"price-info\":\"mz2vhtmYPNRaJbeUrXKA\",\"priceInfo\":\"mz2vhtmYPNRaJbeUrXKA\",\"price-info-item\":\"Ct9Ine31cu5h7FCjtRWa\",\"priceInfoItem\":\"Ct9Ine31cu5h7FCjtRWa\",\"price-info-item-main\":\"JduVB3d3NxN9TybmxIgS\",\"priceInfoItemMain\":\"JduVB3d3NxN9TybmxIgS\",\"price-info-item-title\":\"O7d8G4OQ_yTJSHiHbgBR\",\"priceInfoItemTitle\":\"O7d8G4OQ_yTJSHiHbgBR\",\"tipsList\":\"zsSyrAOxg0qs0nPJWSEe\",\"tipsItem\":\"lcjeIUsdqs95BdK_oysT\",\"tipsItem_active\":\"XRnGKO5ClzA_4S8i81wC\",\"tipsItemActive\":\"XRnGKO5ClzA_4S8i81wC\",\"invoice-info\":\"MyMLGHhiEKOVIoG3aQTS\",\"invoiceInfo\":\"MyMLGHhiEKOVIoG3aQTS\",\"provider\":\"hLVHJSaVspSZdzxNlBJk\",\"stripe\":\"nrKVVKzRmr7s0TE15uG1\",\"smartglocal\":\"oONvjFUTa5AbWvrbzbWn\",\"checkout-info-item-info-title\":\"bkIqUpVUAY04wdT8fySX\",\"checkoutInfoItemInfoTitle\":\"bkIqUpVUAY04wdT8fySX\",\"checkout-info-item-info-data\":\"VAzhVfK6c1pUriepo4Ga\",\"checkoutInfoItemInfoData\":\"VAzhVfK6c1pUriepo4Ga\",\"tos-checkbox\":\"WjrdCzbl3hROmSBGGnjy\",\"tosCheckbox\":\"WjrdCzbl3hROmSBGGnjy\"};","import React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { FormEditDispatch } from '../../hooks/reducers/usePaymentReducer';\nimport type { LangCode, Price } from '../../types';\nimport type { ApiChat, ApiInvoice, ApiPaymentCredentials } from '../../api/types';\n\nimport { PaymentStep } from '../../types';\nimport { getWebDocumentHash } from '../../global/helpers';\nimport { formatCurrency } from '../../util/formatCurrency';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useMedia from '../../hooks/useMedia';\n\nimport Checkbox from '../ui/Checkbox';\nimport Skeleton from '../ui/Skeleton';\nimport SafeLink from '../common/SafeLink';\nimport ListItem from '../ui/ListItem';\n\nimport styles from './Checkout.module.scss';\n\nexport type OwnProps = {\n  chat?: ApiChat;\n  invoice?: ApiInvoice;\n  checkoutInfo?: {\n    paymentMethod?: string;\n    paymentProvider?: string;\n    shippingAddress?: string;\n    name?: string;\n    phone?: string;\n    shippingMethod?: string;\n  };\n  prices?: Price[];\n  totalPrice?: number;\n  needAddress?: boolean;\n  hasShippingOptions?: boolean;\n  tipAmount?: number;\n  shippingPrices?: Price[];\n  currency: string;\n  isTosAccepted?: boolean;\n  dispatch?: FormEditDispatch;\n  onAcceptTos?: (isAccepted: boolean) => void;\n  savedCredentials?: ApiPaymentCredentials[];\n};\n\nconst Checkout: FC<OwnProps> = ({\n  chat,\n  invoice,\n  prices,\n  shippingPrices,\n  checkoutInfo,\n  currency,\n  totalPrice,\n  isTosAccepted,\n  dispatch,\n  onAcceptTos,\n  tipAmount,\n  needAddress,\n  hasShippingOptions,\n  savedCredentials,\n}) => {\n  const { setPaymentStep } = getActions();\n\n  const lang = useLang();\n  const isInteractive = Boolean(dispatch);\n\n  const {\n    photo, title, text, isRecurring, recurringTermsUrl, suggestedTipAmounts, maxTipAmount,\n  } = invoice || {};\n  const {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  } = (checkoutInfo || {});\n\n  const photoUrl = useMedia(getWebDocumentHash(photo));\n\n  const handleTipsClick = useCallback((tips: number) => {\n    dispatch!({ type: 'setTipAmount', payload: maxTipAmount ? Math.min(tips, maxTipAmount) : tips });\n  }, [dispatch, maxTipAmount]);\n\n  const handlePaymentMethodClick = useCallback(() => {\n    setPaymentStep({ step: savedCredentials?.length ? PaymentStep.SavedPayments : PaymentStep.PaymentInfo });\n  }, [savedCredentials?.length, setPaymentStep]);\n\n  const handleShippingAddressClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.ShippingInfo });\n  }, [setPaymentStep]);\n\n  const handleShippingMethodClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.Shipping });\n  }, [setPaymentStep]);\n\n  function renderTips() {\n    return (\n      <>\n        <div className={styles.priceInfoItem}>\n          <div className={styles.priceInfoItemTitle}>\n            {title}\n          </div>\n          <div>\n            {formatCurrency(tipAmount!, currency, lang.code)}\n          </div>\n        </div>\n        <div className={styles.tipsList}>\n          {suggestedTipAmounts!.map((tip) => (\n            <div\n              key={tip}\n              className={buildClassName(styles.tipsItem, tip === tipAmount && styles.tipsItem_active)}\n              onClick={dispatch ? () => handleTipsClick(tip === tipAmount ? 0 : tip) : undefined}\n            >\n              {formatCurrency(tip, currency, lang.code, true)}\n            </div>\n          ))}\n        </div>\n      </>\n    );\n  }\n\n  function renderTosLink(url: string, isRtl?: boolean) {\n    const langString = lang('PaymentCheckoutAcceptRecurrent', chat?.title);\n    const langStringSplit = langString.split('*');\n    return (\n      <>\n        {langStringSplit[0]}\n        <SafeLink\n          url={url}\n          text={langStringSplit[1]}\n          isRtl={isRtl}\n        />\n        {langStringSplit.slice(2)}\n      </>\n    );\n  }\n\n  function renderTos(url: string) {\n    return (\n      <Checkbox\n        label={renderTosLink(url, lang.isRtl)}\n        name=\"checkout_tos\"\n        checked={Boolean(isTosAccepted)}\n        className={styles.tosCheckbox}\n        tabIndex={0}\n        onCheck={onAcceptTos}\n      />\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.description}>\n        {photoUrl && <img className={styles.checkoutPicture} src={photoUrl} alt=\"\" />}\n        {!photoUrl && photo && (\n          <Skeleton\n            width={photo.dimensions?.width}\n            height={photo.dimensions?.height}\n            className={styles.checkoutPicture}\n            forceAspectRatio\n          />\n        )}\n        <div className={styles.text}>\n          <h5 className={styles.checkoutTitle}>{title}</h5>\n          {text && <div className={styles.checkoutDescription}>{renderText(text, ['br', 'links', 'emoji'])}</div>}\n        </div>\n      </div>\n      <div className={styles.priceInfo}>\n        {prices && prices.map((item) => (\n          renderPaymentItem(lang.code, item.label, item.amount, currency)\n        ))}\n        {shippingPrices && shippingPrices.map((item) => (\n          renderPaymentItem(lang.code, item.label, item.amount, currency)\n        ))}\n        {suggestedTipAmounts && suggestedTipAmounts.length > 0 && renderTips()}\n        {totalPrice !== undefined && (\n          renderPaymentItem(lang.code, lang('Checkout.TotalAmount'), totalPrice, currency, true)\n        )}\n      </div>\n      <div className={styles.invoiceInfo}>\n        {renderCheckoutItem({\n          title: paymentMethod || savedCredentials?.[0].title,\n          label: lang('PaymentCheckoutMethod'),\n          icon: 'card',\n          onClick: isInteractive ? handlePaymentMethodClick : undefined,\n        })}\n        {paymentProvider && renderCheckoutItem({\n          title: paymentProvider,\n          label: lang('PaymentCheckoutProvider'),\n          customIcon: buildClassName(styles.provider, styles[paymentProvider.toLowerCase()]),\n        })}\n        {(needAddress || !isInteractive) && renderCheckoutItem({\n          title: shippingAddress,\n          label: lang('PaymentShippingAddress'),\n          icon: 'location',\n          onClick: isInteractive ? handleShippingAddressClick : undefined,\n        })}\n        {name && renderCheckoutItem({\n          title: name,\n          label: lang('PaymentCheckoutName'),\n          icon: 'user',\n        })}\n        {phone && renderCheckoutItem({\n          title: phone,\n          label: lang('PaymentCheckoutPhoneNumber'),\n          icon: 'phone',\n        })}\n        {(hasShippingOptions || !isInteractive) && renderCheckoutItem({\n          title: shippingMethod,\n          label: lang('PaymentCheckoutShippingMethod'),\n          icon: 'truck',\n          onClick: isInteractive ? handleShippingMethodClick : undefined,\n        })}\n        {isRecurring && renderTos(recurringTermsUrl!)}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Checkout);\n\nfunction renderPaymentItem(\n  langCode: LangCode | undefined, title: string, value: number, currency: string, main = false,\n) {\n  return (\n    <div className={buildClassName(styles.priceInfoItem, main && styles.priceInfoItemMain)}>\n      <div className={styles.priceInfoItemTitle}>\n        {title}\n      </div>\n      <div>\n        {formatCurrency(value, currency, langCode)}\n      </div>\n    </div>\n  );\n}\n\nfunction renderCheckoutItem({\n  title,\n  label,\n  icon,\n  customIcon,\n  onClick,\n}: {\n  title : string | undefined;\n  label: string | undefined;\n  icon?: string;\n  onClick?: NoneToVoidFunction;\n  customIcon?: string;\n}) {\n  return (\n    <ListItem\n      multiline={Boolean(title && label !== title)}\n      icon={icon}\n      inactive={!onClick}\n      onClick={onClick}\n    >\n      {customIcon && <i className={buildClassName('icon', customIcon)} />}\n      <div className={styles.checkoutInfoItemInfoTitle}>\n        {title || label}\n      </div>\n      {title && label !== title && (\n        <p className={styles.checkoutInfoItemInfoData}>\n          {label}\n        </p>\n      )}\n    </ListItem>\n  );\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { formatCardExpiry } from '../middle/helpers/inputFormatters';\n\nimport InputText from '../ui/InputText';\nimport useLang from '../../hooks/useLang';\n\nconst MAX_FIELD_LENGTH = 5;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst ExpiryInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useLang();\n\n  const handleChange = useCallback((e) => {\n    const newValue = e.target.value;\n    // Allow deleting separator\n    if (value.endsWith('/') && value.length > newValue.length) {\n      onChange(newValue);\n    } else {\n      onChange(formatCardExpiry(e.target.value));\n    }\n  }, [onChange, value]);\n\n  return (\n    <InputText\n      label={lang('PaymentCardExpireDate')}\n      onChange={handleChange}\n      value={value}\n      error={error}\n      inputMode=\"numeric\"\n      tabIndex={0}\n      maxLength={MAX_FIELD_LENGTH}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(ExpiryInput);\n","export function formatCardExpiry(input: string) {\n  input = input.replace(/[^\\d]/g, '').slice(0, 4);\n  const parts = input.match(/.{1,2}/g);\n  if (parts?.[0] && Number(parts[0]) > 12) {\n    parts[0] = '12';\n  }\n  if (parts?.[0] && parts[0].length === 2 && !parts[1]) {\n    parts[1] = '';\n  }\n  return parts ? parts.join('/') : '';\n}\n\nexport function formatCardNumber(input: string) {\n  input = input.replace(/[^\\d]/g, '');\n  const parts = input.match(/.{1,4}/g);\n  return parts ? parts.join(' ') : '';\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useState, useRef, useEffect,\n} from '../../lib/teact/teact';\n\nimport { formatCardNumber } from '../middle/helpers/inputFormatters';\nimport { detectCardType, CardType } from '../common/helpers/detectCardType';\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useLang from '../../hooks/useLang';\n\nimport InputText from '../ui/InputText';\n\nimport './CardInput.scss';\n\nimport mastercardIconPath from '../../assets/mastercard.svg';\nimport visaIconPath from '../../assets/visa.svg';\nimport mirIconPath from '../../assets/mir.svg';\n\nconst CARD_NUMBER_MAX_LENGTH = 23;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst CardInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const cardNumberRef = useRef<HTMLInputElement>(null);\n\n  useFocusAfterAnimation(cardNumberRef);\n\n  const [cardType, setCardType] = useState<number>(CardType.Default);\n  useEffect(() => {\n    const newCardType = detectCardType(value);\n    setCardType(newCardType);\n  // eslint-disable-next-line\n  }, []);\n\n  const handleChange = useCallback((e) => {\n    const newValue = formatCardNumber(e.target.value);\n    const newCardType = detectCardType(e.target.value);\n    setCardType(newCardType);\n    onChange(newValue);\n  }, [onChange]);\n\n  const cardIcon = getCardIcon(cardType);\n\n  return (\n    <div className=\"CardInput\">\n      <InputText\n        ref={cardNumberRef}\n        label={lang('PaymentCardNumber')}\n        onChange={handleChange}\n        value={value}\n        inputMode=\"numeric\"\n        className={cardType ? 'has-right-addon' : ''}\n        error={error}\n        tabIndex={0}\n        maxLength={CARD_NUMBER_MAX_LENGTH}\n        teactExperimentControlled\n      />\n      <span className=\"right-addon\">{cardIcon}</span>\n    </div>\n  );\n};\n\nexport default memo(CardInput);\n\nfunction getCardIcon(cardType: CardType) {\n  switch (cardType) {\n    case CardType.Mastercard:\n      return <img src={mastercardIconPath} alt=\"\" />;\n    case CardType.Visa:\n      return <img src={visaIconPath} alt=\"\" />;\n    case CardType.Mir:\n      return <img src={mirIconPath} alt=\"\" />;\n    default:\n      return undefined;\n  }\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback, memo, useRef, useEffect,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\n\nimport type { FormState, FormEditDispatch } from '../../hooks/reducers/usePaymentReducer';\nimport useLang from '../../hooks/useLang';\n\nimport InputText from '../ui/InputText';\nimport Checkbox from '../ui/Checkbox';\nimport Select from '../ui/Select';\nimport ExpiryInput from './ExpiryInput';\nimport CardInput from './CardInput';\n\nimport './PaymentInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  canSaveCredentials: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst PaymentInfo: FC<OwnProps> = ({\n  state,\n  canSaveCredentials,\n  needCardholderName,\n  needCountry,\n  needZip,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.billingCountry) {\n      selectCountryRef.current.value = state.billingCountry;\n    }\n  }, [state.billingCountry]);\n\n  const handleCardNumberChange = useCallback((value) => {\n    dispatch({ type: 'changeCardNumber', payload: value });\n  }, [dispatch]);\n\n  const handleCardholderChange = useCallback((e) => {\n    dispatch({ type: 'changeCardholder', payload: e.target.value.toUpperCase() });\n  }, [dispatch]);\n\n  const handleExpiryChange = useCallback((value) => {\n    dispatch({ type: 'changeExpiryDate', payload: value });\n  }, [dispatch]);\n\n  const handleCvvChange = useCallback((e) => {\n    const newValue = e.target.value.replace(/[^0-9]/g, '');\n    dispatch({ type: 'changeCvvCode', payload: newValue });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingCountry', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleBillingPostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingZip', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleChangeSaveCredentials = useCallback((e) => {\n    dispatch({ type: 'changeSaveCredentials', payload: e.target.value });\n  }, [dispatch]);\n\n  const lang = useLang();\n\n  const { formErrors = {} } = state;\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{lang('PaymentCardTitle')}</h5>\n        <CardInput\n          onChange={handleCardNumberChange}\n          value={state.cardNumber}\n          error={formErrors.cardNumber}\n        />\n        { needCardholderName && (\n          <InputText\n            label={lang('Checkout.NewCard.CardholderNamePlaceholder')}\n            onChange={handleCardholderChange}\n            value={state.cardholder}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.cardholder}\n          />\n        )}\n        <section className=\"inline-inputs\">\n          <ExpiryInput\n            value={state.expiry}\n            onChange={handleExpiryChange}\n            error={formErrors.expiry}\n          />\n          <InputText\n            label={lang('lng_payments_card_cvc')}\n            onChange={handleCvvChange}\n            value={state.cvv}\n            inputMode=\"numeric\"\n            maxLength={3}\n            tabIndex={0}\n            error={formErrors.cvv}\n            teactExperimentControlled\n          />\n        </section>\n        { needCountry || needZip ? (\n          <h5>{lang('PaymentBillingAddress')}</h5>\n        ) : undefined }\n        { needCountry && (\n          <Select\n            label={lang('PaymentShippingCountry')}\n            placeholder={lang('PaymentShippingCountry')}\n            onChange={handleCountryChange}\n            value={state.billingCountry}\n            hasArrow={Boolean(true)}\n            id=\"billing-country\"\n            error={formErrors.billingCountry}\n            tabIndex={0}\n            ref={selectCountryRef}\n          >\n            {\n              countryList.map(({ defaultName, name }) => (\n                <option\n                  value={defaultName}\n                  className=\"county-item\"\n                  selected={defaultName === state.billingCountry}\n                >\n                  {defaultName || name}\n                </option>\n              ))\n            }\n          </Select>\n        ) }\n        { needZip && (\n          <InputText\n            label={lang('PaymentShippingZipPlaceholder')}\n            onChange={handleBillingPostCodeChange}\n            value={state.billingZip}\n            inputMode=\"text\"\n            tabIndex={0}\n            maxLength={12}\n            error={formErrors.billingZip}\n          />\n        )}\n        <Checkbox\n          label={lang('PaymentCardSavePaymentInformation')}\n          checked={canSaveCredentials ? state.saveCredentials : false}\n          tabIndex={0}\n          onChange={handleChangeSaveCredentials}\n          disabled={!canSaveCredentials}\n        />\n        <p className=\"description\">\n          {lang(canSaveCredentials ? 'Checkout.NewCard.SaveInfoHelp' : 'Checkout.2FA.Text')}\n        </p>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(PaymentInfo);\n","import React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport useLang from '../../hooks/useLang';\n\nimport './ConfirmPayment.scss';\n\nexport type OwnProps = {\n  url: string;\n  noRedirect?: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ninterface IframeCallbackEvent {\n  eventType: string;\n  eventData: {\n    path_full: string;\n  };\n}\n\nconst ConfirmPayment: FC<OwnProps> = ({ url, noRedirect, onClose }) => {\n  const { openTelegramLink } = getActions();\n\n  const lang = useLang();\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    try {\n      const data = JSON.parse(event.data) as IframeCallbackEvent;\n      const { eventType, eventData } = data;\n\n      if (eventType !== 'web_app_open_tg_link') {\n        return;\n      }\n\n      if (!noRedirect) {\n        const linkUrl = TME_LINK_PREFIX + eventData.path_full;\n        openTelegramLink({ url: linkUrl });\n      }\n\n      onClose();\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [onClose, noRedirect, openTelegramLink]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage]);\n\n  return (\n    <div className=\"ConfirmPayment\">\n      <iframe\n        src={url}\n        title={lang('Checkout.WebConfirmation.Title')}\n        allow=\"payment\"\n        sandbox=\"allow-modals allow-forms allow-scripts allow-same-origin allow-top-navigation\"\n        className=\"ConfirmPayment__content\"\n      />\n    </div>\n  );\n};\n\nexport default memo(ConfirmPayment);\n","import React, { memo, useCallback, useMemo } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormState, FormEditDispatch } from '../../hooks/reducers/usePaymentReducer';\n\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport RadioGroup from '../ui/RadioGroup';\n\ninterface OwnProps {\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  dispatch: FormEditDispatch;\n  onNewCardClick: NoneToVoidFunction;\n}\n\nconst SavedPaymentCredentials: FC<OwnProps> = ({\n  state,\n  savedCredentials,\n  dispatch,\n  onNewCardClick,\n}) => {\n  const lang = useLang();\n\n  const options = useMemo(() => {\n    return savedCredentials?.length\n      ? savedCredentials.map(({ id, title }) => ({ label: title, value: id }))\n      : MEMO_EMPTY_ARRAY;\n  }, [savedCredentials]);\n\n  const onChange = useCallback((value) => {\n    dispatch({ type: 'changeSavedCredentialId', payload: value });\n  }, [dispatch]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{lang('PaymentCardTitle')}</h5>\n\n        <RadioGroup\n          name=\"saved-credentials\"\n          options={options}\n          selected={state.savedCredentialId}\n          onChange={onChange}\n        />\n\n        <Button isText onClick={onNewCardClick}>\n          {lang('PaymentCheckoutMethodNewCard')}\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(SavedPaymentCredentials);\n","import React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport { selectTabState } from '../../global/selectors';\nimport useLang from '../../hooks/useLang';\n\nimport PasswordMonkey from '../common/PasswordMonkey';\nimport PasswordForm from '../common/PasswordForm';\n\ninterface OwnProps {\n  isActive?: boolean;\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  onPasswordChange: (password: string) => void;\n}\n\ninterface StateProps {\n  error?: string;\n  passwordHint?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n}\n\nconst PasswordConfirm: FC<OwnProps & StateProps> = ({\n  isActive,\n  error,\n  state,\n  savedCredentials,\n  passwordHint,\n  onPasswordChange,\n}) => {\n  const { clearPaymentError } = getActions();\n\n  const lang = useLang();\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n  const cardName = useMemo(() => {\n    return savedCredentials?.length && state.savedCredentialId\n      ? savedCredentials.find(({ id }) => id === state.savedCredentialId)?.title\n      : undefined;\n  }, [savedCredentials, state.savedCredentialId]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n\n      <PasswordForm\n        error={error ? lang(error) : undefined}\n        hint={passwordHint}\n        description={lang('PaymentConfirmationMessage', cardName)}\n        placeholder={lang('Password')}\n        clearError={clearPaymentError}\n        shouldShowSubmit={false}\n        shouldResetValue={isActive}\n        isPasswordVisible={shouldShowPassword}\n        onChangePasswordVisibility={setShouldShowPassword}\n        onInputChange={onPasswordChange}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { payment } = selectTabState(global);\n  return {\n    error: payment.error?.message,\n    passwordHint: global.twoFaSettings.hint,\n    savedCredentials: payment.savedCredentials,\n  };\n})(PasswordConfirm));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { TabState } from '../../global/types';\nimport type { ApiChat, ApiCountry, ApiPaymentCredentials } from '../../api/types';\nimport type { Price, ShippingOption } from '../../types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport { PaymentStep } from '../../types';\nimport { selectChat, selectTabState } from '../../global/selectors';\nimport { formatCurrency } from '../../util/formatCurrency';\nimport buildClassName from '../../util/buildClassName';\nimport { detectCardTypeText } from '../common/helpers/detectCardType';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport useLang from '../../hooks/useLang';\nimport useFlag from '../../hooks/useFlag';\nimport usePaymentReducer from '../../hooks/reducers/usePaymentReducer';\n\nimport ShippingInfo from './ShippingInfo';\nimport Shipping from './Shipping';\nimport Checkout from './Checkout';\nimport PaymentInfo from './PaymentInfo';\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Transition from '../ui/Transition';\nimport Spinner from '../ui/Spinner';\nimport ConfirmPayment from './ConfirmPayment';\nimport SavedPaymentCredentials from './SavedPaymentCredentials';\nimport PasswordConfirm from './PasswordConfirm';\n\nimport './PaymentModal.scss';\n\nconst DEFAULT_PROVIDER = 'stripe';\nconst DONATE_PROVIDER = 'smartglocal';\nconst SUPPORTED_PROVIDERS = new Set([DEFAULT_PROVIDER, DONATE_PROVIDER]);\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isNameRequested?: boolean;\n  isShippingAddressRequested?: boolean;\n  isPhoneRequested?: boolean;\n  isEmailRequested?: boolean;\n  shouldSendPhoneToProvider?: boolean;\n  shouldSendEmailToProvider?: boolean;\n  currency?: string;\n  prices?: Price[];\n  isProviderError: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  confirmPaymentUrl?: string;\n  countryList: ApiCountry[];\n  hasShippingOptions: boolean;\n  requestId?: string;\n  smartGlocalToken?: string;\n  stripeId?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n  passwordValidUntil?: number;\n  isExtendedMedia?: boolean;\n};\n\ntype GlobalStateProps = Pick<TabState['payment'], (\n  'step' | 'shippingOptions' |\n  'savedInfo' | 'canSaveCredentials' | 'nativeProvider' | 'passwordMissing' | 'invoice' | 'error'\n)>;\n\nconst NETWORK_REQUEST_TIMEOUT_S = 3;\n\nconst PaymentModal: FC<OwnProps & StateProps & GlobalStateProps> = ({\n  isOpen,\n  onClose,\n  step,\n  chat,\n  shippingOptions,\n  savedInfo,\n  canSaveCredentials,\n  isNameRequested,\n  isShippingAddressRequested,\n  isPhoneRequested,\n  isEmailRequested,\n  shouldSendPhoneToProvider,\n  shouldSendEmailToProvider,\n  currency,\n  passwordMissing,\n  isProviderError,\n  invoice,\n  nativeProvider,\n  prices,\n  needCardholderName,\n  needCountry,\n  needZip,\n  confirmPaymentUrl,\n  error,\n  countryList,\n  hasShippingOptions,\n  requestId,\n  smartGlocalToken,\n  stripeId,\n  savedCredentials,\n  passwordValidUntil,\n  isExtendedMedia,\n}) => {\n  const {\n    loadPasswordInfo,\n    validateRequestedInfo,\n    sendPaymentForm,\n    setPaymentStep,\n    sendCredentialsInfo,\n    clearPaymentError,\n    validatePaymentPassword,\n  } = getActions();\n\n  const lang = useLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n  const [paymentState, paymentDispatch] = usePaymentReducer();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n  const [twoFaPassword, setTwoFaPassword] = useState('');\n\n  const canRenderFooter = step !== PaymentStep.ConfirmPayment;\n\n  const setStep = useCallback((nextStep) => {\n    setPaymentStep({ step: nextStep });\n  }, [setPaymentStep]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setTwoFaPassword('');\n      loadPasswordInfo();\n      openModal();\n    }\n  }, [isOpen, loadPasswordInfo, openModal]);\n\n  // Modal window can be closed by an event from the server side\n  useEffect(() => {\n    if (!isOpen && isModalOpen) {\n      closeModal();\n    }\n  }, [closeModal, isModalOpen, isOpen]);\n\n  useEffect(() => {\n    if (step !== undefined || error) {\n      setIsLoading(false);\n    }\n  }, [step, error]);\n\n  useEffect(() => {\n    if (error?.field) {\n      paymentDispatch({\n        type: 'setFormErrors',\n        payload: {\n          [error.field]: error.message,\n        },\n      });\n    }\n  }, [error, paymentDispatch]);\n\n  useEffect(() => {\n    if (savedInfo) {\n      const {\n        name: fullName, phone, email, shippingAddress,\n      } = savedInfo;\n      const {\n        countryIso2, ...shippingAddressRest\n      } = shippingAddress || {};\n      const shippingCountry = countryIso2 && countryList.find(({ iso2 }) => iso2 === countryIso2)!.defaultName;\n      paymentDispatch({\n        type: 'updateUserInfo',\n        payload: {\n          fullName,\n          phone: phone && phone.charAt(0) !== '+'\n            ? `+${phone}`\n            : phone,\n          email,\n          ...(shippingCountry && {\n            country: shippingCountry,\n            countryIso2,\n            ...shippingAddressRest,\n          }),\n        },\n      });\n    }\n  }, [savedInfo, paymentDispatch, countryList]);\n\n  useEffect(() => {\n    if (savedCredentials?.length) {\n      paymentDispatch({\n        type: 'changeSavedCredentialId',\n        payload: savedCredentials[0].id,\n      });\n    }\n  }, [paymentDispatch, savedCredentials]);\n\n  const handleErrorModalClose = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  const totalPrice = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return 0;\n    }\n\n    return getTotalPrice(prices, shippingOptions, paymentState.shipping, paymentState.tipAmount);\n  }, [step, prices, shippingOptions, paymentState.shipping, paymentState.tipAmount]);\n\n  const checkoutInfo = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return undefined;\n    }\n    return getCheckoutInfo(paymentState, shippingOptions, nativeProvider || '');\n  }, [step, paymentState, shippingOptions, nativeProvider]);\n\n  const handleNewCardClick = useCallback(() => {\n    setStep(PaymentStep.PaymentInfo);\n  }, [setStep]);\n\n  const handleClearPaymentError = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  function renderError() {\n    if (!error) {\n      return undefined;\n    }\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={Boolean(error)}\n        onClose={handleErrorModalClose}\n      >\n        <h4>{error.description || 'Error'}</h4>\n        <p>{error.description || 'Error'}</p>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={handleClearPaymentError}\n          >\n            {lang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  function renderModalContent(currentStep: PaymentStep) {\n    switch (currentStep) {\n      case PaymentStep.Checkout:\n        return (\n          <Checkout\n            chat={chat}\n            prices={prices}\n            dispatch={paymentDispatch}\n            shippingPrices={paymentState.shipping && shippingOptions\n              ? getShippingPrices(shippingOptions, paymentState.shipping)\n              : undefined}\n            totalPrice={totalPrice}\n            invoice={invoice}\n            checkoutInfo={checkoutInfo}\n            currency={currency!}\n            hasShippingOptions={hasShippingOptions}\n            tipAmount={paymentState.tipAmount}\n            needAddress={Boolean(isShippingAddressRequested)}\n            savedCredentials={savedCredentials}\n            isTosAccepted={isTosAccepted}\n            onAcceptTos={setIsTosAccepted}\n          />\n        );\n      case PaymentStep.SavedPayments:\n        return (\n          <SavedPaymentCredentials\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            dispatch={paymentDispatch}\n            onNewCardClick={handleNewCardClick}\n          />\n        );\n      case PaymentStep.ConfirmPassword:\n        return (\n          <PasswordConfirm\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            onPasswordChange={setTwoFaPassword}\n            isActive={currentStep === step}\n          />\n        );\n      case PaymentStep.PaymentInfo:\n        return (\n          <PaymentInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            canSaveCredentials={Boolean(!passwordMissing && canSaveCredentials)}\n            needCardholderName={needCardholderName}\n            needCountry={needCountry}\n            needZip={needZip}\n            countryList={countryList}\n          />\n        );\n      case PaymentStep.ShippingInfo:\n        return (\n          <ShippingInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            needAddress={Boolean(isShippingAddressRequested)}\n            needEmail={Boolean(isEmailRequested || shouldSendEmailToProvider)}\n            needPhone={Boolean(isPhoneRequested || shouldSendPhoneToProvider)}\n            needName={Boolean(isNameRequested)}\n            countryList={countryList}\n          />\n        );\n      case PaymentStep.Shipping:\n        return (\n          <Shipping\n            state={paymentState}\n            dispatch={paymentDispatch}\n            shippingOptions={shippingOptions || []}\n            currency={currency!}\n          />\n        );\n      case PaymentStep.ConfirmPayment:\n        return (\n          <ConfirmPayment\n            url={confirmPaymentUrl!}\n            noRedirect={isExtendedMedia}\n            onClose={closeModal}\n          />\n        );\n      default:\n        return undefined;\n    }\n  }\n\n  const validateRequest = useCallback(() => {\n    const { saveInfo } = paymentState;\n    const requestInfo = getRequestInfo(paymentState);\n    validateRequestedInfo({ requestInfo, saveInfo });\n  }, [validateRequestedInfo, paymentState]);\n\n  const sendCredentials = useCallback(() => {\n    const credentials = getCredentials(paymentState);\n    sendCredentialsInfo({\n      credentials,\n    });\n  }, [sendCredentialsInfo, paymentState]);\n\n  const sendForm = useCallback(() => {\n    sendPaymentForm({\n      shippingOptionId: paymentState.shipping,\n      saveCredentials: paymentState.saveCredentials,\n      savedCredentialId: paymentState.savedCredentialId,\n      tipAmount: paymentState.tipAmount,\n    });\n  }, [sendPaymentForm, paymentS