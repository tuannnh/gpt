{"version":3,"file":"3735.5c046d20985daab2dd2b.js","mappings":"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","sources":["webpack://telegram-t/./src/components/common/Avatar.tsx","webpack://telegram-t/./src/components/common/FakeIcon.tsx","webpack://telegram-t/./src/components/common/VerifiedIcon.tsx","webpack://telegram-t/./src/components/common/FullNameTitle.module.scss?6448","webpack://telegram-t/./src/components/common/FullNameTitle.tsx","webpack://telegram-t/./src/components/common/PremiumIcon.tsx","webpack://telegram-t/./src/components/right/DeleteMemberModal.tsx","webpack://telegram-t/./src/components/ui/ConfirmDialog.tsx","webpack://telegram-t/./src/components/ui/FloatingActionButton.tsx","webpack://telegram-t/./src/components/ui/InfiniteScroll.tsx","webpack://telegram-t/./src/components/ui/ListItem.tsx","webpack://telegram-t/./src/components/ui/MenuSeparator.module.scss?43c3","webpack://telegram-t/./src/components/ui/MenuSeparator.tsx","webpack://telegram-t/./src/global/selectors/calls.ts","webpack://telegram-t/./src/global/selectors/limits.ts","webpack://telegram-t/./src/hooks/useContextMenuHandlers.ts","webpack://telegram-t/./src/hooks/useFastClick.ts","webpack://telegram-t/./src/hooks/useInfiniteScroll.ts","webpack://telegram-t/./src/hooks/useInterval.ts","webpack://telegram-t/./src/hooks/useMenuPosition.ts","webpack://telegram-t/./src/util/resetScroll.ts"],"sourcesContent":["import type { MouseEvent as ReactMouseEvent } from 'react';\nimport React, {\n  memo, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport type {\n  ApiChat, ApiPhoto, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { IS_TEST } from '../../config';\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getUserColorKey,\n  getUserFullName,\n  isUserId,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserOnline,\n} from '../../global/helpers';\nimport { getFirstLetters } from '../../util/textFormat';\nimport buildClassName, { createClassNameBuilder } from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useLang from '../../hooks/useLang';\nimport { useFastClick } from '../../hooks/useFastClick';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\n\nimport './Avatar.scss';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nconst LOOP_COUNT = 3;\n\nconst cn = createClassNameBuilder('Avatar');\ncn.media = cn('media');\ncn.icon = cn('icon');\n\ntype OwnProps = {\n  className?: string;\n  size?: 'micro' | 'tiny' | 'mini' | 'small' | 'small-mobile' | 'medium' | 'large' | 'jumbo';\n  chat?: ApiChat;\n  user?: ApiUser;\n  photo?: ApiPhoto;\n  userStatus?: ApiUserStatus;\n  text?: string;\n  isSavedMessages?: boolean;\n  withVideo?: boolean;\n  loopIndefinitely?: boolean;\n  noPersonalPhoto?: boolean;\n  lastSyncTime?: number;\n  observeIntersection?: ObserveFn;\n  onClick?: (e: ReactMouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => void;\n};\n\nconst Avatar: FC<OwnProps> = ({\n  className,\n  size = 'large',\n  chat,\n  user,\n  photo,\n  userStatus,\n  text,\n  isSavedMessages,\n  withVideo,\n  loopIndefinitely,\n  lastSyncTime,\n  noPersonalPhoto,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const videoLoopCountRef = useRef(0);\n  const isDeleted = user && isDeletedUser(user);\n  const isReplies = user && isChatWithRepliesBot(user.id);\n  const isForum = chat?.isForum;\n  let imageHash: string | undefined;\n  let videoHash: string | undefined;\n\n  const shouldLoadVideo = withVideo && photo?.isVideo;\n\n  const shouldFetchBig = size === 'jumbo';\n  if (!isSavedMessages && !isDeleted) {\n    if (user && !noPersonalPhoto) {\n      imageHash = getChatAvatarHash(user, shouldFetchBig ? 'big' : undefined);\n    } else if (chat) {\n      imageHash = getChatAvatarHash(chat, shouldFetchBig ? 'big' : undefined);\n    } else if (photo) {\n      imageHash = `photo${photo.id}?size=m`;\n      if (photo.isVideo && withVideo) {\n        videoHash = `videoAvatar${photo.id}?size=u`;\n      }\n    }\n  }\n\n  const imgBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl, lastSyncTime);\n  const videoBlobUrl = useMedia(videoHash, !shouldLoadVideo, ApiMediaFormat.BlobUrl, lastSyncTime);\n  const hasBlobUrl = Boolean(imgBlobUrl || videoBlobUrl);\n  // `videoBlobUrl` can be taken from memory cache, so we need to check `shouldLoadVideo` again\n  const shouldPlayVideo = Boolean(videoBlobUrl && shouldLoadVideo);\n\n  const transitionClassNames = useMediaTransition(hasBlobUrl);\n\n  const isOnline = !isSavedMessages && user && userStatus && isUserOnline(user, userStatus);\n  const onlineTransitionClassNames = useMediaTransition(isOnline);\n  const onlineClassNamesPrefixed = useMemo(() => {\n    return onlineTransitionClassNames.split(' ').map((c) => (c === 'shown' ? 'online' : `online-${c}`)).join(' ');\n  }, [onlineTransitionClassNames]);\n\n  const handleVideoEnded = useLastCallback((e) => {\n    const video = e.currentTarget;\n    if (!videoBlobUrl) return;\n\n    if (loopIndefinitely) return;\n\n    videoLoopCountRef.current += 1;\n    if (videoLoopCountRef.current >= LOOP_COUNT) {\n      video.style.display = 'none';\n    }\n  });\n\n  const lang = useLang();\n\n  let content: TeactNode | undefined;\n  const author = user ? getUserFullName(user) : (chat ? getChatTitle(lang, chat) : text);\n\n  if (isSavedMessages) {\n    content = (\n      <i\n        className={buildClassName(\n          cn.icon,\n          'icon',\n          'icon-avatar-saved-messages',\n        )}\n        role=\"img\"\n        aria-label={author}\n      />\n    );\n  } else if (isDeleted) {\n    content = (\n      <i\n        className={buildClassName(\n          cn.icon,\n          'icon',\n          'icon-avatar-deleted-account',\n        )}\n        role=\"img\"\n        aria-label={author}\n      />\n    );\n  } else if (isReplies) {\n    content = (\n      <i\n        className={buildClassName(\n          cn.icon,\n          'icon',\n          'icon-reply-filled',\n        )}\n        role=\"img\"\n        aria-label={author}\n      />\n    );\n  } else if (hasBlobUrl) {\n    content = (\n      <>\n        <img\n          src={imgBlobUrl}\n          className={buildClassName(cn.media, 'avatar-media', transitionClassNames, videoBlobUrl && 'poster')}\n          alt={author}\n          decoding=\"async\"\n        />\n        {shouldPlayVideo && (\n          <OptimizedVideo\n            canPlay\n            src={videoBlobUrl}\n            className={buildClassName(cn.media, 'avatar-media', 'poster')}\n            muted\n            loop={loopIndefinitely}\n            autoPlay\n            disablePictureInPicture\n            playsInline\n            onEnded={handleVideoEnded}\n          />\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else if (text) {\n    content = getFirstLetters(text, 2);\n  }\n\n  const fullClassName = buildClassName(\n    `Avatar size-${size}`,\n    className,\n    `color-bg-${getUserColorKey(user || chat)}`,\n    isSavedMessages && 'saved-messages',\n    isDeleted && 'deleted-account',\n    isReplies && 'replies-bot-account',\n    isForum && 'forum',\n    onlineClassNamesPrefixed,\n    onClick && 'interactive',\n    (!isSavedMessages && !imgBlobUrl) && 'no-photo',\n  );\n\n  const hasMedia = Boolean(isSavedMessages || imgBlobUrl);\n\n  const { handleClick, handleMouseDown } = useFastClick((e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (onClick) {\n      onClick(e, hasMedia);\n    }\n  });\n\n  const senderId = (user || chat) && (user || chat)!.id;\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      data-test-sender-id={IS_TEST ? senderId : undefined}\n      aria-label={typeof content === 'string' ? author : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {typeof content === 'string' ? renderText(content, [size === 'jumbo' ? 'hq_emoji' : 'emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(Avatar);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiFakeType } from '../../api/types';\n\nimport useLang from '../../hooks/useLang';\n\nimport './FakeIcon.scss';\n\ntype OwnProps = {\n  fakeType: ApiFakeType;\n};\n\nconst FakeIcon: FC<OwnProps> = ({\n  fakeType,\n}) => {\n  const lang = useLang();\n\n  return (\n    <span className=\"FakeIcon\">\n      {lang(fakeType === 'fake' ? 'FakeMessage' : 'ScamMessage')}\n    </span>\n  );\n};\n\nexport default memo(FakeIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport './VerifiedIcon.scss';\n\n// eslint-disable-next-line max-len\nconst VERIFIED_ICON = { __html: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M12.3 2.9c.1.1.2.1.3.2.7.6 1.3 1.1 2 1.7.3.2.6.4.9.4.9.1 1.7.2 2.6.2.5 0 .6.1.7.7.1.9.1 1.8.2 2.6 0 .4.2.7.4 1 .6.7 1.1 1.3 1.7 2 .3.4.3.5 0 .8-.5.6-1.1 1.3-1.6 1.9-.3.3-.5.7-.5 1.2-.1.8-.2 1.7-.2 2.5 0 .4-.2.5-.6.6-.8 0-1.6.1-2.5.2-.5 0-1 .2-1.4.5-.6.5-1.3 1.1-1.9 1.6-.3.3-.5.3-.8 0-.7-.6-1.4-1.2-2-1.8-.3-.2-.6-.4-.9-.4-.9-.1-1.8-.2-2.7-.2-.4 0-.5-.2-.6-.5 0-.9-.1-1.7-.2-2.6 0-.4-.2-.8-.4-1.1-.6-.6-1.1-1.3-1.6-2-.4-.4-.3-.5 0-1 .6-.6 1.1-1.3 1.7-1.9.3-.3.4-.6.4-1 0-.8.1-1.6.2-2.5 0-.5.1-.6.6-.6.9-.1 1.7-.1 2.6-.2.4 0 .7-.2 1-.4.7-.6 1.4-1.2 2.1-1.7.1-.2.3-.3.5-.2z\" style=\"fill: var(--color-fill)\"/><path class=\"lol\" d=\"M16.4 10.1l-.2.2-5.4 5.4c-.1.1-.2.2-.4 0l-2.6-2.6c-.2-.2-.1-.3 0-.4.2-.2.5-.6.7-.6.3 0 .5.4.7.6l1.1 1.1c.2.2.3.2.5 0l4.3-4.3c.2-.2.4-.3.6 0 .1.2.3.3.4.5.2 0 .3.1.3.1z\" style=\"fill: var(--color-checkmark)\"/></svg>' };\n\nconst VerifiedIcon: FC = () => {\n  return (\n    // eslint-disable-next-line react/no-danger\n    <span className=\"VerifiedIcon\" dangerouslySetInnerHTML={VERIFIED_ICON} />\n  );\n};\n\nexport default VerifiedIcon;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ysHMmXALnn0fgFRc7Bn7\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { FC } from '../../lib/teact/teact';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { EMOJI_STATUS_LOOP_LIMIT } from '../../config';\nimport renderText from './helpers/renderText';\nimport { getChatTitle, getUserFullName, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport VerifiedIcon from './VerifiedIcon';\nimport FakeIcon from './FakeIcon';\nimport CustomEmoji from './CustomEmoji';\nimport PremiumIcon from './PremiumIcon';\n\nimport styles from './FullNameTitle.module.scss';\n\ntype OwnProps = {\n  peer: ApiChat | ApiUser;\n  className?: string;\n  noVerified?: boolean;\n  noFake?: boolean;\n  withEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  isSavedMessages?: boolean;\n  noLoopLimit?: boolean;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  observeIntersection?: ObserveFn;\n};\n\nconst FullNameTitle: FC<OwnProps> = ({\n  className,\n  peer,\n  noVerified,\n  noFake,\n  withEmojiStatus,\n  emojiStatusSize,\n  isSavedMessages,\n  noLoopLimit,\n  onEmojiStatusClick,\n  observeIntersection,\n}) => {\n  const lang = useLang();\n  const isUser = isUserId(peer.id);\n  const title = isUser ? getUserFullName(peer as ApiUser) : getChatTitle(lang, peer as ApiChat);\n  const emojiStatus = isUser && (peer as ApiUser).emojiStatus;\n  const isPremium = isUser && (peer as ApiUser).isPremium;\n\n  if (isSavedMessages) {\n    return (\n      <div className={buildClassName('title', styles.root, className)}>\n        <h3>{lang('SavedMessages')}</h3>\n      </div>\n    );\n  }\n\n  return (\n    <div className={buildClassName('title', styles.root, className)}>\n      <h3 dir=\"auto\" className=\"fullName\">{renderText(title || '')}</h3>\n      {!noVerified && peer.isVerified && <VerifiedIcon />}\n      {!noFake && peer.fakeType && <FakeIcon fakeType={peer.fakeType} />}\n      {withEmojiStatus && emojiStatus && (\n        <CustomEmoji\n          documentId={emojiStatus.documentId}\n          size={emojiStatusSize}\n          loopLimit={!noLoopLimit ? EMOJI_STATUS_LOOP_LIMIT : undefined}\n          observeIntersectionForLoading={observeIntersection}\n          onClick={onEmojiStatusClick}\n        />\n      )}\n      {withEmojiStatus && !emojiStatus && isPremium && <PremiumIcon />}\n    </div>\n  );\n};\n\nexport default memo(FullNameTitle);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport generateIdFor from '../../util/generateIdFor';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './PremiumIcon.scss';\n\n// eslint-disable-next-line max-len\nconst PREMIUM_ICON = { __html: '<svg width=\"14\" height=\"15\" viewBox=\"0 0 14 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.63869 12.1902L3.50621 14.1092C3.18049 14.3087 2.75468 14.2064 2.55515 13.8807C2.45769 13.7216 2.42864 13.5299 2.47457 13.3491L2.95948 11.4405C3.13452 10.7515 3.60599 10.1756 4.24682 9.86791L7.6642 8.22716C7.82352 8.15067 7.89067 7.95951 7.81418 7.80019C7.75223 7.67116 7.61214 7.59896 7.47111 7.62338L3.66713 8.28194C2.89387 8.41581 2.1009 8.20228 1.49941 7.69823L0.297703 6.69116C0.00493565 6.44581 -0.0335059 6.00958 0.211842 5.71682C0.33117 5.57442 0.502766 5.48602 0.687982 5.47153L4.35956 5.18419C4.61895 5.16389 4.845 4.99974 4.94458 4.75937L6.36101 1.3402C6.5072 0.987302 6.91179 0.819734 7.26469 0.965925C7.43413 1.03612 7.56876 1.17075 7.63896 1.3402L9.05539 4.75937C9.15496 4.99974 9.38101 5.16389 9.6404 5.18419L13.3322 5.47311C13.713 5.50291 13.9975 5.83578 13.9677 6.2166C13.9534 6.39979 13.8667 6.56975 13.7269 6.68896L10.9114 9.08928C10.7131 9.25826 10.6267 9.52425 10.6876 9.77748L11.5532 13.3733C11.6426 13.7447 11.414 14.1182 11.0427 14.2076C10.8642 14.2506 10.676 14.2208 10.5195 14.1249L7.36128 12.1902C7.13956 12.0544 6.8604 12.0544 6.63869 12.1902Z\" fill=\"var(--color-fill)\"/></svg>' };\nconst store: Record<string, boolean> = {};\n\ntype OwnProps = {\n  withGradient?: boolean;\n  big?: boolean;\n  className?: string;\n  onClick?: VoidFunction;\n};\n\nconst PremiumIcon: FC<OwnProps> = ({\n  withGradient,\n  big,\n  className,\n  onClick,\n}) => {\n  const html = useMemo(() => {\n    return withGradient ? getPremiumIconGradient() : PREMIUM_ICON;\n  }, [withGradient]);\n\n  return (\n    <i\n      onClick={onClick}\n      className={buildClassName(\n        'PremiumIcon', className, withGradient && 'gradient', onClick && 'clickable', big && 'big',\n      )}\n      dangerouslySetInnerHTML={html}\n      title=\"Premium\"\n    />\n  );\n};\n\nfunction getPremiumIconGradient() {\n  const id = generateIdFor(store);\n  return {\n    // eslint-disable-next-line max-len\n    __html: `<svg width=\"14\" height=\"15\" viewBox=\"0 0 14 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><defs><linearGradient id=\"${id}\" x1=\"3\" y1=\"63.5001\" x2=\"84.1475\" y2=\"-1.32262\" gradientUnits=\"userSpaceOnUse\"><stop stop-color=\"#6B93FF\"/><stop offset=\"0.439058\" stop-color=\"#976FFF\"/><stop offset=\"1\" stop-color=\"#E46ACE\"/></linearGradient></defs><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.63869 12.1902L3.50621 14.1092C3.18049 14.3087 2.75468 14.2064 2.55515 13.8807C2.45769 13.7216 2.42864 13.5299 2.47457 13.3491L2.95948 11.4405C3.13452 10.7515 3.60599 10.1756 4.24682 9.86791L7.6642 8.22716C7.82352 8.15067 7.89067 7.95951 7.81418 7.80019C7.75223 7.67116 7.61214 7.59896 7.47111 7.62338L3.66713 8.28194C2.89387 8.41581 2.1009 8.20228 1.49941 7.69823L0.297703 6.69116C0.00493565 6.44581 -0.0335059 6.00958 0.211842 5.71682C0.33117 5.57442 0.502766 5.48602 0.687982 5.47153L4.35956 5.18419C4.61895 5.16389 4.845 4.99974 4.94458 4.75937L6.36101 1.3402C6.5072 0.987302 6.91179 0.819734 7.26469 0.965925C7.43413 1.03612 7.56876 1.17075 7.63896 1.3402L9.05539 4.75937C9.15496 4.99974 9.38101 5.16389 9.6404 5.18419L13.3322 5.47311C13.713 5.50291 13.9975 5.83578 13.9677 6.2166C13.9534 6.39979 13.8667 6.56975 13.7269 6.68896L10.9114 9.08928C10.7131 9.25826 10.6267 9.52425 10.6876 9.77748L11.5532 13.3733C11.6426 13.7447 11.414 14.1182 11.0427 14.2076C10.8642 14.2506 10.676 14.2208 10.5195 14.1249L7.36128 12.1902C7.13956 12.0544 6.8604 12.0544 6.63869 12.1902Z\" fill=\"url(#${id})\"/></svg>`,\n  };\n}\n\nexport default memo(PremiumIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { selectCurrentChat, selectUser } from '../../global/selectors';\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport renderText from '../common/helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  contactName?: string;\n};\n\nconst DeleteMemberModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  userId,\n  contactName,\n  onClose,\n}) => {\n  const { deleteChatMember } = getActions();\n\n  const lang = useLang();\n\n  const handleDeleteChatMember = useCallback(() => {\n    deleteChatMember({ chatId: chat!.id, userId: userId! });\n    onClose();\n  }, [chat, deleteChatMember, onClose, userId]);\n\n  if (!chat || !userId) {\n    return undefined;\n  }\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('GroupRemoved.Remove')}\n      textParts={renderText(lang('PeerInfo.Confirm.RemovePeer', contactName))}\n      confirmLabel={lang('lng_box_remove')}\n      confirmHandler={handleDeleteChatMember}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const chat = selectCurrentChat(global);\n    const user = userId && selectUser(global, userId);\n    const contactName = user ? getUserFirstOrLastName(user) : undefined;\n\n    return {\n      chat,\n      contactName,\n    };\n  },\n)(DeleteMemberModal));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useRef } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport useLang from '../../hooks/useLang';\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\n\nimport Modal from './Modal';\nimport Button from './Button';\n\ntype OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n  title?: string;\n  header?: TeactNode;\n  textParts?: TextPart;\n  text?: string;\n  confirmLabel?: string;\n  confirmHandler: () => void;\n  confirmIsDestructive?: boolean;\n  areButtonsInColumn?: boolean;\n  children?: React.ReactNode;\n};\n\nconst ConfirmDialog: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onCloseAnimationEnd,\n  title,\n  header,\n  text,\n  textParts,\n  confirmLabel = 'Confirm',\n  confirmHandler,\n  confirmIsDestructive,\n  areButtonsInColumn,\n  children,\n}) => {\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const handleSelectWithEnter = useCallback((index: number) => {\n    if (index === -1) confirmHandler();\n  }, [confirmHandler]);\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, handleSelectWithEnter, '.Button');\n\n  return (\n    <Modal\n      className=\"confirm\"\n      title={title || lang('Telegram')}\n      header={header}\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {text && text.split('\\\\n').map((textPart) => (\n        <p>{textPart}</p>\n      ))}\n      {textParts || children}\n      <div\n        className={areButtonsInColumn ? 'dialog-buttons-column' : 'dialog-buttons mt-2'}\n        ref={containerRef}\n        onKeyDown={handleKeyDown}\n      >\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={confirmHandler}\n          color={confirmIsDestructive ? 'danger' : 'primary'}\n        >\n          {confirmLabel}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ConfirmDialog);\n","import React from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { OwnProps as ButtonProps } from './Button';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Button from './Button';\n\nimport './FloatingActionButton.scss';\n\ntype OwnProps = {\n  isShown: boolean;\n  className?: string;\n  color?: ButtonProps['color'];\n  ariaLabel?: ButtonProps['ariaLabel'];\n  disabled?: boolean;\n  onClick: () => void;\n  children: React.ReactNode;\n};\n\nconst FloatingActionButton: FC<OwnProps> = ({\n  isShown,\n  className,\n  color = 'primary',\n  ariaLabel,\n  disabled,\n  onClick,\n  children,\n}) => {\n  const lang = useLang();\n\n  const buttonClassName = buildClassName(\n    'FloatingActionButton',\n    isShown && 'revealed',\n    className,\n  );\n\n  return (\n    <Button\n      className={buttonClassName}\n      color={color}\n      round\n      disabled={disabled}\n      onClick={isShown && !disabled ? onClick : undefined}\n      ariaLabel={ariaLabel}\n      tabIndex={-1}\n      isRtl={lang.isRtl}\n    >\n      {children}\n    </Button>\n  );\n};\n\nexport default FloatingActionButton;\n","import type { RefObject, UIEvent } from 'react';\nimport React, {\n  useEffect, useLayoutEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { requestForcedReflow } from '../../lib/fasterdom/fasterdom';\n\nimport { LoadMoreDirection } from '../../types';\nimport type { FC } from '../../lib/teact/teact';\n\nimport { debounce } from '../../util/schedulers';\nimport resetScroll from '../../util/resetScroll';\nimport { IS_ANDROID } from '../../util/windowEnvironment';\nimport buildStyle from '../../util/buildStyle';\nimport useLastCallback from '../../hooks/useLastCallback';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  style?: string;\n  className?: string;\n  items?: any[];\n  itemSelector?: string;\n  preloadBackwards?: number;\n  sensitiveArea?: number;\n  withAbsolutePositioning?: boolean;\n  maxHeight?: number;\n  noScrollRestore?: boolean;\n  noScrollRestoreOnTop?: boolean;\n  noFastList?: boolean;\n  cacheBuster?: any;\n  beforeChildren?: React.ReactNode;\n  children: React.ReactNode;\n  onLoadMore?: ({ direction }: { direction: LoadMoreDirection; noScroll?: boolean }) => void;\n  onScroll?: (e: UIEvent<HTMLDivElement>) => void;\n  onKeyDown?: (e: React.KeyboardEvent<any>) => void;\n  onDragOver?: (e: React.DragEvent<HTMLDivElement>) => void;\n  onDragLeave?: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DEFAULT_LIST_SELECTOR = '.ListItem';\nconst DEFAULT_PRELOAD_BACKWARDS = 20;\nconst DEFAULT_SENSITIVE_AREA = 800;\n\nconst InfiniteScroll: FC<OwnProps> = ({\n  ref,\n  style,\n  className,\n  items,\n  itemSelector = DEFAULT_LIST_SELECTOR,\n  preloadBackwards = DEFAULT_PRELOAD_BACKWARDS,\n  sensitiveArea = DEFAULT_SENSITIVE_AREA,\n  withAbsolutePositioning,\n  maxHeight,\n  // Used to turn off restoring scroll position (e.g. for frequently re-ordered chat or user lists)\n  noScrollRestore = false,\n  noScrollRestoreOnTop = false,\n  noFastList,\n  // Used to re-query `listItemElements` if rendering is delayed by transition\n  cacheBuster,\n  beforeChildren,\n  children,\n  onLoadMore,\n  onScroll,\n  onKeyDown,\n  onDragOver,\n  onDragLeave,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n\n  const stateRef = useRef<{\n    listItemElements?: NodeListOf<HTMLDivElement>;\n    isScrollTopJustUpdated?: boolean;\n    currentAnchor?: HTMLDivElement | undefined;\n    currentAnchorTop?: number;\n  }>({});\n\n  const [loadMoreBackwards, loadMoreForwards] = useMemo(() => {\n    if (!onLoadMore) {\n      return [];\n    }\n\n    return [\n      debounce((noScroll = false) => {\n        onLoadMore({ direction: LoadMoreDirection.Backwards, noScroll });\n      }, 1000, true, false),\n      debounce(() => {\n        onLoadMore({ direction: LoadMoreDirection.Forwards });\n      }, 1000, true, false),\n    ];\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [onLoadMore, items]);\n\n  // Initial preload\n  useEffect(() => {\n    if (!loadMoreBackwards) {\n      return;\n    }\n\n    if (preloadBackwards > 0 && (!items || items.length < preloadBackwards)) {\n      loadMoreBackwards(true);\n      return;\n    }\n\n    const { scrollHeight, clientHeight } = containerRef.current!;\n    if (clientHeight && scrollHeight <= clientHeight) {\n      loadMoreBackwards();\n    }\n  }, [items, loadMoreBackwards, preloadBackwards]);\n\n  // Restore `scrollTop` after adding items\n  useLayoutEffect(() => {\n    requestForcedReflow(() => {\n      const container = containerRef.current!;\n      const state = stateRef.current;\n\n      state.listItemElements = container.querySelectorAll<HTMLDivElement>(itemSelector);\n\n      let newScrollTop: number;\n\n      if (state.currentAnchor && Array.from(state.listItemElements).includes(state.currentAnchor)) {\n        const { scrollTop } = container;\n        const newAnchorTop = state.currentAnchor!.getBoundingClientRect().top;\n        newScrollTop = scrollTop + (newAnchorTop - state.currentAnchorTop!);\n      } else {\n        const nextAnchor = state.listItemElements[0];\n        if (nextAnchor) {\n          state.currentAnchor = nextAnchor;\n          state.currentAnchorTop = nextAnchor.getBoundingClientRect().top;\n        }\n      }\n\n      if (withAbsolutePositioning || noScrollRestore) {\n        return undefined;\n      }\n\n      const { scrollTop } = container;\n      if (noScrollRestoreOnTop && scrollTop === 0) {\n        return undefined;\n      }\n\n      return () => {\n        resetScroll(container, newScrollTop);\n\n        state.isScrollTopJustUpdated = true;\n      };\n    });\n  }, [items, itemSelector, noScrollRestore, noScrollRestoreOnTop, cacheBuster, withAbsolutePositioning]);\n\n  const handleScroll = useLastCallback((e: UIEvent<HTMLDivElement>) => {\n    if (loadMoreForwards && loadMoreBackwards) {\n      const {\n        isScrollTopJustUpdated, currentAnchor, currentAnchorTop,\n      } = stateRef.current;\n      const listItemElements = stateRef.current.listItemElements!;\n\n      if (isScrollTopJustUpdated) {\n        stateRef.current.isScrollTopJustUpdated = false;\n        return;\n      }\n\n      const listLength = listItemElements.length;\n      const container = containerRef.current!;\n      const { scrollTop, scrollHeight, offsetHeight } = container;\n      const top = listLength ? listItemElements[0].offsetTop : 0;\n      const isNearTop = scrollTop <= top + sensitiveArea;\n      const bottom = listLength\n        ? listItemElements[listLength - 1].offsetTop + listItemElements[listLength - 1].offsetHeight\n        : scrollHeight;\n      const isNearBottom = bottom - (scrollTop + offsetHeight) <= sensitiveArea;\n      let isUpdated = false;\n\n      if (isNearTop) {\n        const nextAnchor = listItemElements[0];\n        if (nextAnchor) {\n          const nextAnchorTop = nextAnchor.getBoundingClientRect().top;\n          const newAnchorTop = currentAnchor?.offsetParent && currentAnchor !== nextAnchor\n            ? currentAnchor.getBoundingClientRect().top\n            : nextAnchorTop;\n          const isMovingUp = (\n            currentAnchor && currentAnchorTop !== undefined && newAnchorTop > currentAnchorTop\n          );\n\n          if (isMovingUp) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchorTop;\n            isUpdated = true;\n            loadMoreForwards();\n          }\n        }\n      }\n\n      if (isNearBottom) {\n        const nextAnchor = listItemElements[listLength - 1];\n        if (nextAnchor) {\n          const nextAnchorTop = nextAnchor.getBoundingClientRect().top;\n          const newAnchorTop = currentAnchor?.offsetParent && currentAnchor !== nextAnchor\n            ? currentAnchor.getBoundingClientRect().top\n            : nextAnchorTop;\n          const isMovingDown = (\n            currentAnchor && currentAnchorTop !== undefined && newAnchorTop < currentAnchorTop\n          );\n\n          if (isMovingDown) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchorTop;\n            isUpdated = true;\n            loadMoreBackwards();\n          }\n        }\n      }\n\n      if (!isUpdated) {\n        if (currentAnchor?.offsetParent) {\n          stateRef.current.currentAnchorTop = currentAnchor.getBoundingClientRect().top;\n        } else {\n          const nextAnchor = listItemElements[0];\n\n          if (nextAnchor) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchor.getBoundingClientRect().top;\n          }\n        }\n      }\n    }\n\n    if (onScroll) {\n      onScroll(e);\n    }\n  });\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      onScroll={handleScroll}\n      teactFastList={!noFastList && !withAbsolutePositioning}\n      onKeyDown={onKeyDown}\n      onDragOver={onDragOver}\n      onDragLeave={onDragLeave}\n      style={style}\n    >\n      {beforeChildren}\n      {withAbsolutePositioning && items?.length ? (\n        <div\n          teactFastList={!noFastList}\n          style={buildStyle('position: relative', IS_ANDROID && `height: ${maxHeight}px`)}\n        >\n          {children}\n        </div>\n      ) : children}\n    </div>\n  );\n};\n\nexport default InfiniteScroll;\n","import type { RefObject } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { useRef } from '../../lib/teact/teact';\nimport { requestMeasure } from '../../lib/fasterdom/fasterdom';\n\nimport { IS_TOUCH_ENV, MouseButton } from '../../util/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useMenuPosition from '../../hooks/useMenuPosition';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport { useFastClick } from '../../hooks/useFastClick';\n\nimport RippleEffect from './RippleEffect';\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\nimport MenuSeparator from './MenuSeparator';\nimport Button from './Button';\n\nimport './ListItem.scss';\n\ntype MenuItemContextActionItem = {\n  title: string;\n  icon: string;\n  destructive?: boolean;\n  handler?: () => void;\n};\n\ntype MenuItemContextActionSeparator = {\n  isSeparator: true;\n  key?: string;\n};\n\nexport type MenuItemContextAction =\n  MenuItemContextActionItem\n  | MenuItemContextActionSeparator;\n\ninterface OwnProps {\n  ref?: RefObject<HTMLDivElement>;\n  buttonRef?: RefObject<HTMLDivElement | HTMLAnchorElement>;\n  icon?: string;\n  leftElement?: TeactNode;\n  secondaryIcon?: string;\n  rightElement?: TeactNode;\n  buttonClassName?: string;\n  className?: string;\n  style?: string;\n  children: React.ReactNode;\n  disabled?: boolean;\n  allowDisabledClick?: boolean;\n  ripple?: boolean;\n  narrow?: boolean;\n  inactive?: boolean;\n  focus?: boolean;\n  destructive?: boolean;\n  multiline?: boolean;\n  isStatic?: boolean;\n  contextActions?: MenuItemContextAction[];\n  withPortalForMenu?: boolean;\n  href?: string;\n  onMouseDown?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onClick?: (e: React.MouseEvent<HTMLElement>, arg?: any) => void;\n  onContextMenu?: (e: React.MouseEvent<HTMLElement>) => void;\n  clickArg?: any;\n  onSecondaryIconClick?: (e: React.MouseEvent<HTMLButtonElement>) => void;\n  onDragEnter?: (e: React.DragEvent<HTMLDivElement>) => void;\n}\n\nconst ListItem: FC<OwnProps> = ({\n  ref,\n  buttonRef,\n  icon,\n  leftElement,\n  buttonClassName,\n  secondaryIcon,\n  rightElement,\n  className,\n  style,\n  children,\n  disabled,\n  allowDisabledClick,\n  ripple,\n  narrow,\n  inactive,\n  focus,\n  destructive,\n  multiline,\n  isStatic,\n  contextActions,\n  withPortalForMenu,\n  href,\n  onMouseDown,\n  onClick,\n  onContextMenu,\n  clickArg,\n  onSecondaryIconClick,\n  onDragEnter,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n  const [isTouched, markIsTouched, unmarkIsTouched] = useFlag();\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(containerRef, !contextActions);\n\n  const getTriggerElement = useLastCallback(() => containerRef.current);\n  const getRootElement = useLastCallback(() => containerRef.current!.closest('.custom-scroll'));\n  const getMenuElement = useLastCallback(() => {\n    return (withPortalForMenu ? document.querySelector('#portals') : containerRef.current)!\n      .querySelector('.ListItem-context-menu .bubble');\n  });\n  const getLayout = useLastCallback(() => ({ withPortal: withPortalForMenu }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  const handleClickEvent = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    const hasModifierKey = e.ctrlKey || e.metaKey || e.shiftKey;\n    if (!hasModifierKey && e.button === MouseButton.Main) {\n      e.preventDefault();\n    }\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    if ((disabled && !allowDisabledClick) || !onClick) {\n      return;\n    }\n\n    if (href) {\n      // Allow default behavior for opening links in new tab\n      const hasModifierKey = e.ctrlKey || e.metaKey || e.shiftKey;\n      if ((hasModifierKey && e.button === MouseButton.Main) || e.button === MouseButton.Auxiliary) {\n        return;\n      }\n\n      e.preventDefault();\n    }\n\n    onClick(e, clickArg);\n\n    if (IS_TOUCH_ENV && !ripple) {\n      markIsTouched();\n      requestMeasure(unmarkIsTouched);\n    }\n  });\n\n  const {\n    handleClick: handleSecondaryIconClick,\n    handleMouseDown: handleSecondaryIconMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLButtonElement>) => {\n    if ((disabled && !allowDisabledClick) || e.button !== 0 || (!onSecondaryIconClick && !contextActions)) return;\n\n    e.stopPropagation();\n\n    if (onSecondaryIconClick) {\n      onSecondaryIconClick(e);\n    } else {\n      handleContextMenu(e);\n    }\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    if (inactive || IS_TOUCH_ENV) {\n      return;\n    }\n    if (contextActions && (e.button === MouseButton.Secondary || !onClick)) {\n      handleBeforeContextMenu(e);\n    }\n    if (e.button === MouseButton.Main) {\n      if (!onClick) {\n        handleContextMenu(e);\n      } else {\n        handleClick(e);\n      }\n    }\n  });\n\n  const lang = useLang();\n\n  const fullClassName = buildClassName(\n    'ListItem',\n    className,\n    !isStatic && 'no-selection',\n    ripple && 'has-ripple',\n    narrow && 'narrow',\n    disabled && 'disabled',\n    allowDisabledClick && 'click-allowed',\n    inactive && 'inactive',\n    contextMenuPosition && 'has-menu-open',\n    focus && 'focus',\n    destructive && 'destructive',\n    multiline && 'multiline',\n    isStatic && 'is-static',\n  );\n\n  const ButtonElementTag = href ? 'a' : 'div';\n\n  return (\n    <div\n      ref={containerRef}\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={style}\n      onMouseDown={onMouseDown}\n      onDragEnter={onDragEnter}\n    >\n      <ButtonElementTag\n        className={buildClassName('ListItem-button', isTouched && 'active', buttonClassName)}\n        role={!isStatic ? 'button' : undefined}\n        href={href}\n        ref={buttonRef as any /* TS requires specific types for refs */}\n        tabIndex={!isStatic ? 0 : undefined}\n        onClick={(!inactive && IS_TOUCH_ENV) ? handleClick : handleClickEvent}\n        onMouseDown={handleMouseDown}\n        onContextMenu={onContextMenu || ((!inactive && contextActions) ? handleContextMenu : undefined)}\n      >\n        {leftElement}\n        {icon && (\n          <i className={`icon icon-${icon}`} />\n        )}\n        {multiline && (<div className=\"multiline-item\">{children}</div>)}\n        {!multiline && children}\n        {!disabled && !inactive && ripple && (\n          <RippleEffect />\n        )}\n        {secondaryIcon && (\n          <Button\n            className=\"secondary-icon\"\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            onClick={handleSecondaryIconClick}\n            onMouseDown={handleSecondaryIconMouseDown}\n          >\n            <i className={`icon icon-${secondaryIcon}`} />\n          </Button>\n        )}\n        {rightElement}\n      </ButtonElementTag>\n      {contextActions && contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"ListItem-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          withPortal={withPortalForMenu}\n        >\n          {contextActions.map((action) => (\n            ('isSeparator' in action) ? (\n              <MenuSeparator key={action.key || 'separator'} />\n            ) : (\n              <MenuItem\n                key={action.title}\n                icon={action.icon}\n                destructive={action.destructive}\n                disabled={!action.handler}\n                onClick={action.handler}\n              >\n                {action.title}\n              </MenuItem>\n            )\n          ))}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default ListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GC8g9Q16IaK76g6rcU78\"};","import React from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './MenuSeparator.module.scss';\n\ntype OwnProps = {\n  className?: string;\n};\n\nconst MenuSeparator: FC<OwnProps> = ({ className }) => {\n  return (\n    <div className={buildClassName(styles.root, className)} />\n  );\n};\n\nexport default MenuSeparator;\n","import type { GlobalState } from '../types';\nimport { selectChat, selectChatFullInfo } from './chats';\nimport { getMainUsername, isChatBasicGroup } from '../helpers';\nimport { selectUser } from './users';\n\nexport function selectChatGroupCall<T extends GlobalState>(global: T, chatId: string) {\n  const fullInfo = selectChatFullInfo(global, chatId);\n  if (!fullInfo || !fullInfo.groupCallId) return undefined;\n\n  return selectGroupCall(global, fullInfo.groupCallId);\n}\n\nexport function selectGroupCall<T extends GlobalState>(global: T, groupCallId: string) {\n  return global.groupCalls.byId[groupCallId];\n}\n\nexport function selectGroupCallParticipant<T extends GlobalState>(\n  global: T, groupCallId: string, participantId: string,\n) {\n  return selectGroupCall(global, groupCallId)?.participants[participantId];\n}\n\nexport function selectIsAdminInActiveGroupCall<T extends GlobalState>(global: T): boolean {\n  const chatId = selectActiveGroupCall(global)?.chatId;\n\n  if (!chatId) return false;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return false;\n\n  return (isChatBasicGroup(chat) && chat.isCreator) || Boolean(chat.adminRights?.manageCall);\n}\n\nexport function selectActiveGroupCall<T extends GlobalState>(global: T) {\n  const { groupCalls: { activeGroupCallId } } = global;\n  if (!activeGroupCallId) {\n    return undefined;\n  }\n\n  return selectGroupCall(global, activeGroupCallId);\n}\n\nexport function selectPhoneCallUser<T extends GlobalState>(global: T) {\n  const { phoneCall, currentUserId } = global;\n  if (!phoneCall || !phoneCall.participantId || !phoneCall.adminId) {\n    return undefined;\n  }\n\n  const id = phoneCall.adminId === currentUserId ? phoneCall.participantId : phoneCall.adminId;\n  return selectUser(global, id);\n}\n\nexport function selectCanInviteToActiveGroupCall<T extends GlobalState>(global: T) {\n  const groupCall = selectActiveGroupCall(global);\n\n  if (!groupCall || !groupCall.chatId) {\n    return false;\n  }\n\n  const chat = selectChat(global, groupCall.chatId);\n  if (!chat) {\n    return false;\n  }\n\n  const hasPublicUsername = Boolean(getMainUsername(chat));\n  if (hasPublicUsername) {\n    return true;\n  }\n\n  const inviteLink = selectChatFullInfo(global, chat.id)?.inviteLink;\n  return Boolean(inviteLink);\n}\n","import type { ApiLimitType, GlobalState } from '../types';\nimport { selectIsCurrentUserPremium } from './users';\nimport { DEFAULT_LIMITS } from '../../config';\n\nexport function selectCurrentLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) {\n    return DEFAULT_LIMITS[limit][0];\n  }\n\n  const isPremium = selectIsCurrentUserPremium(global);\n  const { limits } = appConfig;\n\n  // When there are new limits when updating a layer, until we get a new configuration, we must use the default values\n  const value = limits[limit]?.[isPremium ? 1 : 0] ?? DEFAULT_LIMITS[limit][isPremium ? 1 : 0];\n  if (limit === 'dialogFilters') return value + 1; // Server does not count \"All\" as folder, but we need to\n  return value;\n}\n\nexport function selectPremiumLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) return DEFAULT_LIMITS[limit][1];\n\n  const { limits } = appConfig;\n\n  return limits[limit][1];\n}\n","import type { RefObject } from 'react';\nimport { useState, useEffect } from '../lib/teact/teact';\nimport { addExtraClass, removeExtraClass } from '../lib/teact/teact-dom';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\n\nimport type { IAnchorPosition } from '../types';\nimport {\n  IS_TOUCH_ENV, IS_PWA, IS_IOS,\n} from '../util/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst LONG_TAP_DURATION_MS = 200;\nconst IOS_PWA_CONTEXT_MENU_DELAY_MS = 100;\n\nfunction stopEvent(e: Event) {\n  e.stopImmediatePropagation();\n  e.preventDefault();\n  e.stopPropagation();\n}\n\nconst useContextMenuHandlers = (\n  elementRef: RefObject<HTMLElement>,\n  isMenuDisabled?: boolean,\n  shouldDisableOnLink?: boolean,\n  shouldDisableOnLongTap?: boolean,\n) => {\n  const [isContextMenuOpen, setIsContextMenuOpen] = useState(false);\n  const [contextMenuPosition, setContextMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n  const [contextMenuTarget, setContextMenuTarget] = useState<HTMLElement | undefined>(undefined);\n\n  const handleBeforeContextMenu = useLastCallback((e: React.MouseEvent) => {\n    if (!isMenuDisabled && e.button === 2) {\n      requestMutation(() => {\n        addExtraClass(e.target as HTMLElement, 'no-selection');\n      });\n    }\n  });\n\n  const handleContextMenu = useLastCallback((e: React.MouseEvent) => {\n    requestMutation(() => {\n      removeExtraClass(e.target as HTMLElement, 'no-selection');\n    });\n\n    if (isMenuDisabled || (shouldDisableOnLink && (e.target as HTMLElement).matches('a[href]'))) {\n      return;\n    }\n    e.preventDefault();\n\n    if (contextMenuPosition) {\n      return;\n    }\n\n    setIsContextMenuOpen(true);\n    setContextMenuPosition({ x: e.clientX, y: e.clientY });\n    setContextMenuTarget(e.target as HTMLElement);\n  });\n\n  const handleContextMenuClose = useLastCallback(() => {\n    setIsContextMenuOpen(false);\n  });\n\n  const handleContextMenuHide = useLastCallback(() => {\n    setContextMenuPosition(undefined);\n  });\n\n  // Support context menu on touch devices\n  useEffect(() => {\n    if (isMenuDisabled || !IS_TOUCH_ENV || shouldDisableOnLongTap) {\n      return undefined;\n    }\n\n    const element = elementRef.current;\n    if (!element) {\n      return undefined;\n    }\n\n    let timer: number | undefined;\n\n    const clearLongPressTimer = () => {\n      if (timer) {\n        clearTimeout(timer);\n        timer = undefined;\n      }\n    };\n\n    const emulateContextMenuEvent = (originalEvent: TouchEvent) => {\n      clearLongPressTimer();\n\n      const { clientX, clientY, target } = originalEvent.touches[0];\n\n      if (contextMenuPosition || (shouldDisableOnLink && (target as HTMLElement).matches('a[href]'))) {\n        return;\n      }\n\n      // Temporarily intercept and clear the next click\n      element.addEventListener('touchend', (e) => {\n        // On iOS in PWA mode, the context menu may cause click-through to the element in the menu upon opening\n        if (IS_IOS && IS_PWA) {\n          setTimeout(() => {\n            element.removeEventListener('mousedown', stopEvent, {\n              capture: true,\n            });\n            element.removeEventListener('click', stopEvent, {\n              capture: true,\n            });\n          }, IOS_PWA_CONTEXT_MENU_DELAY_MS);\n        }\n        stopEvent(e);\n      }, {\n        once: true,\n        capture: true,\n      });\n\n      // On iOS15, in PWA mode, the context menu immediately closes after opening\n      if (IS_PWA && IS_IOS) {\n        element.addEventListener('mousedown', stopEvent, {\n          once: true,\n          capture: true,\n        });\n        element.addEventListener('click', stopEvent, {\n          once: true,\n          capture: true,\n        });\n      }\n\n      setIsContextMenuOpen(true);\n      setContextMenuPosition({ x: clientX, y: clientY });\n    };\n\n    const startLongPressTimer = (e: TouchEvent) => {\n      if (isMenuDisabled) {\n        return;\n      }\n      clearLongPressTimer();\n\n      timer = window.setTimeout(() => emulateContextMenuEvent(e), LONG_TAP_DURATION_MS);\n    };\n\n    // @perf Consider event delegation\n    element.addEventListener('touchstart', startLongPressTimer, { passive: true });\n    element.addEventListener('touchcancel', clearLongPressTimer, true);\n    element.addEventListener('touchend', clearLongPressTimer, true);\n    element.addEventListener('touchmove', clearLongPressTimer, { passive: true });\n\n    return () => {\n      clearLongPressTimer();\n      element.removeEventListener('touchstart', startLongPressTimer);\n      element.removeEventListener('touchcancel', clearLongPressTimer, true);\n      element.removeEventListener('touchend', clearLongPressTimer, true);\n      element.removeEventListener('touchmove', clearLongPressTimer);\n    };\n  }, [contextMenuPosition, isMenuDisabled, shouldDisableOnLongTap, elementRef, shouldDisableOnLink]);\n\n  return {\n    isContextMenuOpen,\n    contextMenuPosition,\n    contextMenuTarget,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  };\n};\n\nexport default useContextMenuHandlers;\n","import type React from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV, MouseButton } from '../util/windowEnvironment';\n\ntype EventArg<E> = React.MouseEvent<E>;\ntype EventHandler<E> = (e: EventArg<E>) => void;\n\nexport function useFastClick<T extends HTMLDivElement | HTMLButtonElement>(callback?: EventHandler<T>) {\n  const wrapperHandler = callback ? (e: EventArg<T>) => {\n    if (e.type === 'mousedown' && e.button !== MouseButton.Main) {\n      return;\n    }\n\n    callback(e);\n  } : undefined;\n\n  return IS_TOUCH_ENV\n    ? { handleClick: wrapperHandler }\n    : { handleMouseDown: wrapperHandler };\n}\n","import { useRef } from '../lib/teact/teact';\nimport { LoadMoreDirection } from '../types';\n\nimport { areSortedArraysEqual } from '../util/iteratees';\n\nimport useLastCallback from './useLastCallback';\nimport useForceUpdate from './useForceUpdate';\nimport usePrevious from './usePrevious';\n\ntype GetMore = (args: { direction: LoadMoreDirection }) => void;\ntype LoadMoreBackwards = (args: { offsetId?: string | number }) => void;\n\nconst DEFAULT_LIST_SLICE = 30;\n\nconst useInfiniteScroll = <ListId extends string | number>(\n  loadMoreBackwards?: LoadMoreBackwards,\n  listIds?: ListId[],\n  isDisabled = false,\n  listSlice = DEFAULT_LIST_SLICE,\n): [ListId[]?, GetMore?] => {\n  const requestParamsRef = useRef<{\n    direction?: LoadMoreDirection;\n    offsetId?: ListId;\n  }>();\n\n  const currentStateRef = useRef<{ viewportIds: ListId[]; isOnTop: boolean } | undefined>();\n  if (!currentStateRef.current && listIds && !isDisabled) {\n    const {\n      newViewportIds,\n      newIsOnTop,\n    } = getViewportSlice(listIds, LoadMoreDirection.Forwards, listSlice, listIds[0]);\n    currentStateRef.current = { viewportIds: newViewportIds, isOnTop: newIsOnTop };\n  }\n\n  const forceUpdate = useForceUpdate();\n\n  if (isDisabled) {\n    requestParamsRef.current = {};\n  }\n\n  const prevListIds = usePrevious(listIds);\n  const prevIsDisabled = usePrevious(isDisabled);\n  if (listIds && !isDisabled && (listIds !== prevListIds || isDisabled !== prevIsDisabled)) {\n    const { viewportIds, isOnTop } = currentStateRef.current || {};\n    const currentMiddleId = viewportIds && !isOnTop ? viewportIds[Math.round(viewportIds.length / 2)] : undefined;\n    const defaultOffsetId = currentMiddleId && listIds.includes(currentMiddleId) ? currentMiddleId : listIds[0];\n    const { offsetId = defaultOffsetId, direction = LoadMoreDirection.Forwards } = requestParamsRef.current || {};\n    const { newViewportIds, newIsOnTop } = getViewportSlice(listIds, direction, listSlice, offsetId);\n\n    requestParamsRef.current = {};\n\n    if (!viewportIds || !areSortedArraysEqual(viewportIds, newViewportIds)) {\n      currentStateRef.current = { viewportIds: newViewportIds, isOnTop: newIsOnTop };\n    }\n  } else if (!listIds) {\n    currentStateRef.current = undefined;\n  }\n\n  const getMore: GetMore = useLastCallback(({\n    direction,\n    noScroll,\n  }: { direction: LoadMoreDirection; noScroll?: boolean }) => {\n    const { viewportIds } = currentStateRef.current || {};\n\n    const offsetId = viewportIds\n      ? direction === LoadMoreDirection.Backwards ? viewportIds[viewportIds.length - 1] : viewportIds[0]\n      : undefined;\n\n    if (!listIds) {\n      if (loadMoreBackwards) {\n        loadMoreBackwards({ offsetId });\n      }\n\n      return;\n    }\n\n    const {\n      newViewportIds, areSomeLocal, areAllLocal, newIsOnTop,\n    } = getViewportSlice(listIds, direction, listSlice, offsetId);\n\n    if (areSomeLocal && !(viewportIds && areSortedArraysEqual(viewportIds, newViewportIds))) {\n      currentStateRef.current = { viewportIds: newViewportIds, isOnTop: newIsOnTop };\n      forceUpdate();\n    }\n\n    if (!areAllLocal && loadMoreBackwards) {\n      if (!noScroll) {\n        requestParamsRef.current = { ...requestParamsRef.current, direction, offsetId };\n      }\n\n      loadMoreBackwards({ offsetId });\n    }\n  });\n\n  return isDisabled ? [listIds] : [currentStateRef.current?.viewportIds, getMore];\n};\n\nfunction getViewportSlice<ListId extends string | number>(\n  sourceIds: ListId[],\n  direction: LoadMoreDirection,\n  listSlice: number,\n  offsetId?: ListId,\n) {\n  const { length } = sourceIds;\n  const index = offsetId ? sourceIds.indexOf(offsetId) : 0;\n  const isForwards = direction === LoadMoreDirection.Forwards;\n  const indexForDirection = isForwards ? index : (index + 1) || length;\n  const from = Math.max(0, indexForDirection - listSlice);\n  const to = indexForDirection + listSlice - 1;\n  const newViewportIds = sourceIds.slice(Math.max(0, from), to + 1);\n\n  let areSomeLocal;\n  let areAllLocal;\n  switch (direction) {\n    case LoadMoreDirection.Forwards:\n      areSomeLocal = indexForDirection >= 0;\n      areAllLocal = from >= 0;\n      break;\n    case LoadMoreDirection.Backwards:\n      areSomeLocal = indexForDirection < length;\n      areAllLocal = to <= length - 1;\n      break;\n  }\n\n  return {\n    newViewportIds,\n    areSomeLocal,\n    areAllLocal,\n    newIsOnTop: newViewportIds[0] === sourceIds[0],\n  };\n}\n\nexport default useInfiniteScroll;\n","import { useEffect, useLayoutEffect, useRef } from '../lib/teact/teact';\n\nfunction useInterval(callback: NoneToVoidFunction, delay?: number, noFirst = false) {\n  const savedCallback = useRef(callback);\n\n  useLayoutEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (delay === undefined) {\n      return undefined;\n    }\n\n    const id = setInterval(() => savedCallback.current(), delay);\n    if (!noFirst) savedCallback.current();\n\n    return () => clearInterval(id);\n  }, [delay, noFirst]);\n}\n\nexport default useInterval;\n","import { useState, useEffect } from '../lib/teact/teact';\nimport type { IAnchorPosition } from '../types';\n\ninterface Layout {\n  extraPaddingX?: number;\n  extraTopPadding?: number;\n  marginSides?: number;\n  extraMarginTop?: number;\n  menuElMinWidth?: number;\n  shouldAvoidNegativePosition?: boolean;\n  withPortal?: boolean;\n  isDense?: boolean; //  Allows you to place the menu as close to the edges of the area as possible\n}\n\nconst MENU_POSITION_VISUAL_COMFORT_SPACE_PX = 16;\nconst MENU_POSITION_BOTTOM_MARGIN = 12;\nconst EMPTY_RECT = {\n  width: 0, left: 0, height: 0, top: 0,\n};\n\nexport default function useMenuPosition(\n  anchor: IAnchorPosition | undefined,\n  getTriggerElement: () => HTMLElement | null,\n  getRootElement: () => HTMLElement | null,\n  getMenuElement: () => HTMLElement | null,\n  getLayout?: () => Layout,\n) {\n  const [positionX, setPositionX] = useState<'right' | 'left'>('right');\n  const [positionY, setPositionY] = useState<'top' | 'bottom'>('bottom');\n  const [transformOriginX, setTransformOriginX] = useState<number>();\n  const [transformOriginY, setTransformOriginY] = useState<number>();\n  const [withScroll, setWithScroll] = useState(false);\n  const [style, setStyle] = useState('');\n  const [menuStyle, setMenuStyle] = useState('opacity: 0;');\n\n  useEffect(() => {\n    const triggerEl = getTriggerElement();\n    if (!anchor || !triggerEl) {\n      return;\n    }\n\n    let { x, y } = anchor;\n    const anchorX = x;\n    const anchorY = y;\n\n    const menuEl = getMenuElement();\n    const rootEl = getRootElement();\n\n    const {\n      extraPaddingX = 0,\n      extraTopPadding = 0,\n      marginSides = 0,\n      extraMarginTop = 0,\n      menuElMinWidth = 0,\n      shouldAvoidNegativePosition = false,\n      withPortal = false,\n      isDense = false,\n    } = getLayout?.() || {};\n\n    const marginTop = menuEl ? parseInt(getComputedStyle(menuEl).marginTop, 10) + extraMarginTop : undefined;\n\n    const { offsetWidth: menuElWidth, offsetHeight: menuElHeight } = menuEl || { offsetWidth: 0, offsetHeight: 0 };\n    const menuRect = menuEl ? {\n      width: Math.max(menuElWidth, menuElMinWidth),\n      height: menuElHeight + marginTop!,\n    } : EMPTY_RECT;\n\n    const rootRect = rootEl ? rootEl.getBoundingClientRect() : EMPTY_RECT;\n\n    let horizontalPosition: 'left' | 'right';\n    let verticalPosition: 'top' | 'bottom';\n    if (isDense || (x + menuRect.width + extraPaddingX < rootRect.width + rootRect.left)) {\n      x += 3;\n      horizontalPosition = 'left';\n    } else if (x - menuRect.width - rootRect.left > 0) {\n      horizontalPosition = 'right';\n      x -= 3;\n    } else {\n      horizontalPosition = 'left';\n      x = 16;\n    }\n    setPositionX(horizontalPosition);\n\n    if (marginSides\n      && horizontalPosition === 'right' && (x + extraPaddingX + marginSides >= rootRect.width + rootRect.left)) {\n      x -= marginSides;\n    }\n\n    if (marginSides && horizontalPosition === 'left') {\n      if (x + extraPaddingX + marginSides + menuRect.width >= rootRect.width + rootRect.left) {\n        x -= marginSides;\n      } else if (x - marginSides <= 0) {\n        x += marginSides;\n      }\n    }\n\n    if (isDense || (y + menuRect.height < rootRect.height + rootRect.top)) {\n      verticalPosition = 'top';\n    } else {\n      verticalPosition = 'bottom';\n\n      if (y - menuRect.height < rootRect.top + extraTopPadding) {\n        y = rootRect.top + rootRect.height;\n      }\n    }\n    setPositionY(verticalPosition);\n\n    const triggerRect = triggerEl.getBoundingClientRect();\n\n    const addedYForPortalPositioning = (withPortal ? triggerRect.top : 0);\n    const addedXForPortalPositioning = (withPortal ? triggerRect.left : 0);\n\n    const leftWithPossibleNegative = Math.min(\n      x - triggerRect.left,\n      rootRect.width - menuRect.width - MENU_POSITION_VISUAL_COMFORT_SPACE_PX,\n    );\n    let left = (horizontalPosition === 'left'\n      ? (withPortal || shouldAvoidNegativePosition\n        ? Math.max(MENU_POSITION_VISUAL_COMFORT_SPACE_PX, leftWithPossibleNegative)\n        : leftWithPossibleNegative)\n      : (x - triggerRect.left)) + addedXForPortalPositioning;\n    let top = y - triggerRect.top + addedYForPortalPositioning;\n\n    if (isDense) {\n      left = Math.min(left, rootRect.width - menuRect.width - MENU_POSITION_VISUAL_COMFORT_SPACE_PX);\n      top = Math.min(top, rootRect.height - menuRect.height - MENU_POSITION_VISUAL_COMFORT_SPACE_PX);\n    }\n\n    // Avoid hiding external parts of menus on mobile devices behind the edges of the screen (ReactionSelector for example)\n    const addedXForMenuPositioning = menuElMinWidth ? Math.max(0, (menuElMinWidth - menuElWidth) / 2) : 0;\n    if (left - addedXForMenuPositioning < 0 && shouldAvoidNegativePosition) {\n      left = addedXForMenuPositioning + MENU_POSITION_VISUAL_COMFORT_SPACE_PX;\n    }\n\n    const menuMaxHeight = rootRect.height - MENU_POSITION_BOTTOM_MARGIN - (marginTop || 0);\n\n    setWithScroll(menuMaxHeight < menuRect.height);\n    setMenuStyle(`max-height: ${menuMaxHeight}px;`);\n    setStyle(`left: ${left}px; top: ${top}px`);\n    const offsetX = (anchorX + addedXForPortalPositioning - triggerRect.left) - left;\n    const offsetY = (anchorY + addedYForPortalPositioning - triggerRect.top) - top - (marginTop || 0);\n    setTransformOriginX(horizontalPosition === 'left' ? offsetX : menuRect.width + offsetX);\n    setTransformOriginY(verticalPosition === 'bottom' ? menuRect.height + offsetY : offsetY);\n  }, [\n    anchor, getMenuElement, getRootElement, getTriggerElement, getLayout,\n  ]);\n\n  return {\n    positionX,\n    positionY,\n    transformOriginX,\n    transformOriginY,\n    style,\n    menuStyle,\n    withScroll,\n  };\n}\n","import { IS_IOS } from './windowEnvironment';\nimport forceReflow from './forceReflow';\n\nconst resetScroll = (container: HTMLDivElement, scrollTop?: number) => {\n  if (IS_IOS) {\n    container.style.overflow = 'hidden';\n  }\n\n  if (scrollTop !== undefined) {\n    container.scrollTop = scrollTop;\n  }\n\n  if (IS_IOS) {\n    container.style.overflow = '';\n  }\n};\n\n// Workaround for https://bugs.chromium.org/p/chromium/issues/detail?id=1264266\nexport function patchChromiumScroll(element: HTMLElement) {\n  element.style.display = 'none';\n  forceReflow(element);\n  element.style.display = '';\n}\n\nexport default resetScroll;\n"],"names":["cn","createClassNameBuilder","media","icon","memo","_ref","className","size","chat","user","photo","userStatus","text","isSavedMessages","withVideo","loopIndefinitely","lastSyncTime","noPersonalPhoto","onClick","ref","useRef","videoLoopCountRef","isDeleted","isDeletedUser","isReplies","isChatWithRepliesBot","id","isForum","imageHash","videoHash","shouldLoadVideo","isVideo","shouldFetchBig","getChatAvatarHash","undefined","imgBlobUrl","useMedia","ApiMediaFormat","videoBlobUrl","hasBlobUrl","Boolean","shouldPlayVideo","transitionClassNames","useMediaTransition","isOnline","isUserOnline","onlineTransitionClassNames","onlineClassNamesPrefixed","useMemo","split","map","c","join","handleVideoEnded","useLastCallback","e","video","currentTarget","current","style","display","lang","useLang","content","author","getUserFullName","getChatTitle","React","buildClassName","role","src","alt","decoding","OptimizedVideo","canPlay","muted","loop","autoPlay","disablePictureInPicture","playsInline","onEnded","userFullName","getFirstLetters","title","isUserId","fullClassName","getUserColorKey","hasMedia","handleClick","handleMouseDown","useFastClick","senderId","IS_TEST","onMouseDown","renderText","fakeType","VERIFIED_ICON","__html","VerifiedIcon","dangerouslySetInnerHTML","peer","noVerified","noFake","withEmojiStatus","emojiStatusSize","noLoopLimit","onEmojiStatusClick","observeIntersection","isUser","emojiStatus","isPremium","styles","dir","isVerified","FakeIcon","CustomEmoji","documentId","loopLimit","EMOJI_STATUS_LOOP_LIMIT","observeIntersectionForLoading","PremiumIcon","PREMIUM_ICON","store","withGradient","big","html","generateIdFor","getPremiumIconGradient","withGlobal","global","_ref2","userId","selectCurrentChat","selectUser","contactName","getUserFirstOrLastName","isOpen","onClose","deleteChatMember","getActions","handleDeleteChatMember","useCallback","chatId","ConfirmDialog","textParts","confirmLabel","confirmHandler","confirmIsDestructive","onCloseAnimationEnd","header","areButtonsInColumn","children","containerRef","handleSelectWithEnter","index","handleKeyDown","useKeyboardListNavigation","Modal","textPart","onKeyDown","Button","isText","color","isShown","ariaLabel","disabled","buttonClassName","round","tabIndex","isRtl","DEFAULT_LIST_SELECTOR","DEFAULT_PRELOAD_BACKWARDS","DEFAULT_SENSITIVE_AREA","items","itemSelector","preloadBackwards","sensitiveArea","withAbsolutePositioning","maxHeight","noScrollRestore","noScrollRestoreOnTop","noFastList","cacheBuster","beforeChildren","onLoadMore","onScroll","onDragOver","onDragLeave","stateRef","loadMoreBackwards","loadMoreForwards","debounce","noScroll","arguments","length","direction","LoadMoreDirection","useEffect","scrollHeight","clientHeight","useLayoutEffect","requestForcedReflow","container","state","newScrollTop","listItemElements","querySelectorAll","currentAnchor","Array","from","includes","scrollTop","newAnchorTop","getBoundingClientRect","top","currentAnchorTop","nextAnchor","resetScroll","isScrollTopJustUpdated","handleScroll","listLength","offsetHeight","isNearTop","offsetTop","isNearBottom","isUpdated","nextAnchorTop","offsetParent","teactFastList","buildStyle","IS_ANDROID","buttonRef","leftElement","secondaryIcon","rightElement","allowDisabledClick","ripple","narrow","inactive","focus","destructive","multiline","isStatic","contextActions","withPortalForMenu","href","onContextMenu","clickArg","onSecondaryIconClick","onDragEnter","isTouched","markIsTouched","unmarkIsTouched","useFlag","isContextMenuOpen","contextMenuPosition","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","getTriggerElement","getRootElement","closest","getMenuElement","document","querySelector","getLayout","withPortal","positionX","positionY","transformOriginX","transformOriginY","menuStyle","useMenuPosition","handleClickEvent","ctrlKey","metaKey","shiftKey","button","MouseButton","preventDefault","IS_TOUCH_ENV","requestMeasure","handleSecondaryIconClick","handleSecondaryIconMouseDown","stopPropagation","ButtonElementTag","RippleEffect","Menu","autoClose","action","MenuSeparator","key","MenuItem","handler","selectChatGroupCall","fullInfo","selectChatFullInfo","groupCallId","selectGroupCall","groupCalls","byId","selectGroupCallParticipant","participantId","participants","selectIsAdminInActiveGroupCall","selectActiveGroupCall","selectChat","isChatBasicGroup","isCreator","adminRights","manageCall","activeGroupCallId","selectPhoneCallUser","phoneCall","currentUserId","adminId","selectCanInviteToActiveGroupCall","groupCall","getMainUsername","inviteLink","selectCurrentLimit","limit","_limits$limit","appConfig","DEFAULT_LIMITS","selectIsCurrentUserPremium","limits","value","selectPremiumLimit","stopEvent","stopImmediatePropagation","elementRef","isMenuDisabled","shouldDisableOnLink","shouldDisableOnLongTap","setIsContextMenuOpen","useState","setContextMenuPosition","contextMenuTarget","setContextMenuTarget","requestMutation","addExtraClass","target","removeExtraClass","matches","x","clientX","y","clientY","element","timer","clearLongPressTimer","clearTimeout","startLongPressTimer","window","setTimeout","originalEvent","touches","addEventListener","IS_IOS","IS_PWA","removeEventListener","capture","once","emulateContextMenuEvent","passive","callback","wrapperHandler","type","getViewportSlice","sourceIds","listSlice","offsetId","indexOf","indexForDirection","Math","max","to","newViewportIds","slice","areSomeLocal","areAllLocal","newIsOnTop","listIds","isDisabled","requestParamsRef","currentStateRef","viewportIds","isOnTop","forceUpdate","useForceUpdate","prevListIds","usePrevious","prevIsDisabled","currentMiddleId","defaultOffsetId","areSortedArraysEqual","getMore","delay","noFirst","savedCallback","setInterval","clearInterval","EMPTY_RECT","width","left","height","anchor","setPositionX","setPositionY","setTransformOriginX","setTransformOriginY","withScroll","setWithScroll","setStyle","setMenuStyle","triggerEl","anchorX","anchorY","menuEl","rootEl","extraPaddingX","extraTopPadding","marginSides","extraMarginTop","menuElMinWidth","shouldAvoidNegativePosition","isDense","marginTop","parseInt","getComputedStyle","offsetWidth","menuElWidth","menuElHeight","menuRect","rootRect","horizontalPosition","verticalPosition","triggerRect","addedYForPortalPositioning","addedXForPortalPositioning","leftWithPossibleNegative","min","addedXForMenuPositioning","menuMaxHeight","offsetX","offsetY","overflow"],"sourceRoot":""}