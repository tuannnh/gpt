{"version":3,"file":"5556.d39dcfdf3a7e1b954237.js","mappings":"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","sources":["webpack://telegram-t/./src/lib/rlottie/rlottie.worker.ts","webpack://telegram-t/./src/lib/video-preview/requestPart.ts","webpack://telegram-t/./src/lib/video-preview/MP4Demuxer.ts","webpack://telegram-t/./src/lib/video-preview/polyfill/encoded-video-chunk.ts","webpack://telegram-t/./src/lib/video-preview/polyfill/encoded-audio-chunk.ts","webpack://telegram-t/./src/lib/video-preview/polyfill/video-frame.ts","webpack://telegram-t/./src/lib/video-preview/polyfill/libav.ts","webpack://telegram-t/./src/lib/video-preview/polyfill/misc.ts","webpack://telegram-t/./src/lib/video-preview/polyfill/video-decoder.ts","webpack://telegram-t/./src/lib/video-preview/polyfill/rendering.ts","webpack://telegram-t/./src/lib/video-preview/polyfill/config.ts","webpack://telegram-t/./src/lib/video-preview/video-preview.worker.ts","webpack://telegram-t/./src/lib/video-preview/polyfill/index.ts","webpack://telegram-t/./node_modules/mp4box/dist/mp4box.all.js","webpack://telegram-t/./src/lib/rlottie/rlottie-wasm.js","webpack://telegram-t/./src/lib/rlottie/rlottie-wasm.js?3270"],"sourcesContent":["import { inflate } from 'pako/dist/pako_inflate';\nimport { createWorkerInterface } from '../../util/createPostMessageInterface';\nimport type { CancellableCallback } from '../../util/PostMessageConnector';\n\nimport 'script-loader!./rlottie-wasm';\n\ndeclare const Module: any;\n\ndeclare function allocate(...args: any[]): string;\n\ndeclare function intArrayFromString(str: String): string;\n\nlet rLottieApi: Record<string, Function>;\nconst rLottieApiPromise = new Promise<void>((resolve) => {\n  Module.onRuntimeInitialized = () => {\n    rLottieApi = {\n      init: Module.cwrap('lottie_init', '', []),\n      destroy: Module.cwrap('lottie_destroy', '', ['number']),\n      resize: Module.cwrap('lottie_resize', '', ['number', 'number', 'number']),\n      buffer: Module.cwrap('lottie_buffer', 'number', ['number']),\n      render: Module.cwrap('lottie_render', '', ['number', 'number']),\n      loadFromData: Module.cwrap('lottie_load_from_data', 'number', ['number', 'number']),\n    };\n\n    resolve();\n  };\n});\n\nconst HIGH_PRIORITY_MAX_FPS = 60;\nconst LOW_PRIORITY_MAX_FPS = 30;\nconst DESTROY_REPEAT_DELAY = 1000;\n\nconst renderers = new Map<string, {\n  imgSize: number;\n  reduceFactor: number;\n  handle: any;\n  imageData: ImageData;\n  customColor?: [number, number, number];\n}>();\n\nasync function init(\n  key: string,\n  tgsUrl: string,\n  imgSize: number,\n  isLowPriority: boolean,\n  customColor: [number, number, number] | undefined,\n  onInit: CancellableCallback,\n) {\n  if (!rLottieApi) {\n    await rLottieApiPromise;\n  }\n\n  const json = await extractJson(tgsUrl);\n  const stringOnWasmHeap = allocate(intArrayFromString(json), 'i8', 0);\n  const handle = rLottieApi.init();\n  const framesCount = rLottieApi.loadFromData(handle, stringOnWasmHeap);\n  rLottieApi.resize(handle, imgSize, imgSize);\n\n  const imageData = new ImageData(imgSize, imgSize);\n\n  const { reduceFactor, msPerFrame, reducedFramesCount } = calcParams(json, isLowPriority, framesCount);\n\n  renderers.set(key, {\n    imgSize, reduceFactor, handle, imageData, customColor,\n  });\n\n  onInit(reduceFactor, msPerFrame, reducedFramesCount);\n}\n\nasync function changeData(\n  key: string,\n  tgsUrl: string,\n  isLowPriority: boolean,\n  onInit: CancellableCallback,\n) {\n  if (!rLottieApi) {\n    await rLottieApiPromise;\n  }\n\n  const json = await extractJson(tgsUrl);\n  const stringOnWasmHeap = allocate(intArrayFromString(json), 'i8', 0);\n  const { handle } = renderers.get(key)!;\n  const framesCount = rLottieApi.loadFromData(handle, stringOnWasmHeap);\n\n  const { reduceFactor, msPerFrame, reducedFramesCount } = calcParams(json, isLowPriority, framesCount);\n\n  onInit(reduceFactor, msPerFrame, reducedFramesCount);\n}\n\nasync function extractJson(tgsUrl: string) {\n  const response = await fetch(tgsUrl);\n  const contentType = response.headers.get('Content-Type');\n\n  // Support deprecated JSON format cached locally\n  if (contentType?.startsWith('text/')) {\n    return response.text();\n  }\n\n  const arrayBuffer = await response.arrayBuffer();\n  return inflate(arrayBuffer, { to: 'string' });\n}\n\nfunction calcParams(json: string, isLowPriority: boolean, framesCount: number) {\n  const animationData = JSON.parse(json);\n  const maxFps = isLowPriority ? LOW_PRIORITY_MAX_FPS : HIGH_PRIORITY_MAX_FPS;\n  const sourceFps = animationData.fr || maxFps;\n  const reduceFactor = sourceFps % maxFps === 0 ? sourceFps / maxFps : 1;\n\n  return {\n    reduceFactor,\n    msPerFrame: 1000 / (sourceFps / reduceFactor),\n    reducedFramesCount: Math.ceil(framesCount / reduceFactor),\n  };\n}\n\nasync function renderFrames(\n  key: string, frameIndex: number, onProgress: CancellableCallback,\n) {\n  if (!rLottieApi) {\n    await rLottieApiPromise;\n  }\n\n  const {\n    imgSize, reduceFactor, handle, imageData, customColor,\n  } = renderers.get(key)!;\n\n  const realIndex = frameIndex * reduceFactor;\n\n  rLottieApi.render(handle, realIndex);\n  const bufferPointer = rLottieApi.buffer(handle);\n  const data = Module.HEAPU8.subarray(bufferPointer, bufferPointer + (imgSize * imgSize * 4));\n\n  if (customColor) {\n    const arr = new Uint8ClampedArray(data);\n    applyColor(arr, customColor);\n    imageData.data.set(arr);\n  } else {\n    imageData.data.set(data);\n  }\n\n  const imageBitmap = await createImageBitmap(imageData);\n\n  onProgress(frameIndex, imageBitmap);\n}\n\nfunction applyColor(arr: Uint8ClampedArray, color: [number, number, number]) {\n  for (let i = 0; i < arr.length; i += 4) {\n    arr[i] = color[0];\n    arr[i + 1] = color[1];\n    arr[i + 2] = color[2];\n  }\n}\n\nfunction destroy(key: string, isRepeated = false) {\n  try {\n    const renderer = renderers.get(key)!;\n    rLottieApi.destroy(renderer.handle);\n    renderers.delete(key);\n  } catch (err) {\n    // `destroy` sometimes can be called before the initialization is finished\n    if (!isRepeated) {\n      setTimeout(() => destroy(key, true), DESTROY_REPEAT_DELAY);\n    }\n  }\n}\n\nconst api = {\n  'rlottie:init': init,\n  'rlottie:changeData': changeData,\n  'rlottie:renderFrames': renderFrames,\n  'rlottie:destroy': destroy,\n};\n\ncreateWorkerInterface(api);\n\nexport type RLottieApi = typeof api;\n","import generateIdFor from '../../util/generateIdFor';\nimport { pause } from '../../util/schedulers';\n\ndeclare const self: WorkerGlobalScope;\n\ntype RequestStates = {\n  resolve: (response: ArrayBuffer) => void;\n  reject: () => void;\n};\n\ntype RequestPartParams = { url: string; start: number; end: number };\n\nconst PART_TIMEOUT = 30000;\n\nconst requestStates = new Map<string, RequestStates>();\n\nexport function requestPart(params: RequestPartParams): Promise<ArrayBuffer | undefined> {\n  const messageId = generateIdFor(requestStates);\n  const requestState = {} as RequestStates;\n\n  let isResolved = false;\n  const promise = Promise.race([\n    pause(PART_TIMEOUT).then(() => (isResolved ? undefined : Promise.reject(new Error('ERROR_PART_TIMEOUT')))),\n    new Promise<ArrayBuffer>((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    }),\n  ]);\n\n  requestStates.set(messageId, requestState);\n\n  promise\n    .catch(() => undefined)\n    .finally(() => {\n      requestStates.delete(messageId);\n      isResolved = true;\n    });\n\n  const message = {\n    type: 'requestPart',\n    messageId,\n    params,\n  };\n\n  postMessage(message);\n\n  return promise;\n}\n\nself.addEventListener('message', (e) => {\n  const { type, messageId, result } = (e as any).data as {\n    type: string;\n    messageId: string;\n    result: ArrayBuffer;\n  };\n\n  if (type === 'partResponse') {\n    const requestState = requestStates.get(messageId);\n    if (requestState) {\n      requestState.resolve(result);\n    }\n  }\n});\n","import type { MP4ArrayBuffer, MP4VideoTrack, MP4Info } from 'mp4box';\nimport MP4Box, { DataStream } from 'mp4box';\nimport { requestPart } from './requestPart';\n\nconst META_PART_SIZE = 128 * 1024;\nconst MIN_PART_SIZE = 1024;\nenum Status {\n  loading = 'loading',\n  ready = 'ready',\n  closed = 'closed',\n}\n\nexport type MP4DecoderConfig = {\n  codec: string;\n  codedHeight: number;\n  codedWidth: number;\n  description: Uint8Array;\n};\n\ntype MP4DemuxerConfig = {\n  stepOffset: number;\n  stepMultiplier: number;\n  isPolyfill: boolean;\n  maxFrames: number;\n  onConfig: (config: any) => void;\n  onChunk: (chunk: any) => void;\n};\n\nexport class MP4Demuxer {\n  private readonly url: string;\n\n  private file: MP4Box.MP4File;\n\n  private status = Status.loading;\n\n  private readonly stepOffset: number;\n\n  private readonly stepMultiplier: number;\n\n  private readonly maxFrames: number;\n\n  private readonly isPolyfill: boolean;\n\n  private decodedSamples = new Set<string>();\n\n  private lastSample = 0;\n\n  private readonly onConfig: (config: MP4DecoderConfig) => void;\n\n  private readonly onChunk: (chunk: any) => void;\n\n  constructor(url: string, {\n    onConfig,\n    onChunk,\n    stepOffset,\n    stepMultiplier,\n    isPolyfill,\n    maxFrames,\n  }: MP4DemuxerConfig) {\n    this.url = url;\n    this.stepOffset = stepOffset;\n    this.stepMultiplier = stepMultiplier;\n    this.maxFrames = maxFrames;\n    this.isPolyfill = isPolyfill;\n    this.onConfig = onConfig;\n    this.onChunk = onChunk;\n\n    this.file = MP4Box.createFile();\n    this.file.onError = (e) => {\n      // eslint-disable-next-line no-console\n      console.error(e);\n    };\n    this.file.onReady = this.onReady.bind(this);\n    this.file.onSamples = this.onSamples.bind(this);\n\n    void this.loadMetadata();\n  }\n\n  private async loadMetadata() {\n    let offset: number | undefined = 0;\n    while (offset !== undefined) {\n      try {\n        offset = await this.requestPart(offset, META_PART_SIZE);\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(e);\n      }\n      if (this.status === Status.ready) break;\n    }\n  }\n\n  private async loadNextFrames(step: number, duration: number, partSize: number) {\n    let tick = step * this.stepOffset;\n    let lastSample = 0;\n    let rap = this.file.seek(tick, true);\n    while (this.status !== Status.closed) {\n      try {\n        await this.requestPart(rap.offset, partSize);\n        if (tick > duration) break;\n        if (this.lastSample > 1 && lastSample < this.lastSample) {\n          tick += step * this.stepMultiplier;\n          lastSample = this.lastSample;\n        }\n        rap = this.file.seek(tick, true);\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(e);\n      }\n    }\n    this.file.flush();\n  }\n\n  private async requestPart(offset: number, partSize: number, useRap = true) {\n    const reminder = (offset % MIN_PART_SIZE);\n    const start = offset - reminder;\n    const end = start + partSize - 1;\n    let arrayBuffer = await requestPart({ url: this.url, start, end }) as MP4ArrayBuffer;\n    if (!arrayBuffer) {\n      return undefined;\n    }\n    if (reminder) {\n      arrayBuffer = arrayBuffer.slice(reminder) as MP4ArrayBuffer;\n    }\n    arrayBuffer.fileStart = offset;\n    const nextOffset = this.file.appendBuffer(arrayBuffer);\n    if (!useRap) return offset + arrayBuffer.byteLength;\n    return nextOffset;\n  }\n\n  private description(track: MP4VideoTrack) {\n    const t = this.file.getTrackById(track.id);\n    for (const entry of t.mdia.minf.stbl.stsd.entries) {\n      if (entry.avcC || entry.hvcC || entry.av1C) {\n        const stream = new DataStream(undefined, 0, DataStream.BIG_ENDIAN);\n        if (entry.avcC) {\n          entry.avcC.write(stream);\n        } else if (entry.hvcC) {\n          entry.hvcC.write(stream);\n        } else if (entry.av1C) {\n          entry.av1C.write(stream);\n        }\n        return new Uint8Array(stream.buffer, 8); // Remove the box header.\n      }\n    }\n    throw new Error('avcC, hvcC ro av1C not found');\n  }\n\n  private onReady(info: MP4Info) {\n    const track = info.videoTracks[0];\n\n    let codec = track.codec;\n    if (codec.startsWith('avc1')) {\n      // Somehow this is the only avc1 codec that works.\n      codec = 'avc1.4d001f';\n    }\n\n    // Generate and emit an appropriate VideoDecoderConfig.\n    this.onConfig({\n      codec,\n      codedHeight: track.video.height,\n      codedWidth: track.video.width,\n      description: this.description(track),\n    });\n\n    const duration = info.duration / info.timescale;\n\n    // If we set a part size too small, the onSamples callback is not called.\n    // If we use polyfill, we need to set a smaller part size to avoid decoding multiple frames.\n    const partSizeDivider = this.isPolyfill ? 24 : 12;\n    const partSize = roundPartSize(track.bitrate / partSizeDivider);\n    const step = calculateStep(duration, this.maxFrames);\n\n    // Start demuxing.\n    this.file.setExtractionOptions(track.id, undefined, { nbSamples: 1 });\n    this.file.start();\n\n    this.status = Status.ready;\n\n    // // Load frames\n    void this.loadNextFrames(step, duration, partSize);\n  }\n\n  private onSamples(trackId: number, ref: any, samples: any) {\n    if (this.status !== Status.ready) return;\n    // Generate and emit an EncodedVideoChunk for each demuxed sample.\n    for (const sample of samples) {\n      const time = sample.cts / sample.timescale;\n      const type = sample.is_sync ? 'key' : 'delta';\n      const id = `${type}${sample.number}`;\n\n      // Skip already decoded samples.\n      if (this.decodedSamples.has(id)) continue;\n\n      // @ts-ignore\n      this.onChunk(new EncodedVideoChunk({\n        type,\n        timestamp: (1e6 * time),\n        duration: (1e6 * sample.duration) / sample.timescale,\n        data: sample.data,\n      }));\n\n      this.decodedSamples.add(id);\n      this.lastSample = parseInt(sample.number, 10);\n\n      if (sample.is_sync) {\n        this.file.releaseUsedSamples(trackId, sample.number);\n      }\n    }\n  }\n\n  close() {\n    this.file.flush();\n    this.file.stop();\n    this.status = Status.closed;\n  }\n}\n\nfunction roundPartSize(size: number) {\n  return size + MIN_PART_SIZE - (size % MIN_PART_SIZE);\n}\n\nfunction calculateStep(duration: number, max: number): number {\n  return Math.round((duration + max) / max);\n}\n","/*\n * This file is part of the libav.js WebCodecs Polyfill implementation. The\n * interface implemented is derived from the W3C standard. No attribution is\n * required when using this library.\n *\n * Copyright (c) 2021 Yahweasel\n *\n * Permission to use, copy, modify, and/or distribute this software for any\n * purpose with or without fee is hereby granted.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY\n * SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION\n * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN\n * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport * as eac from './encoded-audio-chunk';\n\nexport type EncodedVideoChunk = eac.EncodedAudioChunk;\nexport const EncodedVideoChunk = eac.EncodedAudioChunk;\nexport type EncodedVideoChunkInit = eac.EncodedAudioChunkInit;\nexport type EncodedVideoChunkType = eac.EncodedAudioChunkType;\n","/*\n * This file is part of the libav.js WebCodecs Polyfill implementation. The\n * interface implemented is derived from the W3C standard. No attribution is\n * required when using this library.\n *\n * Copyright (c) 2021 Yahweasel\n *\n * Permission to use, copy, modify, and/or distribute this software for any\n * purpose with or without fee is hereby granted.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY\n * SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION\n * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN\n * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n */\n\nexport class EncodedAudioChunk {\n  constructor(init: EncodedAudioChunkInit) {\n    this.type = init.type;\n    this.timestamp = init.timestamp;\n    this.duration = init.duration || 0;\n    const data = (this._data = new Uint8Array(\n      (<any>init.data).buffer || init.data,\n      (<any>init.data).byteOffset || 0\n    ));\n    this.byteLength = data.byteLength;\n  }\n\n  readonly type: EncodedAudioChunkType;\n\n  readonly timestamp: number; // microseconds\n\n  readonly duration?: number; // microseconds\n\n  readonly byteLength: number;\n\n  private _data: Uint8Array;\n\n  // Internal\n  _libavGetData() {\n    return this._data;\n  }\n\n  copyTo(destination: BufferSource) {\n    new Uint8Array(\n      (<any>destination).buffer || destination,\n      (<any>destination).byteOffset || 0\n    ).set(this._data);\n  }\n}\n\nexport interface EncodedAudioChunkInit {\n  type: EncodedAudioChunkType;\n  timestamp: number; // microseconds\n  duration?: number; // microseconds\n  data: BufferSource;\n}\n\nexport type EncodedAudioChunkType = 'key' | 'delta';\n","// @ts-nocheck\n\n/*\n * This file is part of the libav.js WebCodecs Polyfill implementation. The\n * interface implemented is derived from the W3C standard. No attribution is\n * required when using this library.\n *\n * Copyright (c) 2021 Yahweasel\n *\n * Permission to use, copy, modify, and/or distribute this software for any\n * purpose with or without fee is hereby granted.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY\n * SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION\n * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN\n * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n */\n\n// A canvas element used to convert CanvasImageSources to buffers\nlet offscreenCanvas: HTMLCanvasElement = null;\n\nexport class VideoFrame {\n  constructor(data: CanvasImageSource | BufferSource, init: VideoFrameInit | VideoFrameBufferInit) {\n    if (data instanceof ArrayBuffer || (<any>data).buffer instanceof ArrayBuffer) {\n      this._constructBuffer(<BufferSource>data, <VideoFrameBufferInit>init);\n    } else {\n      this._constructCanvas(<CanvasImageSource>data, <VideoFrameInit>init);\n    }\n  }\n\n  private _constructCanvas(image: any, init: VideoFrameInit) {\n    if (offscreenCanvas === null) {\n      offscreenCanvas = document.createElement('canvas');\n      offscreenCanvas.style.display = 'none';\n      document.body.appendChild(offscreenCanvas);\n    }\n\n    // Convert it to a buffer\n\n    // Get the width and height\n    let width = 0;\n    let height = 0;\n    if (image.naturalWidth) {\n      width = image.naturalWidth;\n      height = image.naturalHeight;\n    } else if (image.videoWidth) {\n      width = image.videoWidth;\n      height = image.videoHeight;\n    } else if (image.width) {\n      width = image.width;\n      height = image.height;\n    }\n    if (!width || !height) {\n      throw new DOMException('Could not determine dimensions', 'InvalidStateError');\n    }\n\n    // Draw it\n    offscreenCanvas.width = width;\n    offscreenCanvas.height = height;\n    const ctx = offscreenCanvas.getContext('2d');\n    ctx.clearRect(0, 0, width, height);\n    ctx.drawImage(image, 0, 0);\n    this._constructBuffer(ctx.getImageData(0, 0, width, height).data, {\n      format: 'RGBA',\n      codedWidth: width,\n      codedHeight: height,\n      timestamp: init.timestamp,\n      duration: init.duration || 0,\n      layout: [\n        {\n          offset: 0,\n          stride: width * 4\n        }\n      ],\n      displayWidth: init.displayWidth || width,\n      displayHeight: init.displayHeight || height\n    });\n  }\n\n  private _constructBuffer(data: BufferSource, init: VideoFrameBufferInit) {\n    const format = (this.format = init.format);\n    const width = (this.codedWidth = init.codedWidth);\n    const height = (this.codedHeight = init.codedHeight);\n    this.visibleRect = new DOMRect(0, 0, width, height);\n\n    const dWidth = (this.displayWidth = init.displayWidth || init.codedWidth);\n    const dHeight = (this.displayHeight = init.displayHeight || init.codedHeight);\n\n    // Account for non-square pixels\n    if (dWidth !== width || dHeight !== height) {\n      // Dubious (but correct) SAR calculation\n      this._nonSquarePixels = true;\n      this._sar_num = dWidth * height;\n      this._sar_den = dHeight * width;\n    } else {\n      this._nonSquarePixels = false;\n    }\n\n    this.timestamp = init.timestamp;\n    if (init.duration) {\n      this.duration = init.duration;\n    }\n\n    if (init.layout) {\n      this._layout = init.layout; // FIXME: Make sure it's the right size\n    } else {\n      const numPlanes_ = numPlanes(format);\n      const layout: PlaneLayout[] = [];\n      let offset = 0;\n      for (let i = 0; i < numPlanes_; i++) {\n        const sampleWidth = horizontalSubSamplingFactor(format, i);\n        const sampleHeight = verticalSubSamplingFactor(format, i);\n        const stride = ~~(width / sampleWidth);\n        layout.push({\n          offset,\n          stride\n        });\n        offset += stride * ~~(height / sampleHeight);\n      }\n      this._layout = layout;\n    }\n\n    this._data = new Uint8Array((<any>data).buffer || data, (<any>data).byteOffset || 0);\n  }\n\n  /* NOTE: These should all be readonly, but the constructor style above\n   * doesn't work with that */\n  format: VideoPixelFormat;\n\n  codedWidth: number;\n\n  codedHeight: number;\n\n  codedRect: DOMRectReadOnly;\n\n  visibleRect: DOMRectReadOnly;\n\n  displayWidth: number;\n\n  displayHeight: number;\n\n  duration: number; // microseconds\n\n  timestamp: number; // microseconds\n\n  colorSpace: VideoColorSpace;\n\n  private _layout: PlaneLayout[];\n\n  private _data: Uint8Array;\n\n  /**\n   * (Internal) Does this use non-square pixels?\n   */\n  _nonSquarePixels: boolean;\n\n  /**\n   * (Internal) If non-square pixels, the SAR (sample/pixel aspect ratio)\n   */\n  _sar_num: number;\n\n  _sar_den: number;\n\n  // Internal\n  _libavGetData() {\n    return this._data;\n  }\n\n  allocationSize(options: VideoFrameCopyToOptions = {}): number {\n    // 1. If [[Detached]] is true, throw an InvalidStateError DOMException.\n    if (this._data === null) {\n      throw new DOMException('Detached', 'InvalidStateError');\n    }\n\n    // 2. If [[format]] is null, throw a NotSupportedError DOMException.\n    if (this.format === null) {\n      throw new DOMException('Not supported', 'NotSupportedError');\n    }\n\n    /* 3. Let combinedLayout be the result of running the Parse\n     * VideoFrameCopyToOptions algorithm with options. */\n    // 4. If combinedLayout is an exception, throw combinedLayout.\n    const combinedLayout = this._parseVideoFrameCopyToOptions(options);\n\n    // 5. Return combinedLayout’s allocationSize.\n    return combinedLayout.allocationSize;\n  }\n\n  private _parseVideoFrameCopyToOptions(options: VideoFrameCopyToOptions) {\n    /* 1. Let defaultRect be the result of performing the getter steps for\n     * visibleRect. */\n    const defaultRect = this.visibleRect;\n\n    // 2. Let overrideRect be undefined.\n    // 3. If options.rect exists, assign its value to overrideRect.\n    const overrideRect: DOMRectReadOnly = options.rect\n      ? new DOMRect(options.rect.x, options.rect.y, options.rect.width, options.rect.height)\n      : null;\n\n    /* 4. Let parsedRect be the result of running the Parse Visible Rect\n     * algorithm with defaultRect, overrideRect, [[coded width]], [[coded\n     * height]], and [[format]]. */\n    // 5. If parsedRect is an exception, return parsedRect.\n    const parsedRect = this._parseVisibleRect(defaultRect, overrideRect);\n\n    // 6. Let optLayout be undefined.\n    // 7. If options.layout exists, assign its value to optLayout.\n    const optLayout = options.layout || null;\n\n    /* 8. Let combinedLayout be the result of running the Compute Layout\n     * and Allocation Size algorithm with parsedRect, [[format]], and\n     * optLayout. */\n    const combinedLayout = this._computeLayoutAndAllocationSize(parsedRect, optLayout);\n\n    // 9. Return combinedLayout.\n    return combinedLayout;\n  }\n\n  private _parseVisibleRect(defaultRect: DOMRectReadOnly, overrideRect: DOMRectReadOnly) {\n    // 1. Let sourceRect be defaultRect\n    let sourceRect = defaultRect;\n\n    // 2. If overrideRect is not undefined:\n    if (overrideRect) {\n      /* 1. If either of overrideRect.width or height is 0, return a\n       * TypeError. */\n      if (overrideRect.width === 0 || overrideRect.height === 0) {\n        throw new TypeError('Invalid rectangle');\n      }\n\n      /* 2. If the sum of overrideRect.x and overrideRect.width is\n       * greater than [[coded width]], return a TypeError. */\n      if (overrideRect.x + overrideRect.width > this.codedWidth) {\n        throw new TypeError('Invalid rectangle');\n      }\n\n      /* 3. If the sum of overrideRect.y and overrideRect.height is\n       * greater than [[coded height]], return a TypeError. */\n      if (overrideRect.y + overrideRect.height > this.codedHeight) {\n        throw new TypeError('Invalid rectangle');\n      }\n\n      // 4. Assign overrideRect to sourceRect.\n      sourceRect = overrideRect;\n    }\n\n    /* 3. Let validAlignment be the result of running the Verify Rect\n     * Sample Alignment algorithm with format and sourceRect. */\n    const validAlignment = this._verifyRectSampleAlignment(sourceRect);\n\n    // 4. If validAlignment is false, throw a TypeError.\n    if (!validAlignment) {\n      throw new TypeError('Invalid alignment');\n    }\n\n    // 5. Return sourceRect.\n    return sourceRect;\n  }\n\n  private _computeLayoutAndAllocationSize(parsedRect: DOMRectReadOnly, layout: PlaneLayout[]) {\n    // 1. Let numPlanes be the number of planes as defined by format.\n    const numPlanes_ = numPlanes(this.format);\n\n    /* 2. If layout is not undefined and its length does not equal\n     * numPlanes, throw a TypeError. */\n    if (layout && layout.length !== numPlanes_) {\n      throw new TypeError('Invalid layout');\n    }\n\n    // 3. Let minAllocationSize be 0.\n    let minAllocationSize = 0;\n\n    // 4. Let computedLayouts be a new list.\n    const computedLayouts: ComputedPlaneLayout[] = [];\n\n    // 5. Let endOffsets be a new list.\n    const endOffsets = [];\n\n    // 6. Let planeIndex be 0.\n    let planeIndex = 0;\n\n    // 7. While planeIndex < numPlanes:\n    while (planeIndex < numPlanes_) {\n      /* 1. Let plane be the Plane identified by planeIndex as defined by\n       * format. */\n\n      // 2. Let sampleBytes be the number of bytes per sample for plane.\n      const sampleBytes_ = sampleBytes(this.format, planeIndex);\n\n      /* 3. Let sampleWidth be the horizontal sub-sampling factor of each\n       * subsample for plane. */\n      const sampleWidth = horizontalSubSamplingFactor(this.format, planeIndex);\n\n      /* 4. Let sampleHeight be the vertical sub-sampling factor of each\n       * subsample for plane. */\n      const sampleHeight = verticalSubSamplingFactor(this.format, planeIndex);\n\n      /* 5. Let sampleWidthBytes be the product of multiplying\n       * sampleWidth by sampleBytes. */\n      const sampleWidthBytes = sampleWidth * sampleBytes_;\n\n      // 6. Let computedLayout be a new computed plane layout.\n      const computedLayout: ComputedPlaneLayout = {\n        destinationOffset: 0,\n        destinationStride: 0,\n\n        /* 7. Set computedLayout’s sourceTop to the result of the\n         * integer division of truncated parsedRect.y by sampleHeight. */\n        sourceTop: ~~(parsedRect.y / sampleHeight),\n\n        /* 8. Set computedLayout’s sourceHeight to the result of the\n         * integer division of truncated parsedRect.height by\n         * sampleHeight */\n        sourceHeight: ~~(parsedRect.height / sampleHeight),\n\n        /* 9. Set computedLayout’s sourceLeftBytes to the result of the\n         * integer division of truncated parsedRect.x by\n         * sampleWidthBytes. */\n        sourceLeftBytes: ~~(parsedRect.x / sampleWidthBytes),\n\n        /* 10. Set computedLayout’s sourceWidthBytes to the result of\n         * the integer division of truncated parsedRect.width by\n         * sampleWidthBytes. */\n        sourceWidthBytes: ~~(parsedRect.width / sampleWidthBytes)\n      };\n\n      // 11. If layout is not undefined:\n      if (layout) {\n        /* 1. Let planeLayout be the PlaneLayout in layout at position\n         * planeIndex. */\n        const planeLayout = layout[planeIndex];\n\n        /* 2. If planeLayout.stride is less than computedLayout’s\n         * sourceWidthBytes, return a TypeError. */\n        if (planeLayout.stride < computedLayout.sourceWidthBytes) {\n          throw new TypeError('Invalid stride');\n        }\n\n        /* 3. Assign planeLayout.offset to computedLayout’s\n         * destinationOffset. */\n        computedLayout.destinationOffset = planeLayout.offset;\n\n        /* 4. Assign planeLayout.stride to computedLayout’s\n         * destinationStride. */\n        computedLayout.destinationStride = planeLayout.stride;\n\n        // 12. Otherwise:\n      } else {\n        /* 1. Assign minAllocationSize to computedLayout’s\n         * destinationOffset. */\n        computedLayout.destinationOffset = minAllocationSize;\n\n        /* 2. Assign computedLayout’s sourceWidthBytes to\n         * computedLayout’s destinationStride. */\n        computedLayout.destinationStride = computedLayout.sourceWidthBytes;\n      }\n\n      /* 13. Let planeSize be the product of multiplying computedLayout’s\n       * destinationStride and sourceHeight. */\n      const planeSize = computedLayout.destinationStride * computedLayout.sourceHeight;\n\n      /* 14. Let planeEnd be the sum of planeSize and computedLayout’s\n       * destinationOffset. */\n      const planeEnd = planeSize + computedLayout.destinationOffset;\n\n      /* 15. If planeSize or planeEnd is greater than maximum range of\n       * unsigned long, return a TypeError. */\n      if (planeSize >= 0x100000000 || planeEnd >= 0x100000000) {\n        throw new TypeError('Plane too large');\n      }\n\n      // 16. Append planeEnd to endOffsets.\n      endOffsets.push(planeEnd);\n\n      /* 17. Assign the maximum of minAllocationSize and planeEnd to\n       * minAllocationSize. */\n      if (planeEnd > minAllocationSize) {\n        minAllocationSize = planeEnd;\n      }\n\n      // 18. Let earlierPlaneIndex be 0.\n      let earlierPlaneIndex = 0;\n\n      // 19. While earlierPlaneIndex is less than planeIndex.\n      while (earlierPlaneIndex < planeIndex) {\n        // 1. Let earlierLayout be computedLayouts[earlierPlaneIndex].\n        const earlierLayout = computedLayouts[earlierPlaneIndex];\n\n        /* 2. If endOffsets[planeIndex] is less than or equal to\n         * earlierLayout’s destinationOffset or if\n         * endOffsets[earlierPlaneIndex] is less than or equal to\n         * computedLayout’s destinationOffset, continue. */\n        if (\n          planeEnd <= earlierLayout.destinationOffset ||\n          endOffsets[earlierPlaneIndex] <= computedLayout.destinationOffset\n        ) {\n          // 3. Otherwise, return a TypeError.\n        } else {\n          throw new TypeError('Invalid plane layout');\n        }\n\n        // 4. Increment earlierPlaneIndex by 1.\n        earlierPlaneIndex++;\n      }\n\n      // 20. Append computedLayout to computedLayouts.\n      computedLayouts.push(computedLayout);\n\n      // 21. Increment planeIndex by 1.\n      planeIndex++;\n    }\n\n    /* 8. Let combinedLayout be a new combined buffer layout, initialized\n     * as follows: */\n    const combinedLayout = {\n      // 1. Assign computedLayouts to computedLayouts.\n      computedLayouts,\n\n      // 2. Assign minAllocationSize to allocationSize.\n      allocationSize: minAllocationSize\n    };\n\n    // 9. Return combinedLayout.\n    return combinedLayout;\n  }\n\n  private _verifyRectSampleAlignment(rect: DOMRectReadOnly) {\n    // 1. If format is null, return true.\n    if (!this.format) {\n      return true;\n    }\n\n    // 2. Let planeIndex be 0.\n    let planeIndex = 0;\n\n    // 3. Let numPlanes be the number of planes as defined by format.\n    const numPlanes_ = numPlanes(this.format);\n\n    // 4. While planeIndex is less than numPlanes:\n    while (planeIndex < numPlanes_) {\n      /* 1. Let plane be the Plane identified by planeIndex as defined by\n       * format. */\n\n      /* 2. Let sampleWidth be the horizontal sub-sampling factor of each\n       * subsample for plane. */\n      const sampleWidth = horizontalSubSamplingFactor(this.format, planeIndex);\n\n      /* 3. Let sampleHeight be the vertical sub-sampling factor of each\n       * subsample for plane. */\n      const sampleHeight = verticalSubSamplingFactor(this.format, planeIndex);\n\n      /* 4. If rect.x and rect.width are not both multiples of\n       * sampleWidth, return false. */\n      const xw = rect.x / sampleWidth;\n      if (xw !== ~~xw) {\n        return false;\n      }\n      const ww = rect.width / sampleWidth;\n      if (ww !== ~~ww) {\n        return false;\n      }\n\n      /* 5. If rect.y and rect.height are not both multiples of\n       * sampleHeight, return false. */\n      const yh = rect.y / sampleHeight;\n      if (yh !== ~~yh) {\n        return false;\n      }\n      const hh = rect.height / sampleHeight;\n      if (hh !== ~~hh) {\n        return false;\n      }\n\n      // 6. Increment planeIndex by 1.\n      planeIndex++;\n    }\n\n    // 5. Return true.\n    return true;\n  }\n\n  async copyTo(\n    destination: BufferSource,\n    options: VideoFrameCopyToOptions = {}\n  ): Promise<PlaneLayout[]> {\n    const destBuf = new Uint8Array(\n      (<any>destination).buffer || destination,\n      (<any>destination).byteOffset || 0\n    );\n\n    // 1. If [[Detached]] is true, throw an InvalidStateError DOMException.\n    if (this._data === null) {\n      throw new DOMException('Detached', 'InvalidStateError');\n    }\n\n    // 2. If [[format]] is null, throw a NotSupportedError DOMException.\n    if (!this.format) {\n      throw new DOMException('No format', 'NotSupportedError');\n    }\n\n    /* 3. Let combinedLayout be the result of running the Parse\n     * VideoFrameCopyToOptions algorithm with options. */\n    /* 4. If combinedLayout is an exception, return a promise rejected with\n     * combinedLayout. */\n    const combinedLayout = this._parseVideoFrameCopyToOptions(options);\n\n    /* 5. If destination.byteLength is less than combinedLayout’s\n     * allocationSize, return a promise rejected with a TypeError. */\n    if (destination.byteLength < combinedLayout.allocationSize) {\n      throw new TypeError('Insufficient space');\n    }\n\n    // 6. Let p be a new Promise.\n    /* 7. Let copyStepsQueue be the result of starting a new parallel\n     * queue. */\n    // 8. Enqueue the following steps to copyStepsQueue:\n    // NOTE: This is an async function anyway, so we can just do these.\n    const ret: PlaneLayout[] = [];\n\n    /* 1. Let resource be the media resource referenced by [[resource\n     * reference]]. */\n\n    // 2. Let numPlanes be the number of planes as defined by [[format]].\n    const numPlanes_ = numPlanes(this.format);\n\n    // 3. Let planeIndex be 0.\n    let planeIndex = 0;\n\n    // 4. While planeIndex is less than combinedLayout’s numPlanes:\n    while (planeIndex < combinedLayout.computedLayouts.length) {\n      /* 1. Let sourceStride be the stride of the plane in resource as\n       * identified by planeIndex. */\n      const sourceStride = this._layout[planeIndex].stride;\n\n      /* 2. Let computedLayout be the computed plane layout in\n       * combinedLayout’s computedLayouts at the position of planeIndex */\n      const computedLayout = combinedLayout.computedLayouts[planeIndex];\n\n      /* 3. Let sourceOffset be the product of multiplying\n       * computedLayout’s sourceTop by sourceStride */\n      let sourceOffset = computedLayout.sourceTop * sourceStride;\n\n      // 4. Add computedLayout’s sourceLeftBytes to sourceOffset.\n      sourceOffset += computedLayout.sourceLeftBytes;\n\n      // 5. Let destinationOffset be computedLayout’s destinationOffset.\n      let destinationOffset = computedLayout.destinationOffset;\n\n      // 6. Let rowBytes be computedLayout’s sourceWidthBytes.\n      const rowBytes = computedLayout.sourceWidthBytes;\n\n      // 7. Let row be 0.\n      let row = 0;\n\n      // 8. While row is less than computedLayout’s sourceHeight:\n      while (row < computedLayout.sourceHeight) {\n        /* 1. Copy rowBytes bytes from resource starting at\n         * sourceOffset to destination starting at destinationOffset. */\n        destBuf.set(this._data.subarray(sourceOffset, sourceOffset + rowBytes), destinationOffset);\n\n        // 2. Increment sourceOffset by sourceStride.\n        sourceOffset += sourceStride;\n\n        /* 3. Increment destinationOffset by computedLayout’s\n         * destinationStride. */\n        destinationOffset += computedLayout.destinationStride;\n\n        // 4. Increment row by 1.\n        row++;\n      }\n\n      // 9. Increment planeIndex by 1.\n      planeIndex++;\n      ret.push({\n        offset: computedLayout.destinationOffset,\n        stride: computedLayout.destinationStride\n      });\n    }\n\n    // 5. Queue a task on the control thread event loop to resolve p.\n    // 6. Return p.\n    return ret;\n  }\n\n  clone(): VideoFrame {\n    return new VideoFrame(this._data, {\n      format: this.format,\n      codedWidth: this.codedWidth,\n      codedHeight: this.codedHeight,\n      timestamp: this.timestamp,\n      duration: this.duration,\n      layout: this._layout\n    });\n  }\n\n  close(): void {\n    this._data = null;\n  }\n}\n\nexport interface VideoFrameInit {\n  duration?: number; // microseconds\n  timestamp: number; // microseconds\n  // FIXME: AlphaOption alpha = \"keep\";\n\n  // Default matches image. May be used to efficiently crop. Will trigger\n  // new computation of displayWidth and displayHeight using image’s pixel\n  // aspect ratio unless an explicit displayWidth and displayHeight are given.\n  visibleRect?: DOMRectInit;\n\n  // Default matches image unless visibleRect is provided.\n  displayWidth?: number;\n  displayHeight?: number;\n}\n\nexport interface VideoFrameBufferInit {\n  format: VideoPixelFormat;\n  codedWidth: number;\n  codedHeight: number;\n  timestamp: number; // microseconds\n  duration?: number; // microseconds\n\n  // Default layout is tightly-packed.\n  layout?: PlaneLayout[];\n\n  // Default visible rect is coded size positioned at (0,0)\n  visibleRect?: DOMRectInit;\n\n  // Default display dimensions match visibleRect.\n  displayWidth?: number;\n  displayHeight?: number;\n\n  // FIXME: Not used\n  colorSpace?: VideoColorSpaceInit;\n}\n\nexport type VideoPixelFormat =\n  // 4:2:0 Y, U, V\n  | 'I420'\n  // 4:2:0 Y, U, V, A\n  | 'I420A'\n  // 4:2:2 Y, U, V\n  | 'I422'\n  // 4:4:4 Y, U, V\n  | 'I444'\n  // 4:2:0 Y, UV\n  | 'NV12'\n  // 32bpp RGBA\n  | 'RGBA'\n  // 32bpp RGBX (opaque)\n  | 'RGBX'\n  // 32bpp BGRA\n  | 'BGRA'\n  // 32bpp BGRX (opaque)\n  | 'BGRX';\n\n/**\n * Number of planes in the given format.\n * @param format  The format\n */\nexport function numPlanes(format: VideoPixelFormat) {\n  switch (format) {\n    case 'I420':\n    case 'I422':\n    case 'I444':\n      return 3;\n\n    case 'I420A':\n      return 4;\n\n    case 'NV12':\n      return 2;\n\n    case 'RGBA':\n    case 'RGBX':\n    case 'BGRA':\n    case 'BGRX':\n      return 1;\n\n    default:\n      throw new DOMException('Unsupported video pixel format', 'NotSupportedError');\n  }\n}\n\n/**\n * Number of bytes per sample in the given format and plane.\n * @param format  The format\n * @param planeIndex  The plane index\n */\nexport function sampleBytes(format: VideoPixelFormat, planeIndex: number) {\n  switch (format) {\n    case 'I420':\n    case 'I420A':\n    case 'I422':\n    case 'I444':\n      return 1;\n\n    case 'NV12':\n      if (planeIndex === 1) {\n        return 2;\n      } else {\n        return 1;\n      }\n\n    case 'RGBA':\n    case 'RGBX':\n    case 'BGRA':\n    case 'BGRX':\n      return 4;\n\n    default:\n      throw new DOMException('Unsupported video pixel format', 'NotSupportedError');\n  }\n}\n\n/**\n * Horizontal sub-sampling factor for the given format and plane.\n * @param format  The format\n * @param planeIndex  The plane index\n */\nexport function horizontalSubSamplingFactor(format: VideoPixelFormat, planeIndex: number) {\n  // First plane (often luma) is always full\n  if (planeIndex === 0) {\n    return 1;\n  }\n\n  switch (format) {\n    case 'I420':\n    case 'I422':\n      return 2;\n\n    case 'I420A':\n      if (planeIndex === 3) {\n        return 1;\n      } else {\n        return 2;\n      }\n\n    case 'I444':\n      return 1;\n\n    case 'NV12':\n      return 2;\n\n    case 'RGBA':\n    case 'RGBX':\n    case 'BGRA':\n    case 'BGRX':\n      return 1;\n\n    default:\n      throw new DOMException('Unsupported video pixel format', 'NotSupportedError');\n  }\n}\n\n/**\n * Vertical sub-sampling factor for the given format and plane.\n * @param format  The format\n * @param planeIndex  The plane index\n */\nexport function verticalSubSamplingFactor(format: VideoPixelFormat, planeIndex: number) {\n  // First plane (often luma) is always full\n  if (planeIndex === 0) {\n    return 1;\n  }\n\n  switch (format) {\n    case 'I420':\n      return 2;\n\n    case 'I420A':\n      if (planeIndex === 3) {\n        return 1;\n      } else {\n        return 2;\n      }\n\n    case 'I422':\n    case 'I444':\n      return 1;\n\n    case 'NV12':\n      return 2;\n\n    case 'RGBA':\n    case 'RGBX':\n    case 'BGRA':\n    case 'BGRX':\n      return 1;\n\n    default:\n      throw new DOMException('Unsupported video pixel format', 'NotSupportedError');\n  }\n}\n\n/**\n * NOTE: Color space is not actually supported\n */\nexport type VideoColorSpace = any;\nexport type VideoColorSpaceInit = any;\n\nexport interface PlaneLayout {\n  offset: number;\n  stride: number;\n}\n\nexport interface VideoFrameCopyToOptions {\n  rect?: DOMRectInit;\n  layout?: PlaneLayout[];\n}\n\ninterface ComputedPlaneLayout {\n  destinationOffset: number;\n  destinationStride: number;\n  sourceTop: number;\n  sourceHeight: number;\n  sourceLeftBytes: number;\n  sourceWidthBytes: number;\n}\n","// @ts-nocheck\n\n/*\n * This file is part of the libav.js WebCodecs Polyfill implementation. The\n * interface implemented is derived from the W3C standard. No attribution is\n * required when using this library.\n *\n * Copyright (c) 2021 Yahweasel\n *\n * Permission to use, copy, modify, and/or distribute this software for any\n * purpose with or without fee is hereby granted.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY\n * SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION\n * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN\n * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport type * as LibAVJS from '../libav.types';\n\ndeclare let LibAV: LibAVJS.LibAVWrapper;\n\n// Currently available libav instances\nconst libavs: LibAVJS.LibAV[] = [];\n\n// Options required to create a LibAV instance\nlet libavOptions: any = {};\n\n/**\n * Supported decoders.\n */\nexport let decoders: string[] = null;\n\n/**\n * libav.js-specific codec request, used to bypass the codec registry and use\n * anything your implementation of libav.js supports.\n */\nexport interface LibAVJSCodec {\n  codec: string;\n  ctx?: LibAVJS.AVCodecContextProps;\n  options?: Record<string, string>;\n}\n\n/**\n * Set the libav loading options.\n */\nexport function setLibAVOptions(to: any) {\n  libavOptions = to;\n}\n\n/**\n * Get a libav instance.\n */\nexport async function get(): Promise<LibAVJS.LibAV> {\n  if (libavs.length) {\n    return libavs.shift();\n  }\n  return LibAV.LibAV(libavOptions);\n}\n\n/**\n * Free a libav instance for later reuse.\n */\nexport function free(libav: LibAVJS.LibAV) {\n  libavs.push(libav);\n}\n\n/**\n * Get the list of encoders/decoders supported by libav (which are also\n * supported by this polyfill)\n */\nasync function codecs(): Promise<string[]> {\n  const libav = await get();\n  const ret: string[] = [];\n\n  for (const [avname, codec] of [\n    ['libaom-av1', 'av01'],\n    ['h264', 'avc1'],\n    ['hevc', 'hvc1'],\n  ]) {\n    if (await libav.avcodec_find_decoder_by_name(avname)) {\n      ret.push(codec);\n    }\n  }\n\n  free(libav);\n  return ret;\n}\n\n/**\n * Load the lists of supported decoders and encoders.\n */\nexport async function load() {\n  decoders = await codecs();\n}\n\n/**\n * Convert a decoder from the codec registry (or libav.js-specific parameters)\n * to libav.js. Returns null if unsupported.\n */\nexport function decoder(codec: string | { libavjs: LibAVJSCodec }): LibAVJSCodec {\n  if (typeof codec === 'string') {\n    codec = codec.replace(/\\..*/, '');\n\n    let outCodec: string = codec;\n    switch (codec) {\n      // Video\n      case 'av01':\n        outCodec = 'libaom-av1';\n        break;\n      case 'avc1':\n        outCodec = 'h264';\n        break;\n\n      case 'hvc1':\n        outCodec = 'hevc';\n        break;\n\n      // Unrecognized\n      default:\n        return null;\n    }\n\n    // Check whether we actually support this codec\n    if (!(decoders.indexOf(codec) >= 0)) {\n      return null;\n    }\n\n    return { codec: outCodec };\n  } else {\n    return codec.libavjs;\n  }\n}\n","/*\n * This file is part of the libav.js WebCodecs Polyfill implementation. The\n * interface implemented is derived from the W3C standard. No attribution is\n * required when using this library.\n *\n * Copyright (c) 2021 Yahweasel\n *\n * Permission to use, copy, modify, and/or distribute this software for any\n * purpose with or without fee is hereby granted.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY\n * SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION\n * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN\n * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n */\n\nexport type CodecState = 'unconfigured' | 'configured' | 'closed';\n\nexport type WebCodecsErrorCallback = (error: DOMException) => void;\n\n/**\n * Clone this configuration. Just copies over the supported/recognized fields.\n */\nexport function cloneConfig(config: any, fields: string[]): any {\n  const ret: any = {};\n  for (const field of fields) {\n    if (field in config) {\n      ret[field] = config[field];\n    }\n  }\n  return ret;\n}\n","// @ts-nocheck\n\n/*\n * This file is part of the libav.js WebCodecs Polyfill implementation. The\n * interface implemented is derived from the W3C standard. No attribution is\n * required when using this library.\n *\n * Copyright (c) 2021 Yahweasel\n *\n * Permission to use, copy, modify, and/or distribute this software for any\n * purpose with or without fee is hereby granted.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY\n * SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION\n * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN\n * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport type * as LibAVJS from '../libav.types';\nimport type * as evc from './encoded-video-chunk';\nimport * as libavs from './libav';\nimport * as misc from './misc';\nimport * as vf from './video-frame';\n\nexport class VideoDecoder {\n  constructor(init: VideoDecoderInit) {\n    this._output = init.output;\n    this._error = init.error;\n\n    this.state = 'unconfigured';\n    this.decodeQueueSize = 0;\n\n    this._p = Promise.all([]);\n    this._libav = null;\n    this._codec = this._c = this._pkt = this._frame = 0;\n  }\n\n  /* NOTE: These should technically be readonly, but I'm implementing them as\n   * plain fields, so they're writable */\n  state: misc.CodecState;\n\n  decodeQueueSize: number;\n\n  private _output: VideoFrameOutputCallback;\n\n  private _error: misc.WebCodecsErrorCallback;\n\n  // Event queue\n  private _p: Promise<unknown>;\n\n  // LibAV state\n  private _libav: LibAVJS.LibAV;\n\n  private _codec: number;\n\n  private _c: number;\n\n  private _pkt: number;\n\n  private _frame: number;\n\n  configure(config: VideoDecoderConfig): void {\n    const self = this;\n\n    // 1. If config is not a valid VideoDecoderConfig, throw a TypeError.\n    // NOTE: We don't support sophisticated codec string parsing (yet)\n\n    // 2. If [[state]] is “closed”, throw an InvalidStateError DOMException.\n    if (this.state === 'closed') {\n      throw new DOMException('Decoder is closed', 'InvalidStateError');\n    }\n\n    // Free any internal state\n    if (this._libav) {\n      this._p = this._p.then(() => this._free());\n    }\n\n    // 3. Set [[state]] to \"configured\".\n    this.state = 'configured';\n\n    // 4. Set [[key chunk required]] to true.\n    // NOTE: Not implemented\n\n    // 5. Queue a control message to configure the decoder with config.\n    this._p = this._p\n      .then(async () => {\n        /* 1. Let supported be the result of running the Check\n         * Configuration Support algorithm with config. */\n        const supported = libavs.decoder(config.codec);\n\n        /* 2. If supported is true, assign [[codec implementation]] with an\n         * implementation supporting config. */\n        if (supported) {\n          const libav = (self._libav = await libavs.get());\n\n          const ptr = await libav.malloc(config.description.length);\n          await libav.copyin_u8(ptr, config.description);\n          const parm = await libav.calloc(1, 1024);\n          await libav.AVCodecParameters_extradata_s(parm, ptr);\n          await libav.AVCodecParameters_extradata_size_s(parm, config.description.length);\n          // Initialize\n          [self._codec, self._c, self._pkt, self._frame] = await libav.ff_init_decoder(\n            supported.codec,\n            parm,\n          );\n          await libav.AVCodecContext_time_base_s(self._c, 1, 1000);\n          await libav.free(ptr);\n          await libav.free(parm);\n        } else {\n          /* 3. Otherwise, run the Close VideoDecoder algorithm with\n           * NotSupportedError DOMException. */\n          self._closeVideoDecoder(new DOMException('Unsupported codec', 'NotSupportedError'));\n        }\n      })\n      .catch(this._error);\n  }\n\n  // Our own algorithm, close libav\n  private async _free() {\n    if (this._c) {\n      await this._libav.ff_free_decoder(this._c, this._pkt, this._frame);\n      this._codec = this._c = this._pkt = this._frame = 0;\n    }\n    if (this._libav) {\n      libavs.free(this._libav);\n      this._libav = null;\n    }\n  }\n\n  private _closeVideoDecoder(exception: DOMException) {\n    // 1. Run the Reset VideoDecoder algorithm with exception.\n    this._resetVideoDecoder(exception);\n\n    // 2. Set [[state]] to \"closed\".\n    this.state = 'closed';\n\n    /* 3. Clear [[codec implementation]] and release associated system\n     * resources. */\n    this._p = this._p.then(() => this._free());\n\n    /* 4. If exception is not an AbortError DOMException, queue a task on\n     * the control thread event loop to invoke the [[error callback]] with\n     * exception. */\n    if (exception.name !== 'AbortError') {\n      this._p = this._p.then(() => {\n        this._error(exception);\n      });\n    }\n  }\n\n  private _resetVideoDecoder(exception: DOMException) {\n    // 1. If [[state]] is \"closed\", throw an InvalidStateError.\n    if (this.state === 'closed') {\n      throw new DOMException('Decoder closed', 'InvalidStateError');\n    }\n\n    // 2. Set [[state]] to \"unconfigured\".\n    this.state = 'unconfigured';\n\n    // ... really, we're just going to free it now\n    this._p = this._p.then(() => this._free());\n  }\n\n  decode(chunk: evc.EncodedVideoChunk): void {\n    const self = this;\n\n    // 1. If [[state]] is not \"configured\", throw an InvalidStateError.\n    if (this.state !== 'configured') {\n      throw new DOMException('Unconfigured', 'InvalidStateError');\n    }\n\n    // 2. If [[key chunk required]] is true:\n    //    1. If chunk.[[type]] is not key, throw a DataError.\n    /*    2. Implementers SHOULD inspect the chunk’s [[internal data]] to\n     *    verify that it is truly a key chunk. If a mismatch is detected,\n     *    throw a DataError. */\n    //    3. Otherwise, assign false to [[key chunk required]].\n\n    // 3. Increment [[decodeQueueSize]].\n    this.decodeQueueSize++;\n\n    // 4. Queue a control message to decode the chunk.\n    this._p = this._p\n      .then(async () => {\n        const libav = self._libav;\n        const c = self._c;\n        const pkt = self._pkt;\n        const frame = self._frame;\n\n        let decodedOutputs: LibAVJS.Frame[] = null;\n\n        // 1. Attempt to use [[codec implementation]] to decode the chunk.\n        try {\n          // Convert to a libav packet\n          const ptsFull = Math.floor(chunk.timestamp / 1000);\n          const pts = ptsFull % 0x100000000;\n          const ptshi = ~~(ptsFull / 0x100000000);\n          const packet: LibAVJS.Packet = {\n            data: chunk._libavGetData(),\n            pts,\n            ptshi,\n            dts: pts,\n            dtshi: ptshi,\n          };\n          if (chunk.duration) {\n            packet.duration = Math.floor(chunk.duration / 1000);\n            packet.durationhi = 0;\n          }\n\n          decodedOutputs = await libav.ff_decode_multi(c, pkt, frame, [packet]);\n\n          /* 2. If decoding results in an error, queue a task on the control\n           * thread event loop to run the Close VideoDecoder algorithm with\n           * EncodingError. */\n        } catch (ex) {\n          // console.log('Error decoding', ex);\n          self._p = self._p.then(() => {\n            self._closeVideoDecoder(ex);\n          });\n        }\n\n        /* 3. Queue a task on the control thread event loop to decrement\n         * [[decodeQueueSize]]. */\n        self.decodeQueueSize--;\n\n        /* 4. Let decoded outputs be a list of decoded audio data outputs\n         * emitted by [[codec implementation]]. */\n        /* 5. If decoded outputs is not empty, queue a task on the control\n         * thread event loop to run the Output VideoData algorithm with\n         * decoded outputs. */\n        if (decodedOutputs) {\n          self._outputVideoFrames(decodedOutputs);\n        }\n      })\n      .catch(this._error);\n  }\n\n  private _outputVideoFrames(frames: LibAVJS.Frame[]) {\n    const libav = this._libav;\n\n    for (const frame of frames) {\n      // 1. format\n      let format: vf.VideoPixelFormat;\n      switch (frame.format) {\n        case libav.AV_PIX_FMT_YUV420P:\n          format = 'I420';\n          break;\n\n        case libav.AV_PIX_FMT_YUVA420P:\n          format = 'I420A';\n          break;\n\n        case libav.AV_PIX_FMT_YUV422P:\n          format = 'I422';\n          break;\n\n        case libav.AV_PIX_FMT_YUV444P:\n          format = 'I444';\n          break;\n\n        case libav.AV_PIX_FMT_NV12:\n          format = 'NV12';\n          break;\n\n        case libav.AV_PIX_FMT_RGBA:\n          format = 'RGBA';\n          break;\n\n        case libav.AV_PIX_FMT_BGRA:\n          format = 'BGRA';\n          break;\n\n        default:\n          throw new DOMException('Unsupported libav format!', 'EncodingError');\n      }\n\n      // 2. width and height\n      const codedWidth = frame.width;\n      const codedHeight = frame.height;\n\n      // Check for non-square pixels\n      let displayWidth = codedWidth;\n      let displayHeight = codedHeight;\n      if (frame.sample_aspect_ratio[0]) {\n        const sar = frame.sample_aspect_ratio;\n        if (sar[0] > sar[1]) {\n          displayWidth = ~~((codedWidth * sar[0]) / sar[1]);\n        } else {\n          displayHeight = ~~((codedHeight * sar[1]) / sar[0]);\n        }\n      }\n\n      // 3. timestamp\n      const timestamp = (frame.ptshi * 0x100000000 + frame.pts) * 1000;\n\n      // 4. data\n      let raw: Uint8Array;\n      {\n        let size = 0;\n        const planes = vf.numPlanes(format);\n        const sbs = [];\n        const hssfs = [];\n        const vssfs = [];\n        for (let i = 0; i < planes; i++) {\n          sbs.push(vf.sampleBytes(format, i));\n          hssfs.push(vf.horizontalSubSamplingFactor(format, i));\n          vssfs.push(vf.verticalSubSamplingFactor(format, i));\n        }\n        for (let i = 0; i < planes; i++) {\n          size += frame.width * frame.height * sbs[i] / hssfs[i]\n            / vssfs[i];\n        }\n        raw = new Uint8Array(size);\n        let off = 0;\n        for (let i = 0; i < planes; i++) {\n          const fd = frame.data[i];\n          for (let j = 0; j < frame.height / vssfs[i]; j++) {\n            const part = fd[j].subarray(0, frame.width / hssfs[i]);\n            raw.set(part, off);\n            off += part.length;\n          }\n        }\n      }\n\n      const data = new vf.VideoFrame(raw, {\n        format,\n        codedWidth,\n        codedHeight,\n        displayWidth,\n        displayHeight,\n        timestamp,\n      });\n\n      this._output(data);\n    }\n  }\n\n  flush(): Promise<void> {\n    const self = this;\n\n    const ret = this._p.then(async () => {\n      if (!self._c) {\n        return;\n      }\n\n      // Make sure any last data is flushed\n      const libav = self._libav;\n      const c = self._c;\n      const pkt = self._pkt;\n      const frame = self._frame;\n\n      let decodedOutputs: LibAVJS.Frame[] = null;\n\n      try {\n        decodedOutputs = await libav.ff_decode_multi(c, pkt, frame, [], true);\n      } catch (ex) {\n        self._p = self._p.then(() => {\n          self._closeVideoDecoder(ex);\n        });\n      }\n\n      if (decodedOutputs) {\n        self._outputVideoFrames(decodedOutputs);\n      }\n    });\n    this._p = ret;\n    return ret;\n  }\n\n  reset(): void {\n    this._resetVideoDecoder(new DOMException('Reset', 'AbortError'));\n  }\n\n  close(): void {\n    this._closeVideoDecoder(new DOMException('Close', 'AbortError'));\n  }\n\n  static async isConfigSupported(config: VideoDecoderConfig): Promise<VideoDecoderSupport> {\n    const dec = libavs.decoder(config.codec);\n    let supported = false;\n    if (dec) {\n      const libav = await libavs.get();\n      try {\n        const [, c, pkt, frame] = await libav.ff_init_decoder(dec.codec);\n        await libav.ff_free_decoder(c, pkt, frame);\n        supported = true;\n      } catch (ex) {}\n      await libavs.free(libav);\n    }\n\n    return {\n      supported,\n      config: misc.cloneConfig(config, ['codec', 'codedWidth', 'codedHeight']),\n    };\n  }\n}\n\nexport interface VideoDecoderInit {\n  output: VideoFrameOutputCallback;\n  error: misc.WebCodecsErrorCallback;\n}\n\nexport type VideoFrameOutputCallback = (output: vf.VideoFrame) => void;\n\nexport interface VideoDecoderConfig {\n  codec: string | { libavjs: libavs.LibAVJSCodec };\n  description: Uint8Array;\n  codedWidth?: number;\n  codedHeight?: number;\n  displayAspectWidth?: number;\n  displayAspectHeight?: number;\n  colorSpace?: vf.VideoColorSpaceInit;\n  hardwareAcceleration?: string; // Ignored\n  optimizeForLatency?: boolean;\n}\n\nexport interface VideoDecoderSupport {\n  supported: boolean;\n  config: VideoDecoderConfig;\n}\n","// @ts-nocheck\n\n/*\n * This file is part of the libav.js WebCodecs Polyfill implementation. The\n * interface implemented is derived from the W3C standard. No attribution is\n * required when using this library.\n *\n * Copyright (c) 2021 Yahweasel\n *\n * Permission to use, copy, modify, and/or distribute this software for any\n * purpose with or without fee is hereby granted.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY\n * SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION\n * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN\n * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport type * as LibAVJS from '../libav.types';\nimport * as vf from './video-frame';\n\ndeclare let LibAV: LibAVJS.LibAVWrapper;\n\n/* A non-threaded libav.js instance for scaling. This is an any because the\n * type definitions only expose the async versions, but this API requires the\n * _sync methods. */\nlet scalerSync: any = null;\n\n// A synchronous libav.js instance for scaling.\nlet scalerAsync: LibAVJS.LibAV = null;\n\n// The original drawImage\nconst origDrawImage: any = null;\n\n// The original createImageBitmap\nlet origCreateImageBitmap: any = null;\n\n/**\n * Load rendering capability.\n * @param libavOptions  Options to use while loading libav, only asynchronous\n * @param polyfill  Set to polyfill CanvasRenderingContext2D.drawImage\n */\nexport async function load(libavOptions: any, polyfill: boolean) {\n  // Get our scalers\n  scalerSync = await LibAV.LibAV({ noworker: true });\n  scalerAsync = await LibAV.LibAV(libavOptions);\n\n  // Polyfill createImageBitmap\n  origCreateImageBitmap = global.createImageBitmap;\n  if (polyfill) {\n    (<any>global).createImageBitmap = createImageBitmap;\n  }\n}\n\n/**\n * Create an ImageBitmap from this drawable, asynchronously. NOTE:\n * Sub-rectangles are not implemented for VideoFrames, so only options is\n * available, and there, only scaling is available.\n * @param image  VideoFrame (or anything else) to draw\n * @param options  Other options\n */\nexport function createImageBitmap(\n  image: vf.VideoFrame,\n  opts: {\n    resizeWidth?: number;\n    resizeHeight?: number;\n  } = {},\n): Promise<ImageBitmap> {\n  if (!(image instanceof vf.VideoFrame)) {\n    // Just use the original\n    return origCreateImageBitmap.apply(global, arguments);\n  }\n\n  // Convert the format to libav.js\n  let format: number = scalerAsync.AV_PIX_FMT_RGBA;\n  switch (image.format) {\n    case 'I420':\n      format = scalerAsync.AV_PIX_FMT_YUV420P;\n      break;\n\n    case 'I420A':\n      format = scalerAsync.AV_PIX_FMT_YUVA420P;\n      break;\n\n    case 'I422':\n      format = scalerAsync.AV_PIX_FMT_YUV422P;\n      break;\n\n    case 'I444':\n      format = scalerAsync.AV_PIX_FMT_YUV444P;\n      break;\n\n    case 'NV12':\n      format = scalerAsync.AV_PIX_FMT_NV12;\n      break;\n\n    case 'RGBA':\n    case 'RGBX':\n      format = scalerAsync.AV_PIX_FMT_RGBA;\n      break;\n\n    case 'BGRA':\n    case 'BGRX':\n      format = scalerAsync.AV_PIX_FMT_BGRA;\n      break;\n  }\n\n  // Normalize arguments\n  const dWidth = typeof opts.resizeWidth === 'number' ? opts.resizeWidth : image.displayWidth;\n  const dHeight = typeof opts.resizeHeight === 'number' ? opts.resizeHeight : image.displayHeight;\n\n  // Convert the frame\n  const frameData = new ImageData(dWidth, dHeight);\n\n  return (async () => {\n    const [sctx, inFrame, outFrame] = await Promise.all([\n      scalerAsync.sws_getContext(\n        image.codedWidth,\n        image.codedHeight,\n        format,\n        dWidth,\n        dHeight,\n        scalerAsync.AV_PIX_FMT_RGBA,\n        2,\n        0,\n        0,\n        0,\n      ),\n      scalerAsync.av_frame_alloc(),\n      scalerAsync.av_frame_alloc(),\n    ]);\n\n    // Convert the data (FIXME: duplication)\n    const rawU8 = image._libavGetData();\n    let rawIdx = 0;\n    const raw: Uint8Array[][] = [];\n    const planes = vf.numPlanes(image.format);\n    for (let p = 0; p < planes; p++) {\n      const plane: Uint8Array[] = [];\n      raw.push(plane);\n      const sb = vf.sampleBytes(image.format, p);\n      const hssf = vf.horizontalSubSamplingFactor(image.format, p);\n      const vssf = vf.verticalSubSamplingFactor(image.format, p);\n      const w = ~~((image.codedWidth * sb) / hssf);\n      const h = ~~(image.codedHeight / vssf);\n      for (let y = 0; y < h; y++) {\n        plane.push(rawU8.subarray(rawIdx, rawIdx + w));\n        rawIdx += w;\n      }\n    }\n\n    const [, , frame] = await Promise.all([\n      // Copy it in\n      scalerAsync.ff_copyin_frame(inFrame, {\n        data: raw,\n        format,\n        width: image.codedWidth,\n        height: image.codedHeight,\n      }),\n\n      // Rescale\n      scalerAsync.sws_scale_frame(sctx, outFrame, inFrame),\n\n      // Get the data back out again\n      scalerAsync.ff_copyout_frame(outFrame),\n\n      // And clean up\n      scalerAsync.av_frame_free_js(outFrame),\n      scalerAsync.av_frame_free_js(inFrame),\n      scalerAsync.sws_freeContext(sctx),\n    ]);\n\n    // Transfer all the data\n    let idx = 0;\n    for (let i = 0; i < frame.data.length; i++) {\n      const plane = frame.data[i];\n      for (let y = 0; y < plane.length; y++) {\n        const row = plane[y];\n        frameData.data.set(row, idx);\n        idx += row.length;\n      }\n    }\n\n    // And make the ImageBitmap\n    return await origCreateImageBitmap(frameData);\n  })();\n}\n","/*\n * This file is part of the libav.js WebCodecs Polyfill implementation. The\n * interface implemented is derived from the W3C standard. No attribution is\n * required when using this library.\n *\n * Copyright (c) 2021 Yahweasel\n *\n * Permission to use, copy, modify, and/or distribute this software for any\n * purpose with or without fee is hereby granted.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY\n * SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION\n * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN\n * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport type * as eac from './encoded-audio-chunk';\nimport * as evc from './encoded-video-chunk';\nimport * as vf from './video-frame';\nimport * as vdec from './video-decoder';\n\n/**\n * A VideoDecoder environment.\n */\nexport interface VideoDecoderEnvironment {\n  VideoDecoder: typeof vdec.VideoDecoder;\n  EncodedVideoChunk: typeof evc.EncodedVideoChunk;\n  VideoFrame: typeof vf.VideoFrame;\n}\n\n/**\n * Error thrown to indicate a configuration is unsupported.\n */\nexport class UnsupportedException extends Error {\n  constructor() {\n    super('The requested configuration is not supported');\n  }\n}\n\n/**\n * Get an VideoDecoder environment that supports this configuration. Throws an\n * UnsupportedException if no environment supports the configuration.\n * @param config  Video decoder configuration\n */\nexport async function getVideoDecoder(\n  config: vdec.VideoDecoderConfig,\n): Promise<VideoDecoderEnvironment> {\n  try {\n    if (\n      typeof (<any>global).VideoDecoder !== 'undefined'\n      && (await (<any>global).VideoDecoder.isConfigSupported(config)).supported\n    ) {\n      return {\n        VideoDecoder: (<any>global).VideoDecoder,\n        EncodedVideoChunk: (<any>global).EncodedVideoChunk,\n        VideoFrame: (<any>global).VideoFrame,\n      };\n    }\n  } catch (ex) {}\n\n  if ((await vdec.VideoDecoder.isConfigSupported(config)).supported) {\n    return {\n      VideoDecoder: vdec.VideoDecoder,\n      EncodedVideoChunk: evc.EncodedVideoChunk,\n      VideoFrame: vf.VideoFrame,\n    };\n  }\n\n  throw new UnsupportedException();\n}\n","import { createWorkerInterface } from '../../util/createPostMessageInterface';\nimport type { CancellableCallback } from '../../util/PostMessageConnector';\nimport { MP4Demuxer } from './MP4Demuxer';\nimport * as LibAVWebCodecs from './polyfill';\n\nlet decoder: any;\nlet demuxer: any;\nlet onDestroy: VoidFunction | undefined;\n\nlet isLoaded = false;\n\nasync function init(\n  url: string,\n  maxFrames: number,\n  workerIndex: number,\n  workersTotal: number,\n  onFrame: CancellableCallback,\n) {\n  const hasWebCodecs = 'VideoDecoder' in globalThis;\n  if (!hasWebCodecs) {\n    await loadLibAV();\n  }\n\n  const decodedFrames = new Set<number>();\n\n  // @ts-ignore\n  decoder = new VideoDecoder({\n    async output(frame: any) {\n      const time = frame.timestamp / 1e6;\n      const seconds = Math.floor(time);\n      // Only render whole second frames\n      if (!decodedFrames.has(seconds)) {\n        const bitmap = await createImageBitmap(frame);\n        decodedFrames.add(seconds);\n        onFrame(seconds, bitmap);\n      }\n      frame.close();\n    },\n    error(e: any) {\n      // eslint-disable-next-line no-console\n      console.error('[Video Preview] error', e);\n    },\n  });\n\n  demuxer = new MP4Demuxer(url, {\n    stepOffset: workerIndex,\n    stepMultiplier: workersTotal,\n    isPolyfill: !hasWebCodecs,\n    maxFrames,\n    onConfig(config) {\n      decoder?.configure(config);\n    },\n    onChunk(chunk) {\n      if (decoder?.state !== 'configured') return;\n      decoder?.decode(chunk);\n    },\n  });\n\n  return new Promise<void>((resolve) => {\n    onDestroy = resolve;\n  });\n}\n\nfunction destroy() {\n  try {\n    decoder?.close();\n    demuxer?.close();\n  } catch {\n    // Ignore\n  }\n  decoder = undefined;\n  demuxer = undefined;\n  onDestroy?.();\n}\n\nasync function loadLibAV() {\n  if (isLoaded) return;\n  // @ts-ignore\n  await import('script-loader!./libav-3.10.5.1.2-webcodecs');\n  await LibAVWebCodecs.load({\n    polyfill: true,\n    libavOptions: { noworker: true, nosimd: true },\n  });\n  isLoaded = true;\n}\n\nconst api = {\n  'video-preview:init': init,\n  'video-preview:destroy': destroy,\n};\n\ncreateWorkerInterface(api);\n\nexport type VideoPreviewApi = typeof api;\n","// @ts-nocheck\n\n/*\n * This file is part of the libav.js WebCodecs Polyfill implementation. The\n * interface implemented is derived from the W3C standard. No attribution is\n * required when using this library.\n *\n * Copyright (c) 2021 Yahweasel\n *\n * Permission to use, copy, modify, and/or distribute this software for any\n * purpose with or without fee is hereby granted.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY\n * SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION\n * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN\n * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport type * as LibAVJS from '../libav.types';\nimport * as eac from './encoded-audio-chunk';\n\nimport * as evc from './encoded-video-chunk';\nimport * as vf from './video-frame';\nimport * as vdec from './video-decoder';\n\nimport * as rendering from './rendering';\n\nimport * as config from './config';\nimport * as libav from './libav';\nimport type * as misc from './misc';\n\ndeclare let LibAV: LibAVJS.LibAVWrapper;\n\n/**\n * Load LibAV-WebCodecs-Polyfill.\n */\nexport async function load(\n  options: {\n    polyfill?: boolean;\n    libavOptions?: any;\n  } = {},\n) {\n  // Set up libavOptions\n  const libavOptions: any = {};\n  if (options.libavOptions) {\n    Object.assign(libavOptions, options.libavOptions);\n  }\n\n  // And load the libav handler\n  libav.setLibAVOptions(libavOptions);\n  await libav.load();\n\n  if (options.polyfill) {\n    globalThis.VideoDecoder = vdec.VideoDecoder;\n    globalThis.VideoFrame = vf.VideoFrame;\n    globalThis.EncodedVideoChunk = evc.EncodedVideoChunk;\n  }\n\n  await rendering.load(libavOptions, !!options.polyfill);\n}\n\n// EncodedVideoChunk\nexport type EncodedVideoChunk = evc.EncodedVideoChunk;\nexport const EncodedVideoChunk = evc.EncodedVideoChunk;\nexport type EncodedVideoChunkInit = evc.EncodedVideoChunkInit;\n\n// VideoFrame\nexport type VideoFrame = vf.VideoFrame;\nexport const VideoFrame = vf.VideoFrame;\nexport type VideoFrameInit = vf.VideoFrameInit;\nexport type VideoFrameBufferInit = vf.VideoFrameBufferInit;\nexport type VideoPixelFormat = vf.VideoPixelFormat;\nexport type PlaneLayout = vf.PlaneLayout;\nexport type VideoFrameCopyToOptions = vf.VideoFrameCopyToOptions;\n\n// VideoDecoder\nexport type VideoDecoder = vdec.VideoDecoder;\nexport const VideoDecoder = vdec.VideoDecoder;\nexport type VideoDecoderInit = vdec.VideoDecoderInit;\nexport type VideoFrameOutputCallback = vdec.VideoFrameOutputCallback;\nexport type VideoDecoderConfig = vdec.VideoDecoderConfig;\nexport type VideoDecoderSupport = vdec.VideoDecoderSupport;\n\n// Rendering\nexport const createImageBitmap = rendering.createImageBitmap;\n\n// Misc\nexport type CodecState = misc.CodecState;\nexport type WebCodecsErrorcallback = misc.WebCodecsErrorCallback;\n\n// Configurations/environments\nexport type AudioDecoderEnvironment = config.AudioDecoderEnvironment;\nexport type VideoDecoderEnvironment = config.VideoDecoderEnvironment;\nexport type UnsupportedException = config.UnsupportedException;\nexport const UnsupportedException = config.UnsupportedException;\nexport const getVideoDecoder = config.getVideoDecoder;\n","// file:src/log.js\n/* \n * Copyright (c) 2012-2013. Telecom ParisTech/TSI/MM/GPAC Cyril Concolato\n * License: BSD-3-Clause (see LICENSE file)\n */\nvar Log = (function (){\n\t\tvar start = new Date();\n\t\tvar LOG_LEVEL_ERROR \t= 4;\n\t\tvar LOG_LEVEL_WARNING \t= 3;\n\t\tvar LOG_LEVEL_INFO \t\t= 2;\n\t\tvar LOG_LEVEL_DEBUG\t\t= 1;\n\t\tvar log_level = LOG_LEVEL_ERROR;\n\t\tvar logObject = {\n\t\t\tsetLogLevel : function(level) {\n\t\t\t\tif (level == this.debug) log_level = LOG_LEVEL_DEBUG;\n\t\t\t\telse if (level == this.info) log_level = LOG_LEVEL_INFO;\n\t\t\t\telse if (level == this.warn) log_level = LOG_LEVEL_WARNING;\n\t\t\t\telse if (level == this.error) log_level = LOG_LEVEL_ERROR;\n\t\t\t\telse log_level = LOG_LEVEL_ERROR;\n\t\t\t},\n\t\t\tdebug : function(module, msg) {\n\t\t\t\tif (console.debug === undefined) {\n\t\t\t\t\tconsole.debug = console.log;\n\t\t\t\t}\n\t\t\t\tif (LOG_LEVEL_DEBUG >= log_level) {\n\t\t\t\t\tconsole.debug(\"[\"+Log.getDurationString(new Date()-start,1000)+\"]\",\"[\"+module+\"]\",msg);\n\t\t\t\t}\n\t\t\t},\n\t\t\tlog : function(module, msg) {\n\t\t\t\tthis.debug(module.msg)\n\t\t\t},\n\t\t\tinfo : function(module, msg) {\n\t\t\t\tif (LOG_LEVEL_INFO >= log_level) {\n\t\t\t\t\tconsole.info(\"[\"+Log.getDurationString(new Date()-start,1000)+\"]\",\"[\"+module+\"]\",msg);\n\t\t\t\t}\n\t\t\t},\n\t\t\twarn : function(module, msg) {\n\t\t\t\tif (LOG_LEVEL_WARNING >= log_level) {\n\t\t\t\t\tconsole.warn(\"[\"+Log.getDurationString(new Date()-start,1000)+\"]\",\"[\"+module+\"]\",msg);\n\t\t\t\t}\n\t\t\t},\n\t\t\terror : function(module, msg) {\n\t\t\t\tif (LOG_LEVEL_ERROR >= log_level) {\n\t\t\t\t\tconsole.error(\"[\"+Log.getDurationString(new Date()-start,1000)+\"]\",\"[\"+module+\"]\",msg);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn logObject;\n\t})();\n\t\n/* Helper function to print a duration value in the form H:MM:SS.MS */\nLog.getDurationString = function(duration, _timescale) {\n\tvar neg;\n\t/* Helper function to print a number on a fixed number of digits */\n\tfunction pad(number, length) {\n\t\tvar str = '' + number;\n\t\tvar a = str.split('.');\t\t\n\t\twhile (a[0].length < length) {\n\t\t\ta[0] = '0' + a[0];\n\t\t}\n\t\treturn a.join('.');\n\t}\n\tif (duration < 0) {\n\t\tneg = true;\n\t\tduration = -duration;\n\t} else {\n\t\tneg = false;\t\n\t}\n\tvar timescale = _timescale || 1;\n\tvar duration_sec = duration/timescale;\n\tvar hours = Math.floor(duration_sec/3600);\n\tduration_sec -= hours * 3600;\n\tvar minutes = Math.floor(duration_sec/60);\n\tduration_sec -= minutes * 60;\t\t\n\tvar msec = duration_sec*1000;\n\tduration_sec = Math.floor(duration_sec);\n\tmsec -= duration_sec*1000;\n\tmsec = Math.floor(msec);\n\treturn (neg ? \"-\": \"\")+hours+\":\"+pad(minutes,2)+\":\"+pad(duration_sec,2)+\".\"+pad(msec,3);\n}\n\t\n/* Helper function to stringify HTML5 TimeRanges objects */\t\nLog.printRanges = function(ranges) {\n\tvar length = ranges.length;\n\tif (length > 0) {\n\t\tvar str = \"\";\n\t\tfor (var i = 0; i < length; i++) {\n\t\t  if (i > 0) str += \",\";\n\t\t  str += \"[\"+Log.getDurationString(ranges.start(i))+ \",\"+Log.getDurationString(ranges.end(i))+\"]\";\n\t\t}\n\t\treturn str;\n\t} else {\n\t\treturn \"(empty)\";\n\t}\n}\n\nif (typeof exports !== 'undefined') {\n\texports.Log = Log;\n}\n// file:src/stream.js\nvar MP4BoxStream = function(arrayBuffer) {\n  if (arrayBuffer instanceof ArrayBuffer) {\n    this.buffer = arrayBuffer;\n    this.dataview = new DataView(arrayBuffer);\n  } else {\n    throw (\"Needs an array buffer\");\n  }\n  this.position = 0;\n};\n\n/*************************************************************************\n  Common API between MultiBufferStream and SimpleStream\n *************************************************************************/\nMP4BoxStream.prototype.getPosition = function() {\n  return this.position;\n}\n\nMP4BoxStream.prototype.getEndPosition = function() {\n  return this.buffer.byteLength;\n}\n\nMP4BoxStream.prototype.getLength = function() {\n  return this.buffer.byteLength;\n}\n\nMP4BoxStream.prototype.seek = function (pos) {\n  var npos = Math.max(0, Math.min(this.buffer.byteLength, pos));\n  this.position = (isNaN(npos) || !isFinite(npos)) ? 0 : npos;\n  return true;\n}\n\nMP4BoxStream.prototype.isEos = function () {\n  return this.getPosition() >= this.getEndPosition();\n}\n\n/*************************************************************************\n  Read methods, simimar to DataStream but simpler\n *************************************************************************/\nMP4BoxStream.prototype.readAnyInt = function(size, signed) {\n  var res = 0;\n  if (this.position + size <= this.buffer.byteLength) {\n    switch (size) {\n      case 1:\n        if (signed) {\n          res = this.dataview.getInt8(this.position);\n        } else {\n          res = this.dataview.getUint8(this.position);\n        }\n        break;\n      case 2:\n        if (signed) {\n          res = this.dataview.getInt16(this.position);\n        } else {\n          res = this.dataview.getUint16(this.position);\n        }\n        break;\n      case 3:\n        if (signed) {\n          throw (\"No method for reading signed 24 bits values\");\n        } else {\n          res = this.dataview.getUint8(this.position) << 16;\n          res |= this.dataview.getUint8(this.position+1) << 8;\n          res |= this.dataview.getUint8(this.position+2);\n        }\n        break;\n      case 4:\n        if (signed) {\n          res = this.dataview.getInt32(this.position);\n        } else {\n          res = this.dataview.getUint32(this.position);\n        }\n        break;\n      case 8:\n        if (signed) {\n          throw (\"No method for reading signed 64 bits values\");\n        } else {\n          res = this.dataview.getUint32(this.position) << 32;\n          res |= this.dataview.getUint32(this.position+4);\n        }\n        break;\n      default:\n        throw (\"readInt method not implemented for size: \"+size);\n    }\n    this.position+= size;\n    return res;\n  } else {\n    throw (\"Not enough bytes in buffer\");\n  }\n}\n\nMP4BoxStream.prototype.readUint8 = function() {\n  return this.readAnyInt(1, false);\n}\n\nMP4BoxStream.prototype.readUint16 = function() {\n  return this.readAnyInt(2, false);\n}\n\nMP4BoxStream.prototype.readUint24 = function() {\n  return this.readAnyInt(3, false);\n}\n\nMP4BoxStream.prototype.readUint32 = function() {\n  return this.readAnyInt(4, false);\n}\n\nMP4BoxStream.prototype.readUint64 = function() {\n  return this.readAnyInt(8, false);\n}\n\nMP4BoxStream.prototype.readString = function(length) {\n  if (this.position + length <= this.buffer.byteLength) {\n    var s = \"\";\n    for (var i = 0; i < length; i++) {\n      s += String.fromCharCode(this.readUint8());\n    }\n    return s;\n  } else {\n    throw (\"Not enough bytes in buffer\");\n  }\n}\n\nMP4BoxStream.prototype.readCString = function() {\n  var arr = [];\n  while(true) {\n    var b = this.readUint8();\n    if (b !== 0) {\n      arr.push(b);\n    } else {\n      break;\n    }\n  }\n  return String.fromCharCode.apply(null, arr); \n}\n\nMP4BoxStream.prototype.readInt8 = function() {\n  return this.readAnyInt(1, true);\n}\n\nMP4BoxStream.prototype.readInt16 = function() {\n  return this.readAnyInt(2, true);\n}\n\nMP4BoxStream.prototype.readInt32 = function() {\n  return this.readAnyInt(4, true);\n}\n\nMP4BoxStream.prototype.readInt64 = function() {\n  return this.readAnyInt(8, false);\n}\n\nMP4BoxStream.prototype.readUint8Array = function(length) {\n  var arr = new Uint8Array(length);\n  for (var i = 0; i < length; i++) {\n    arr[i] = this.readUint8();\n  }\n  return arr;\n}\n\nMP4BoxStream.prototype.readInt16Array = function(length) {\n  var arr = new Int16Array(length);\n  for (var i = 0; i < length; i++) {\n    arr[i] = this.readInt16();\n  }\n  return arr;\n}\n\nMP4BoxStream.prototype.readUint16Array = function(length) {\n  var arr = new Int16Array(length);\n  for (var i = 0; i < length; i++) {\n    arr[i] = this.readUint16();\n  }\n  return arr;\n}\n\nMP4BoxStream.prototype.readUint32Array = function(length) {\n  var arr = new Uint32Array(length);\n  for (var i = 0; i < length; i++) {\n    arr[i] = this.readUint32();\n  }\n  return arr;\n}\n\nMP4BoxStream.prototype.readInt32Array = function(length) {\n  var arr = new Int32Array(length);\n  for (var i = 0; i < length; i++) {\n    arr[i] = this.readInt32();\n  }\n  return arr;\n}\n\nif (typeof exports !== 'undefined') {\n  exports.MP4BoxStream = MP4BoxStream;\n}// file:src/DataStream.js\n/**\n  DataStream reads scalars, arrays and structs of data from an ArrayBuffer.\n  It's like a file-like DataView on steroids.\n\n  @param {ArrayBuffer} arrayBuffer ArrayBuffer to read from.\n  @param {?Number} byteOffset Offset from arrayBuffer beginning for the DataStream.\n  @param {?Boolean} endianness DataStream.BIG_ENDIAN or DataStream.LITTLE_ENDIAN (the default).\n  */\nvar DataStream = function(arrayBuffer, byteOffset, endianness) {\n  this._byteOffset = byteOffset || 0;\n  if (arrayBuffer instanceof ArrayBuffer) {\n    this.buffer = arrayBuffer;\n  } else if (typeof arrayBuffer == \"object\") {\n    this.dataView = arrayBuffer;\n    if (byteOffset) {\n      this._byteOffset += byteOffset;\n    }\n  } else {\n    this.buffer = new ArrayBuffer(arrayBuffer || 0);\n  }\n  this.position = 0;\n  this.endianness = endianness == null ? DataStream.LITTLE_ENDIAN : endianness;\n};\nDataStream.prototype = {};\n\nDataStream.prototype.getPosition = function() {\n  return this.position;\n}\n\n/**\n  Internal function to resize the DataStream buffer when required.\n  @param {number} extra Number of bytes to add to the buffer allocation.\n  @return {null}\n  */\nDataStream.prototype._realloc = function(extra) {\n  if (!this._dynamicSize) {\n    return;\n  }\n  var req = this._byteOffset + this.position + extra;\n  var blen = this._buffer.byteLength;\n  if (req <= blen) {\n    if (req > this._byteLength) {\n      this._byteLength = req;\n    }\n    return;\n  }\n  if (blen < 1) {\n    blen = 1;\n  }\n  while (req > blen) {\n    blen *= 2;\n  }\n  var buf = new ArrayBuffer(blen);\n  var src = new Uint8Array(this._buffer);\n  var dst = new Uint8Array(buf, 0, src.length);\n  dst.set(src);\n  this.buffer = buf;\n  this._byteLength = req;\n};\n\n/**\n  Internal function to trim the DataStream buffer when required.\n  Used for stripping out the extra bytes from the backing buffer when\n  the virtual byteLength is smaller than the buffer byteLength (happens after\n  growing the buffer with writes and not filling the extra space completely).\n\n  @return {null}\n  */\nDataStream.prototype._trimAlloc = function() {\n  if (this._byteLength == this._buffer.byteLength) {\n    return;\n  }\n  var buf = new ArrayBuffer(this._byteLength);\n  var dst = new Uint8Array(buf);\n  var src = new Uint8Array(this._buffer, 0, dst.length);\n  dst.set(src);\n  this.buffer = buf;\n};\n\n\n/**\n  Big-endian const to use as default endianness.\n  @type {boolean}\n  */\nDataStream.BIG_ENDIAN = false;\n\n/**\n  Little-endian const to use as default endianness.\n  @type {boolean}\n  */\nDataStream.LITTLE_ENDIAN = true;\n\n/**\n  Virtual byte length of the DataStream backing buffer.\n  Updated to be max of original buffer size and last written size.\n  If dynamicSize is false is set to buffer size.\n  @type {number}\n  */\nDataStream.prototype._byteLength = 0;\n\n/**\n  Returns the byte length of the DataStream object.\n  @type {number}\n  */\nObject.defineProperty(DataStream.prototype, 'byteLength',\n  { get: function() {\n    return this._byteLength - this._byteOffset;\n  }});\n\n/**\n  Set/get the backing ArrayBuffer of the DataStream object.\n  The setter updates the DataView to point to the new buffer.\n  @type {Object}\n  */\nObject.defineProperty(DataStream.prototype, 'buffer',\n  { get: function() {\n      this._trimAlloc();\n      return this._buffer;\n    },\n    set: function(v) {\n      this._buffer = v;\n      this._dataView = new DataView(this._buffer, this._byteOffset);\n      this._byteLength = this._buffer.byteLength;\n    } });\n\n/**\n  Set/get the byteOffset of the DataStream object.\n  The setter updates the DataView to point to the new byteOffset.\n  @type {number}\n  */\nObject.defineProperty(DataStream.prototype, 'byteOffset',\n  { get: function() {\n      return this._byteOffset;\n    },\n    set: function(v) {\n      this._byteOffset = v;\n      this._dataView = new DataView(this._buffer, this._byteOffset);\n      this._byteLength = this._buffer.byteLength;\n    } });\n\n/**\n  Set/get the backing DataView of the DataStream object.\n  The setter updates the buffer and byteOffset to point to the DataView values.\n  @type {Object}\n  */\nObject.defineProperty(DataStream.prototype, 'dataView',\n  { get: function() {\n      return this._dataView;\n    },\n    set: function(v) {\n      this._byteOffset = v.byteOffset;\n      this._buffer = v.buffer;\n      this._dataView = new DataView(this._buffer, this._byteOffset);\n      this._byteLength = this._byteOffset + v.byteLength;\n    } });\n\n/**\n  Sets the DataStream read/write position to given position.\n  Clamps between 0 and DataStream length.\n\n  @param {number} pos Position to seek to.\n  @return {null}\n  */\nDataStream.prototype.seek = function(pos) {\n  var npos = Math.max(0, Math.min(this.byteLength, pos));\n  this.position = (isNaN(npos) || !isFinite(npos)) ? 0 : npos;\n};\n\n/**\n  Returns true if the DataStream seek pointer is at the end of buffer and\n  there's no more data to read.\n\n  @return {boolean} True if the seek pointer is at the end of the buffer.\n  */\nDataStream.prototype.isEof = function() {\n  return (this.position >= this._byteLength);\n};\n\n\n/**\n  Maps a Uint8Array into the DataStream buffer.\n\n  Nice for quickly reading in data.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} Uint8Array to the DataStream backing buffer.\n  */\nDataStream.prototype.mapUint8Array = function(length) {\n  this._realloc(length * 1);\n  var arr = new Uint8Array(this._buffer, this.byteOffset+this.position, length);\n  this.position += length * 1;\n  return arr;\n};\n\n\n/**\n  Reads an Int32Array of desired length and endianness from the DataStream.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} The read Int32Array.\n */\nDataStream.prototype.readInt32Array = function(length, e) {\n  length = length == null ? (this.byteLength-this.position / 4) : length;\n  var arr = new Int32Array(length);\n  DataStream.memcpy(arr.buffer, 0,\n                    this.buffer, this.byteOffset+this.position,\n                    length*arr.BYTES_PER_ELEMENT);\n  DataStream.arrayToNative(arr, e == null ? this.endianness : e);\n  this.position += arr.byteLength;\n  return arr;\n};\n\n/**\n  Reads an Int16Array of desired length and endianness from the DataStream.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} The read Int16Array.\n */\nDataStream.prototype.readInt16Array = function(length, e) {\n  length = length == null ? (this.byteLength-this.position / 2) : length;\n  var arr = new Int16Array(length);\n  DataStream.memcpy(arr.buffer, 0,\n                    this.buffer, this.byteOffset+this.position,\n                    length*arr.BYTES_PER_ELEMENT);\n  DataStream.arrayToNative(arr, e == null ? this.endianness : e);\n  this.position += arr.byteLength;\n  return arr;\n};\n\n/**\n  Reads an Int8Array of desired length from the DataStream.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} The read Int8Array.\n */\nDataStream.prototype.readInt8Array = function(length) {\n  length = length == null ? (this.byteLength-this.position) : length;\n  var arr = new Int8Array(length);\n  DataStream.memcpy(arr.buffer, 0,\n                    this.buffer, this.byteOffset+this.position,\n                    length*arr.BYTES_PER_ELEMENT);\n  this.position += arr.byteLength;\n  return arr;\n};\n\n/**\n  Reads a Uint32Array of desired length and endianness from the DataStream.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} The read Uint32Array.\n */\nDataStream.prototype.readUint32Array = function(length, e) {\n  length = length == null ? (this.byteLength-this.position / 4) : length;\n  var arr = new Uint32Array(length);\n  DataStream.memcpy(arr.buffer, 0,\n                    this.buffer, this.byteOffset+this.position,\n                    length*arr.BYTES_PER_ELEMENT);\n  DataStream.arrayToNative(arr, e == null ? this.endianness : e);\n  this.position += arr.byteLength;\n  return arr;\n};\n\n/**\n  Reads a Uint16Array of desired length and endianness from the DataStream.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} The read Uint16Array.\n */\nDataStream.prototype.readUint16Array = function(length, e) {\n  length = length == null ? (this.byteLength-this.position / 2) : length;\n  var arr = new Uint16Array(length);\n  DataStream.memcpy(arr.buffer, 0,\n                    this.buffer, this.byteOffset+this.position,\n                    length*arr.BYTES_PER_ELEMENT);\n  DataStream.arrayToNative(arr, e == null ? this.endianness : e);\n  this.position += arr.byteLength;\n  return arr;\n};\n\n/**\n  Reads a Uint8Array of desired length from the DataStream.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} The read Uint8Array.\n */\nDataStream.prototype.readUint8Array = function(length) {\n  length = length == null ? (this.byteLength-this.position) : length;\n  var arr = new Uint8Array(length);\n  DataStream.memcpy(arr.buffer, 0,\n                    this.buffer, this.byteOffset+this.position,\n                    length*arr.BYTES_PER_ELEMENT);\n  this.position += arr.byteLength;\n  return arr;\n};\n\n/**\n  Reads a Float64Array of desired length and endianness from the DataStream.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} The read Float64Array.\n */\nDataStream.prototype.readFloat64Array = function(length, e) {\n  length = length == null ? (this.byteLength-this.position / 8) : length;\n  var arr = new Float64Array(length);\n  DataStream.memcpy(arr.buffer, 0,\n                    this.buffer, this.byteOffset+this.position,\n                    length*arr.BYTES_PER_ELEMENT);\n  DataStream.arrayToNative(arr, e == null ? this.endianness : e);\n  this.position += arr.byteLength;\n  return arr;\n};\n\n/**\n  Reads a Float32Array of desired length and endianness from the DataStream.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} The read Float32Array.\n */\nDataStream.prototype.readFloat32Array = function(length, e) {\n  length = length == null ? (this.byteLength-this.position / 4) : length;\n  var arr = new Float32Array(length);\n  DataStream.memcpy(arr.buffer, 0,\n                    this.buffer, this.byteOffset+this.position,\n                    length*arr.BYTES_PER_ELEMENT);\n  DataStream.arrayToNative(arr, e == null ? this.endianness : e);\n  this.position += arr.byteLength;\n  return arr;\n};\n\n\n/**\n  Reads a 32-bit int from the DataStream with the desired endianness.\n\n  @param {?boolean} e Endianness of the number.\n  @return {number} The read number.\n */\nDataStream.prototype.readInt32 = function(e) {\n  var v = this._dataView.getInt32(this.position, e == null ? this.endianness : e);\n  this.position += 4;\n  return v;\n};\n\n/**\n  Reads a 16-bit int from the DataStream with the desired endianness.\n\n  @param {?boolean} e Endianness of the number.\n  @return {number} The read number.\n */\nDataStream.prototype.readInt16 = function(e) {\n  var v = this._dataView.getInt16(this.position, e == null ? this.endianness : e);\n  this.position += 2;\n  return v;\n};\n\n/**\n  Reads an 8-bit int from the DataStream.\n\n  @return {number} The read number.\n */\nDataStream.prototype.readInt8 = function() {\n  var v = this._dataView.getInt8(this.position);\n  this.position += 1;\n  return v;\n};\n\n/**\n  Reads a 32-bit unsigned int from the DataStream with the desired endianness.\n\n  @param {?boolean} e Endianness of the number.\n  @return {number} The read number.\n */\nDataStream.prototype.readUint32 = function(e) {\n  var v = this._dataView.getUint32(this.position, e == null ? this.endianness : e);\n  this.position += 4;\n  return v;\n};\n\n/**\n  Reads a 16-bit unsigned int from the DataStream with the desired endianness.\n\n  @param {?boolean} e Endianness of the number.\n  @return {number} The read number.\n */\nDataStream.prototype.readUint16 = function(e) {\n  var v = this._dataView.getUint16(this.position, e == null ? this.endianness : e);\n  this.position += 2;\n  return v;\n};\n\n/**\n  Reads an 8-bit unsigned int from the DataStream.\n\n  @return {number} The read number.\n */\nDataStream.prototype.readUint8 = function() {\n  var v = this._dataView.getUint8(this.position);\n  this.position += 1;\n  return v;\n};\n\n/**\n  Reads a 32-bit float from the DataStream with the desired endianness.\n\n  @param {?boolean} e Endianness of the number.\n  @return {number} The read number.\n */\nDataStream.prototype.readFloat32 = function(e) {\n  var v = this._dataView.getFloat32(this.position, e == null ? this.endianness : e);\n  this.position += 4;\n  return v;\n};\n\n/**\n  Reads a 64-bit float from the DataStream with the desired endianness.\n\n  @param {?boolean} e Endianness of the number.\n  @return {number} The read number.\n */\nDataStream.prototype.readFloat64 = function(e) {\n  var v = this._dataView.getFloat64(this.position, e == null ? this.endianness : e);\n  this.position += 8;\n  return v;\n};\n\n/**\n  Native endianness. Either DataStream.BIG_ENDIAN or DataStream.LITTLE_ENDIAN\n  depending on the platform endianness.\n\n  @type {boolean}\n */\nDataStream.endianness = new Int8Array(new Int16Array([1]).buffer)[0] > 0;\n\n/**\n  Copies byteLength bytes from the src buffer at srcOffset to the\n  dst buffer at dstOffset.\n\n  @param {Object} dst Destination ArrayBuffer to write to.\n  @param {number} dstOffset Offset to the destination ArrayBuffer.\n  @param {Object} src Source ArrayBuffer to read from.\n  @param {number} srcOffset Offset to the source ArrayBuffer.\n  @param {number} byteLength Number of bytes to copy.\n */\nDataStream.memcpy = function(dst, dstOffset, src, srcOffset, byteLength) {\n  var dstU8 = new Uint8Array(dst, dstOffset, byteLength);\n  var srcU8 = new Uint8Array(src, srcOffset, byteLength);\n  dstU8.set(srcU8);\n};\n\n/**\n  Converts array to native endianness in-place.\n\n  @param {Object} array Typed array to convert.\n  @param {boolean} arrayIsLittleEndian True if the data in the array is\n                                       little-endian. Set false for big-endian.\n  @return {Object} The converted typed array.\n */\nDataStream.arrayToNative = function(array, arrayIsLittleEndian) {\n  if (arrayIsLittleEndian == this.endianness) {\n    return array;\n  } else {\n    return this.flipArrayEndianness(array);\n  }\n};\n\n/**\n  Converts native endianness array to desired endianness in-place.\n\n  @param {Object} array Typed array to convert.\n  @param {boolean} littleEndian True if the converted array should be\n                                little-endian. Set false for big-endian.\n  @return {Object} The converted typed array.\n */\nDataStream.nativeToEndian = function(array, littleEndian) {\n  if (this.endianness == littleEndian) {\n    return array;\n  } else {\n    return this.flipArrayEndianness(array);\n  }\n};\n\n/**\n  Flips typed array endianness in-place.\n\n  @param {Object} array Typed array to flip.\n  @return {Object} The converted typed array.\n */\nDataStream.flipArrayEndianness = function(array) {\n  var u8 = new Uint8Array(array.buffer, array.byteOffset, array.byteLength);\n  for (var i=0; i<array.byteLength; i+=array.BYTES_PER_ELEMENT) {\n    for (var j=i+array.BYTES_PER_ELEMENT-1, k=i; j>k; j--, k++) {\n      var tmp = u8[k];\n      u8[k] = u8[j];\n      u8[j] = tmp;\n    }\n  }\n  return array;\n};\n\n/**\n  Seek position where DataStream#readStruct ran into a problem.\n  Useful for debugging struct parsing.\n\n  @type {number}\n */\nDataStream.prototype.failurePosition = 0;\n\nString.fromCharCodeUint8 = function(uint8arr) {\n    var arr = [];\n    for (var i = 0; i < uint8arr.length; i++) {\n      arr[i] = uint8arr[i];\n    }\n    return String.fromCharCode.apply(null, arr);\n}\n/**\n  Read a string of desired length and encoding from the DataStream.\n\n  @param {number} length The length of the string to read in bytes.\n  @param {?string} encoding The encoding of the string data in the DataStream.\n                            Defaults to ASCII.\n  @return {string} The read string.\n */\nDataStream.prototype.readString = function(length, encoding) {\n  if (encoding == null || encoding == \"ASCII\") {\n    return String.fromCharCodeUint8.apply(null, [this.mapUint8Array(length == null ? this.byteLength-this.position : length)]);\n  } else {\n    return (new TextDecoder(encoding)).decode(this.mapUint8Array(length));\n  }\n};\n\n/**\n  Read null-terminated string of desired length from the DataStream. Truncates\n  the returned string so that the null byte is not a part of it.\n\n  @param {?number} length The length of the string to read.\n  @return {string} The read string.\n */\nDataStream.prototype.readCString = function(length) {\n  var blen = this.byteLength-this.position;\n  var u8 = new Uint8Array(this._buffer, this._byteOffset + this.position);\n  var len = blen;\n  if (length != null) {\n    len = Math.min(length, blen);\n  }\n  for (var i = 0; i < len && u8[i] !== 0; i++); // find first zero byte\n  var s = String.fromCharCodeUint8.apply(null, [this.mapUint8Array(i)]);\n  if (length != null) {\n    this.position += len-i;\n  } else if (i != blen) {\n    this.position += 1; // trailing zero if not at end of buffer\n  }\n  return s;\n};\n\n/* \n   TODO: fix endianness for 24/64-bit fields\n   TODO: check range/support for 64-bits numbers in JavaScript\n*/\nvar MAX_SIZE = Math.pow(2, 32);\n\nDataStream.prototype.readInt64 = function () {\n  return (this.readInt32()*MAX_SIZE)+this.readUint32();\n}\nDataStream.prototype.readUint64 = function () {\n\treturn (this.readUint32()*MAX_SIZE)+this.readUint32();\n}\n\nDataStream.prototype.readInt64 = function () {\n  return (this.readUint32()*MAX_SIZE)+this.readUint32();\n}\n\nDataStream.prototype.readUint24 = function () {\n\treturn (this.readUint8()<<16)+(this.readUint8()<<8)+this.readUint8();\n}\n\nif (typeof exports !== 'undefined') {\n  exports.DataStream = DataStream;  \n}\n// file:src/DataStream-write.js\n/**\n  Saves the DataStream contents to the given filename.\n  Uses Chrome's anchor download property to initiate download.\n \n  @param {string} filename Filename to save as.\n  @return {null}\n  */\nDataStream.prototype.save = function(filename) {\n  var blob = new Blob([this.buffer]);\n  if (window.URL && URL.createObjectURL) {\n      var url = window.URL.createObjectURL(blob);\n      var a = document.createElement('a');\n      // Required in Firefox:\n      document.body.appendChild(a);\n      a.setAttribute('href', url);\n      a.setAttribute('download', filename);\n      // Required in Firefox:\n      a.setAttribute('target', '_self');\n      a.click();\n      window.URL.revokeObjectURL(url);\n  } else {\n      throw(\"DataStream.save: Can't create object URL.\");\n  }\n};\n\n/**\n  Whether to extend DataStream buffer when trying to write beyond its size.\n  If set, the buffer is reallocated to twice its current size until the\n  requested write fits the buffer.\n  @type {boolean}\n  */\nDataStream.prototype._dynamicSize = true;\nObject.defineProperty(DataStream.prototype, 'dynamicSize',\n  { get: function() {\n      return this._dynamicSize;\n    },\n    set: function(v) {\n      if (!v) {\n        this._trimAlloc();\n      }\n      this._dynamicSize = v;\n    } });\n\n/**\n  Internal function to trim the DataStream buffer when required.\n  Used for stripping out the first bytes when not needed anymore.\n\n  @return {null}\n  */\nDataStream.prototype.shift = function(offset) {\n  var buf = new ArrayBuffer(this._byteLength-offset);\n  var dst = new Uint8Array(buf);\n  var src = new Uint8Array(this._buffer, offset, dst.length);\n  dst.set(src);\n  this.buffer = buf;\n  this.position -= offset;\n};\n\n/**\n  Writes an Int32Array of specified endianness to the DataStream.\n\n  @param {Object} arr The array to write.\n  @param {?boolean} e Endianness of the data to write.\n */\nDataStream.prototype.writeInt32Array = function(arr, e) {\n  this._realloc(arr.length * 4);\n  if (arr instanceof Int32Array &&\n      this.byteOffset+this.position % arr.BYTES_PER_ELEMENT === 0) {\n    DataStream.memcpy(this._buffer, this.byteOffset+this.position,\n                      arr.buffer, 0,\n                      arr.byteLength);\n    this.mapInt32Array(arr.length, e);\n  } else {\n    for (var i=0; i<arr.length; i++) {\n      this.writeInt32(arr[i], e);\n    }\n  }\n};\n\n/**\n  Writes an Int16Array of specified endianness to the DataStream.\n\n  @param {Object} arr The array to write.\n  @param {?boolean} e Endianness of the data to write.\n */\nDataStream.prototype.writeInt16Array = function(arr, e) {\n  this._realloc(arr.length * 2);\n  if (arr instanceof Int16Array &&\n      this.byteOffset+this.position % arr.BYTES_PER_ELEMENT === 0) {\n    DataStream.memcpy(this._buffer, this.byteOffset+this.position,\n                      arr.buffer, 0,\n                      arr.byteLength);\n    this.mapInt16Array(arr.length, e);\n  } else {\n    for (var i=0; i<arr.length; i++) {\n      this.writeInt16(arr[i], e);\n    }\n  }\n};\n\n/**\n  Writes an Int8Array to the DataStream.\n\n  @param {Object} arr The array to write.\n */\nDataStream.prototype.writeInt8Array = function(arr) {\n  this._realloc(arr.length * 1);\n  if (arr instanceof Int8Array &&\n      this.byteOffset+this.position % arr.BYTES_PER_ELEMENT === 0) {\n    DataStream.memcpy(this._buffer, this.byteOffset+this.position,\n                      arr.buffer, 0,\n                      arr.byteLength);\n    this.mapInt8Array(arr.length);\n  } else {\n    for (var i=0; i<arr.length; i++) {\n      this.writeInt8(arr[i]);\n    }\n  }\n};\n\n/**\n  Writes a Uint32Array of specified endianness to the DataStream.\n\n  @param {Object} arr The array to write.\n  @param {?boolean} e Endianness of the data to write.\n */\nDataStream.prototype.writeUint32Array = function(arr, e) {\n  this._realloc(arr.length * 4);\n  if (arr instanceof Uint32Array &&\n      this.byteOffset+this.position % arr.BYTES_PER_ELEMENT === 0) {\n    DataStream.memcpy(this._buffer, this.byteOffset+this.position,\n                      arr.buffer, 0,\n                      arr.byteLength);\n    this.mapUint32Array(arr.length, e);\n  } else {\n    for (var i=0; i<arr.length; i++) {\n      this.writeUint32(arr[i], e);\n    }\n  }\n};\n\n/**\n  Writes a Uint16Array of specified endianness to the DataStream.\n\n  @param {Object} arr The array to write.\n  @param {?boolean} e Endianness of the data to write.\n */\nDataStream.prototype.writeUint16Array = function(arr, e) {\n  this._realloc(arr.length * 2);\n  if (arr instanceof Uint16Array &&\n      this.byteOffset+this.position % arr.BYTES_PER_ELEMENT === 0) {\n    DataStream.memcpy(this._buffer, this.byteOffset+this.position,\n                      arr.buffer, 0,\n                      arr.byteLength);\n    this.mapUint16Array(arr.length, e);\n  } else {\n    for (var i=0; i<arr.length; i++) {\n      this.writeUint16(arr[i], e);\n    }\n  }\n};\n\n/**\n  Writes a Uint8Array to the DataStream.\n\n  @param {Object} arr The array to write.\n */\nDataStream.prototype.writeUint8Array = function(arr) {\n  this._realloc(arr.length * 1);\n  if (arr instanceof Uint8Array &&\n      this.byteOffset+this.position % arr.BYTES_PER_ELEMENT === 0) {\n    DataStream.memcpy(this._buffer, this.byteOffset+this.position,\n                      arr.buffer, 0,\n                      arr.byteLength);\n    this.mapUint8Array(arr.length);\n  } else {\n    for (var i=0; i<arr.length; i++) {\n      this.writeUint8(arr[i]);\n    }\n  }\n};\n\n/**\n  Writes a Float64Array of specified endianness to the DataStream.\n\n  @param {Object} arr The array to write.\n  @param {?boolean} e Endianness of the data to write.\n */\nDataStream.prototype.writeFloat64Array = function(arr, e) {\n  this._realloc(arr.length * 8);\n  if (arr instanceof Float64Array &&\n      this.byteOffset+this.position % arr.BYTES_PER_ELEMENT === 0) {\n    DataStream.memcpy(this._buffer, this.byteOffset+this.position,\n                      arr.buffer, 0,\n                      arr.byteLength);\n    this.mapFloat64Array(arr.length, e);\n  } else {\n    for (var i=0; i<arr.length; i++) {\n      this.writeFloat64(arr[i], e);\n    }\n  }\n};\n\n/**\n  Writes a Float32Array of specified endianness to the DataStream.\n\n  @param {Object} arr The array to write.\n  @param {?boolean} e Endianness of the data to write.\n */\nDataStream.prototype.writeFloat32Array = function(arr, e) {\n  this._realloc(arr.length * 4);\n  if (arr instanceof Float32Array &&\n      this.byteOffset+this.position % arr.BYTES_PER_ELEMENT === 0) {\n    DataStream.memcpy(this._buffer, this.byteOffset+this.position,\n                      arr.buffer, 0,\n                      arr.byteLength);\n    this.mapFloat32Array(arr.length, e);\n  } else {\n    for (var i=0; i<arr.length; i++) {\n      this.writeFloat32(arr[i], e);\n    }\n  }\n};\n\n\n/**\n  Writes a 32-bit int to the DataStream with the desired endianness.\n\n  @param {number} v Number to write.\n  @param {?boolean} e Endianness of the number.\n */\nDataStream.prototype.writeInt32 = function(v, e) {\n  this._realloc(4);\n  this._dataView.setInt32(this.position, v, e == null ? this.endianness : e);\n  this.position += 4;\n};\n\n/**\n  Writes a 16-bit int to the DataStream with the desired endianness.\n\n  @param {number} v Number to write.\n  @param {?boolean} e Endianness of the number.\n */\nDataStream.prototype.writeInt16 = function(v, e) {\n  this._realloc(2);\n  this._dataView.setInt16(this.position, v, e == null ? this.endianness : e);\n  this.position += 2;\n};\n\n/**\n  Writes an 8-bit int to the DataStream.\n\n  @param {number} v Number to write.\n */\nDataStream.prototype.writeInt8 = function(v) {\n  this._realloc(1);\n  this._dataView.setInt8(this.position, v);\n  this.position += 1;\n};\n\n/**\n  Writes a 32-bit unsigned int to the DataStream with the desired endianness.\n\n  @param {number} v Number to write.\n  @param {?boolean} e Endianness of the number.\n */\nDataStream.prototype.writeUint32 = function(v, e) {\n  this._realloc(4);\n  this._dataView.setUint32(this.position, v, e == null ? this.endianness : e);\n  this.position += 4;\n};\n\n/**\n  Writes a 16-bit unsigned int to the DataStream with the desired endianness.\n\n  @param {number} v Number to write.\n  @param {?boolean} e Endianness of the number.\n */\nDataStream.prototype.writeUint16 = function(v, e) {\n  this._realloc(2);\n  this._dataView.setUint16(this.position, v, e == null ? this.endianness : e);\n  this.position += 2;\n};\n\n/**\n  Writes an 8-bit unsigned  int to the DataStream.\n\n  @param {number} v Number to write.\n */\nDataStream.prototype.writeUint8 = function(v) {\n  this._realloc(1);\n  this._dataView.setUint8(this.position, v);\n  this.position += 1;\n};\n\n/**\n  Writes a 32-bit float to the DataStream with the desired endianness.\n\n  @param {number} v Number to write.\n  @param {?boolean} e Endianness of the number.\n */\nDataStream.prototype.writeFloat32 = function(v, e) {\n  this._realloc(4);\n  this._dataView.setFloat32(this.position, v, e == null ? this.endianness : e);\n  this.position += 4;\n};\n\n/**\n  Writes a 64-bit float to the DataStream with the desired endianness.\n\n  @param {number} v Number to write.\n  @param {?boolean} e Endianness of the number.\n */\nDataStream.prototype.writeFloat64 = function(v, e) {\n  this._realloc(8);\n  this._dataView.setFloat64(this.position, v, e == null ? this.endianness : e);\n  this.position += 8;\n};\n\n/**\n  Write a UCS-2 string of desired endianness to the DataStream. The\n  lengthOverride argument lets you define the number of characters to write.\n  If the string is shorter than lengthOverride, the extra space is padded with\n  zeroes.\n\n  @param {string} str The string to write.\n  @param {?boolean} endianness The endianness to use for the written string data.\n  @param {?number} lengthOverride The number of characters to write.\n */\nDataStream.prototype.writeUCS2String = function(str, endianness, lengthOverride) {\n  if (lengthOverride == null) {\n    lengthOverride = str.length;\n  }\n  for (var i = 0; i < str.length && i < lengthOverride; i++) {\n    this.writeUint16(str.charCodeAt(i), endianness);\n  }\n  for (; i<lengthOverride; i++) {\n    this.writeUint16(0);\n  }\n};\n\n/**\n  Writes a string of desired length and encoding to the DataStream.\n\n  @param {string} s The string to write.\n  @param {?string} encoding The encoding for the written string data.\n                            Defaults to ASCII.\n  @param {?number} length The number of characters to write.\n */\nDataStream.prototype.writeString = function(s, encoding, length) {\n  var i = 0;\n  if (encoding == null || encoding == \"ASCII\") {\n    if (length != null) {\n      var len = Math.min(s.length, length);\n      for (i=0; i<len; i++) {\n        this.writeUint8(s.charCodeAt(i));\n      }\n      for (; i<length; i++) {\n        this.writeUint8(0);\n      }\n    } else {\n      for (i=0; i<s.length; i++) {\n        this.writeUint8(s.charCodeAt(i));\n      }\n    }\n  } else {\n    this.writeUint8Array((new TextEncoder(encoding)).encode(s.substring(0, length)));\n  }\n};\n\n/**\n  Writes a null-terminated string to DataStream and zero-pads it to length\n  bytes. If length is not given, writes the string followed by a zero.\n  If string is longer than length, the written part of the string does not have\n  a trailing zero.\n\n  @param {string} s The string to write.\n  @param {?number} length The number of characters to write.\n */\nDataStream.prototype.writeCString = function(s, length) {\n  var i = 0;\n  if (length != null) {\n    var len = Math.min(s.length, length);\n    for (i=0; i<len; i++) {\n      this.writeUint8(s.charCodeAt(i));\n    }\n    for (; i<length; i++) {\n      this.writeUint8(0);\n    }\n  } else {\n    for (i=0; i<s.length; i++) {\n      this.writeUint8(s.charCodeAt(i));\n    }\n    this.writeUint8(0);\n  }\n};\n\n/**\n  Writes a struct to the DataStream. Takes a structDefinition that gives the\n  types and a struct object that gives the values. Refer to readStruct for the\n  structure of structDefinition.\n\n  @param {Object} structDefinition Type definition of the struct.\n  @param {Object} struct The struct data object.\n  */\nDataStream.prototype.writeStruct = function(structDefinition, struct) {\n  for (var i = 0; i < structDefinition.length; i+=2) {\n    var t = structDefinition[i+1];\n    this.writeType(t, struct[structDefinition[i]], struct);\n  }\n};\n\n/**\n  Writes object v of type t to the DataStream.\n\n  @param {Object} t Type of data to write.\n  @param {Object} v Value of data to write.\n  @param {Object} struct Struct to pass to write callback functions.\n  */\nDataStream.prototype.writeType = function(t, v, struct) {\n  var tp;\n  if (typeof t == \"function\") {\n    return t(this, v);\n  } else if (typeof t == \"object\" && !(t instanceof Array)) {\n    return t.set(this, v, struct);\n  }\n  var lengthOverride = null;\n  var charset = \"ASCII\";\n  var pos = this.position;\n  if (typeof(t) == 'string' && /:/.test(t)) {\n    tp = t.split(\":\");\n    t = tp[0];\n    lengthOverride = parseInt(tp[1]);\n  }\n  if (typeof t == 'string' && /,/.test(t)) {\n    tp = t.split(\",\");\n    t = tp[0];\n    charset = parseInt(tp[1]);\n  }\n\n  switch(t) {\n    case 'uint8':\n      this.writeUint8(v);\n      break;\n    case 'int8':\n      this.writeInt8(v);\n      break;\n\n    case 'uint16':\n      this.writeUint16(v, this.endianness);\n      break;\n    case 'int16':\n      this.writeInt16(v, this.endianness);\n      break;\n    case 'uint32':\n      this.writeUint32(v, this.endianness);\n      break;\n    case 'int32':\n      this.writeInt32(v, this.endianness);\n      break;\n    case 'float32':\n      this.writeFloat32(v, this.endianness);\n      break;\n    case 'float64':\n      this.writeFloat64(v, this.endianness);\n      break;\n\n    case 'uint16be':\n      this.writeUint16(v, DataStream.BIG_ENDIAN);\n      break;\n    case 'int16be':\n      this.writeInt16(v, DataStream.BIG_ENDIAN);\n      break;\n    case 'uint32be':\n      this.writeUint32(v, DataStream.BIG_ENDIAN);\n      break;\n    case 'int32be':\n      this.writeInt32(v, DataStream.BIG_ENDIAN);\n      break;\n    case 'float32be':\n      this.writeFloat32(v, DataStream.BIG_ENDIAN);\n      break;\n    case 'float64be':\n      this.writeFloat64(v, DataStream.BIG_ENDIAN);\n      break;\n\n    case 'uint16le':\n      this.writeUint16(v, DataStream.LITTLE_ENDIAN);\n      break;\n    case 'int16le':\n      this.writeInt16(v, DataStream.LITTLE_ENDIAN);\n      break;\n    case 'uint32le':\n      this.writeUint32(v, DataStream.LITTLE_ENDIAN);\n      break;\n    case 'int32le':\n      this.writeInt32(v, DataStream.LITTLE_ENDIAN);\n      break;\n    case 'float32le':\n      this.writeFloat32(v, DataStream.LITTLE_ENDIAN);\n      break;\n    case 'float64le':\n      this.writeFloat64(v, DataStream.LITTLE_ENDIAN);\n      break;\n\n    case 'cstring':\n      this.writeCString(v, lengthOverride);\n      break;\n\n    case 'string':\n      this.writeString(v, charset, lengthOverride);\n      break;\n\n    case 'u16string':\n      this.writeUCS2String(v, this.endianness, lengthOverride);\n      break;\n\n    case 'u16stringle':\n      this.writeUCS2String(v, DataStream.LITTLE_ENDIAN, lengthOverride);\n      break;\n\n    case 'u16stringbe':\n      this.writeUCS2String(v, DataStream.BIG_ENDIAN, lengthOverride);\n      break;\n\n    default:\n      if (t.length == 3) {\n        var ta = t[1];\n        for (var i=0; i<v.length; i++) {\n          this.writeType(ta, v[i]);\n        }\n        break;\n      } else {\n        this.writeStruct(t, v);\n        break;\n      }\n  }\n  if (lengthOverride != null) {\n    this.position = pos;\n    this._realloc(lengthOverride);\n    this.position = pos + lengthOverride;\n  }\n};\n\n\nDataStream.prototype.writeUint64 = function (v) {\n\tvar h = Math.floor(v / MAX_SIZE);\n\tthis.writeUint32(h);\n\tthis.writeUint32(v & 0xFFFFFFFF);\n}\n\nDataStream.prototype.writeUint24 = function (v) {\n\tthis.writeUint8((v & 0x00FF0000)>>16);\n\tthis.writeUint8((v & 0x0000FF00)>>8);\n\tthis.writeUint8((v & 0x000000FF));\n}\n\nDataStream.prototype.adjustUint32 = function(position, value) {\n\tvar pos = this.position;\n\tthis.seek(position);\n\tthis.writeUint32(value);\n\tthis.seek(pos);\n}\n// file:src/DataStream-map.js\n/**\n  Maps an Int32Array into the DataStream buffer, swizzling it to native\n  endianness in-place. The current offset from the start of the buffer needs to\n  be a multiple of element size, just like with typed array views.\n\n  Nice for quickly reading in data. Warning: potentially modifies the buffer\n  contents.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} Int32Array to the DataStream backing buffer.\n  */\nDataStream.prototype.mapInt32Array = function(length, e) {\n  this._realloc(length * 4);\n  var arr = new Int32Array(this._buffer, this.byteOffset+this.position, length);\n  DataStream.arrayToNative(arr, e == null ? this.endianness : e);\n  this.position += length * 4;\n  return arr;\n};\n\n/**\n  Maps an Int16Array into the DataStream buffer, swizzling it to native\n  endianness in-place. The current offset from the start of the buffer needs to\n  be a multiple of element size, just like with typed array views.\n\n  Nice for quickly reading in data. Warning: potentially modifies the buffer\n  contents.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} Int16Array to the DataStream backing buffer.\n  */\nDataStream.prototype.mapInt16Array = function(length, e) {\n  this._realloc(length * 2);\n  var arr = new Int16Array(this._buffer, this.byteOffset+this.position, length);\n  DataStream.arrayToNative(arr, e == null ? this.endianness : e);\n  this.position += length * 2;\n  return arr;\n};\n\n/**\n  Maps an Int8Array into the DataStream buffer.\n\n  Nice for quickly reading in data.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} Int8Array to the DataStream backing buffer.\n  */\nDataStream.prototype.mapInt8Array = function(length) {\n  this._realloc(length * 1);\n  var arr = new Int8Array(this._buffer, this.byteOffset+this.position, length);\n  this.position += length * 1;\n  return arr;\n};\n\n/**\n  Maps a Uint32Array into the DataStream buffer, swizzling it to native\n  endianness in-place. The current offset from the start of the buffer needs to\n  be a multiple of element size, just like with typed array views.\n\n  Nice for quickly reading in data. Warning: potentially modifies the buffer\n  contents.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} Uint32Array to the DataStream backing buffer.\n  */\nDataStream.prototype.mapUint32Array = function(length, e) {\n  this._realloc(length * 4);\n  var arr = new Uint32Array(this._buffer, this.byteOffset+this.position, length);\n  DataStream.arrayToNative(arr, e == null ? this.endianness : e);\n  this.position += length * 4;\n  return arr;\n};\n\n/**\n  Maps a Uint16Array into the DataStream buffer, swizzling it to native\n  endianness in-place. The current offset from the start of the buffer needs to\n  be a multiple of element size, just like with typed array views.\n\n  Nice for quickly reading in data. Warning: potentially modifies the buffer\n  contents.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} Uint16Array to the DataStream backing buffer.\n  */\nDataStream.prototype.mapUint16Array = function(length, e) {\n  this._realloc(length * 2);\n  var arr = new Uint16Array(this._buffer, this.byteOffset+this.position, length);\n  DataStream.arrayToNative(arr, e == null ? this.endianness : e);\n  this.position += length * 2;\n  return arr;\n};\n\n/**\n  Maps a Float64Array into the DataStream buffer, swizzling it to native\n  endianness in-place. The current offset from the start of the buffer needs to\n  be a multiple of element size, just like with typed array views.\n\n  Nice for quickly reading in data. Warning: potentially modifies the buffer\n  contents.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} Float64Array to the DataStream backing buffer.\n  */\nDataStream.prototype.mapFloat64Array = function(length, e) {\n  this._realloc(length * 8);\n  var arr = new Float64Array(this._buffer, this.byteOffset+this.position, length);\n  DataStream.arrayToNative(arr, e == null ? this.endianness : e);\n  this.position += length * 8;\n  return arr;\n};\n\n/**\n  Maps a Float32Array into the DataStream buffer, swizzling it to native\n  endianness in-place. The current offset from the start of the buffer needs to\n  be a multiple of element size, just like with typed array views.\n\n  Nice for quickly reading in data. Warning: potentially modifies the buffer\n  contents.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} Float32Array to the DataStream backing buffer.\n  */\nDataStream.prototype.mapFloat32Array = function(length, e) {\n  this._realloc(length * 4);\n  var arr = new Float32Array(this._buffer, this.byteOffset+this.position, length);\n  DataStream.arrayToNative(arr, e == null ? this.endianness : e);\n  this.position += length * 4;\n  return arr;\n};\n// file:src/buffer.js\n/**\n * MultiBufferStream is a class that acts as a SimpleStream for parsing \n * It holds several, possibly non-contiguous ArrayBuffer objects, each with a fileStart property \n * containing the offset for the buffer data in an original/virtual file \n *\n * It inherits also from DataStream for all read/write/alloc operations\n */\n\n/**\n * Constructor\n */\nvar MultiBufferStream = function(buffer) {\n\t/* List of ArrayBuffers, with a fileStart property, sorted in fileStart order and non overlapping */\n\tthis.buffers = [];\t\n\tthis.bufferIndex = -1;\n\tif (buffer) {\n\t\tthis.insertBuffer(buffer);\n\t\tthis.bufferIndex = 0;\n\t}\n}\nMultiBufferStream.prototype = new DataStream(new ArrayBuffer(), 0, DataStream.BIG_ENDIAN);\n\n/************************************************************************************\n  Methods for the managnement of the buffers (insertion, removal, concatenation, ...)\n ***********************************************************************************/\n\nMultiBufferStream.prototype.initialized = function() {\n\tvar firstBuffer;\n\tif (this.bufferIndex > -1) {\n\t\treturn true;\n\t} else if (this.buffers.length > 0) {\n\t\tfirstBuffer = this.buffers[0];\n\t\tif (firstBuffer.fileStart === 0) {\n\t\t\tthis.buffer = firstBuffer;\n\t\t\tthis.bufferIndex = 0;\n\t\t\tLog.debug(\"MultiBufferStream\", \"Stream ready for parsing\");\n\t\t\treturn true;\n\t\t} else {\n\t\t\tLog.warn(\"MultiBufferStream\", \"The first buffer should have a fileStart of 0\");\n\t\t\tthis.logBufferLevel();\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\tLog.warn(\"MultiBufferStream\", \"No buffer to start parsing from\");\n\t\tthis.logBufferLevel();\n\t\treturn false;\n\t}\t\t\t\n}\n\n/**\n * helper functions to concatenate two ArrayBuffer objects\n * @param  {ArrayBuffer} buffer1 \n * @param  {ArrayBuffer} buffer2 \n * @return {ArrayBuffer} the concatenation of buffer1 and buffer2 in that order\n */\nArrayBuffer.concat = function(buffer1, buffer2) {\n  Log.debug(\"ArrayBuffer\", \"Trying to create a new buffer of size: \"+(buffer1.byteLength + buffer2.byteLength));\n  var tmp = new Uint8Array(buffer1.byteLength + buffer2.byteLength);\n  tmp.set(new Uint8Array(buffer1), 0);\n  tmp.set(new Uint8Array(buffer2), buffer1.byteLength);\n  return tmp.buffer;\n};\n\n/**\n * Reduces the size of a given buffer, but taking the part between offset and offset+newlength\n * @param  {ArrayBuffer} buffer    \n * @param  {Number}      offset    the start of new buffer\n * @param  {Number}      newLength the length of the new buffer\n * @return {ArrayBuffer}           the new buffer\n */\nMultiBufferStream.prototype.reduceBuffer = function(buffer, offset, newLength) {\n\tvar smallB;\n\tsmallB = new Uint8Array(newLength);\n\tsmallB.set(new Uint8Array(buffer, offset, newLength));\n\tsmallB.buffer.fileStart = buffer.fileStart+offset;\n\tsmallB.buffer.usedBytes = 0;\n\treturn smallB.buffer;\t\n}\n\n/**\n * Inserts the new buffer in the sorted list of buffers,\n *  making sure, it is not overlapping with existing ones (possibly reducing its size).\n *  if the new buffer overrides/replaces the 0-th buffer (for instance because it is bigger), \n *  updates the DataStream buffer for parsing \n*/\nMultiBufferStream.prototype.insertBuffer = function(ab) {\t\n\tvar to_add = true;\n\t/* TODO: improve insertion if many buffers */\n\tfor (var i = 0; i < this.buffers.length; i++) {\n\t\tvar b = this.buffers[i];\n\t\tif (ab.fileStart <= b.fileStart) {\n\t\t\t/* the insertion position is found */\n\t\t\tif (ab.fileStart === b.fileStart) {\n\t\t\t\t/* The new buffer overlaps with an existing buffer */\n\t\t\t\tif (ab.byteLength >  b.byteLength) {\n\t\t\t\t\t/* the new buffer is bigger than the existing one\n\t\t\t\t\t   remove the existing buffer and try again to insert \n\t\t\t\t\t   the new buffer to check overlap with the next ones */\n\t\t\t\t\tthis.buffers.splice(i, 1);\n\t\t\t\t\ti--; \n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\t/* the new buffer is smaller than the existing one, just drop it */\n\t\t\t\t\tLog.warn(\"MultiBufferStream\", \"Buffer (fileStart: \"+ab.fileStart+\" - Length: \"+ab.byteLength+\") already appended, ignoring\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t/* The beginning of the new buffer is not overlapping with an existing buffer\n\t\t\t\t   let's check the end of it */\n\t\t\t\tif (ab.fileStart + ab.byteLength <= b.fileStart) {\n\t\t\t\t\t/* no overlap, we can add it as is */\n\t\t\t\t} else {\n\t\t\t\t\t/* There is some overlap, cut the new buffer short, and add it*/\n\t\t\t\t\tab = this.reduceBuffer(ab, 0, b.fileStart - ab.fileStart);\n\t\t\t\t}\n\t\t\t\tLog.debug(\"MultiBufferStream\", \"Appending new buffer (fileStart: \"+ab.fileStart+\" - Length: \"+ab.byteLength+\")\");\n\t\t\t\tthis.buffers.splice(i, 0, ab);\n\t\t\t\t/* if this new buffer is inserted in the first place in the list of the buffer, \n\t\t\t\t   and the DataStream is initialized, make it the buffer used for parsing */\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tthis.buffer = ab;\n\t\t\t\t}\n\t\t\t}\n\t\t\tto_add = false;\n\t\t\tbreak;\n\t\t} else if (ab.fileStart < b.fileStart + b.byteLength) {\n\t\t\t/* the new buffer overlaps its beginning with the end of the current buffer */\n\t\t\tvar offset = b.fileStart + b.byteLength - ab.fileStart;\n\t\t\tvar newLength = ab.byteLength - offset;\n\t\t\tif (newLength > 0) {\n\t\t\t\t/* the new buffer is bigger than the current overlap, drop the overlapping part and try again inserting the remaining buffer */\n\t\t\t\tab = this.reduceBuffer(ab, offset, newLength);\n\t\t\t} else {\n\t\t\t\t/* the content of the new buffer is entirely contained in the existing buffer, drop it entirely */\n\t\t\t\tto_add = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t/* if the buffer has not been added, we can add it at the end */\n\tif (to_add) {\n\t\tLog.debug(\"MultiBufferStream\", \"Appending new buffer (fileStart: \"+ab.fileStart+\" - Length: \"+ab.byteLength+\")\");\n\t\tthis.buffers.push(ab);\n\t\t/* if this new buffer is inserted in the first place in the list of the buffer, \n\t\t   and the DataStream is initialized, make it the buffer used for parsing */\n\t\tif (i === 0) {\n\t\t\tthis.buffer = ab;\n\t\t}\n\t}\n}\n\n/**\n * Displays the status of the buffers (number and used bytes)\n * @param  {Object} info callback method for display\n */\nMultiBufferStream.prototype.logBufferLevel = function(info) {\n\tvar i;\n\tvar buffer;\n\tvar used, total;\n\tvar ranges = [];\n\tvar range;\n\tvar bufferedString = \"\";\n\tused = 0;\n\ttotal = 0;\n\tfor (i = 0; i < this.buffers.length; i++) {\n\t\tbuffer = this.buffers[i];\n\t\tif (i === 0) {\n\t\t\trange = {};\n\t\t\tranges.push(range);\n\t\t\trange.start = buffer.fileStart;\n\t\t\trange.end = buffer.fileStart+buffer.byteLength;\n\t\t\tbufferedString += \"[\"+range.start+\"-\";\n\t\t} else if (range.end === buffer.fileStart) {\n\t\t\trange.end = buffer.fileStart+buffer.byteLength;\n\t\t} else {\n\t\t\trange = {};\n\t\t\trange.start = buffer.fileStart;\n\t\t\tbufferedString += (ranges[ranges.length-1].end-1)+\"], [\"+range.start+\"-\";\n\t\t\trange.end = buffer.fileStart+buffer.byteLength;\n\t\t\tranges.push(range);\n\t\t}\n\t\tused += buffer.usedBytes;\n\t\ttotal += buffer.byteLength;\n\t}\n\tif (ranges.length > 0) {\n\t\tbufferedString += (range.end-1)+\"]\";\n\t}\n\tvar log = (info ? Log.info : Log.debug)\n\tif (this.buffers.length === 0) {\n\t\tlog(\"MultiBufferStream\", \"No more buffer in memory\");\n\t} else {\n\t\tlog(\"MultiBufferStream\", \"\"+this.buffers.length+\" stored buffer(s) (\"+used+\"/\"+total+\" bytes), continuous ranges: \"+bufferedString);\n\t}\n}\n\nMultiBufferStream.prototype.cleanBuffers = function () {\n\tvar i;\n\tvar buffer;\n\tfor (i = 0; i < this.buffers.length; i++) {\n\t\tbuffer = this.buffers[i];\n\t\tif (buffer.usedBytes === buffer.byteLength) {\n\t\t\tLog.debug(\"MultiBufferStream\", \"Removing buffer #\"+i);\n\t\t\tthis.buffers.splice(i, 1);\n\t\t\ti--;\n\t\t}\n\t}\n}\n\nMultiBufferStream.prototype.mergeNextBuffer = function() {\n\tvar next_buffer;\n\tif (this.bufferIndex+1 < this.buffers.length) {\n\t\tnext_buffer = this.buffers[this.bufferIndex+1];\n\t\tif (next_buffer.fileStart === this.buffer.fileStart + this.buffer.byteLength) {\n\t\t\tvar oldLength = this.buffer.byteLength;\n\t\t\tvar oldUsedBytes = this.buffer.usedBytes;\n\t\t\tvar oldFileStart = this.buffer.fileStart;\n\t\t\tthis.buffers[this.bufferIndex] = ArrayBuffer.concat(this.buffer, next_buffer);\n\t\t\tthis.buffer = this.buffers[this.bufferIndex];\n\t\t\tthis.buffers.splice(this.bufferIndex+1, 1);\n\t\t\tthis.buffer.usedBytes = oldUsedBytes; /* TODO: should it be += ? */\n\t\t\tthis.buffer.fileStart = oldFileStart;\n\t\t\tLog.debug(\"ISOFile\", \"Concatenating buffer for box parsing (length: \"+oldLength+\"->\"+this.buffer.byteLength+\")\");\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\n\n\n/*************************************************************************\n  Seek-related functions\n *************************************************************************/\n\n/**\n * Finds the buffer that holds the given file position\n * @param  {Boolean} fromStart    indicates if the search should start from the current buffer (false) \n *                                or from the first buffer (true)\n * @param  {Number}  filePosition position in the file to seek to\n * @param  {Boolean} markAsUsed   indicates if the bytes in between the current position and the seek position \n *                                should be marked as used for garbage collection\n * @return {Number}               the index of the buffer holding the seeked file position, -1 if not found.\n */\nMultiBufferStream.prototype.findPosition = function(fromStart, filePosition, markAsUsed) {\n\tvar i;\n\tvar abuffer = null;\n\tvar index = -1;\n\n\t/* find the buffer with the largest position smaller than the given position */\n\tif (fromStart === true) {\n\t   /* the reposition can be in the past, we need to check from the beginning of the list of buffers */\n\t\ti = 0;\n\t} else {\n\t\ti = this.bufferIndex;\n\t}\n\n\twhile (i < this.buffers.length) {\n\t\tabuffer = this.buffers[i];\n\t\tif (abuffer.fileStart <= filePosition) {\n\t\t\tindex = i;\n\t\t\tif (markAsUsed) {\n\t\t\t\tif (abuffer.fileStart + abuffer.byteLength <= filePosition) {\n\t\t\t\t\tabuffer.usedBytes = abuffer.byteLength;\t\n\t\t\t\t} else {\n\t\t\t\t\tabuffer.usedBytes = filePosition - abuffer.fileStart;\n\t\t\t\t}\t\t\n\t\t\t\tthis.logBufferLevel();\t\n\t\t\t}\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\n\tif (index !== -1) {\n\t\tabuffer = this.buffers[index];\n\t\tif (abuffer.fileStart + abuffer.byteLength >= filePosition) {\t\t\t\n\t\t\tLog.debug(\"MultiBufferStream\", \"Found position in existing buffer #\"+index);\n\t\t\treturn index;\n\t\t} else {\n\t\t\treturn -1;\n\t\t}\n\t} else {\n\t\treturn -1;\n\t}\n}\n\n/**\n * Finds the largest file position contained in a buffer or in the next buffers if they are contiguous (no gap)\n * starting from the given buffer index or from the current buffer if the index is not given\n *\n * @param  {Number} inputindex Index of the buffer to start from\n * @return {Number}            The largest file position found in the buffers\n */\nMultiBufferStream.prototype.findEndContiguousBuf = function(inputindex) {\n\tvar i;\n\tvar currentBuf;\n\tvar nextBuf;\n\tvar index = (inputindex !== undefined ? inputindex : this.bufferIndex);\n\tcurrentBuf = this.buffers[index];\n\t/* find the end of the contiguous range of data */\n\tif (this.buffers.length > index+1) {\n\t\tfor (i = index+1; i < this.buffers.length; i++) {\n\t\t\tnextBuf = this.buffers[i];\n\t\t\tif (nextBuf.fileStart === currentBuf.fileStart + currentBuf.byteLength) {\n\t\t\t\tcurrentBuf = nextBuf;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t/* return the position of last byte in the file that we have */\n\treturn currentBuf.fileStart + currentBuf.byteLength;\n}\n\n/**\n * Returns the largest file position contained in the buffers, larger than the given position\n * @param  {Number} pos the file position to start from\n * @return {Number}     the largest position in the current buffer or in the buffer and the next contiguous \n *                      buffer that holds the given position\n */\nMultiBufferStream.prototype.getEndFilePositionAfter = function(pos) {\n\tvar index = this.findPosition(true, pos, false);\n\tif (index !== -1) {\n\t\treturn this.findEndContiguousBuf(index);\n\t} else {\n\t\treturn pos;\n\t}\n}\n\n/*************************************************************************\n  Garbage collection related functions\n *************************************************************************/\n\n/**\n * Marks a given number of bytes as used in the current buffer for garbage collection\n * @param {Number} nbBytes \n */\nMultiBufferStream.prototype.addUsedBytes = function(nbBytes) {\n\tthis.buffer.usedBytes += nbBytes;\n\tthis.logBufferLevel();\n}\n\n/**\n * Marks the entire current buffer as used, ready for garbage collection\n */\nMultiBufferStream.prototype.setAllUsedBytes = function() {\n\tthis.buffer.usedBytes = this.buffer.byteLength;\n\tthis.logBufferLevel();\n}\n\n/*************************************************************************\n  Common API between MultiBufferStream and SimpleStream\n *************************************************************************/\n\n/**\n * Tries to seek to a given file position\n * if possible, repositions the parsing from there and returns true \n * if not possible, does not change anything and returns false \n * @param  {Number}  filePosition position in the file to seek to\n * @param  {Boolean} fromStart    indicates if the search should start from the current buffer (false) \n *                                or from the first buffer (true)\n * @param  {Boolean} markAsUsed   indicates if the bytes in between the current position and the seek position \n *                                should be marked as used for garbage collection\n * @return {Boolean}              true if the seek succeeded, false otherwise\n */\nMultiBufferStream.prototype.seek = function(filePosition, fromStart, markAsUsed) {\n\tvar index;\n\tindex = this.findPosition(fromStart, filePosition, markAsUsed);\n\tif (index !== -1) {\n\t\tthis.buffer = this.buffers[index];\n\t\tthis.bufferIndex = index;\n\t\tthis.position = filePosition - this.buffer.fileStart;\n\t\tLog.debug(\"MultiBufferStream\", \"Repositioning parser at buffer position: \"+this.position);\n\t\treturn true;\n\t} else {\n\t\tLog.debug(\"MultiBufferStream\", \"Position \"+filePosition+\" not found in buffered data\");\n\t\treturn false;\n\t}\n}\n\n/**\n * Returns the current position in the file\n * @return {Number} the position in the file\n */\nMultiBufferStream.prototype.getPosition = function() {\n\tif (this.bufferIndex === -1 || this.buffers[this.bufferIndex] === null) {\n\t\tthrow \"Error accessing position in the MultiBufferStream\";\n\t}\n\treturn this.buffers[this.bufferIndex].fileStart+this.position;\n}\n\n/**\n * Returns the length of the current buffer\n * @return {Number} the length of the current buffer\n */\nMultiBufferStream.prototype.getLength = function() {\n\treturn this.byteLength;\n}\n\nMultiBufferStream.prototype.getEndPosition = function() {\n\tif (this.bufferIndex === -1 || this.buffers[this.bufferIndex] === null) {\n\t\tthrow \"Error accessing position in the MultiBufferStream\";\n\t}\n\treturn this.buffers[this.bufferIndex].fileStart+this.byteLength;\n}\n\nif (typeof exports !== 'undefined') {\n\texports.MultiBufferStream = MultiBufferStream;\n}// file:src/descriptor.js\n/*\n * Copyright (c) 2012-2013. Telecom ParisTech/TSI/MM/GPAC Cyril Concolato\n * License: BSD-3-Clause (see LICENSE file)\n */\nvar MPEG4DescriptorParser = function () {\n\tvar ES_DescrTag \t\t\t= 0x03;\n\tvar DecoderConfigDescrTag \t= 0x04;\n\tvar DecSpecificInfoTag \t\t= 0x05;\n\tvar SLConfigDescrTag \t\t= 0x06;\n\n\tvar descTagToName = [];\n\tdescTagToName[ES_DescrTag] \t\t\t\t= \"ES_Descriptor\";\n\tdescTagToName[DecoderConfigDescrTag] \t= \"DecoderConfigDescriptor\";\n\tdescTagToName[DecSpecificInfoTag] \t\t= \"DecoderSpecificInfo\";\n\tdescTagToName[SLConfigDescrTag] \t\t= \"SLConfigDescriptor\";\n\n\tthis.getDescriptorName = function(tag) {\n\t\treturn descTagToName[tag];\n\t}\n\n\tvar that = this;\n\tvar classes = {};\n\n\tthis.parseOneDescriptor = function (stream) {\n\t\tvar hdrSize = 0;\n\t\tvar size = 0;\n\t\tvar tag;\n\t\tvar desc;\n\t\tvar byteRead;\n\t\ttag = stream.readUint8();\n\t\thdrSize++;\n\t\tbyteRead = stream.readUint8();\n\t\thdrSize++;\n\t\twhile (byteRead & 0x80) {\n\t\t\tsize = (byteRead & 0x7F)<<7;\n\t\t\tbyteRead = stream.readUint8();\n\t\t\thdrSize++;\n\t\t}\n\t\tsize += byteRead & 0x7F;\n\t\tLog.debug(\"MPEG4DescriptorParser\", \"Found \"+(descTagToName[tag] || \"Descriptor \"+tag)+\", size \"+size+\" at position \"+stream.getPosition());\n\t\tif (descTagToName[tag]) {\n\t\t\tdesc = new classes[descTagToName[tag]](size);\n\t\t} else {\n\t\t\tdesc = new classes.Descriptor(size);\n\t\t}\n\t\tdesc.parse(stream);\n\t\treturn desc;\n\t}\n\n\tclasses.Descriptor = function(_tag, _size) {\n\t\tthis.tag = _tag;\n\t\tthis.size = _size;\n\t\tthis.descs = [];\n\t}\n\n\tclasses.Descriptor.prototype.parse = function (stream) {\n\t\tthis.data = stream.readUint8Array(this.size);\n\t}\n\n\tclasses.Descriptor.prototype.findDescriptor = function (tag) {\n\t\tfor (var i = 0; i < this.descs.length; i++) {\n\t\t\tif (this.descs[i].tag == tag) {\n\t\t\t\treturn this.descs[i];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tclasses.Descriptor.prototype.parseRemainingDescriptors = function (stream) {\n\t\tvar start = stream.position;\n\t\twhile (stream.position < start+this.size) {\n\t\t\tvar desc = that.parseOneDescriptor(stream);\n\t\t\tthis.descs.push(desc);\n\t\t}\n\t}\n\n\tclasses.ES_Descriptor = function (size) {\n\t\tclasses.Descriptor.call(this, ES_DescrTag, size);\n\t}\n\n\tclasses.ES_Descriptor.prototype = new classes.Descriptor();\n\n\tclasses.ES_Descriptor.prototype.parse = function(stream) {\n\t\tthis.ES_ID = stream.readUint16();\n\t\tthis.flags = stream.readUint8();\n\t\tthis.size -= 3;\n\t\tif (this.flags & 0x80) {\n\t\t\tthis.dependsOn_ES_ID = stream.readUint16();\n\t\t\tthis.size -= 2;\n\t\t} else {\n\t\t\tthis.dependsOn_ES_ID = 0;\n\t\t}\n\t\tif (this.flags & 0x40) {\n\t\t\tvar l = stream.readUint8();\n\t\t\tthis.URL = stream.readString(l);\n\t\t\tthis.size -= l+1;\n\t\t} else {\n\t\t\tthis.URL = \"\";\n\t\t}\n\t\tif (this.flags & 0x20) {\n\t\t\tthis.OCR_ES_ID = stream.readUint16();\n\t\t\tthis.size -= 2;\n\t\t} else {\n\t\t\tthis.OCR_ES_ID = 0;\n\t\t}\n\t\tthis.parseRemainingDescriptors(stream);\n\t}\n\n\tclasses.ES_Descriptor.prototype.getOTI = function(stream) {\n\t\tvar dcd = this.findDescriptor(DecoderConfigDescrTag);\n\t\tif (dcd) {\n\t\t\treturn dcd.oti;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tclasses.ES_Descriptor.prototype.getAudioConfig = function(stream) {\n\t\tvar dcd = this.findDescriptor(DecoderConfigDescrTag);\n\t\tif (!dcd) return null;\n\t\tvar dsi = dcd.findDescriptor(DecSpecificInfoTag);\n\t\tif (dsi && dsi.data) {\n\t\t\tvar audioObjectType = (dsi.data[0]& 0xF8) >> 3;\n\t\t\tif (audioObjectType === 31 && dsi.data.length >= 2) {\n\t\t\t\taudioObjectType = 32 + ((dsi.data[0] & 0x7) << 3) + ((dsi.data[1] & 0xE0) >> 5);\n\t\t\t}\n\t\t\treturn audioObjectType;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tclasses.DecoderConfigDescriptor = function (size) {\n\t\tclasses.Descriptor.call(this, DecoderConfigDescrTag, size);\n\t}\n\tclasses.DecoderConfigDescriptor.prototype = new classes.Descriptor();\n\n\tclasses.DecoderConfigDescriptor.prototype.parse = function(stream) {\n\t\tthis.oti = stream.readUint8();\n\t\tthis.streamType = stream.readUint8();\n\t\tthis.bufferSize = stream.readUint24();\n\t\tthis.maxBitrate = stream.readUint32();\n\t\tthis.avgBitrate = stream.readUint32();\n\t\tthis.size -= 13;\n\t\tthis.parseRemainingDescriptors(stream);\n\t}\n\n\tclasses.DecoderSpecificInfo = function (size) {\n\t\tclasses.Descriptor.call(this, DecSpecificInfoTag, size);\n\t}\n\tclasses.DecoderSpecificInfo.prototype = new classes.Descriptor();\n\n\tclasses.SLConfigDescriptor = function (size) {\n\t\tclasses.Descriptor.call(this, SLConfigDescrTag, size);\n\t}\n\tclasses.SLConfigDescriptor.prototype = new classes.Descriptor();\n\n\treturn this;\n}\n\nif (typeof exports !== 'undefined') {\n\texports.MPEG4DescriptorParser = MPEG4DescriptorParser;\n}// file:src/box.js\n/*\n * Copyright (c) 2012-2013. Telecom ParisTech/TSI/MM/GPAC Cyril Concolato\n * License: BSD-3-Clause (see LICENSE file)\n */\nvar BoxParser = {\n\tERR_INVALID_DATA : -1,\n\tERR_NOT_ENOUGH_DATA : 0,\n\tOK : 1,\n\n\t// Boxes to be created with default parsing\n\tBASIC_BOXES: [ \"mdat\", \"idat\", \"free\", \"skip\", \"meco\", \"strk\" ],\n\tFULL_BOXES: [ \"hmhd\", \"nmhd\", \"iods\", \"xml \", \"bxml\", \"ipro\", \"mere\" ],\n\tCONTAINER_BOXES: [\n\t\t[ \"moov\", [ \"trak\", \"pssh\" ] ],\n\t\t[ \"trak\" ],\n\t\t[ \"edts\" ],\n\t\t[ \"mdia\" ],\n\t\t[ \"minf\" ],\n\t\t[ \"dinf\" ],\n\t\t[ \"stbl\", [ \"sgpd\", \"sbgp\" ] ],\n\t\t[ \"mvex\", [ \"trex\" ] ],\n\t\t[ \"moof\", [ \"traf\" ] ],\n\t\t[ \"traf\", [ \"trun\", \"sgpd\", \"sbgp\" ] ],\n\t\t[ \"vttc\" ],\n\t\t[ \"tref\" ],\n\t\t[ \"iref\" ],\n\t\t[ \"mfra\", [ \"tfra\" ] ],\n\t\t[ \"meco\" ],\n\t\t[ \"hnti\" ],\n\t\t[ \"hinf\" ],\n\t\t[ \"strk\" ],\n\t\t[ \"strd\" ],\n\t\t[ \"sinf\" ],\n\t\t[ \"rinf\" ],\n\t\t[ \"schi\" ],\n\t\t[ \"trgr\" ],\n\t\t[ \"udta\", [\"kind\"] ],\n\t\t[ \"iprp\", [\"ipma\"] ],\n\t\t[ \"ipco\"]\n\t],\n\t// Boxes effectively created\n\tboxCodes : [],\n\tfullBoxCodes : [],\n\tcontainerBoxCodes : [],\n\tsampleEntryCodes : {},\n\tsampleGroupEntryCodes: [],\n\ttrackGroupTypes: [],\n\tUUIDBoxes: {},\n\tUUIDs: [],\n\tinitialize: function() {\n\t\tBoxParser.FullBox.prototype = new BoxParser.Box();\n\t\tBoxParser.ContainerBox.prototype = new BoxParser.Box();\n\t\tBoxParser.SampleEntry.prototype = new BoxParser.Box();\n\t\tBoxParser.TrackGroupTypeBox.prototype = new BoxParser.FullBox();\n\n\t\t/* creating constructors for simple boxes */\n\t\tBoxParser.BASIC_BOXES.forEach(function(type) {\n\t\t\tBoxParser.createBoxCtor(type)\n\t\t});\n\t\tBoxParser.FULL_BOXES.forEach(function(type) {\n\t\t\tBoxParser.createFullBoxCtor(type);\n\t\t});\n\t\tBoxParser.CONTAINER_BOXES.forEach(function(types) {\n\t\t\tBoxParser.createContainerBoxCtor(types[0], null, types[1]);\n\t\t});\n\t},\n\tBox: function(_type, _size, _uuid) {\n\t\tthis.type = _type;\n\t\tthis.size = _size;\n\t\tthis.uuid = _uuid;\n\t},\n\tFullBox: function(type, size, uuid) {\n\t\tBoxParser.Box.call(this, type, size, uuid);\n\t\tthis.flags = 0;\n\t\tthis.version = 0;\n\t},\n\tContainerBox: function(type, size, uuid) {\n\t\tBoxParser.Box.call(this, type, size, uuid);\n\t\tthis.boxes = [];\n\t},\n\tSampleEntry: function(type, size, hdr_size, start) {\n\t\tBoxParser.ContainerBox.call(this, type, size);\n\t\tthis.hdr_size = hdr_size;\n\t\tthis.start = start;\n\t},\n\tSampleGroupEntry: function(type) {\n\t\tthis.grouping_type = type;\n\t},\n\tTrackGroupTypeBox: function(type, size) {\n\t\tBoxParser.FullBox.call(this, type, size);\n\t},\n\tcreateBoxCtor: function(type, parseMethod){\n\t\tBoxParser.boxCodes.push(type);\n\t\tBoxParser[type+\"Box\"] = function(size) {\n\t\t\tBoxParser.Box.call(this, type, size);\n\t\t}\n\t\tBoxParser[type+\"Box\"].prototype = new BoxParser.Box();\n\t\tif (parseMethod) BoxParser[type+\"Box\"].prototype.parse = parseMethod;\n\t},\n\tcreateFullBoxCtor: function(type, parseMethod) {\n\t\t//BoxParser.fullBoxCodes.push(type);\n\t\tBoxParser[type+\"Box\"] = function(size) {\n\t\t\tBoxParser.FullBox.call(this, type, size);\n\t\t}\n\t\tBoxParser[type+\"Box\"].prototype = new BoxParser.FullBox();\n\t\tBoxParser[type+\"Box\"].prototype.parse = function(stream) {\n\t\t\tthis.parseFullHeader(stream);\n\t\t\tif (parseMethod) {\n\t\t\t\tparseMethod.call(this, stream);\n\t\t\t}\n\t\t};\n\t},\n\taddSubBoxArrays: function(subBoxNames) {\n\t\tif (subBoxNames) {\n\t\t\tthis.subBoxNames = subBoxNames;\n\t\t\tvar nbSubBoxes = subBoxNames.length;\n\t\t\tfor (var k = 0; k<nbSubBoxes; k++) {\n\t\t\t\tthis[subBoxNames[k]+\"s\"] = [];\n\t\t\t}\n\t\t}\n\t},\n\tcreateContainerBoxCtor: function(type, parseMethod, subBoxNames) {\n\t\t//BoxParser.containerBoxCodes.push(type);\n\t\tBoxParser[type+\"Box\"] = function(size) {\n\t\t\tBoxParser.ContainerBox.call(this, type, size);\n\t\t\tBoxParser.addSubBoxArrays.call(this, subBoxNames);\n\t\t}\n\t\tBoxParser[type+\"Box\"].prototype = new BoxParser.ContainerBox();\n\t\tif (parseMethod) BoxParser[type+\"Box\"].prototype.parse = parseMethod;\n\t},\n\tcreateMediaSampleEntryCtor: function(mediaType, parseMethod, subBoxNames) {\n\t\tBoxParser.sampleEntryCodes[mediaType] = [];\n\t\tBoxParser[mediaType+\"SampleEntry\"] = function(type, size) {\n\t\t\tBoxParser.SampleEntry.call(this, type, size);\n\t\t\tBoxParser.addSubBoxArrays.call(this, subBoxNames);\n\t\t};\n\t\tBoxParser[mediaType+\"SampleEntry\"].prototype = new BoxParser.SampleEntry();\n\t\tif (parseMethod) BoxParser[mediaType+\"SampleEntry\"].prototype .parse = parseMethod;\n\t},\n\tcreateSampleEntryCtor: function(mediaType, type, parseMethod, subBoxNames) {\n\t\tBoxParser.sampleEntryCodes[mediaType].push(type);\n\t\tBoxParser[type+\"SampleEntry\"] = function(size) {\n\t\t\tBoxParser[mediaType+\"SampleEntry\"].call(this, type, size);\n\t\t\tBoxParser.addSubBoxArrays.call(this, subBoxNames);\n\t\t};\n\t\tBoxParser[type+\"SampleEntry\"].prototype = new BoxParser[mediaType+\"SampleEntry\"]();\n\t\tif (parseMethod) BoxParser[type+\"SampleEntry\"].prototype.parse = parseMethod;\n\t},\n\tcreateEncryptedSampleEntryCtor: function(mediaType, type, parseMethod) {\n\t\tBoxParser.createSampleEntryCtor.call(this, mediaType, type, parseMethod, [\"sinf\"]);\n\t},\n\tcreateSampleGroupCtor: function(type, parseMethod) {\n\t\t//BoxParser.sampleGroupEntryCodes.push(type);\n\t\tBoxParser[type+\"SampleGroupEntry\"] = function(size) {\n\t\t\tBoxParser.SampleGroupEntry.call(this, type, size);\n\t\t}\n\t\tBoxParser[type+\"SampleGroupEntry\"].prototype = new BoxParser.SampleGroupEntry();\n\t\tif (parseMethod) BoxParser[type+\"SampleGroupEntry\"].prototype.parse = parseMethod;\n\t},\n\tcreateTrackGroupCtor: function(type, parseMethod) {\n\t\t//BoxParser.trackGroupTypes.push(type);\n\t\tBoxParser[type+\"TrackGroupTypeBox\"] = function(size) {\n\t\t\tBoxParser.TrackGroupTypeBox.call(this, type, size);\n\t\t}\n\t\tBoxParser[type+\"TrackGroupTypeBox\"].prototype = new BoxParser.TrackGroupTypeBox();\n\t\tif (parseMethod) BoxParser[type+\"TrackGroupTypeBox\"].prototype.parse = parseMethod;\n\t},\n\tcreateUUIDBox: function(uuid, isFullBox, isContainerBox, parseMethod) {\n\t\tBoxParser.UUIDs.push(uuid);\n\t\tBoxParser.UUIDBoxes[uuid] = function(size) {\n\t\t\tif (isFullBox) {\n\t\t\t\tBoxParser.FullBox.call(this, \"uuid\", size, uuid);\n\t\t\t} else {\n\t\t\t\tif (isContainerBox) {\n\t\t\t\t\tBoxParser.ContainerBox.call(this, \"uuid\", size, uuid);\n\t\t\t\t} else {\n\t\t\t\t\tBoxParser.Box.call(this, \"uuid\", size, uuid);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tBoxParser.UUIDBoxes[uuid].prototype = (isFullBox ? new BoxParser.FullBox() : (isContainerBox ? new BoxParser.ContainerBox() : new BoxParser.Box()));\n\t\tif (parseMethod) {\n\t\t\tif (isFullBox) {\n\t\t\t\tBoxParser.UUIDBoxes[uuid].prototype.parse = function(stream) {\n\t\t\t\t\tthis.parseFullHeader(stream);\n\t\t\t\t\tif (parseMethod) {\n\t\t\t\t\t\tparseMethod.call(this, stream);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tBoxParser.UUIDBoxes[uuid].prototype.parse = parseMethod;\n\t\t\t}\n\t\t}\n\t}\n}\n\nBoxParser.initialize();\n\nBoxParser.TKHD_FLAG_ENABLED    = 0x000001;\nBoxParser.TKHD_FLAG_IN_MOVIE   = 0x000002;\nBoxParser.TKHD_FLAG_IN_PREVIEW = 0x000004;\n\nBoxParser.TFHD_FLAG_BASE_DATA_OFFSET\t= 0x01;\nBoxParser.TFHD_FLAG_SAMPLE_DESC\t\t\t= 0x02;\nBoxParser.TFHD_FLAG_SAMPLE_DUR\t\t\t= 0x08;\nBoxParser.TFHD_FLAG_SAMPLE_SIZE\t\t\t= 0x10;\nBoxParser.TFHD_FLAG_SAMPLE_FLAGS\t\t= 0x20;\nBoxParser.TFHD_FLAG_DUR_EMPTY\t\t\t= 0x10000;\nBoxParser.TFHD_FLAG_DEFAULT_BASE_IS_MOOF= 0x20000;\n\nBoxParser.TRUN_FLAGS_DATA_OFFSET= 0x01;\nBoxParser.TRUN_FLAGS_FIRST_FLAG\t= 0x04;\nBoxParser.TRUN_FLAGS_DURATION\t= 0x100;\nBoxParser.TRUN_FLAGS_SIZE\t\t= 0x200;\nBoxParser.TRUN_FLAGS_FLAGS\t\t= 0x400;\nBoxParser.TRUN_FLAGS_CTS_OFFSET\t= 0x800;\n\nBoxParser.Box.prototype.add = function(name) {\n\treturn this.addBox(new BoxParser[name+\"Box\"]());\n}\n\nBoxParser.Box.prototype.addBox = function(box) {\n\tthis.boxes.push(box);\n\tif (this[box.type+\"s\"]) {\n\t\tthis[box.type+\"s\"].push(box);\n\t} else {\n\t\tthis[box.type] = box;\n\t}\n\treturn box;\n}\n\nBoxParser.Box.prototype.set = function(prop, value) {\n\tthis[prop] = value;\n\treturn this;\n}\n\nBoxParser.Box.prototype.addEntry = function(value, _prop) {\n\tvar prop = _prop || \"entries\";\n\tif (!this[prop]) {\n\t\tthis[prop] = [];\n\t}\n\tthis[prop].push(value);\n\treturn this;\n}\n\nif (typeof exports !== \"undefined\") {\n\texports.BoxParser = BoxParser;\n}\n// file:src/box-parse.js\n/* \n * Copyright (c) Telecom ParisTech/TSI/MM/GPAC Cyril Concolato\n * License: BSD-3-Clause (see LICENSE file)\n */\nBoxParser.parseUUID = function(stream) {\n\treturn BoxParser.parseHex16(stream);\n}\n\nBoxParser.parseHex16 = function(stream) {\n\tvar hex16 = \"\"\n\tfor (var i = 0; i <16; i++) {\n\t\tvar hex = stream.readUint8().toString(16);\n\t\thex16 += (hex.length === 1 ? \"0\"+hex : hex);\n\t}\n\treturn hex16;\n}\n\nBoxParser.parseOneBox = function(stream, headerOnly, parentSize) {\n\tvar box;\n\tvar start = stream.getPosition();\n\tvar hdr_size = 0;\n\tvar diff;\n\tvar uuid;\n\tif (stream.getEndPosition() - start < 8) {\n\t\tLog.debug(\"BoxParser\", \"Not enough data in stream to parse the type and size of the box\");\n\t\treturn { code: BoxParser.ERR_NOT_ENOUGH_DATA };\n\t}\n\tif (parentSize && parentSize < 8) {\n\t\tLog.debug(\"BoxParser\", \"Not enough bytes left in the parent box to parse a new box\");\n\t\treturn { code: BoxParser.ERR_NOT_ENOUGH_DATA };\n\t}\n\tvar size = stream.readUint32();\n\tvar type = stream.readString(4);\n\tvar box_type = type;\n\tLog.debug(\"BoxParser\", \"Found box of type '\"+type+\"' and size \"+size+\" at position \"+start);\n\thdr_size = 8;\n\tif (type == \"uuid\") {\n\t\tif ((stream.getEndPosition() - stream.getPosition() < 16) || (parentSize -hdr_size < 16)) {\n\t\t\tstream.seek(start);\n\t\t\tLog.debug(\"BoxParser\", \"Not enough bytes left in the parent box to parse a UUID box\");\n\t\t\treturn { code: BoxParser.ERR_NOT_ENOUGH_DATA };\n\t\t}\n\t\tuuid = BoxParser.parseUUID(stream);\n\t\thdr_size += 16;\n\t\tbox_type = uuid;\n\t}\n\tif (size == 1) {\n\t\tif ((stream.getEndPosition() - stream.getPosition() < 8) || (parentSize && (parentSize - hdr_size) < 8)) {\n\t\t\tstream.seek(start);\n\t\t\tLog.warn(\"BoxParser\", \"Not enough data in stream to parse the extended size of the \\\"\"+type+\"\\\" box\");\n\t\t\treturn { code: BoxParser.ERR_NOT_ENOUGH_DATA };\n\t\t}\n\t\tsize = stream.readUint64();\n\t\thdr_size += 8;\n\t} else if (size === 0) {\n\t\t/* box extends till the end of file or invalid file */\n\t\tif (parentSize) {\n\t\t\tsize = parentSize;\n\t\t} else {\n\t\t\t/* box extends till the end of file */\n\t\t\tif (type !== \"mdat\") {\n\t\t\t\tLog.error(\"BoxParser\", \"Unlimited box size not supported for type: '\"+type+\"'\");\n\t\t\t\tbox = new BoxParser.Box(type, size);\n\t\t\t\treturn { code: BoxParser.OK, box: box, size: box.size };\n\t\t\t}\n\t\t}\n\t}\n\tif (size !== 0 && size < hdr_size) {\n\t\tLog.error(\"BoxParser\", \"Box of type \"+type+\" has an invalid size \"+size+\" (too small to be a box)\");\n\t\treturn { code: BoxParser.ERR_NOT_ENOUGH_DATA, type: type, size: size, hdr_size: hdr_size, start: start };\n\t}\n\tif (size !== 0 && parentSize && size > parentSize) {\n\t\tLog.error(\"BoxParser\", \"Box of type '\"+type+\"' has a size \"+size+\" greater than its container size \"+parentSize);\n\t\treturn { code: BoxParser.ERR_NOT_ENOUGH_DATA, type: type, size: size, hdr_size: hdr_size, start: start };\n\t}\n\tif (size !== 0 && start + size > stream.getEndPosition()) {\n\t\tstream.seek(start);\n\t\tLog.info(\"BoxParser\", \"Not enough data in stream to parse the entire '\"+type+\"' box\");\n\t\treturn { code: BoxParser.ERR_NOT_ENOUGH_DATA, type: type, size: size, hdr_size: hdr_size, start: start };\n\t}\n\tif (headerOnly) {\n\t\treturn { code: BoxParser.OK, type: type, size: size, hdr_size: hdr_size, start: start };\n\t} else {\n\t\tif (BoxParser[type+\"Box\"]) {\n\t\t\tbox = new BoxParser[type+\"Box\"](size);\n\t\t} else {\n\t\t\tif (type !== \"uuid\") {\n\t\t\t\tLog.warn(\"BoxParser\", \"Unknown box type: '\"+type+\"'\");\n\t\t\t\tbox = new BoxParser.Box(type, size);\n\t\t\t\tbox.has_unparsed_data = true;\n\t\t\t} else {\n\t\t\t\tif (BoxParser.UUIDBoxes[uuid]) {\n\t\t\t\t\tbox = new BoxParser.UUIDBoxes[uuid](size);\n\t\t\t\t} else {\n\t\t\t\t\tLog.warn(\"BoxParser\", \"Unknown uuid type: '\"+uuid+\"'\");\n\t\t\t\t\tbox = new BoxParser.Box(type, size);\n\t\t\t\t\tbox.uuid = uuid;\n\t\t\t\t\tbox.has_unparsed_data = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tbox.hdr_size = hdr_size;\n\t/* recording the position of the box in the input stream */\n\tbox.start = start;\n\tif (box.write === BoxParser.Box.prototype.write && box.type !== \"mdat\") {\n\t\tLog.info(\"BoxParser\", \"'\"+box_type+\"' box writing not yet implemented, keeping unparsed data in memory for later write\");\n\t\tbox.parseDataAndRewind(stream);\n\t}\n\tbox.parse(stream);\n\tdiff = stream.getPosition() - (box.start+box.size);\n\tif (diff < 0) {\n\t\tLog.warn(\"BoxParser\", \"Parsing of box '\"+box_type+\"' did not read the entire indicated box data size (missing \"+(-diff)+\" bytes), seeking forward\");\n\t\tstream.seek(box.start+box.size);\n\t} else if (diff > 0) {\n\t\tLog.error(\"BoxParser\", \"Parsing of box '\"+box_type+\"' read \"+diff+\" more bytes than the indicated box data size, seeking backwards\");\n\t\tif (box.size !== 0) stream.seek(box.start+box.size);\n\t}\n\treturn { code: BoxParser.OK, box: box, size: box.size };\n}\n\nBoxParser.Box.prototype.parse = function(stream) {\n\tif (this.type != \"mdat\") {\n\t\tthis.data = stream.readUint8Array(this.size-this.hdr_size);\n\t} else {\n\t\tif (this.size === 0) {\n\t\t\tstream.seek(stream.getEndPosition());\n\t\t} else {\n\t\t\tstream.seek(this.start+this.size);\n\t\t}\n\t}\n}\n\n/* Used to parse a box without consuming its data, to allow detailled parsing\n   Useful for boxes for which a write method is not yet implemented */\nBoxParser.Box.prototype.parseDataAndRewind = function(stream) {\n\tthis.data = stream.readUint8Array(this.size-this.hdr_size);\n\t// rewinding\n\tstream.position -= this.size-this.hdr_size;\n}\n\nBoxParser.FullBox.prototype.parseDataAndRewind = function(stream) {\n\tthis.parseFullHeader(stream);\n\tthis.data = stream.readUint8Array(this.size-this.hdr_size);\n\t// restore the header size as if the full header had not been parsed\n\tthis.hdr_size -= 4;\n\t// rewinding\n\tstream.position -= this.size-this.hdr_size;\n}\n\nBoxParser.FullBox.prototype.parseFullHeader = function (stream) {\n\tthis.version = stream.readUint8();\n\tthis.flags = stream.readUint24();\n\tthis.hdr_size += 4;\n}\n\nBoxParser.FullBox.prototype.parse = function (stream) {\n\tthis.parseFullHeader(stream);\n\tthis.data = stream.readUint8Array(this.size-this.hdr_size);\n}\n\nBoxParser.ContainerBox.prototype.parse = function(stream) {\n\tvar ret;\n\tvar box;\n\twhile (stream.getPosition() < this.start+this.size) {\n\t\tret = BoxParser.parseOneBox(stream, false, this.size - (stream.getPosition() - this.start));\n\t\tif (ret.code === BoxParser.OK) {\n\t\t\tbox = ret.box;\n\t\t\t/* store the box in the 'boxes' array to preserve box order (for offset) but also store box in a property for more direct access */\n\t\t\tthis.boxes.push(box);\n\t\t\tif (this.subBoxNames && this.subBoxNames.indexOf(box.type) != -1) {\n\t\t\t\tthis[this.subBoxNames[this.subBoxNames.indexOf(box.type)]+\"s\"].push(box);\n\t\t\t} else {\n\t\t\t\tvar box_type = box.type !== \"uuid\" ? box.type : box.uuid;\n\t\t\t\tif (this[box_type]) {\n\t\t\t\t\tLog.warn(\"Box of type \"+box_type+\" already stored in field of this type\");\n\t\t\t\t} else {\n\t\t\t\t\tthis[box_type] = box;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n}\n\nBoxParser.Box.prototype.parseLanguage = function(stream) {\n\tthis.language = stream.readUint16();\n\tvar chars = [];\n\tchars[0] = (this.language>>10)&0x1F;\n\tchars[1] = (this.language>>5)&0x1F;\n\tchars[2] = (this.language)&0x1F;\n\tthis.languageString = String.fromCharCode(chars[0]+0x60, chars[1]+0x60, chars[2]+0x60);\n}\n\n// file:src/parsing/sampleentries/sampleentry.js\nBoxParser.SAMPLE_ENTRY_TYPE_VISUAL \t\t= \"Visual\";\nBoxParser.SAMPLE_ENTRY_TYPE_AUDIO \t\t= \"Audio\";\nBoxParser.SAMPLE_ENTRY_TYPE_HINT \t\t= \"Hint\";\nBoxParser.SAMPLE_ENTRY_TYPE_METADATA \t= \"Metadata\";\nBoxParser.SAMPLE_ENTRY_TYPE_SUBTITLE \t= \"Subtitle\";\nBoxParser.SAMPLE_ENTRY_TYPE_SYSTEM \t\t= \"System\";\nBoxParser.SAMPLE_ENTRY_TYPE_TEXT \t\t= \"Text\";\n\nBoxParser.SampleEntry.prototype.parseHeader = function(stream) {\n\tstream.readUint8Array(6);\n\tthis.data_reference_index = stream.readUint16();\n\tthis.hdr_size += 8;\n}\n\nBoxParser.SampleEntry.prototype.parse = function(stream) {\n\tthis.parseHeader(stream);\n\tthis.data = stream.readUint8Array(this.size - this.hdr_size);\n}\n\nBoxParser.SampleEntry.prototype.parseDataAndRewind = function(stream) {\n\tthis.parseHeader(stream);\n\tthis.data = stream.readUint8Array(this.size - this.hdr_size);\n\t// restore the header size as if the sample entry header had not been parsed\n\tthis.hdr_size -= 8;\n\t// rewinding\n\tstream.position -= this.size-this.hdr_size;\n}\n\nBoxParser.SampleEntry.prototype.parseFooter = function(stream) {\n\tBoxParser.ContainerBox.prototype.parse.call(this, stream);\n}\n\n// Base SampleEntry types with default parsing\nBoxParser.createMediaSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_HINT);\nBoxParser.createMediaSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_METADATA);\nBoxParser.createMediaSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_SUBTITLE);\nBoxParser.createMediaSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_SYSTEM);\nBoxParser.createMediaSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_TEXT);\n\n//Base SampleEntry types for Audio and Video with specific parsing\nBoxParser.createMediaSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, function(stream) {\n\tvar compressorname_length;\n\tthis.parseHeader(stream);\n\tstream.readUint16();\n\tstream.readUint16();\n\tstream.readUint32Array(3);\n\tthis.width = stream.readUint16();\n\tthis.height = stream.readUint16();\n\tthis.horizresolution = stream.readUint32();\n\tthis.vertresolution = stream.readUint32();\n\tstream.readUint32();\n\tthis.frame_count = stream.readUint16();\n\tcompressorname_length = Math.min(31, stream.readUint8());\n\tthis.compressorname = stream.readString(compressorname_length);\n\tif (compressorname_length < 31) {\n\t\tstream.readString(31 - compressorname_length);\n\t}\n\tthis.depth = stream.readUint16();\n\tstream.readUint16();\n\tthis.parseFooter(stream);\n});\n\nBoxParser.createMediaSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_AUDIO, function(stream) {\n\tthis.parseHeader(stream);\n\tstream.readUint32Array(2);\n\tthis.channel_count = stream.readUint16();\n\tthis.samplesize = stream.readUint16();\n\tstream.readUint16();\n\tstream.readUint16();\n\tthis.samplerate = (stream.readUint32()/(1<<16));\n\tthis.parseFooter(stream);\n});\n\n// Sample entries inheriting from Audio and Video\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"avc1\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"avc2\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"avc3\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"avc4\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"av01\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"hvc1\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"hev1\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"vvc1\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"vvi1\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"vvs1\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"vvcN\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"vp08\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"vp09\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_AUDIO, \t\"mp4a\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_AUDIO, \t\"ac-3\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_AUDIO, \t\"ec-3\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_AUDIO, \t\"Opus\");\n\n// Encrypted sample entries\nBoxParser.createEncryptedSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \t\"encv\");\nBoxParser.createEncryptedSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_AUDIO, \t\"enca\");\nBoxParser.createEncryptedSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_SUBTITLE, \t\"encu\");\nBoxParser.createEncryptedSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_SYSTEM, \t\"encs\");\nBoxParser.createEncryptedSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_TEXT, \t\t\"enct\");\nBoxParser.createEncryptedSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_METADATA, \t\"encm\");\n// file:src/parsing/a1lx.js\nBoxParser.createBoxCtor(\"a1lx\", function(stream) {\n\tvar large_size = stream.readUint8() & 1;\n\tvar FieldLength = ((large_size & 1) + 1) * 16;\n\tthis.layer_size = [];\n\tfor (var i = 0; i < 3; i++) {\n\t\tif (FieldLength == 16) {\n\t\t\tthis.layer_size[i] = stream.readUint16();\n\t\t} else {\n\t\t\tthis.layer_size[i] = stream.readUint32();\n\t\t}\n\t}\n});// file:src/parsing/a1op.js\nBoxParser.createBoxCtor(\"a1op\", function(stream) {\n\tthis.op_index = stream.readUint8();\n});// file:src/parsing/auxC.js\nBoxParser.createFullBoxCtor(\"auxC\", function(stream) {\n\tthis.aux_type = stream.readCString();\n\tvar aux_subtype_length = this.size - this.hdr_size - (this.aux_type.length + 1);\n\tthis.aux_subtype = stream.readUint8Array(aux_subtype_length);\n});// file:src/parsing/av1C.js\nBoxParser.createBoxCtor(\"av1C\", function(stream) {\n\tvar i;\n\tvar toparse;\n\tvar tmp = stream.readUint8();\n\tif ((tmp >> 7) & 0x1 !== 1) {\n\t\tLog.error(\"av1C marker problem\");\n\t\treturn;\n\t}\n\tthis.version = tmp & 0x7F;\n\tif (this.version !== 1) {\n\t\tLog.error(\"av1C version \"+this.version+\" not supported\");\n\t\treturn;\n\t}\n\ttmp = stream.readUint8();\n\tthis.seq_profile = (tmp >> 5) & 0x7;\n\tthis.seq_level_idx_0 = tmp & 0x1F;\n\ttmp = stream.readUint8();\n\tthis.seq_tier_0 = (tmp >> 7) & 0x1;\n\tthis.high_bitdepth = (tmp >> 6) & 0x1;\n\tthis.twelve_bit = (tmp >> 5) & 0x1;\n\tthis.monochrome = (tmp >> 4) & 0x1;\n\tthis.chroma_subsampling_x = (tmp >> 3) & 0x1;\n\tthis.chroma_subsampling_y = (tmp >> 2) & 0x1;\n\tthis.chroma_sample_position = (tmp & 0x3);\n\ttmp = stream.readUint8();\n\tthis.reserved_1 = (tmp >> 5) & 0x7;\n\tif (this.reserved_1 !== 0) {\n\t\tLog.error(\"av1C reserved_1 parsing problem\");\n\t\treturn;\n\t}\n\tthis.initial_presentation_delay_present = (tmp >> 4) & 0x1;\n\tif (this.initial_presentation_delay_present === 1) {\n\t\tthis.initial_presentation_delay_minus_one = (tmp & 0xF);\n\t} else {\n\t\tthis.reserved_2 = (tmp & 0xF);\n\t\tif (this.reserved_2 !== 0) {\n\t\t\tLog.error(\"av1C reserved_2 parsing problem\");\n\t\t\treturn;\n\t\t}\n\t}\n\n\tvar configOBUs_length = this.size - this.hdr_size - 4;\n\tthis.configOBUs = stream.readUint8Array(configOBUs_length);\n});\n\n// file:src/parsing/avcC.js\nBoxParser.createBoxCtor(\"avcC\", function(stream) {\n\tvar i;\n\tvar toparse;\n\tthis.configurationVersion = stream.readUint8();\n\tthis.AVCProfileIndication = stream.readUint8();\n\tthis.profile_compatibility = stream.readUint8();\n\tthis.AVCLevelIndication = stream.readUint8();\n\tthis.lengthSizeMinusOne = (stream.readUint8() & 0x3);\n\tthis.nb_SPS_nalus = (stream.readUint8() & 0x1F);\n\ttoparse = this.size - this.hdr_size - 6;\n\tthis.SPS = [];\n\tfor (i = 0; i < this.nb_SPS_nalus; i++) {\n\t\tthis.SPS[i] = {};\n\t\tthis.SPS[i].length = stream.readUint16();\n\t\tthis.SPS[i].nalu = stream.readUint8Array(this.SPS[i].length);\n\t\ttoparse -= 2+this.SPS[i].length;\n\t}\n\tthis.nb_PPS_nalus = stream.readUint8();\n\ttoparse--;\n\tthis.PPS = [];\n\tfor (i = 0; i < this.nb_PPS_nalus; i++) {\n\t\tthis.PPS[i] = {};\n\t\tthis.PPS[i].length = stream.readUint16();\n\t\tthis.PPS[i].nalu = stream.readUint8Array(this.PPS[i].length);\n\t\ttoparse -= 2+this.PPS[i].length;\n\t}\n\tif (toparse>0) {\n\t\tthis.ext = stream.readUint8Array(toparse);\n\t}\n});\n\n// file:src/parsing/btrt.js\nBoxParser.createBoxCtor(\"btrt\", function(stream) {\n\tthis.bufferSizeDB = stream.readUint32();\n\tthis.maxBitrate = stream.readUint32();\n\tthis.avgBitrate = stream.readUint32();\n});\n\n// file:src/parsing/clap.js\nBoxParser.createBoxCtor(\"clap\", function(stream) {\n\tthis.cleanApertureWidthN = stream.readUint32();\n\tthis.cleanApertureWidthD = stream.readUint32();\n\tthis.cleanApertureHeightN = stream.readUint32();\n\tthis.cleanApertureHeightD = stream.readUint32();\n\tthis.horizOffN = stream.readUint32();\n\tthis.horizOffD = stream.readUint32();\n\tthis.vertOffN = stream.readUint32();\n\tthis.vertOffD = stream.readUint32();\n});// file:src/parsing/clli.js\nBoxParser.createBoxCtor(\"clli\", function(stream) {\n\tthis.max_content_light_level = stream.readUint16();\n    this.max_pic_average_light_level = stream.readUint16();\n});\n\n// file:src/parsing/co64.js\nBoxParser.createFullBoxCtor(\"co64\", function(stream) {\n\tvar entry_count;\n\tvar i;\n\tentry_count = stream.readUint32();\n\tthis.chunk_offsets = [];\n\tif (this.version === 0) {\n\t\tfor(i=0; i<entry_count; i++) {\n\t\t\tthis.chunk_offsets.push(stream.readUint64());\n\t\t}\n\t}\n});\n\n// file:src/parsing/CoLL.js\nBoxParser.createFullBoxCtor(\"CoLL\", function(stream) {\n\tthis.maxCLL = stream.readUint16();\n    this.maxFALL = stream.readUint16();\n});\n\n// file:src/parsing/colr.js\nBoxParser.createBoxCtor(\"colr\", function(stream) {\n\tthis.colour_type = stream.readString(4);\n\tif (this.colour_type === 'nclx') {\n\t\tthis.colour_primaries = stream.readUint16();\n\t\tthis.transfer_characteristics = stream.readUint16();\n\t\tthis.matrix_coefficients = stream.readUint16();\n\t\tvar tmp = stream.readUint8();\n\t\tthis.full_range_flag = tmp >> 7;\n\t} else if (this.colour_type === 'rICC') {\n\t\tthis.ICC_profile = stream.readUint8Array(this.size - 4);\n\t} else if (this.colour_type === 'prof') {\n\t\tthis.ICC_profile = stream.readUint8Array(this.size - 4);\n\t}\n});// file:src/parsing/cprt.js\nBoxParser.createFullBoxCtor(\"cprt\", function (stream) {\n\tthis.parseLanguage(stream);\n\tthis.notice = stream.readCString();\n});\n\n// file:src/parsing/cslg.js\nBoxParser.createFullBoxCtor(\"cslg\", function(stream) {\n\tvar entry_count;\n\tif (this.version === 0) {\n\t\tthis.compositionToDTSShift = stream.readInt32(); /* signed */\n\t\tthis.leastDecodeToDisplayDelta = stream.readInt32(); /* signed */\n\t\tthis.greatestDecodeToDisplayDelta = stream.readInt32(); /* signed */\n\t\tthis.compositionStartTime = stream.readInt32(); /* signed */\n\t\tthis.compositionEndTime = stream.readInt32(); /* signed */\n\t}\n});\n\n// file:src/parsing/ctts.js\nBoxParser.createFullBoxCtor(\"ctts\", function(stream) {\n\tvar entry_count;\n\tvar i;\n\tentry_count = stream.readUint32();\n\tthis.sample_counts = [];\n\tthis.sample_offsets = [];\n\tif (this.version === 0) {\n\t\tfor(i=0; i<entry_count; i++) {\n\t\t\tthis.sample_counts.push(stream.readUint32());\n\t\t\t/* some files are buggy and declare version=0 while using signed offsets.\n\t\t\t   The likelyhood of using the most significant bit in a 32-bits time offset is very low,\n\t\t\t   so using signed value here as well */\n\t\t\t   var value = stream.readInt32();\n\t\t\t   if (value < 0) {\n\t\t\t   \t\tLog.warn(\"BoxParser\", \"ctts box uses negative values without using version 1\");\n\t\t\t   }\n\t\t\tthis.sample_offsets.push(value);\n\t\t}\n\t} else if (this.version == 1) {\n\t\tfor(i=0; i<entry_count; i++) {\n\t\t\tthis.sample_counts.push(stream.readUint32());\n\t\t\tthis.sample_offsets.push(stream.readInt32()); /* signed */\n\t\t}\n\t}\n});\n\n// file:src/parsing/dac3.js\nBoxParser.createBoxCtor(\"dac3\", function(stream) {\n\tvar tmp_byte1 = stream.readUint8();\n\tvar tmp_byte2 = stream.readUint8();\n\tvar tmp_byte3 = stream.readUint8();\n\tthis.fscod = tmp_byte1 >> 6;\n\tthis.bsid  = ((tmp_byte1 >> 1) & 0x1F);\n\tthis.bsmod = ((tmp_byte1 & 0x1) <<  2) | ((tmp_byte2 >> 6) & 0x3);\n\tthis.acmod = ((tmp_byte2 >> 3) & 0x7);\n\tthis.lfeon = ((tmp_byte2 >> 2) & 0x1);\n\tthis.bit_rate_code = (tmp_byte2 & 0x3) | ((tmp_byte3 >> 5) & 0x7);\n});\n\n// file:src/parsing/dec3.js\nBoxParser.createBoxCtor(\"dec3\", function(stream) {\n\tvar tmp_16 = stream.readUint16();\n\tthis.data_rate = tmp_16 >> 3;\n\tthis.num_ind_sub = tmp_16 & 0x7;\n\tthis.ind_subs = [];\n\tfor (var i = 0; i < this.num_ind_sub+1; i++) {\n\t\tvar ind_sub = {};\n\t\tthis.ind_subs.push(ind_sub);\n\t\tvar tmp_byte1 = stream.readUint8();\n\t\tvar tmp_byte2 = stream.readUint8();\n\t\tvar tmp_byte3 = stream.readUint8();\n\t\tind_sub.fscod = tmp_byte1 >> 6;\n\t\tind_sub.bsid  = ((tmp_byte1 >> 1) & 0x1F);\n\t\tind_sub.bsmod = ((tmp_byte1 & 0x1) << 4) | ((tmp_byte2 >> 4) & 0xF);\n\t\tind_sub.acmod = ((tmp_byte2 >> 1) & 0x7);\n\t\tind_sub.lfeon = (tmp_byte2 & 0x1);\n\t\tind_sub.num_dep_sub = ((tmp_byte3 >> 1) & 0xF);\n\t\tif (ind_sub.num_dep_sub > 0) {\n\t\t\tind_sub.chan_loc = ((tmp_byte3 & 0x1) << 8) | stream.readUint8();\n\t\t}\n\t}\n});\n\n// file:src/parsing/dfLa.js\nBoxParser.createFullBoxCtor(\"dfLa\", function(stream) {\n    var BLOCKTYPE_MASK = 0x7F;\n    var LASTMETADATABLOCKFLAG_MASK = 0x80;\n\n    var boxesFound = [];\n    var knownBlockTypes = [\n        \"STREAMINFO\",\n        \"PADDING\",\n        \"APPLICATION\",\n        \"SEEKTABLE\",\n        \"VORBIS_COMMENT\",\n        \"CUESHEET\",\n        \"PICTURE\",\n        \"RESERVED\"\n    ];\n\n    // dfLa is a FullBox\n    this.parseFullHeader(stream);\n\n    // for (i=0; ; i++) { // to end of box\n    do {\n        var flagAndType = stream.readUint8();\n\n        var type = Math.min(\n            (flagAndType & BLOCKTYPE_MASK),\n            (knownBlockTypes.length - 1)\n        );\n\n        // if this is a STREAMINFO block, read the true samplerate since this\n        // can be different to the AudioSampleEntry samplerate.\n        if (!(type)) {\n            // read past all the other stuff\n            stream.readUint8Array(13);\n\n            // extract samplerate\n            this.samplerate = (stream.readUint32() >> 12);\n\n            // read to end of STREAMINFO\n            stream.readUint8Array(20);\n        } else {\n            // not interested in other block types so just discard length bytes\n            stream.readUint8Array(stream.readUint24());\n        }\n\n        boxesFound.push(knownBlockTypes[type]);\n\n        if (!!(flagAndType & LASTMETADATABLOCKFLAG_MASK)) {\n            break;\n        }\n    } while (true);\n\n    this.numMetadataBlocks =\n        boxesFound.length + \" (\" + boxesFound.join(\", \") + \")\";\n});\n// file:src/parsing/dimm.js\nBoxParser.createBoxCtor(\"dimm\", function(stream) {\n\tthis.bytessent = stream.readUint64();\n});\n\n// file:src/parsing/dmax.js\nBoxParser.createBoxCtor(\"dmax\", function(stream) {\n\tthis.time = stream.readUint32();\n});\n\n// file:src/parsing/dmed.js\nBoxParser.createBoxCtor(\"dmed\", function(stream) {\n\tthis.bytessent = stream.readUint64();\n});\n\n// file:src/parsing/dOps.js\nBoxParser.createBoxCtor(\"dOps\", function(stream) {\n\tthis.Version = stream.readUint8();\n\tthis.OutputChannelCount = stream.readUint8();\n\tthis.PreSkip = stream.readUint16();\n\tthis.InputSampleRate = stream.readUint32();\n\tthis.OutputGain = stream.readInt16();\n\tthis.ChannelMappingFamily = stream.readUint8();\n\tif (this.ChannelMappingFamily !== 0) {\n\t\tthis.StreamCount = stream.readUint8();\n\t\tthis.CoupledCount = stream.readUint8();\n\t\tthis.ChannelMapping = [];\n\t\tfor (var i = 0; i < this.OutputChannelCount; i++) {\n\t\t\tthis.ChannelMapping[i] = stream.readUint8();\n\t\t}\n\t}\n});\n\n// file:src/parsing/dref.js\nBoxParser.createFullBoxCtor(\"dref\", function(stream) {\n\tvar ret;\n\tvar box;\n\tthis.entries = [];\n\tvar entry_count = stream.readUint32();\n\tfor (var i = 0; i < entry_count; i++) {\n\t\tret = BoxParser.parseOneBox(stream, false, this.size - (stream.getPosition() - this.start));\n\t\tif (ret.code === BoxParser.OK) {\n\t\t\tbox = ret.box;\n\t\t\tthis.entries.push(box);\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n});\n\n// file:src/parsing/drep.js\nBoxParser.createBoxCtor(\"drep\", function(stream) {\n\tthis.bytessent = stream.readUint64();\n});\n\n// file:src/parsing/elng.js\nBoxParser.createFullBoxCtor(\"elng\", function(stream) {\n\tthis.extended_language = stream.readString(this.size-this.hdr_size);\n});\n\n// file:src/parsing/elst.js\nBoxParser.createFullBoxCtor(\"elst\", function(stream) {\n\tthis.entries = [];\n\tvar entry_count = stream.readUint32();\n\tfor (var i = 0; i < entry_count; i++) {\n\t\tvar entry = {};\n\t\tthis.entries.push(entry);\n\t\tif (this.version === 1) {\n\t\t\tentry.segment_duration = stream.readUint64();\n\t\t\tentry.media_time = stream.readInt64();\n\t\t} else {\n\t\t\tentry.segment_duration = stream.readUint32();\n\t\t\tentry.media_time = stream.readInt32();\n\t\t}\n\t\tentry.media_rate_integer = stream.readInt16();\n\t\tentry.media_rate_fraction = stream.readInt16();\n\t}\n});\n\n// file:src/parsing/emsg.js\nBoxParser.createFullBoxCtor(\"emsg\", function(stream) {\n\tif (this.version == 1) {\n\t\tthis.timescale \t\t\t\t\t= stream.readUint32();\n\t\tthis.presentation_time \t\t\t= stream.readUint64();\n\t\tthis.event_duration\t\t\t \t= stream.readUint32();\n\t\tthis.id \t\t\t\t\t\t= stream.readUint32();\n\t\tthis.scheme_id_uri \t\t\t\t= stream.readCString();\n\t\tthis.value \t\t\t\t\t\t= stream.readCString();\n\t} else {\n\t\tthis.scheme_id_uri \t\t\t\t= stream.readCString();\n\t\tthis.value \t\t\t\t\t\t= stream.readCString();\n\t\tthis.timescale \t\t\t\t\t= stream.readUint32();\n\t\tthis.presentation_time_delta \t= stream.readUint32();\n\t\tthis.event_duration\t\t\t \t= stream.readUint32();\n\t\tthis.id \t\t\t\t\t\t= stream.readUint32();\n\t}\n\tvar message_size = this.size - this.hdr_size - (4*4 + (this.scheme_id_uri.length+1) + (this.value.length+1));\n\tif (this.version == 1) {\n\t\tmessage_size -= 4;\n\t}\n\tthis.message_data = stream.readUint8Array(message_size);\n});\n\n// file:src/parsing/esds.js\nBoxParser.createFullBoxCtor(\"esds\", function(stream) {\n\tvar esd_data = stream.readUint8Array(this.size-this.hdr_size);\n\tif (typeof MPEG4DescriptorParser !== \"undefined\") {\n\t\tvar esd_parser = new MPEG4DescriptorParser();\n\t\tthis.esd = esd_parser.parseOneDescriptor(new DataStream(esd_data.buffer, 0, DataStream.BIG_ENDIAN));\n\t}\n});\n\n// file:src/parsing/fiel.js\nBoxParser.createBoxCtor(\"fiel\", function(stream) {\n\tthis.fieldCount = stream.readUint8();\n\tthis.fieldOrdering = stream.readUint8();\n});\n\n// file:src/parsing/frma.js\nBoxParser.createBoxCtor(\"frma\", function(stream) {\n\tthis.data_format = stream.readString(4);\n});\n\n// file:src/parsing/ftyp.js\nBoxParser.createBoxCtor(\"ftyp\", function(stream) {\n\tvar toparse = this.size - this.hdr_size;\n\tthis.major_brand = stream.readString(4);\n\tthis.minor_version = stream.readUint32();\n\ttoparse -= 8;\n\tthis.compatible_brands = [];\n\tvar i = 0;\n\twhile (toparse>=4) {\n\t\tthis.compatible_brands[i] = stream.readString(4);\n\t\ttoparse -= 4;\n\t\ti++;\n\t}\n});\n\n// file:src/parsing/hdlr.js\nBoxParser.createFullBoxCtor(\"hdlr\", function(stream) {\n\tif (this.version === 0) {\n\t\tstream.readUint32();\n\t\tthis.handler = stream.readString(4);\n\t\tstream.readUint32Array(3);\n\t\tthis.name = stream.readString(this.size-this.hdr_size-20);\n\t\tif (this.name[this.name.length-1]==='\\0') {\n\t\t\tthis.name = this.name.slice(0,-1);\n\t\t}\n\t}\n});\n\n// file:src/parsing/hvcC.js\nBoxParser.createBoxCtor(\"hvcC\", function(stream) {\n\tvar i, j;\n\tvar nb_nalus;\n\tvar length;\n\tvar tmp_byte;\n\tthis.configurationVersion = stream.readUint8();\n\ttmp_byte = stream.readUint8();\n\tthis.general_profile_space = tmp_byte >> 6;\n\tthis.general_tier_flag = (tmp_byte & 0x20) >> 5;\n\tthis.general_profile_idc = (tmp_byte & 0x1F);\n\tthis.general_profile_compatibility = stream.readUint32();\n\tthis.general_constraint_indicator = stream.readUint8Array(6);\n\tthis.general_level_idc = stream.readUint8();\n\tthis.min_spatial_segmentation_idc = stream.readUint16() & 0xFFF;\n\tthis.parallelismType = (stream.readUint8() & 0x3);\n\tthis.chroma_format_idc = (stream.readUint8() & 0x3);\n\tthis.bit_depth_luma_minus8 = (stream.readUint8() & 0x7);\n\tthis.bit_depth_chroma_minus8 = (stream.readUint8() & 0x7);\n\tthis.avgFrameRate = stream.readUint16();\n\ttmp_byte = stream.readUint8();\n\tthis.constantFrameRate = (tmp_byte >> 6);\n\tthis.numTemporalLayers = (tmp_byte & 0XD) >> 3;\n\tthis.temporalIdNested = (tmp_byte & 0X4) >> 2;\n\tthis.lengthSizeMinusOne = (tmp_byte & 0X3);\n\n\tthis.nalu_arrays = [];\n\tvar numOfArrays = stream.readUint8();\n\tfor (i = 0; i < numOfArrays; i++) {\n\t\tvar nalu_array = [];\n\t\tthis.nalu_arrays.push(nalu_array);\n\t\ttmp_byte = stream.readUint8()\n\t\tnalu_array.completeness = (tmp_byte & 0x80) >> 7;\n\t\tnalu_array.nalu_type = tmp_byte & 0x3F;\n\t\tvar numNalus = stream.readUint16();\n\t\tfor (j = 0; j < numNalus; j++) {\n\t\t\tvar nalu = {}\n\t\t\tnalu_array.push(nalu);\n\t\t\tlength = stream.readUint16();\n\t\t\tnalu.data   = stream.readUint8Array(length);\n\t\t}\n\t}\n});\n\n// file:src/parsing/iinf.js\nBoxParser.createFullBoxCtor(\"iinf\", function(stream) {\n\tvar ret;\n\tif (this.version === 0) {\n\t\tthis.entry_count = stream.readUint16();\n\t} else {\n\t\tthis.entry_count = stream.readUint32();\n\t}\n\tthis.item_infos = [];\n\tfor (var i = 0; i < this.entry_count; i++) {\n\t\tret = BoxParser.parseOneBox(stream, false, this.size - (stream.getPosition() - this.start));\n\t\tif (ret.code === BoxParser.OK) {\n\t\t\tif (ret.box.type !== \"infe\") {\n\t\t\t\tLog.error(\"BoxParser\", \"Expected 'infe' box, got \"+ret.box.type);\n\t\t\t}\n\t\t\tthis.item_infos[i] = ret.box;\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n});\n\n// file:src/parsing/iloc.js\nBoxParser.createFullBoxCtor(\"iloc\", function(stream) {\n\tvar byte;\n\tbyte = stream.readUint8();\n\tthis.offset_size = (byte >> 4) & 0xF;\n\tthis.length_size = byte & 0xF;\n\tbyte = stream.readUint8();\n\tthis.base_offset_size = (byte >> 4) & 0xF;\n\tif (this.version === 1 || this.version === 2) {\n\t\tthis.index_size = byte & 0xF;\n\t} else {\n\t\tthis.index_size = 0;\n\t\t// reserved = byte & 0xF;\n\t}\n\tthis.items = [];\n\tvar item_count = 0;\n\tif (this.version < 2) {\n\t\titem_count = stream.readUint16();\n\t} else if (this.version === 2) {\n\t\titem_count = stream.readUint32();\n\t} else {\n\t\tthrow \"version of iloc box not supported\";\n\t}\n\tfor (var i = 0; i < item_count; i++) {\n\t\tvar item = {};\n\t\tthis.items.push(item);\n\t\tif (this.version < 2) {\n\t\t\titem.item_ID = stream.readUint16();\n\t\t} else if (this.version === 2) {\n\t\t\titem.item_ID = stream.readUint16();\n\t\t} else {\n\t\t\tthrow \"version of iloc box not supported\";\n\t\t}\n\t\tif (this.version === 1 || this.version === 2) {\n\t\t\titem.construction_method = (stream.readUint16() & 0xF);\n\t\t} else {\n\t\t\titem.construction_method = 0;\n\t\t}\n\t\titem.data_reference_index = stream.readUint16();\n\t\tswitch(this.base_offset_size) {\n\t\t\tcase 0:\n\t\t\t\titem.base_offset = 0;\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\titem.base_offset = stream.readUint32();\n\t\t\t\tbreak;\n\t\t\tcase 8:\n\t\t\t\titem.base_offset = stream.readUint64();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow \"Error reading base offset size\";\n\t\t}\n\t\tvar extent_count = stream.readUint16();\n\t\titem.extents = [];\n\t\tfor (var j=0; j < extent_count; j++) {\n\t\t\tvar extent = {};\n\t\t\titem.extents.push(extent);\n\t\t\tif (this.version === 1 || this.version === 2) {\n\t\t\t\tswitch(this.index_size) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\textent.extent_index = 0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\textent.extent_index = stream.readUint32();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 8:\n\t\t\t\t\t\textent.extent_index = stream.readUint64();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow \"Error reading extent index\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tswitch(this.offset_size) {\n\t\t\t\tcase 0:\n\t\t\t\t\textent.extent_offset = 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\textent.extent_offset = stream.readUint32();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 8:\n\t\t\t\t\textent.extent_offset = stream.readUint64();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow \"Error reading extent index\";\n\t\t\t}\n\t\t\tswitch(this.length_size) {\n\t\t\t\tcase 0:\n\t\t\t\t\textent.extent_length = 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\textent.extent_length = stream.readUint32();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 8:\n\t\t\t\t\textent.extent_length = stream.readUint64();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow \"Error reading extent index\";\n\t\t\t}\n\t\t}\n\t}\n});\n\n// file:src/parsing/imir.js\nBoxParser.createBoxCtor(\"imir\", function(stream) {\n\tvar tmp = stream.readUint8();\n\tthis.reserved = tmp >> 7;\n\tthis.axis = tmp & 1;\n});// file:src/parsing/infe.js\nBoxParser.createFullBoxCtor(\"infe\", function(stream) {\n\tif (this.version === 0 || this.version === 1) {\n\t\tthis.item_ID = stream.readUint16();\n\t\tthis.item_protection_index = stream.readUint16();\n\t\tthis.item_name = stream.readCString();\n\t\tthis.content_type = stream.readCString();\n\t\tthis.content_encoding = stream.readCString();\n\t}\n\tif (this.version === 1) {\n\t\tthis.extension_type = stream.readString(4);\n\t\tLog.warn(\"BoxParser\", \"Cannot parse extension type\");\n\t\tstream.seek(this.start+this.size);\n\t\treturn;\n\t}\n\tif (this.version >= 2) {\n\t\tif (this.version === 2) {\n\t\t\tthis.item_ID = stream.readUint16();\n\t\t} else if (this.version === 3) {\n\t\t\tthis.item_ID = stream.readUint32();\n\t\t}\n\t\tthis.item_protection_index = stream.readUint16();\n\t\tthis.item_type = stream.readString(4);\n\t\tthis.item_name = stream.readCString();\n\t\tif (this.item_type === \"mime\") {\n\t\t\tthis.content_type = stream.readCString();\n\t\t\tthis.content_encoding = stream.readCString();\n\t\t} else if (this.item_type === \"uri \") {\n\t\t\tthis.item_uri_type = stream.readCString();\n\t\t}\n\t}\n});\n// file:src/parsing/ipma.js\nBoxParser.createFullBoxCtor(\"ipma\", function(stream) {\n\tvar i, j;\n\tentry_count = stream.readUint32();\n\tthis.associations = [];\n\tfor(i=0; i<entry_count; i++) {\n\t\tvar item_assoc = {};\n\t\tthis.associations.push(item_assoc);\n\t\tif (this.version < 1) {\n\t\t\titem_assoc.id = stream.readUint16();\n\t\t} else {\n\t\t\titem_assoc.id = stream.readUint32();\n\t\t}\n\t\tvar association_count = stream.readUint8();\n\t\titem_assoc.props = [];\n\t\tfor (j = 0; j < association_count; j++) {\n\t\t\tvar tmp = stream.readUint8();\n\t\t\tvar p = {};\n\t\t\titem_assoc.props.push(p);\n\t\t\tp.essential = ((tmp & 0x80) >> 7) === 1;\n\t\t\tif (this.flags & 0x1) {\n\t\t\t\tp.property_index = (tmp & 0x7F) << 8 | stream.readUint8();\n\t\t\t} else {\n\t\t\t\tp.property_index = (tmp & 0x7F);\n\t\t\t}\n\t\t}\n\t}\n});\n\n// file:src/parsing/iref.js\nBoxParser.createFullBoxCtor(\"iref\", function(stream) {\n\tvar ret;\n\tvar entryCount;\n\tvar box;\n\tthis.references = [];\n\n\twhile (stream.getPosition() < this.start+this.size) {\n\t\tret = BoxParser.parseOneBox(stream, true, this.size - (stream.getPosition() - this.start));\n\t\tif (ret.code === BoxParser.OK) {\n\t\t\tif (this.version === 0) {\n\t\t\t\tbox = new BoxParser.SingleItemTypeReferenceBox(ret.type, ret.size, ret.hdr_size, ret.start);\n\t\t\t} else {\n\t\t\t\tbox = new BoxParser.SingleItemTypeReferenceBoxLarge(ret.type, ret.size, ret.hdr_size, ret.start);\n\t\t\t}\n\t\t\tif (box.write === BoxParser.Box.prototype.write && box.type !== \"mdat\") {\n\t\t\t\tLog.warn(\"BoxParser\", box.type+\" box writing not yet implemented, keeping unparsed data in memory for later write\");\n\t\t\t\tbox.parseDataAndRewind(stream);\n\t\t\t}\n\t\t\tbox.parse(stream);\n\t\t\tthis.references.push(box);\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n});\n// file:src/parsing/irot.js\nBoxParser.createBoxCtor(\"irot\", function(stream) {\n\tthis.angle = stream.readUint8() & 0x3;\n});\n\n// file:src/parsing/ispe.js\nBoxParser.createFullBoxCtor(\"ispe\", function(stream) {\n\tthis.image_width = stream.readUint32();\n\tthis.image_height = stream.readUint32();\n});// file:src/parsing/kind.js\nBoxParser.createFullBoxCtor(\"kind\", function(stream) {\n\tthis.schemeURI = stream.readCString();\n\tthis.value = stream.readCString();\n});\n// file:src/parsing/leva.js\nBoxParser.createFullBoxCtor(\"leva\", function(stream) {\n\tvar count = stream.readUint8();\n\tthis.levels = [];\n\tfor (var i = 0; i < count; i++) {\n\t\tvar level = {};\n\t\tthis.levels[i] = level;\n\t\tlevel.track_ID = stream.readUint32();\n\t\tvar tmp_byte = stream.readUint8();\n\t\tlevel.padding_flag = tmp_byte >> 7;\n\t\tlevel.assignment_type = tmp_byte & 0x7F;\n\t\tswitch (level.assignment_type) {\n\t\t\tcase 0:\n\t\t\t\tlevel.grouping_type = stream.readString(4);\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tlevel.grouping_type = stream.readString(4);\n\t\t\t\tlevel.grouping_type_parameter = stream.readUint32();\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tlevel.sub_track_id = stream.readUint32();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tLog.warn(\"BoxParser\", \"Unknown leva assignement type\");\n\t\t}\n\t}\n});\n\n// file:src/parsing/lsel.js\nBoxParser.createBoxCtor(\"lsel\", function(stream) {\n\tthis.layer_id = stream.readUint16();\n});// file:src/parsing/maxr.js\nBoxParser.createBoxCtor(\"maxr\", function(stream) {\n\tthis.period = stream.readUint32();\n\tthis.bytes = stream.readUint32();\n});\n\n// file:src/parsing/mdcv.js\nBoxParser.createBoxCtor(\"mdcv\", function(stream) {\n    this.display_primaries = [];\n    this.display_primaries[0] = {};\n    this.display_primaries[0].x = stream.readUint16();\n    this.display_primaries[0].y = stream.readUint16();\n    this.display_primaries[1] = {};\n    this.display_primaries[1].x = stream.readUint16();\n    this.display_primaries[1].y = stream.readUint16();\n    this.display_primaries[2] = {};\n    this.display_primaries[2].x = stream.readUint16();\n    this.display_primaries[2].y = stream.readUint16();\n    this.white_point = {};\n    this.white_point.x = stream.readUint16();\n    this.white_point.y = stream.readUint16();\n    this.max_display_mastering_luminance = stream.readUint32();\n    this.min_display_mastering_luminance = stream.readUint32();\n});\n\n// file:src/parsing/mdhd.js\nBoxParser.createFullBoxCtor(\"mdhd\", function(stream) {\n\tif (this.version == 1) {\n\t\tthis.creation_time = stream.readUint64();\n\t\tthis.modification_time = stream.readUint64();\n\t\tthis.timescale = stream.readUint32();\n\t\tthis.duration = stream.readUint64();\n\t} else {\n\t\tthis.creation_time = stream.readUint32();\n\t\tthis.modification_time = stream.readUint32();\n\t\tthis.timescale = stream.readUint32();\n\t\tthis.duration = stream.readUint32();\n\t}\n\tthis.parseLanguage(stream);\n\tstream.readUint16();\n});\n\n// file:src/parsing/mehd.js\nBoxParser.createFullBoxCtor(\"mehd\", function(stream) {\n\tif (this.flags & 0x1) {\n\t\tLog.warn(\"BoxParser\", \"mehd box incorrectly uses flags set to 1, converting version to 1\");\n\t\tthis.version = 1;\n\t}\n\tif (this.version == 1) {\n\t\tthis.fragment_duration = stream.readUint64();\n\t} else {\n\t\tthis.fragment_duration = stream.readUint32();\n\t}\n});\n\n// file:src/parsing/meta.js\nBoxParser.createFullBoxCtor(\"meta\", function(stream) {\n\tthis.boxes = [];\n\tBoxParser.ContainerBox.prototype.parse.call(this, stream);\n});\n// file:src/parsing/mfhd.js\nBoxParser.createFullBoxCtor(\"mfhd\", function(stream) {\n\tthis.sequence_number = stream.readUint32();\n});\n\n// file:src/parsing/mfro.js\nBoxParser.createFullBoxCtor(\"mfro\", function(stream) {\n\tthis._size = stream.readUint32();\n});\n\n// file:src/parsing/mvhd.js\nBoxParser.createFullBoxCtor(\"mvhd\", function(stream) {\n\tif (this.version == 1) {\n\t\tthis.creation_time = stream.readUint64();\n\t\tthis.modification_time = stream.readUint64();\n\t\tthis.timescale = stream.readUint32();\n\t\tthis.duration = stream.readUint64();\n\t} else {\n\t\tthis.creation_time = stream.readUint32();\n\t\tthis.modification_time = stream.readUint32();\n\t\tthis.timescale = stream.readUint32();\n\t\tthis.duration = stream.readUint32();\n\t}\n\tthis.rate = stream.readUint32();\n\tthis.volume = stream.readUint16()>>8;\n\tstream.readUint16();\n\tstream.readUint32Array(2);\n\tthis.matrix = stream.readUint32Array(9);\n\tstream.readUint32Array(6);\n\tthis.next_track_id = stream.readUint32();\n});\n// file:src/parsing/npck.js\nBoxParser.createBoxCtor(\"npck\", function(stream) {\n\tthis.packetssent = stream.readUint32();\n});\n\n// file:src/parsing/nump.js\nBoxParser.createBoxCtor(\"nump\", function(stream) {\n\tthis.packetssent = stream.readUint64();\n});\n\n// file:src/parsing/padb.js\nBoxParser.createFullBoxCtor(\"padb\", function(stream) {\n\tvar sample_count = stream.readUint32();\n\tthis.padbits = [];\n\tfor (var i = 0; i < Math.floor((sample_count+1)/2); i++) {\n\t\tthis.padbits = stream.readUint8();\n\t}\n});\n\n// file:src/parsing/pasp.js\nBoxParser.createBoxCtor(\"pasp\", function(stream) {\n\tthis.hSpacing = stream.readUint32();\n\tthis.vSpacing = stream.readUint32();\n});// file:src/parsing/payl.js\nBoxParser.createBoxCtor(\"payl\", function(stream) {\n\tthis.text = stream.readString(this.size - this.hdr_size);\n});\n\n// file:src/parsing/payt.js\nBoxParser.createBoxCtor(\"payt\", function(stream) {\n\tthis.payloadID = stream.readUint32();\n\tvar count = stream.readUint8();\n\tthis.rtpmap_string = stream.readString(count);\n});\n\n// file:src/parsing/pdin.js\nBoxParser.createFullBoxCtor(\"pdin\", function(stream) {\n\tvar count = (this.size - this.hdr_size)/8;\n\tthis.rate = [];\n\tthis.initial_delay = [];\n\tfor (var i = 0; i < count; i++) {\n\t\tthis.rate[i] = stream.readUint32();\n\t\tthis.initial_delay[i] = stream.readUint32();\n\t}\n});\n\n// file:src/parsing/pitm.js\nBoxParser.createFullBoxCtor(\"pitm\", function(stream) {\n\tif (this.version === 0) {\n\t\tthis.item_id = stream.readUint16();\n\t} else {\n\t\tthis.item_id = stream.readUint32();\n\t}\n});\n\n// file:src/parsing/pixi.js\nBoxParser.createFullBoxCtor(\"pixi\", function(stream) {\n\tvar i;\n\tthis.num_channels = stream.readUint8();\n\tthis.bits_per_channels = [];\n\tfor (i = 0; i < this.num_channels; i++) {\n\t\tthis.bits_per_channels[i] = stream.readUint8();\n\t}\n});\n\n// file:src/parsing/pmax.js\nBoxParser.createBoxCtor(\"pmax\", function(stream) {\n\tthis.bytes = stream.readUint32();\n});\n\n// file:src/parsing/prft.js\nBoxParser.createFullBoxCtor(\"prft\", function(stream) {\n\tthis.ref_track_id = stream.readUint32();\n\tthis.ntp_timestamp = stream.readUint64();\n\tif (this.version === 0) {\n\t\tthis.media_time = stream.readUint32();\n\t} else {\n\t\tthis.media_time = stream.readUint64();\n\t}\n});\n\n// file:src/parsing/pssh.js\nBoxParser.createFullBoxCtor(\"pssh\", function(stream) {\n\tthis.system_id = BoxParser.parseHex16(stream);\n\tif (this.version > 0) {\n\t\tvar count = stream.readUint32();\n\t\tthis.kid = [];\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tthis.kid[i] = BoxParser.parseHex16(stream);\n\t\t}\n\t}\n\tvar datasize = stream.readUint32();\n\tif (datasize > 0) {\n\t\tthis.data = stream.readUint8Array(datasize);\n\t}\n});\n\n// file:src/parsing/qt/clef.js\nBoxParser.createFullBoxCtor(\"clef\", function(stream) {\n\tthis.width = stream.readUint32();\n\tthis.height = stream.readUint32();\n});// file:src/parsing/qt/enof.js\nBoxParser.createFullBoxCtor(\"enof\", function(stream) {\n\tthis.width = stream.readUint32();\n\tthis.height = stream.readUint32();\n});// file:src/parsing/qt/prof.js\nBoxParser.createFullBoxCtor(\"prof\", function(stream) {\n\tthis.width = stream.readUint32();\n\tthis.height = stream.readUint32();\n});// file:src/parsing/qt/tapt.js\nBoxParser.createContainerBoxCtor(\"tapt\", null, [ \"clef\", \"prof\", \"enof\"]);// file:src/parsing/rtp.js\nBoxParser.createBoxCtor(\"rtp \", function(stream) {\n\tthis.descriptionformat = stream.readString(4);\n\tthis.sdptext = stream.readString(this.size - this.hdr_size - 4);\n});\n\n// file:src/parsing/saio.js\nBoxParser.createFullBoxCtor(\"saio\", function(stream) {\n\tif (this.flags & 0x1) {\n\t\tthis.aux_info_type = stream.readUint32();\n\t\tthis.aux_info_type_parameter = stream.readUint32();\n\t}\n\tvar count = stream.readUint32();\n\tthis.offset = [];\n\tfor (var i = 0; i < count; i++) {\n\t\tif (this.version === 0) {\n\t\t\tthis.offset[i] = stream.readUint32();\n\t\t} else {\n\t\t\tthis.offset[i] = stream.readUint64();\n\t\t}\n\t}\n});\n// file:src/parsing/saiz.js\nBoxParser.createFullBoxCtor(\"saiz\", function(stream) {\n\tif (this.flags & 0x1) {\n\t\tthis.aux_info_type = stream.readUint32();\n\t\tthis.aux_info_type_parameter = stream.readUint32();\n\t}\n\tthis.default_sample_info_size = stream.readUint8();\n\tvar count = stream.readUint32();\n\tthis.sample_info_size = [];\n\tif (this.default_sample_info_size === 0) {\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tthis.sample_info_size[i] = stream.readUint8();\n\t\t}\n\t}\n});\n\n// file:src/parsing/sampleentries/mett.js\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_METADATA, \"mett\", function(stream) {\n\tthis.parseHeader(stream);\n\tthis.content_encoding = stream.readCString();\n\tthis.mime_format = stream.readCString();\n\tthis.parseFooter(stream);\n});\n\n// file:src/parsing/sampleentries/metx.js\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_METADATA, \"metx\", function(stream) {\n\tthis.parseHeader(stream);\n\tthis.content_encoding = stream.readCString();\n\tthis.namespace = stream.readCString();\n\tthis.schema_location = stream.readCString();\n\tthis.parseFooter(stream);\n});\n\n// file:src/parsing/sampleentries/sbtt.js\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_SUBTITLE, \"sbtt\", function(stream) {\n\tthis.parseHeader(stream);\n\tthis.content_encoding = stream.readCString();\n\tthis.mime_format = stream.readCString();\n\tthis.parseFooter(stream);\n});\n\n// file:src/parsing/sampleentries/stpp.js\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_SUBTITLE, \"stpp\", function(stream) {\n\tthis.parseHeader(stream);\n\tthis.namespace = stream.readCString();\n\tthis.schema_location = stream.readCString();\n\tthis.auxiliary_mime_types = stream.readCString();\n\tthis.parseFooter(stream);\n});\n\n// file:src/parsing/sampleentries/stxt.js\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_SUBTITLE, \"stxt\", function(stream) {\n\tthis.parseHeader(stream);\n\tthis.content_encoding = stream.readCString();\n\tthis.mime_format = stream.readCString();\n\tthis.parseFooter(stream);\n});\n\n// file:src/parsing/sampleentries/tx3g.js\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_SUBTITLE, \"tx3g\", function(stream) {\n\tthis.parseHeader(stream);\n\tthis.displayFlags = stream.readUint32();\n\tthis.horizontal_justification = stream.readInt8();\n\tthis.vertical_justification = stream.readInt8();\n\tthis.bg_color_rgba = stream.readUint8Array(4);\n\tthis.box_record = stream.readInt16Array(4);\n\tthis.style_record = stream.readUint8Array(12);\n\tthis.parseFooter(stream);\n});\n// file:src/parsing/sampleentries/wvtt.js\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_METADATA, \"wvtt\", function(stream) {\n\tthis.parseHeader(stream);\n\tthis.parseFooter(stream);\n});\n\n// file:src/parsing/samplegroups/alst.js\nBoxParser.createSampleGroupCtor(\"alst\", function(stream) {\n\tvar i;\n\tvar roll_count = stream.readUint16();\n\tthis.first_output_sample = stream.readUint16();\n\tthis.sample_offset = [];\n\tfor (i = 0; i < roll_count; i++) {\n\t\tthis.sample_offset[i] = stream.readUint32();\n\t}\n\tvar remaining = this.description_length - 4 - 4*roll_count;\n\tthis.num_output_samples = [];\n\tthis.num_total_samples = [];\n\tfor (i = 0; i < remaining/4; i++) {\n\t\tthis.num_output_samples[i] = stream.readUint16();\n\t\tthis.num_total_samples[i] = stream.readUint16();\n\t}\n});\n\n// file:src/parsing/samplegroups/avll.js\nBoxParser.createSampleGroupCtor(\"avll\", function(stream) {\n\tthis.layerNumber = stream.readUint8();\n\tthis.accurateStatisticsFlag = stream.readUint8();\n\tthis.avgBitRate = stream.readUint16();\n\tthis.avgFrameRate = stream.readUint16();\n});\n\n// file:src/parsing/samplegroups/avss.js\nBoxParser.createSampleGroupCtor(\"avss\", function(stream) {\n\tthis.subSequenceIdentifier = stream.readUint16();\n\tthis.layerNumber = stream.readUint8();\n\tvar tmp_byte = stream.readUint8();\n\tthis.durationFlag = tmp_byte >> 7;\n\tthis.avgRateFlag = (tmp_byte >> 6) & 0x1;\n\tif (this.durationFlag) {\n\t\tthis.duration = stream.readUint32();\n\t}\n\tif (this.avgRateFlag) {\n\t\tthis.accurateStatisticsFlag = stream.readUint8();\n\t\tthis.avgBitRate = stream.readUint16();\n\t\tthis.avgFrameRate = stream.readUint16();\n\t}\n\tthis.dependency = [];\n\tvar numReferences = stream.readUint8();\n\tfor (var i = 0; i < numReferences; i++) {\n\t\tvar dependencyInfo = {};\n\t\tthis.dependency.push(dependencyInfo);\n\t\tdependencyInfo.subSeqDirectionFlag = stream.readUint8();\n\t\tdependencyInfo.layerNumber = stream.readUint8();\n\t\tdependencyInfo.subSequenceIdentifier = stream.readUint16();\n\t}\n});\n\n// file:src/parsing/samplegroups/dtrt.js\nBoxParser.createSampleGroupCtor(\"dtrt\", function(stream) {\n\tLog.warn(\"BoxParser\", \"Sample Group type: \"+this.grouping_type+\" not fully parsed\");\n});\n\n// file:src/parsing/samplegroups/mvif.js\nBoxParser.createSampleGroupCtor(\"mvif\", function(stream) {\n\tLog.warn(\"BoxParser\", \"Sample Group type: \"+this.grouping_type+\" not fully parsed\");\n});\n\n// file:src/parsing/samplegroups/prol.js\nBoxParser.createSampleGroupCtor(\"prol\", function(stream) {\n\tthis.roll_distance = stream.readInt16();\n});\n\n// file:src/parsing/samplegroups/rap.js\nBoxParser.createSampleGroupCtor(\"rap \", function(stream) {\n\tvar tmp_byte = stream.readUint8();\n\tthis.num_leading_samples_known = tmp_byte >> 7;\n\tthis.num_leading_samples = tmp_byte & 0x7F;\n});\n\n// file:src/parsing/samplegroups/rash.js\nBoxParser.createSampleGroupCtor(\"rash\", function(stream) {\n\tthis.operation_point_count = stream.readUint16();\n\tif (this.description_length !== 2+(this.operation_point_count === 1?2:this.operation_point_count*6)+9) {\n\t\tLog.warn(\"BoxParser\", \"Mismatch in \"+this.grouping_type+\" sample group length\");\n\t\tthis.data =  stream.readUint8Array(this.description_length-2);\n\t} else {\n\t\tif (this.operation_point_count === 1) {\n\t\t\tthis.target_rate_share = stream.readUint16();\n\t\t} else {\n\t\t\tthis.target_rate_share = [];\n\t\t\tthis.available_bitrate = [];\n\t\t\tfor (var i = 0; i < this.operation_point_count; i++) {\n\t\t\t\tthis.available_bitrate[i] = stream.readUint32();\n\t\t\t\tthis.target_rate_share[i] = stream.readUint16();\n\t\t\t}\n\t\t}\n\t\tthis.maximum_bitrate = stream.readUint32();\n\t\tthis.minimum_bitrate = stream.readUint32();\n\t\tthis.discard_priority = stream.readUint8();\n\t}\n});\n\n// file:src/parsing/samplegroups/roll.js\nBoxParser.createSampleGroupCtor(\"roll\", function(stream) {\n\tthis.roll_distance = stream.readInt16();\n});\n\n// file:src/parsing/samplegroups/samplegroup.js\nBoxParser.SampleGroupEntry.prototype.parse = function(stream) {\n\tLog.warn(\"BoxParser\", \"Unknown Sample Group type: \"+this.grouping_type);\n\tthis.data =  stream.readUint8Array(this.description_length);\n}\n\n// file:src/parsing/samplegroups/scif.js\nBoxParser.createSampleGroupCtor(\"scif\", function(stream) {\n\tLog.warn(\"BoxParser\", \"Sample Group type: \"+this.grouping_type+\" not fully parsed\");\n});\n\n// file:src/parsing/samplegroups/scnm.js\nBoxParser.createSampleGroupCtor(\"scnm\", function(stream) {\n\tLog.warn(\"BoxParser\", \"Sample Group type: \"+this.grouping_type+\" not fully parsed\");\n});\n\n// file:src/parsing/samplegroups/seig.js\nBoxParser.createSampleGroupCtor(\"seig\", function(stream) {\n\tthis.reserved = stream.readUint8();\n\tvar tmp = stream.readUint8();\n\tthis.crypt_byte_block = tmp >> 4;\n\tthis.skip_byte_block = tmp & 0xF;\n\tthis.isProtected = stream.readUint8();\n\tthis.Per_Sample_IV_Size = stream.readUint8();\n\tthis.KID = BoxParser.parseHex16(stream);\n\tthis.constant_IV_size = 0;\n\tthis.constant_IV = 0;\n\tif (this.isProtected === 1 && this.Per_Sample_IV_Size === 0) {\n\t\tthis.constant_IV_size = stream.readUint8();\n\t\tthis.constant_IV = stream.readUint8Array(this.constant_IV_size);\n\t}\n});\n\n// file:src/parsing/samplegroups/stsa.js\nBoxParser.createSampleGroupCtor(\"stsa\", function(stream) {\n\tLog.warn(\"BoxParser\", \"Sample Group type: \"+this.grouping_type+\" not fully parsed\");\n});\n\n// file:src/parsing/samplegroups/sync.js\nBoxParser.createSampleGroupCtor(\"sync\", function(stream) {\n\tvar tmp_byte = stream.readUint8();\n\tthis.NAL_unit_type = tmp_byte & 0x3F;\n});\n\n// file:src/parsing/samplegroups/tele.js\nBoxParser.createSampleGroupCtor(\"tele\", function(stream) {\n\tvar tmp_byte = stream.readUint8();\n\tthis.level_independently_decodable = tmp_byte >> 7;\n});\n\n// file:src/parsing/samplegroups/tsas.js\nBoxParser.createSampleGroupCtor(\"tsas\", function(stream) {\n\tLog.warn(\"BoxParser\", \"Sample Group type: \"+this.grouping_type+\" not fully parsed\");\n});\n\n// file:src/parsing/samplegroups/tscl.js\nBoxParser.createSampleGroupCtor(\"tscl\", function(stream) {\n\tLog.warn(\"BoxParser\", \"Sample Group type: \"+this.grouping_type+\" not fully parsed\");\n});\n\n// file:src/parsing/samplegroups/vipr.js\nBoxParser.createSampleGroupCtor(\"vipr\", function(stream) {\n\tLog.warn(\"BoxParser\", \"Sample Group type: \"+this.grouping_type+\" not fully parsed\");\n});\n\n// file:src/parsing/sbgp.js\nBoxParser.createFullBoxCtor(\"sbgp\", function(stream) {\n\tthis.grouping_type = stream.readString(4);\n\tif (this.version === 1) {\n\t\tthis.grouping_type_parameter = stream.readUint32();\n\t} else {\n\t\tthis.grouping_type_parameter = 0;\n\t}\n\tthis.entries = [];\n\tvar entry_count = stream.readUint32();\n\tfor (var i = 0; i < entry_count; i++) {\n\t\tvar entry = {};\n\t\tthis.entries.push(entry);\n\t\tentry.sample_count = stream.readInt32();\n\t\tentry.group_description_index = stream.readInt32();\n\t}\n});\n\n// file:src/parsing/schm.js\nBoxParser.createFullBoxCtor(\"schm\", function(stream) {\n\tthis.scheme_type = stream.readString(4);\n\tthis.scheme_version = stream.readUint32();\n\tif (this.flags & 0x000001) {\n\t\tthis.scheme_uri = stream.readString(this.size - this.hdr_size - 8);\n\t}\n});\n\n// file:src/parsing/sdp.js\nBoxParser.createBoxCtor(\"sdp \", function(stream) {\n\tthis.sdptext = stream.readString(this.size - this.hdr_size);\n});\n\n// file:src/parsing/sdtp.js\nBoxParser.createFullBoxCtor(\"sdtp\", function(stream) {\n\tvar tmp_byte;\n\tvar count = (this.size - this.hdr_size);\n\tthis.is_leading = [];\n\tthis.sample_depends_on = [];\n\tthis.sample_is_depended_on = [];\n\tthis.sample_has_redundancy = [];\n\tfor (var i = 0; i < count; i++) {\n\t\ttmp_byte = stream.readUint8();\n\t\tthis.is_leading[i] = tmp_byte >> 6;\n\t\tthis.sample_depends_on[i] = (tmp_byte >> 4) & 0x3;\n\t\tthis.sample_is_depended_on[i] = (tmp_byte >> 2) & 0x3;\n\t\tthis.sample_has_redundancy[i] = tmp_byte & 0x3;\n\t}\n});\n\n// file:src/parsing/senc.js\n// Cannot be fully parsed because Per_Sample_IV_Size needs to be known\r\nBoxParser.createFullBoxCtor(\"senc\" /*, function(stream) {\r\n\tthis.parseFullHeader(stream);\r\n\tvar sample_count = stream.readUint32();\r\n\tthis.samples = [];\r\n\tfor (var i = 0; i < sample_count; i++) {\r\n\t\tvar sample = {};\r\n\t\t// tenc.default_Per_Sample_IV_Size or seig.Per_Sample_IV_Size\r\n\t\tsample.InitializationVector = this.readUint8Array(Per_Sample_IV_Size*8);\r\n\t\tif (this.flags & 0x2) {\r\n\t\t\tsample.subsamples = [];\r\n\t\t\tsubsample_count = stream.readUint16();\r\n\t\t\tfor (var j = 0; j < subsample_count; j++) {\r\n\t\t\t\tvar subsample = {};\r\n\t\t\t\tsubsample.BytesOfClearData = stream.readUint16();\r\n\t\t\t\tsubsample.BytesOfProtectedData = stream.readUint32();\r\n\t\t\t\tsample.subsamples.push(subsample);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// TODO\r\n\t\tthis.samples.push(sample);\r\n\t}\r\n}*/);\r\n// file:src/parsing/sgpd.js\nBoxParser.createFullBoxCtor(\"sgpd\", function(stream) {\n\tthis.grouping_type = stream.readString(4);\n\tLog.debug(\"BoxParser\", \"Found Sample Groups of type \"+this.grouping_type);\n\tif (this.version === 1) {\n\t\tthis.default_length = stream.readUint32();\n\t} else {\n\t\tthis.default_length = 0;\n\t}\n\tif (this.version >= 2) {\n\t\tthis.default_group_description_index = stream.readUint32();\n\t}\n\tthis.entries = [];\n\tvar entry_count = stream.readUint32();\n\tfor (var i = 0; i < entry_count; i++) {\n\t\tvar entry;\n\t\tif (BoxParser[this.grouping_type+\"SampleGroupEntry\"]) {\n\t\t\tentry = new BoxParser[this.grouping_type+\"SampleGroupEntry\"](this.grouping_type);\n\t\t}  else {\n\t\t\tentry = new BoxParser.SampleGroupEntry(this.grouping_type);\n\t\t}\n\t\tthis.entries.push(entry);\n\t\tif (this.version === 1) {\n\t\t\tif (this.default_length === 0) {\n\t\t\t\tentry.description_length = stream.readUint32();\n\t\t\t} else {\n\t\t\t\tentry.description_length = this.default_length;\n\t\t\t}\n\t\t} else {\n\t\t\tentry.description_length = this.default_length;\n\t\t}\n\t\tif (entry.write === BoxParser.SampleGroupEntry.prototype.write) {\n\t\t\tLog.info(\"BoxParser\", \"SampleGroup for type \"+this.grouping_type+\" writing not yet implemented, keeping unparsed data in memory for later write\");\n\t\t\t// storing data\n\t\t\tentry.data = stream.readUint8Array(entry.description_length);\n\t\t\t// rewinding\n\t\t\tstream.position -= entry.description_length;\n\t\t}\n\t\tentry.parse(stream);\n\t}\n});\n\n// file:src/parsing/sidx.js\nBoxParser.createFullBoxCtor(\"sidx\", function(stream) {\n\tthis.reference_ID = stream.readUint32();\n\tthis.timescale = stream.readUint32();\n\tif (this.version === 0) {\n\t\tthis.earliest_presentation_time = stream.readUint32();\n\t\tthis.first_offset = stream.readUint32();\n\t} else {\n\t\tthis.earliest_presentation_time = stream.readUint64();\n\t\tthis.first_offset = stream.readUint64();\n\t}\n\tstream.readUint16();\n\tthis.references = [];\n\tvar count = stream.readUint16();\n\tfor (var i = 0; i < count; i++) {\n\t\tvar ref = {};\n\t\tthis.references.push(ref);\n\t\tvar tmp_32 = stream.readUint32();\n\t\tref.reference_type = (tmp_32 >> 31) & 0x1;\n\t\tref.referenced_size = tmp_32 & 0x7FFFFFFF;\n\t\tref.subsegment_duration = stream.readUint32();\n\t\ttmp_32 = stream.readUint32();\n\t\tref.starts_with_SAP = (tmp_32 >> 31) & 0x1;\n\t\tref.SAP_type = (tmp_32 >> 28) & 0x7;\n\t\tref.SAP_delta_time = tmp_32 & 0xFFFFFFF;\n\t}\n});\n\n// file:src/parsing/singleitemtypereference.js\nBoxParser.SingleItemTypeReferenceBox = function(type, size, hdr_size, start) {\n\tBoxParser.Box.call(this, type, size);\n\tthis.hdr_size = hdr_size;\n\tthis.start = start;\n}\nBoxParser.SingleItemTypeReferenceBox.prototype = new BoxParser.Box();\nBoxParser.SingleItemTypeReferenceBox.prototype.parse = function(stream) {\n\tthis.from_item_ID = stream.readUint16();\n\tvar count =  stream.readUint16();\n\tthis.references = [];\n\tfor(var i = 0; i < count; i++) {\n\t\tthis.references[i] = stream.readUint16();\n\t}\n}\n\n// file:src/parsing/singleitemtypereferencelarge.js\nBoxParser.SingleItemTypeReferenceBoxLarge = function(type, size, hdr_size, start) {\n\tBoxParser.Box.call(this, type, size);\n\tthis.hdr_size = hdr_size;\n\tthis.start = start;\n}\nBoxParser.SingleItemTypeReferenceBoxLarge.prototype = new BoxParser.Box();\nBoxParser.SingleItemTypeReferenceBoxLarge.prototype.parse = function(stream) {\n\tthis.from_item_ID = stream.readUint32();\n\tvar count =  stream.readUint16();\n\tthis.references = [];\n\tfor(var i = 0; i < count; i++) {\n\t\tthis.references[i] = stream.readUint32();\n\t}\n}\n\n// file:src/parsing/SmDm.js\nBoxParser.createFullBoxCtor(\"SmDm\", function(stream) {\n\tthis.primaryRChromaticity_x = stream.readUint16();\n    this.primaryRChromaticity_y = stream.readUint16();\n    this.primaryGChromaticity_x = stream.readUint16();\n    this.primaryGChromaticity_y = stream.readUint16();\n    this.primaryBChromaticity_x = stream.readUint16();\n    this.primaryBChromaticity_y = stream.readUint16();\n    this.whitePointChromaticity_x = stream.readUint16();\n    this.whitePointChromaticity_y = stream.readUint16();\n    this.luminanceMax = stream.readUint32();\n    this.luminanceMin = stream.readUint32();\n});\n\n// file:src/parsing/smhd.js\nBoxParser.createFullBoxCtor(\"smhd\", function(stream) {\n\tthis.balance = stream.readUint16();\n\tstream.readUint16();\n});\n\n// file:src/parsing/ssix.js\nBoxParser.createFullBoxCtor(\"ssix\", function(stream) {\n\tthis.subsegments = [];\n\tvar subsegment_count = stream.readUint32();\n\tfor (var i = 0; i < subsegment_count; i++) {\n\t\tvar subsegment = {};\n\t\tthis.subsegments.push(subsegment);\n\t\tsubsegment.ranges = [];\n\t\tvar range_count = stream.readUint32();\n\t\tfor (var j = 0; j < range_count; j++) {\n\t\t\tvar range = {};\n\t\t\tsubsegment.ranges.push(range);\n\t\t\trange.level = stream.readUint8();\n\t\t\trange.range_size = stream.readUint24();\n\t\t}\n\t}\n});\n\n// file:src/parsing/stco.js\nBoxParser.createFullBoxCtor(\"stco\", function(stream) {\n\tvar entry_count;\n\tentry_count = stream.readUint32();\n\tthis.chunk_offsets = [];\n\tif (this.version === 0) {\n\t\tfor (var i = 0; i < entry_count; i++) {\n\t\t\tthis.chunk_offsets.push(stream.readUint32());\n\t\t}\n\t}\n});\n\n// file:src/parsing/stdp.js\nBoxParser.createFullBoxCtor(\"stdp\", function(stream) {\n\tvar count = (this.size - this.hdr_size)/2;\n\tthis.priority = [];\n\tfor (var i = 0; i < count; i++) {\n\t\tthis.priority[i] = stream.readUint16();\n\t}\n});\n\n// file:src/parsing/sthd.js\nBoxParser.createFullBoxCtor(\"sthd\");\n\n// file:src/parsing/stri.js\nBoxParser.createFullBoxCtor(\"stri\", function(stream) {\n\tthis.switch_group = stream.readUint16();\n\tthis.alternate_group = stream.readUint16();\n\tthis.sub_track_id = stream.readUint32();\n\tvar count = (this.size - this.hdr_size - 8)/4;\n\tthis.attribute_list = [];\n\tfor (var i = 0; i < count; i++) {\n\t\tthis.attribute_list[i] = stream.readUint32();\n\t}\n});\n\n// file:src/parsing/stsc.js\nBoxParser.createFullBoxCtor(\"stsc\", function(stream) {\n\tvar entry_count;\n\tvar i;\n\tentry_count = stream.readUint32();\n\tthis.first_chunk = [];\n\tthis.samples_per_chunk = [];\n\tthis.sample_description_index = [];\n\tif (this.version === 0) {\n\t\tfor(i=0; i<entry_count; i++) {\n\t\t\tthis.first_chunk.push(stream.readUint32());\n\t\t\tthis.samples_per_chunk.push(stream.readUint32());\n\t\t\tthis.sample_description_index.push(stream.readUint32());\n\t\t}\n\t}\n});\n\n// file:src/parsing/stsd.js\nBoxParser.createFullBoxCtor(\"stsd\", function(stream) {\n\tvar i;\n\tvar ret;\n\tvar entryCount;\n\tvar box;\n\tthis.entries = [];\n\tentryCount = stream.readUint32();\n\tfor (i = 1; i <= entryCount; i++) {\n\t\tret = BoxParser.parseOneBox(stream, true, this.size - (stream.getPosition() - this.start));\n\t\tif (ret.code === BoxParser.OK) {\n\t\t\tif (BoxParser[ret.type+\"SampleEntry\"]) {\n\t\t\t\tbox = new BoxParser[ret.type+\"SampleEntry\"](ret.size);\n\t\t\t\tbox.hdr_size = ret.hdr_size;\n\t\t\t\tbox.start = ret.start;\n\t\t\t} else {\n\t\t\t\tLog.warn(\"BoxParser\", \"Unknown sample entry type: \"+ret.type);\n\t\t\t\tbox = new BoxParser.SampleEntry(ret.type, ret.size, ret.hdr_size, ret.start);\n\t\t\t}\n\t\t\tif (box.write === BoxParser.SampleEntry.prototype.write) {\n\t\t\t\tLog.info(\"BoxParser\", \"SampleEntry \"+box.type+\" box writing not yet implemented, keeping unparsed data in memory for later write\");\n\t\t\t\tbox.parseDataAndRewind(stream);\n\t\t\t}\n\t\t\tbox.parse(stream);\n\t\t\tthis.entries.push(box);\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n});\n\n// file:src/parsing/stsg.js\nBoxParser.createFullBoxCtor(\"stsg\", function(stream) {\n\tthis.grouping_type = stream.readUint32();\n\tvar count = stream.readUint16();\n\tthis.group_description_index = [];\n\tfor (var i = 0; i < count; i++) {\n\t\tthis.group_description_index[i] = stream.readUint32();\n\t}\n});\n\n// file:src/parsing/stsh.js\nBoxParser.createFullBoxCtor(\"stsh\", function(stream) {\n\tvar entry_count;\n\tvar i;\n\tentry_count = stream.readUint32();\n\tthis.shadowed_sample_numbers = [];\n\tthis.sync_sample_numbers = [];\n\tif (this.version === 0) {\n\t\tfor(i=0; i<entry_count; i++) {\n\t\t\tthis.shadowed_sample_numbers.push(stream.readUint32());\n\t\t\tthis.sync_sample_numbers.push(stream.readUint32());\n\t\t}\n\t}\n});\n\n// file:src/parsing/stss.js\nBoxParser.createFullBoxCtor(\"stss\", function(stream) {\n\tvar i;\n\tvar entry_count;\n\tentry_count = stream.readUint32();\n\tif (this.version === 0) {\n\t\tthis.sample_numbers = [];\n\t\tfor(i=0; i<entry_count; i++) {\n\t\t\tthis.sample_numbers.push(stream.readUint32());\n\t\t}\n\t}\n});\n\n// file:src/parsing/stsz.js\nBoxParser.createFullBoxCtor(\"stsz\", function(stream) {\n\tvar i;\n\tthis.sample_sizes = [];\n\tif (this.version === 0) {\n\t\tthis.sample_size = stream.readUint32();\n\t\tthis.sample_count = stream.readUint32();\n\t\tfor (i = 0; i < this.sample_count; i++) {\n\t\t\tif (this.sample_size === 0) {\n\t\t\t\tthis.sample_sizes.push(stream.readUint32());\n\t\t\t} else {\n\t\t\t\tthis.sample_sizes[i] = this.sample_size;\n\t\t\t}\n\t\t}\n\t}\n});\n\n// file:src/parsing/stts.js\nBoxParser.createFullBoxCtor(\"stts\", function(stream) {\n\tvar entry_count;\n\tvar i;\n\tvar delta;\n\tentry_count = stream.readUint32();\n\tthis.sample_counts = [];\n\tthis.sample_deltas = [];\n\tif (this.version === 0) {\n\t\tfor(i=0; i<entry_count; i++) {\n\t\t\tthis.sample_counts.push(stream.readUint32());\n\t\t\tdelta = stream.readInt32();\n\t\t\tif (delta < 0) {\n\t\t\t\tLog.warn(\"BoxParser\", \"File uses negative stts sample delta, using value 1 instead, sync may be lost!\");\n\t\t\t\tdelta = 1;\n\t\t\t}\n\t\t\tthis.sample_deltas.push(delta);\n\t\t}\n\t}\n});\n\n// file:src/parsing/stvi.js\nBoxParser.createFullBoxCtor(\"stvi\", function(stream) {\n\tvar tmp32 = stream.readUint32();\n\tthis.single_view_allowed = tmp32 & 0x3;\n\tthis.stereo_scheme = stream.readUint32();\n\tvar length = stream.readUint32();\n\tthis.stereo_indication_type = stream.readString(length);\n\tvar ret;\n\tvar box;\n\tthis.boxes = [];\n\twhile (stream.getPosition() < this.start+this.size) {\n\t\tret = BoxParser.parseOneBox(stream, false, this.size - (stream.getPosition() - this.start));\n\t\tif (ret.code === BoxParser.OK) {\n\t\t\tbox = ret.box;\n\t\t\tthis.boxes.push(box);\n\t\t\tthis[box.type] = box;\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n});\n\n// file:src/parsing/styp.js\nBoxParser.createBoxCtor(\"styp\", function(stream) {\n\tBoxParser.ftypBox.prototype.parse.call(this, stream);\n});\n\n// file:src/parsing/stz2.js\nBoxParser.createFullBoxCtor(\"stz2\", function(stream) {\n\tvar i;\n\tvar sample_size;\n\tvar sample_count;\n\tthis.sample_sizes = [];\n\tif (this.version === 0) {\n\t\tthis.reserved = stream.readUint24();\n\t\tthis.field_size = stream.readUint8();\n\t\tsample_count = stream.readUint32();\n\t\tif (this.field_size === 4) {\n\t\t\tfor (i = 0; i < sample_count; i+=2) {\n\t\t\t\tvar tmp = stream.readUint8();\n\t\t\t\tthis.sample_sizes[i] = (tmp >> 4) & 0xF;\n\t\t\t\tthis.sample_sizes[i+1] = tmp & 0xF;\n\t\t\t}\n\t\t} else if (this.field_size === 8) {\n\t\t\tfor (i = 0; i < sample_count; i++) {\n\t\t\t\tthis.sample_sizes[i] = stream.readUint8();\n\t\t\t}\n\t\t} else if (this.field_size === 16) {\n\t\t\tfor (i = 0; i < sample_count; i++) {\n\t\t\t\tthis.sample_sizes[i] = stream.readUint16();\n\t\t\t}\n\t\t} else {\n\t\t\tLog.error(\"BoxParser\", \"Error in length field in stz2 box\");\n\t\t}\n\t}\n});\n\n// file:src/parsing/subs.js\nBoxParser.createFullBoxCtor(\"subs\", function(stream) {\n\tvar i,j;\n\tvar entry_count;\n\tvar subsample_count;\n\tentry_count = stream.readUint32();\n\tthis.entries = [];\n\tfor (i = 0; i < entry_count; i++) {\n\t\tvar sampleInfo = {};\n\t\tthis.entries[i] = sampleInfo;\n\t\tsampleInfo.sample_delta = stream.readUint32();\n\t\tsampleInfo.subsamples = [];\n\t\tsubsample_count = stream.readUint16();\n\t\tif (subsample_count>0) {\n\t\t\tfor (j = 0; j < subsample_count; j++) {\n\t\t\t\tvar subsample = {};\n\t\t\t\tsampleInfo.subsamples.push(subsample);\n\t\t\t\tif (this.version == 1) {\n\t\t\t\t\tsubsample.size = stream.readUint32();\n\t\t\t\t} else {\n\t\t\t\t\tsubsample.size = stream.readUint16();\n\t\t\t\t}\n\t\t\t\tsubsample.priority = stream.readUint8();\n\t\t\t\tsubsample.discardable = stream.readUint8();\n\t\t\t\tsubsample.codec_specific_parameters = stream.readUint32();\n\t\t\t}\n\t\t}\n\t}\n});\n\n// file:src/parsing/tenc.js\nBoxParser.createFullBoxCtor(\"tenc\", function(stream) {\n\tstream.readUint8(); // reserved\n\tif (this.version === 0) {\n\t\tstream.readUint8();\n\t} else {\n\t\tvar tmp = stream.readUint8();\n\t\tthis.default_crypt_byte_block = (tmp >> 4) & 0xF;\n\t\tthis.default_skip_byte_block = tmp & 0xF;\n\t}\n\tthis.default_isProtected = stream.readUint8();\n\tthis.default_Per_Sample_IV_Size = stream.readUint8();\n\tthis.default_KID = BoxParser.parseHex16(stream);\n\tif (this.default_isProtected === 1 && this.default_Per_Sample_IV_Size === 0) {\n\t\tthis.default_constant_IV_size = stream.readUint8();\n\t\tthis.default_constant_IV = stream.readUint8Array(this.default_constant_IV_size);\n\t}\n});// file:src/parsing/tfdt.js\nBoxParser.createFullBoxCtor(\"tfdt\", function(stream) {\n\tif (this.version == 1) {\n\t\tthis.baseMediaDecodeTime = stream.readUint64();\n\t} else {\n\t\tthis.baseMediaDecodeTime = stream.readUint32();\n\t}\n});\n\n// file:src/parsing/tfhd.js\nBoxParser.createFullBoxCtor(\"tfhd\", function(stream) {\n\tvar readBytes = 0;\n\tthis.track_id = stream.readUint32();\n\tif (this.size - this.hdr_size > readBytes && (this.flags & BoxParser.TFHD_FLAG_BASE_DATA_OFFSET)) {\n\t\tthis.base_data_offset = stream.readUint64();\n\t\treadBytes += 8;\n\t} else {\n\t\tthis.base_data_offset = 0;\n\t}\n\tif (this.size - this.hdr_size > readBytes && (this.flags & BoxParser.TFHD_FLAG_SAMPLE_DESC)) {\n\t\tthis.default_sample_description_index = stream.readUint32();\n\t\treadBytes += 4;\n\t} else {\n\t\tthis.default_sample_description_index = 0;\n\t}\n\tif (this.size - this.hdr_size > readBytes && (this.flags & BoxParser.TFHD_FLAG_SAMPLE_DUR)) {\n\t\tthis.default_sample_duration = stream.readUint32();\n\t\treadBytes += 4;\n\t} else {\n\t\tthis.default_sample_duration = 0;\n\t}\n\tif (this.size - this.hdr_size > readBytes && (this.flags & BoxParser.TFHD_FLAG_SAMPLE_SIZE)) {\n\t\tthis.default_sample_size = stream.readUint32();\n\t\treadBytes += 4;\n\t} else {\n\t\tthis.default_sample_size = 0;\n\t}\n\tif (this.size - this.hdr_size > readBytes && (this.flags & BoxParser.TFHD_FLAG_SAMPLE_FLAGS)) {\n\t\tthis.default_sample_flags = stream.readUint32();\n\t\treadBytes += 4;\n\t} else {\n\t\tthis.default_sample_flags = 0;\n\t}\n});\n\n// file:src/parsing/tfra.js\nBoxParser.createFullBoxCtor(\"tfra\", function(stream) {\n\tthis.track_ID = stream.readUint32();\n\tstream.readUint24();\n\tvar tmp_byte = stream.readUint8();\n\tthis.length_size_of_traf_num = (tmp_byte >> 4) & 0x3;\n\tthis.length_size_of_trun_num = (tmp_byte >> 2) & 0x3;\n\tthis.length_size_of_sample_num = (tmp_byte) & 0x3;\n\tthis.entries = [];\n\tvar number_of_entries = stream.readUint32();\n\tfor (var i = 0; i < number_of_entries; i++) {\n\t\tif (this.version === 1) {\n\t\t\tthis.time = stream.readUint64();\n\t\t\tthis.moof_offset = stream.readUint64();\n\t\t} else {\n\t\t\tthis.time = stream.readUint32();\n\t\t\tthis.moof_offset = stream.readUint32();\n\t\t}\n\t\tthis.traf_number = stream[\"readUint\"+(8*(this.length_size_of_traf_num+1))]();\n\t\tthis.trun_number = stream[\"readUint\"+(8*(this.length_size_of_trun_num+1))]();\n\t\tthis.sample_number = stream[\"readUint\"+(8*(this.length_size_of_sample_num+1))]();\n\t}\n});\n\n// file:src/parsing/tkhd.js\nBoxParser.createFullBoxCtor(\"tkhd\", function(stream) {\n\tif (this.version == 1) {\n\t\tthis.creation_time = stream.readUint64();\n\t\tthis.modification_time = stream.readUint64();\n\t\tthis.track_id = stream.readUint32();\n\t\tstream.readUint32();\n\t\tthis.duration = stream.readUint64();\n\t} else {\n\t\tthis.creation_time = stream.readUint32();\n\t\tthis.modification_time = stream.readUint32();\n\t\tthis.track_id = stream.readUint32();\n\t\tstream.readUint32();\n\t\tthis.duration = stream.readUint32();\n\t}\n\tstream.readUint32Array(2);\n\tthis.layer = stream.readInt16();\n\tthis.alternate_group = stream.readInt16();\n\tthis.volume = stream.readInt16()>>8;\n\tstream.readUint16();\n\tthis.matrix = stream.readInt32Array(9);\n\tthis.width = stream.readUint32();\n\tthis.height = stream.readUint32();\n});\n\n// file:src/parsing/tmax.js\nBoxParser.createBoxCtor(\"tmax\", function(stream) {\n\tthis.time = stream.readUint32();\n});\n\n// file:src/parsing/tmin.js\nBoxParser.createBoxCtor(\"tmin\", function(stream) {\n\tthis.time = stream.readUint32();\n});\n\n// file:src/parsing/totl.js\nBoxParser.createBoxCtor(\"totl\",function(stream) {\n\tthis.bytessent = stream.readUint32();\n});\n\n// file:src/parsing/tpay.js\nBoxParser.createBoxCtor(\"tpay\", function(stream) {\n\tthis.bytessent = stream.readUint32();\n});\n\n// file:src/parsing/tpyl.js\nBoxParser.createBoxCtor(\"tpyl\", function(stream) {\n\tthis.bytessent = stream.readUint64();\n});\n\n// file:src/parsing/TrackGroup.js\nBoxParser.TrackGroupTypeBox.prototype.parse = function(stream) {\n\tthis.parseFullHeader(stream);\n\tthis.track_group_id = stream.readUint32();\n}\n\n// file:src/parsing/trackgroups/msrc.js\nBoxParser.createTrackGroupCtor(\"msrc\");// file:src/parsing/TrakReference.js\nBoxParser.TrackReferenceTypeBox = function(type, size, hdr_size, start) {\n\tBoxParser.Box.call(this, type, size);\n\tthis.hdr_size = hdr_size;\n\tthis.start = start;\n}\nBoxParser.TrackReferenceTypeBox.prototype = new BoxParser.Box();\nBoxParser.TrackReferenceTypeBox.prototype.parse = function(stream) {\n\tthis.track_ids = stream.readUint32Array((this.size-this.hdr_size)/4);\n}\n\n// file:src/parsing/tref.js\nBoxParser.trefBox.prototype.parse = function(stream) {\n\tvar ret;\n\tvar box;\n\twhile (stream.getPosition() < this.start+this.size) {\n\t\tret = BoxParser.parseOneBox(stream, true, this.size - (stream.getPosition() - this.start));\n\t\tif (ret.code === BoxParser.OK) {\n\t\t\tbox = new BoxParser.TrackReferenceTypeBox(ret.type, ret.size, ret.hdr_size, ret.start);\n\t\t\tif (box.write === BoxParser.Box.prototype.write && box.type !== \"mdat\") {\n\t\t\t\tLog.info(\"BoxParser\", \"TrackReference \"+box.type+\" box writing not yet implemented, keeping unparsed data in memory for later write\");\n\t\t\t\tbox.parseDataAndRewind(stream);\n\t\t\t}\n\t\t\tbox.parse(stream);\n\t\t\tthis.boxes.push(box);\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n}\n\n// file:src/parsing/trep.js\nBoxParser.createFullBoxCtor(\"trep\", function(stream) {\n\tthis.track_ID = stream.readUint32();\n\tthis.boxes = [];\n\twhile (stream.getPosition() < this.start+this.size) {\n\t\tret = BoxParser.parseOneBox(stream, false, this.size - (stream.getPosition() - this.start));\n\t\tif (ret.code === BoxParser.OK) {\n\t\t\tbox = ret.box;\n\t\t\tthis.boxes.push(box);\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n});\n\n// file:src/parsing/trex.js\nBoxParser.createFullBoxCtor(\"trex\", function(stream) {\n\tthis.track_id = stream.readUint32();\n\tthis.default_sample_description_index = stream.readUint32();\n\tthis.default_sample_duration = stream.readUint32();\n\tthis.default_sample_size = stream.readUint32();\n\tthis.default_sample_flags = stream.readUint32();\n});\n\n// file:src/parsing/trpy.js\nBoxParser.createBoxCtor(\"trpy\", function(stream) {\n\tthis.bytessent = stream.readUint64();\n});\n\n// file:src/parsing/trun.js\nBoxParser.createFullBoxCtor(\"trun\", function(stream) {\n\tvar readBytes = 0;\n\tthis.sample_count = stream.readUint32();\n\treadBytes+= 4;\n\tif (this.size - this.hdr_size > readBytes && (this.flags & BoxParser.TRUN_FLAGS_DATA_OFFSET) ) {\n\t\tthis.data_offset = stream.readInt32(); //signed\n\t\treadBytes += 4;\n\t} else {\n\t\tthis.data_offset = 0;\n\t}\n\tif (this.size - this.hdr_size > readBytes && (this.flags & BoxParser.TRUN_FLAGS_FIRST_FLAG) ) {\n\t\tthis.first_sample_flags = stream.readUint32();\n\t\treadBytes += 4;\n\t} else {\n\t\tthis.first_sample_flags = 0;\n\t}\n\tthis.sample_duration = [];\n\tthis.sample_size = [];\n\tthis.sample_flags = [];\n\tthis.sample_composition_time_offset = [];\n\tif (this.size - this.hdr_size > readBytes) {\n\t\tfor (var i = 0; i < this.sample_count; i++) {\n\t\t\tif (this.flags & BoxParser.TRUN_FLAGS_DURATION) {\n\t\t\t\tthis.sample_duration[i] = stream.readUint32();\n\t\t\t}\n\t\t\tif (this.flags & BoxParser.TRUN_FLAGS_SIZE) {\n\t\t\t\tthis.sample_size[i] = stream.readUint32();\n\t\t\t}\n\t\t\tif (this.flags & BoxParser.TRUN_FLAGS_FLAGS) {\n\t\t\t\tthis.sample_flags[i] = stream.readUint32();\n\t\t\t}\n\t\t\tif (this.flags & BoxParser.TRUN_FLAGS_CTS_OFFSET) {\n\t\t\t\tif (this.version === 0) {\n\t\t\t\t\tthis.sample_composition_time_offset[i] = stream.readUint32();\n\t\t\t\t} else {\n\t\t\t\t\tthis.sample_composition_time_offset[i] = stream.readInt32(); //signed\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n});\n\n// file:src/parsing/tsel.js\nBoxParser.createFullBoxCtor(\"tsel\", function(stream) {\n\tthis.switch_group = stream.readUint32();\n\tvar count = (this.size - this.hdr_size - 4)/4;\n\tthis.attribute_list = [];\n\tfor (var i = 0; i < count; i++) {\n\t\tthis.attribute_list[i] = stream.readUint32();\n\t}\n});\n\n// file:src/parsing/txtC.js\nBoxParser.createFullBoxCtor(\"txtC\", function(stream) {\n\tthis.config = stream.readCString();\n});\n\n// file:src/parsing/url.js\nBoxParser.createFullBoxCtor(\"url \", function(stream) {\n\tif (this.flags !== 0x000001) {\n\t\tthis.location = stream.readCString();\n\t}\n});\n\n// file:src/parsing/urn.js\nBoxParser.createFullBoxCtor(\"urn \", function(stream) {\n\tthis.name = stream.readCString();\n\tif (this.size - this.hdr_size - this.name.length - 1 > 0) {\n\t\tthis.location = stream.readCString();\n\t}\n});\n\n// file:src/parsing/uuid/piff/piffLsm.js\nBoxParser.createUUIDBox(\"a5d40b30e81411ddba2f0800200c9a66\", true, false, function(stream) {\n    this.LiveServerManifest = stream.readString(this.size - this.hdr_size)\n        .replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n        .replace(/\"/g, \"&quot;\")\n        .replace(/'/g, \"&#039;\");\n});// file:src/parsing/uuid/piff/piffPssh.js\nBoxParser.createUUIDBox(\"d08a4f1810f34a82b6c832d8aba183d3\", true, false, function(stream) {\n\tthis.system_id = BoxParser.parseHex16(stream);\n\tvar datasize = stream.readUint32();\n\tif (datasize > 0) {\n\t\tthis.data = stream.readUint8Array(datasize);\n\t}\n});\n\n// file:src/parsing/uuid/piff/piffSenc.js\nBoxParser.createUUIDBox(\"a2394f525a9b4f14a2446c427c648df4\", true, false /*, function(stream) {\n\tif (this.flags & 0x1) {\n\t\tthis.AlgorithmID = stream.readUint24();\n\t\tthis.IV_size = stream.readUint8();\n\t\tthis.KID = BoxParser.parseHex16(stream);\n\t}\n\tvar sample_count = stream.readUint32();\n\tthis.samples = [];\n\tfor (var i = 0; i < sample_count; i++) {\n\t\tvar sample = {};\n\t\tsample.InitializationVector = this.readUint8Array(this.IV_size*8);\n\t\tif (this.flags & 0x2) {\n\t\t\tsample.subsamples = [];\n\t\t\tsample.NumberOfEntries = stream.readUint16();\n\t\t\tfor (var j = 0; j < sample.NumberOfEntries; j++) {\n\t\t\t\tvar subsample = {};\n\t\t\t\tsubsample.BytesOfClearData = stream.readUint16();\n\t\t\t\tsubsample.BytesOfProtectedData = stream.readUint32();\n\t\t\t\tsample.subsamples.push(subsample);\n\t\t\t}\n\t\t}\n\t\tthis.samples.push(sample);\n\t}\n}*/);\n// file:src/parsing/uuid/piff/piffTenc.js\nBoxParser.createUUIDBox(\"8974dbce7be74c5184f97148f9882554\", true, false, function(stream) {\n\tthis.default_AlgorithmID = stream.readUint24();\n\tthis.default_IV_size = stream.readUint8();\n\tthis.default_KID = BoxParser.parseHex16(stream);\n});// file:src/parsing/uuid/piff/piffTfrf.js\nBoxParser.createUUIDBox(\"d4807ef2ca3946958e5426cb9e46a79f\", true, false, function(stream) {\n    this.fragment_count = stream.readUint8();\n    this.entries = [];\n\n    for (var i = 0; i < this.fragment_count; i++) {\n        var entry = {};\n        var absolute_time = 0;\n        var absolute_duration = 0;\n\n        if (this.version === 1) {\n            absolute_time = stream.readUint64();\n            absolute_duration = stream.readUint64();\n        } else {\n            absolute_time = stream.readUint32();\n            absolute_duration = stream.readUint32();\n        }\n\n        entry.absolute_time = absolute_time;\n        entry.absolute_duration = absolute_duration;\n\n        this.entries.push(entry);\n    }\n});// file:src/parsing/uuid/piff/piffTfxd.js\nBoxParser.createUUIDBox(\"6d1d9b0542d544e680e2141daff757b2\", true, false, function(stream) {\n    if (this.version === 1) {\n       this.absolute_time = stream.readUint64();\n       this.duration = stream.readUint64();\n    } else {\n       this.absolute_time = stream.readUint32();\n       this.duration = stream.readUint32();\n    }\n});// file:src/parsing/vmhd.js\nBoxParser.createFullBoxCtor(\"vmhd\", function(stream) {\n\tthis.graphicsmode = stream.readUint16();\n\tthis.opcolor = stream.readUint16Array(3);\n});\n\n// file:src/parsing/vpcC.js\nBoxParser.createFullBoxCtor(\"vpcC\", function (stream) {\n\tvar tmp;\n\tif (this.version === 1) {\n\t\tthis.profile = stream.readUint8();\n\t\tthis.level = stream.readUint8();\n\t\ttmp = stream.readUint8();\n\t\tthis.bitDepth = tmp >> 4;\n\t\tthis.chromaSubsampling = (tmp >> 1) & 0x7;\n\t\tthis.videoFullRangeFlag = tmp & 0x1;\n\t\tthis.colourPrimaries = stream.readUint8();\n\t\tthis.transferCharacteristics = stream.readUint8();\n\t\tthis.matrixCoefficients = stream.readUint8();\n\t\tthis.codecIntializationDataSize = stream.readUint16();\n\t\tthis.codecIntializationData = stream.readUint8Array(this.codecIntializationDataSize);\n\t} else {\n\t\tthis.profile = stream.readUint8();\n\t\tthis.level = stream.readUint8();\n\t\ttmp = stream.readUint8();\n\t\tthis.bitDepth = (tmp >> 4) & 0xF;\n\t\tthis.colorSpace = tmp & 0xF;\n\t\ttmp = stream.readUint8();\n\t\tthis.chromaSubsampling = (tmp >> 4) & 0xF;\n\t\tthis.transferFunction = (tmp >> 1) & 0x7;\n\t\tthis.videoFullRangeFlag = tmp & 0x1;\n\t\tthis.codecIntializationDataSize = stream.readUint16();\n\t\tthis.codecIntializationData = stream.readUint8Array(this.codecIntializationDataSize);\n\t}\n});// file:src/parsing/vttC.js\nBoxParser.createBoxCtor(\"vttC\", function(stream) {\n\tthis.text = stream.readString(this.size - this.hdr_size);\n});\n\n// file:src/parsing/vvcC.js\nBoxParser.createFullBoxCtor(\"vvcC\", function (stream) {\n  var i, j;\n\n  // helper object to simplify extracting individual bits\n  var bitReader = {\n    held_bits: undefined,\n    num_held_bits: 0,\n\n    stream_read_1_bytes: function (strm) {\n      this.held_bits = strm.readUint8();\n      this.num_held_bits = 1 * 8;\n    },\n    stream_read_2_bytes: function (strm) {\n      this.held_bits = strm.readUint16();\n      this.num_held_bits = 2 * 8;\n    },\n\n    extract_bits: function (num_bits) {\n      var ret = (this.held_bits >> (this.num_held_bits - num_bits)) & ((1 << num_bits) - 1);\n      this.num_held_bits -= num_bits;\n      return ret;\n    }\n  };\n\n  // VvcDecoderConfigurationRecord\n  bitReader.stream_read_1_bytes(stream);\n  bitReader.extract_bits(5);  // reserved\n  this.lengthSizeMinusOne = bitReader.extract_bits(2);\n  this.ptl_present_flag = bitReader.extract_bits(1);\n\n  if (this.ptl_present_flag) {\n    bitReader.stream_read_2_bytes(stream);\n    this.ols_idx = bitReader.extract_bits(9);\n    this.num_sublayers = bitReader.extract_bits(3);\n    this.constant_frame_rate = bitReader.extract_bits(2);\n    this.chroma_format_idc = bitReader.extract_bits(2);\n\n    bitReader.stream_read_1_bytes(stream);\n    this.bit_depth_minus8 = bitReader.extract_bits(3);\n    bitReader.extract_bits(5);  // reserved\n\n    // VvcPTLRecord\n    {\n      bitReader.stream_read_2_bytes(stream);\n      bitReader.extract_bits(2);  // reserved\n      this.num_bytes_constraint_info = bitReader.extract_bits(6);\n      this.general_profile_idc = bitReader.extract_bits(7);\n      this.general_tier_flag = bitReader.extract_bits(1);\n\n      this.general_level_idc = stream.readUint8();\n\n      bitReader.stream_read_1_bytes(stream);\n      this.ptl_frame_only_constraint_flag = bitReader.extract_bits(1);\n      this.ptl_multilayer_enabled_flag = bitReader.extract_bits(1);\n\n      this.general_constraint_info = new Uint8Array(this.num_bytes_constraint_info);\n      if (this.num_bytes_constraint_info) {\n        for (i = 0; i < this.num_bytes_constraint_info - 1; i++) {\n          var cnstr1 = bitReader.extract_bits(6);\n          bitReader.stream_read_1_bytes(stream);\n          var cnstr2 = bitReader.extract_bits(2);\n\n          this.general_constraint_info[i] = ((cnstr1 << 2) | cnstr2);\n        }\n        this.general_constraint_info[this.num_bytes_constraint_info - 1] = bitReader.extract_bits(6);\n      } else {\n        //forbidden in spec!\n        bitReader.extract_bits(6);\n      }\n\n      bitReader.stream_read_1_bytes(stream);\n      this.ptl_sublayer_present_mask = 0;\n      for (j = this.num_sublayers - 2; j >= 0; --j) {\n        var val = bitReader.extract_bits(1);\n        this.ptl_sublayer_present_mask |= val << j;\n      }\n      for (j = this.num_sublayers; j <= 8 && this.num_sublayers > 1; ++j) {\n        bitReader.extract_bits(1);  // ptl_reserved_zero_bit\n      }\n\n      for (j = this.num_sublayers - 2; j >= 0; --j) {\n        if (this.ptl_sublayer_present_mask & (1 << j)) {\n          this.sublayer_level_idc[j] = stream.readUint8();\n        }\n      }\n\n      this.ptl_num_sub_profiles = stream.readUint8();\n      this.general_sub_profile_idc = [];\n      if (this.ptl_num_sub_profiles) {\n        for (i = 0; i < this.ptl_num_sub_profiles; i++) {\n          this.general_sub_profile_idc.push(stream.readUint32());\n        }\n      }\n    }  // end VvcPTLRecord\n\n    this.max_picture_width = stream.readUint16();\n    this.max_picture_height = stream.readUint16();\n    this.avg_frame_rate = stream.readUint16();\n  }\n\n  var VVC_NALU_OPI = 12;\n  var VVC_NALU_DEC_PARAM = 13;\n\n  this.nalu_arrays = [];\n  var num_of_arrays = stream.readUint8();\n  for (i = 0; i < num_of_arrays; i++) {\n    var nalu_array = [];\n    this.nalu_arrays.push(nalu_array);\n\n    bitReader.stream_read_1_bytes(stream);\n    nalu_array.completeness = bitReader.extract_bits(1);\n    bitReader.extract_bits(2);  // reserved\n    nalu_array.nalu_type = bitReader.extract_bits(5);\n\n    var numNalus = 1;\n    if (nalu_array.nalu_type != VVC_NALU_DEC_PARAM && nalu_array.nalu_type != VVC_NALU_OPI) {\n      numNalus = stream.readUint16();\n    }\n\n    for (j = 0; j < numNalus; j++) {\n      var len = stream.readUint16();\n      nalu_array.push({\n        data: stream.readUint8Array(len),\n        length: len\n      });\n    }\n  }\n});\n// file:src/parsing/vvnC.js\nBoxParser.createFullBoxCtor(\"vvnC\", function (stream) {\n  // VvcNALUConfigBox\n  var tmp = strm.readUint8();\n  this.lengthSizeMinusOne = (tmp & 0x3);\n});\n// file:src/box-codecs.js\nBoxParser.SampleEntry.prototype.isVideo = function() {\n\treturn false;\n}\n\nBoxParser.SampleEntry.prototype.isAudio = function() {\n\treturn false;\n}\n\nBoxParser.SampleEntry.prototype.isSubtitle = function() {\n\treturn false;\n}\n\nBoxParser.SampleEntry.prototype.isMetadata = function() {\n\treturn false;\n}\n\nBoxParser.SampleEntry.prototype.isHint = function() {\n\treturn false;\n}\n\nBoxParser.SampleEntry.prototype.getCodec = function() {\n\treturn this.type.replace('.','');\n}\n\nBoxParser.SampleEntry.prototype.getWidth = function() {\n\treturn \"\";\n}\n\nBoxParser.SampleEntry.prototype.getHeight = function() {\n\treturn \"\";\n}\n\nBoxParser.SampleEntry.prototype.getChannelCount = function() {\n\treturn \"\";\n}\n\nBoxParser.SampleEntry.prototype.getSampleRate = function() {\n\treturn \"\";\n}\n\nBoxParser.SampleEntry.prototype.getSampleSize = function() {\n\treturn \"\";\n}\n\nBoxParser.VisualSampleEntry.prototype.isVideo = function() {\n\treturn true;\n}\n\nBoxParser.VisualSampleEntry.prototype.getWidth = function() {\n\treturn this.width;\n}\n\nBoxParser.VisualSampleEntry.prototype.getHeight = function() {\n\treturn this.height;\n}\n\nBoxParser.AudioSampleEntry.prototype.isAudio = function() {\n\treturn true;\n}\n\nBoxParser.AudioSampleEntry.prototype.getChannelCount = function() {\n\treturn this.channel_count;\n}\n\nBoxParser.AudioSampleEntry.prototype.getSampleRate = function() {\n\treturn this.samplerate;\n}\n\nBoxParser.AudioSampleEntry.prototype.getSampleSize = function() {\n\treturn this.samplesize;\n}\n\nBoxParser.SubtitleSampleEntry.prototype.isSubtitle = function() {\n\treturn true;\n}\n\nBoxParser.MetadataSampleEntry.prototype.isMetadata = function() {\n\treturn true;\n}\n\n\nBoxParser.decimalToHex = function(d, padding) {\n\tvar hex = Number(d).toString(16);\n\tpadding = typeof (padding) === \"undefined\" || padding === null ? padding = 2 : padding;\n\twhile (hex.length < padding) {\n\t\thex = \"0\" + hex;\n\t}\n\treturn hex;\n}\n\nBoxParser.avc1SampleEntry.prototype.getCodec =\nBoxParser.avc2SampleEntry.prototype.getCodec =\nBoxParser.avc3SampleEntry.prototype.getCodec =\nBoxParser.avc4SampleEntry.prototype.getCodec = function() {\n\tvar baseCodec = BoxParser.SampleEntry.prototype.getCodec.call(this);\n\tif (this.avcC) {\n\t\treturn baseCodec+\".\"+BoxParser.decimalToHex(this.avcC.AVCProfileIndication)+\n\t\t\t\t\t\t  \"\"+BoxParser.decimalToHex(this.avcC.profile_compatibility)+\n\t\t\t\t\t\t  \"\"+BoxParser.decimalToHex(this.avcC.AVCLevelIndication);\n\t} else {\n\t\treturn baseCodec;\n\t}\n}\n\nBoxParser.hev1SampleEntry.prototype.getCodec =\nBoxParser.hvc1SampleEntry.prototype.getCodec = function() {\n\tvar i;\n\tvar baseCodec = BoxParser.SampleEntry.prototype.getCodec.call(this);\n\tif (this.hvcC) {\n\t\tbaseCodec += '.';\n\t\tswitch (this.hvcC.general_profile_space) {\n\t\t\tcase 0:\n\t\t\t\tbaseCodec += '';\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tbaseCodec += 'A';\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tbaseCodec += 'B';\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tbaseCodec += 'C';\n\t\t\t\tbreak;\n\t\t}\n\t\tbaseCodec += this.hvcC.general_profile_idc;\n\t\tbaseCodec += '.';\n\t\tvar val = this.hvcC.general_profile_compatibility;\n\t\tvar reversed = 0;\n\t\tfor (i=0; i<32; i++) {\n\t\t\treversed |= val & 1;\n\t\t\tif (i==31) break;\n\t\t\treversed <<= 1;\n\t\t\tval >>=1;\n\t\t}\n\t\tbaseCodec += BoxParser.decimalToHex(reversed, 0);\n\t\tbaseCodec += '.';\n\t\tif (this.hvcC.general_tier_flag === 0) {\n\t\t\tbaseCodec += 'L';\n\t\t} else {\n\t\t\tbaseCodec += 'H';\n\t\t}\n\t\tbaseCodec += this.hvcC.general_level_idc;\n\t\tvar hasByte = false;\n\t\tvar constraint_string = \"\";\n\t\tfor (i = 5; i >= 0; i--) {\n\t\t\tif (this.hvcC.general_constraint_indicator[i] || hasByte) {\n\t\t\t\tconstraint_string = \".\"+BoxParser.decimalToHex(this.hvcC.general_constraint_indicator[i], 0)+constraint_string;\n\t\t\t\thasByte = true;\n\t\t\t}\n\t\t}\n\t\tbaseCodec += constraint_string;\n\t}\n\treturn baseCodec;\n}\n\nBoxParser.vvc1SampleEntry.prototype.getCodec =\nBoxParser.vvi1SampleEntry.prototype.getCodec = function () {\n\tvar i;\n\tvar baseCodec = BoxParser.SampleEntry.prototype.getCodec.call(this);\n\tif (this.vvcC) {\n\t\tbaseCodec += '.' + this.vvcC.general_profile_idc;\n\t\tif (this.vvcC.general_tier_flag) {\n\t\t\tbaseCodec += '.H';\n\t\t} else {\n\t\t\tbaseCodec += '.L';\n\t\t}\n\t\tbaseCodec += this.vvcC.general_level_idc;\n\n\t\tvar constraint_string = \"\";\n\t\tif (this.vvcC.general_constraint_info) {\n\t\t\tvar bytes = [];\n\t\t\tvar byte = 0;\n\t\t\tbyte |= this.vvcC.ptl_frame_only_constraint << 7;\n\t\t\tbyte |= this.vvcC.ptl_multilayer_enabled << 6;\n\t\t\tvar last_nonzero;\n\t\t\tfor (i = 0; i < this.vvcC.general_constraint_info.length; ++i) {\n\t\t\t\tbyte |= (this.vvcC.general_constraint_info[i] >> 2) & 0x3f;\n\t\t\t\tbytes.push(byte);\n\t\t\t\tif (byte) {\n\t\t\t\t\tlast_nonzero = i;\n\t\t\t\t}\n\n\t\t\t\tbyte = (this.vvcC.general_constraint_info[i] >> 2) & 0x03;\n\t\t\t}\n\n\t\t\tif (last_nonzero === undefined) {\n\t\t\t\tconstraint_string = \".CA\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconstraint_string = \".C\"\n\t\t\t\tvar base32_chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\";\n\t\t\t\tvar held_bits = 0;\n\t\t\t\tvar num_held_bits = 0;\n\t\t\t\tfor (i = 0; i <= last_nonzero; ++i) {\n\t\t\t\t\theld_bits = (held_bits << 8) | bytes[i];\n\t\t\t\t\tnum_held_bits += 8;\n\n\t\t\t\t\twhile (num_held_bits >= 5) {\n\t\t\t\t\t\tvar val = (held_bits >> (num_held_bits - 5)) & 0x1f;\n\t\t\t\t\t\tconstraint_string += base32_chars[val];\n\n\t\t\t\t\t\tnum_held_bits -= 5;\n\t\t\t\t\t\theld_bits &= (1 << num_held_bits) - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (num_held_bits) {\n\t\t\t\t\theld_bits <<= (5 - num_held_bits);  // right-pad with zeros to 5 bits (is this correct?)\n\t\t\t\t\tconstraint_string += base32_chars[held_bits & 0x1f];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tbaseCodec += constraint_string;\n\t}\n\treturn baseCodec;\n}\n\nBoxParser.mp4aSampleEntry.prototype.getCodec = function() {\n\tvar baseCodec = BoxParser.SampleEntry.prototype.getCodec.call(this);\n\tif (this.esds && this.esds.esd) {\n\t\tvar oti = this.esds.esd.getOTI();\n\t\tvar dsi = this.esds.esd.getAudioConfig();\n\t\treturn baseCodec+\".\"+BoxParser.decimalToHex(oti)+(dsi ? \".\"+dsi: \"\");\n\t} else {\n\t\treturn baseCodec;\n\t}\n}\n\nBoxParser.stxtSampleEntry.prototype.getCodec = function() {\n\tvar baseCodec = BoxParser.SampleEntry.prototype.getCodec.call(this);\n\tif(this.mime_format) {\n\t\treturn baseCodec + \".\" + this.mime_format;\n\t} else {\n\t\treturn baseCodec\n\t}\n}\n\nBoxParser.vp08SampleEntry.prototype.getCodec =\nBoxParser.vp09SampleEntry.prototype.getCodec = function() {\n\tvar baseCodec = BoxParser.SampleEntry.prototype.getCodec.call(this);\n\tvar level = this.vpcC.level;\n\tif (level == 0) {\n\t\tlevel = \"00\";\n\t}\n\tvar bitDepth = this.vpcC.bitDepth;\n\tif (bitDepth == 8) {\n\t\tbitDepth = \"08\";\n\t}\n\treturn baseCodec + \".0\" + this.vpcC.profile + \".\" + level + \".\" + bitDepth;\n}\n\nBoxParser.av01SampleEntry.prototype.getCodec = function() {\n\tvar baseCodec = BoxParser.SampleEntry.prototype.getCodec.call(this);\n\tvar level = this.av1C.seq_level_idx_0;\n\tif (level < 10) {\n\t\tlevel = \"0\" + level;\n\t}\n\tvar bitdepth;\n\tif (this.av1C.seq_profile === 2 && this.av1C.high_bitdepth === 1) {\n\t\tbitdepth = (this.av1C.twelve_bit === 1) ? \"12\" : \"10\";\n\t} else if ( this.av1C.seq_profile <= 2 ) {\n\t\tbitdepth = (this.av1C.high_bitdepth === 1) ? \"10\" : \"08\";\n\t}\n\t// TODO need to parse the SH to find color config\n\treturn baseCodec+\".\"+this.av1C.seq_profile+\".\"+level+(this.av1C.seq_tier_0?\"H\":\"M\")+\".\"+bitdepth;//+\".\"+this.av1C.monochrome+\".\"+this.av1C.chroma_subsampling_x+\"\"+this.av1C.chroma_subsampling_y+\"\"+this.av1C.chroma_sample_position;\n}\n// file:src/box-write.js\n/* \n * Copyright (c) Telecom ParisTech/TSI/MM/GPAC Cyril Concolato\n * License: BSD-3-Clause (see LICENSE file)\n */\nBoxParser.Box.prototype.writeHeader = function(stream, msg) {\n\tthis.size += 8;\n\tif (this.size > MAX_SIZE) {\n\t\tthis.size += 8;\n\t}\n\tif (this.type === \"uuid\") {\n\t\tthis.size += 16;\n\t}\n\tLog.debug(\"BoxWriter\", \"Writing box \"+this.type+\" of size: \"+this.size+\" at position \"+stream.getPosition()+(msg || \"\"));\n\tif (this.size > MAX_SIZE) {\n\t\tstream.writeUint32(1);\n\t} else {\n\t\tthis.sizePosition = stream.getPosition();\n\t\tstream.writeUint32(this.size);\n\t}\n\tstream.writeString(this.type, null, 4);\n\tif (this.type === \"uuid\") {\n\t\tstream.writeUint8Array(this.uuid);\n\t}\n\tif (this.size > MAX_SIZE) {\n\t\tstream.writeUint64(this.size);\n\t} \n}\n\nBoxParser.FullBox.prototype.writeHeader = function(stream) {\n\tthis.size += 4;\n\tBoxParser.Box.prototype.writeHeader.call(this, stream, \" v=\"+this.version+\" f=\"+this.flags);\n\tstream.writeUint8(this.version);\n\tstream.writeUint24(this.flags);\n}\n\nBoxParser.Box.prototype.write = function(stream) {\n\tif (this.type === \"mdat\") {\n\t\t/* TODO: fix this */\n\t\tif (this.data) {\n\t\t\tthis.size = this.data.length;\n\t\t\tthis.writeHeader(stream);\n\t\t\tstream.writeUint8Array(this.data);\n\t\t}\n\t} else {\n\t\tthis.size = (this.data ? this.data.length : 0);\n\t\tthis.writeHeader(stream);\n\t\tif (this.data) {\n\t\t\tstream.writeUint8Array(this.data);\n\t\t}\n\t}\n}\n\nBoxParser.ContainerBox.prototype.write = function(stream) {\n\tthis.size = 0;\n\tthis.writeHeader(stream);\n\tfor (var i=0; i<this.boxes.length; i++) {\n\t\tif (this.boxes[i]) {\n\t\t\tthis.boxes[i].write(stream);\n\t\t\tthis.size += this.boxes[i].size;\n\t\t}\n\t}\n\t/* adjusting the size, now that all sub-boxes are known */\n\tLog.debug(\"BoxWriter\", \"Adjusting box \"+this.type+\" with new size \"+this.size);\n\tstream.adjustUint32(this.sizePosition, this.size);\n}\n\nBoxParser.TrackReferenceTypeBox.prototype.write = function(stream) {\n\tthis.size = this.track_ids.length*4;\n\tthis.writeHeader(stream);\n\tstream.writeUint32Array(this.track_ids);\n}\n\n// file:src/writing/avcC.js\nBoxParser.avcCBox.prototype.write = function(stream) {\n\tvar i;\n\tthis.size = 7;\n\tfor (i = 0; i < this.SPS.length; i++) {\n\t\tthis.size += 2+this.SPS[i].length;\n\t}\n\tfor (i = 0; i < this.PPS.length; i++) {\n\t\tthis.size += 2+this.PPS[i].length;\n\t}\n\tif (this.ext) {\n\t\tthis.size += this.ext.length;\n\t}\n\tthis.writeHeader(stream);\n\tstream.writeUint8(this.configurationVersion);\n\tstream.writeUint8(this.AVCProfileIndication);\n\tstream.writeUint8(this.profile_compatibility);\n\tstream.writeUint8(this.AVCLevelIndication);\n\tstream.writeUint8(this.lengthSizeMinusOne + (63<<2));\n\tstream.writeUint8(this.SPS.length + (7<<5));\n\tfor (i = 0; i < this.SPS.length; i++) {\n\t\tstream.writeUint16(this.SPS[i].length);\n\t\tstream.writeUint8Array(this.SPS[i].nalu);\n\t}\n\tstream.writeUint8(this.PPS.length);\n\tfor (i = 0; i < this.PPS.length; i++) {\n\t\tstream.writeUint16(this.PPS[i].length);\n\t\tstream.writeUint8Array(this.PPS[i].nalu);\n\t}\n\tif (this.ext) {\n\t\tstream.writeUint8Array(this.ext);\n\t}\n}\n\n// file:src/writing/co64.js\nBoxParser.co64Box.prototype.write = function(stream) {\n\tvar i;\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 4+8*this.chunk_offsets.length;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.chunk_offsets.length);\n\tfor(i=0; i<this.chunk_offsets.length; i++) {\n\t\tstream.writeUint64(this.chunk_offsets[i]);\n\t}\n}\n\n// file:src/writing/cslg.js\nBoxParser.cslgBox.prototype.write = function(stream) {\n\tvar i;\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 4*5;\n\tthis.writeHeader(stream);\n\tstream.writeInt32(this.compositionToDTSShift);\n\tstream.writeInt32(this.leastDecodeToDisplayDelta);\n\tstream.writeInt32(this.greatestDecodeToDisplayDelta);\n\tstream.writeInt32(this.compositionStartTime);\n\tstream.writeInt32(this.compositionEndTime);\n}\n\n// file:src/writing/ctts.js\nBoxParser.cttsBox.prototype.write = function(stream) {\n\tvar i;\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 4+8*this.sample_counts.length;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.sample_counts.length);\n\tfor(i=0; i<this.sample_counts.length; i++) {\n\t\tstream.writeUint32(this.sample_counts[i]);\n\t\tif (this.version === 1) {\n\t\t\tstream.writeInt32(this.sample_offsets[i]); /* signed */\n\t\t} else {\t\t\t\n\t\t\tstream.writeUint32(this.sample_offsets[i]); /* unsigned */\n\t\t}\n\t}\n}\n\n// file:src/writing/dref.js\nBoxParser.drefBox.prototype.write = function(stream) {\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 4; //\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.entries.length);\n\tfor (var i = 0; i < this.entries.length; i++) {\n\t\tthis.entries[i].write(stream);\n\t\tthis.size += this.entries[i].size;\n\t}\t\n\t/* adjusting the size, now that all sub-boxes are known */\n\tLog.debug(\"BoxWriter\", \"Adjusting box \"+this.type+\" with new size \"+this.size);\n\tstream.adjustUint32(this.sizePosition, this.size);\n}\n\n// file:src/writing/elng.js\nBoxParser.elngBox.prototype.write = function(stream) {\n\tthis.version = 0;\t\n\tthis.flags = 0;\n\tthis.size = this.extended_language.length;\n\tthis.writeHeader(stream);\n\tstream.writeString(this.extended_language);\n}\n\n// file:src/writing/elst.js\nBoxParser.elstBox.prototype.write = function(stream) {\n\tthis.version = 0;\t\n\tthis.flags = 0;\n\tthis.size = 4+12*this.entries.length;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.entries.length);\n\tfor (var i = 0; i < this.entries.length; i++) {\n\t\tvar entry = this.entries[i];\n\t\tstream.writeUint32(entry.segment_duration);\n\t\tstream.writeInt32(entry.media_time);\n\t\tstream.writeInt16(entry.media_rate_integer);\n\t\tstream.writeInt16(entry.media_rate_fraction);\n\t}\n}\n\n// file:src/writing/emsg.js\nBoxParser.emsgBox.prototype.write = function(stream) {\n\tthis.version = 0;\t\n\tthis.flags = 0;\n\tthis.size = 4*4+this.message_data.length+(this.scheme_id_uri.length+1)+(this.value.length+1);\n\tthis.writeHeader(stream);\n\tstream.writeCString(this.scheme_id_uri);\n\tstream.writeCString(this.value);\n\tstream.writeUint32(this.timescale);\n\tstream.writeUint32(this.presentation_time_delta);\n\tstream.writeUint32(this.event_duration);\n\tstream.writeUint32(this.id);\n\tstream.writeUint8Array(this.message_data);\n}\n\n// file:src/writing/ftyp.js\nBoxParser.ftypBox.prototype.write = function(stream) {\n\tthis.size = 8+4*this.compatible_brands.length;\n\tthis.writeHeader(stream);\n\tstream.writeString(this.major_brand, null, 4);\n\tstream.writeUint32(this.minor_version);\n\tfor (var i = 0; i < this.compatible_brands.length; i++) {\n\t\tstream.writeString(this.compatible_brands[i], null, 4);\n\t}\n}\n\n// file:src/writing/hdlr.js\nBoxParser.hdlrBox.prototype.write = function(stream) {\n\tthis.size = 5*4+this.name.length+1;\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(0);\n\tstream.writeString(this.handler, null, 4);\n\tstream.writeUint32(0);\n\tstream.writeUint32(0);\n\tstream.writeUint32(0);\n\tstream.writeCString(this.name);\n}\n\n// file:src/writing/kind.js\nBoxParser.kindBox.prototype.write = function(stream) {\n\tthis.version = 0;\t\n\tthis.flags = 0;\n\tthis.size = (this.schemeURI.length+1)+(this.value.length+1);\n\tthis.writeHeader(stream);\n\tstream.writeCString(this.schemeURI);\n\tstream.writeCString(this.value);\n}\n\n// file:src/writing/mdhd.js\nBoxParser.mdhdBox.prototype.write = function(stream) {\n\tthis.size = 4*4+2*2;\n\tthis.flags = 0;\n\tthis.version = 0;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.creation_time);\n\tstream.writeUint32(this.modification_time);\n\tstream.writeUint32(this.timescale);\n\tstream.writeUint32(this.duration);\n\tstream.writeUint16(this.language);\n\tstream.writeUint16(0);\n}\n\n// file:src/writing/mehd.js\nBoxParser.mehdBox.prototype.write = function(stream) {\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 4;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.fragment_duration);\n}\n\n// file:src/writing/mfhd.js\nBoxParser.mfhdBox.prototype.write = function(stream) {\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 4;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.sequence_number);\n}\n\n// file:src/writing/mvhd.js\nBoxParser.mvhdBox.prototype.write = function(stream) {\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 23*4+2*2;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.creation_time);\n\tstream.writeUint32(this.modification_time);\n\tstream.writeUint32(this.timescale);\n\tstream.writeUint32(this.duration);\n\tstream.writeUint32(this.rate);\n\tstream.writeUint16(this.volume<<8);\n\tstream.writeUint16(0);\n\tstream.writeUint32(0);\n\tstream.writeUint32(0);\n\tstream.writeUint32Array(this.matrix);\n\tstream.writeUint32(0);\n\tstream.writeUint32(0);\n\tstream.writeUint32(0);\n\tstream.writeUint32(0);\n\tstream.writeUint32(0);\n\tstream.writeUint32(0);\n\tstream.writeUint32(this.next_track_id);\n}\n\n// file:src/writing/sampleentry.js\nBoxParser.SampleEntry.prototype.writeHeader = function(stream) {\n\tthis.size = 8;\n\tBoxParser.Box.prototype.writeHeader.call(this, stream);\n\tstream.writeUint8(0);\n\tstream.writeUint8(0);\n\tstream.writeUint8(0);\n\tstream.writeUint8(0);\n\tstream.writeUint8(0);\n\tstream.writeUint8(0);\n\tstream.writeUint16(this.data_reference_index);\n}\n\nBoxParser.SampleEntry.prototype.writeFooter = function(stream) {\n\tfor (var i=0; i<this.boxes.length; i++) {\n\t\tthis.boxes[i].write(stream);\n\t\tthis.size += this.boxes[i].size;\n\t}\n\tLog.debug(\"BoxWriter\", \"Adjusting box \"+this.type+\" with new size \"+this.size);\n\tstream.adjustUint32(this.sizePosition, this.size);\t\n}\n\nBoxParser.SampleEntry.prototype.write = function(stream) {\n\tthis.writeHeader(stream);\n\tstream.writeUint8Array(this.data);\n\tthis.size += this.data.length;\n\tLog.debug(\"BoxWriter\", \"Adjusting box \"+this.type+\" with new size \"+this.size);\n\tstream.adjustUint32(this.sizePosition, this.size);\t\n}\n\nBoxParser.VisualSampleEntry.prototype.write = function(stream) {\n\tthis.writeHeader(stream);\n\tthis.size += 2*7+6*4+32;\n\tstream.writeUint16(0); \n\tstream.writeUint16(0);\n\tstream.writeUint32(0);\n\tstream.writeUint32(0);\n\tstream.writeUint32(0);\n\tstream.writeUint16(this.width);\n\tstream.writeUint16(this.height);\n\tstream.writeUint32(this.horizresolution);\n\tstream.writeUint32(this.vertresolution);\n\tstream.writeUint32(0);\n\tstream.writeUint16(this.frame_count);\n\tstream.writeUint8(Math.min(31, this.compressorname.length));\n\tstream.writeString(this.compressorname, null, 31);\n\tstream.writeUint16(this.depth);\n\tstream.writeInt16(-1);\n\tthis.writeFooter(stream);\n}\n\nBoxParser.AudioSampleEntry.prototype.write = function(stream) {\n\tthis.writeHeader(stream);\n\tthis.size += 2*4+3*4;\n\tstream.writeUint32(0);\n\tstream.writeUint32(0);\n\tstream.writeUint16(this.channel_count);\n\tstream.writeUint16(this.samplesize);\n\tstream.writeUint16(0);\n\tstream.writeUint16(0);\n\tstream.writeUint32(this.samplerate<<16);\n\tthis.writeFooter(stream);\n}\n\nBoxParser.stppSampleEntry.prototype.write = function(stream) {\n\tthis.writeHeader(stream);\n\tthis.size += this.namespace.length+1+\n\t\t\t\t this.schema_location.length+1+\n\t\t\t\t this.auxiliary_mime_types.length+1;\n\tstream.writeCString(this.namespace);\n\tstream.writeCString(this.schema_location);\n\tstream.writeCString(this.auxiliary_mime_types);\n\tthis.writeFooter(stream);\n}\n\n// file:src/writing/samplegroups/samplegroup.js\nBoxParser.SampleGroupEntry.prototype.write = function(stream) {\n\tstream.writeUint8Array(this.data);\n}\n\n// file:src/writing/sbgp.js\nBoxParser.sbgpBox.prototype.write = function(stream) {\n\tthis.version = 1;\t\n\tthis.flags = 0;\n\tthis.size = 12+8*this.entries.length;\n\tthis.writeHeader(stream);\n\tstream.writeString(this.grouping_type, null, 4);\n\tstream.writeUint32(this.grouping_type_parameter);\n\tstream.writeUint32(this.entries.length);\n\tfor (var i = 0; i < this.entries.length; i++) {\n\t\tvar entry = this.entries[i];\n\t\tstream.writeInt32(entry.sample_count);\n\t\tstream.writeInt32(entry.group_description_index);\n\t}\n}\n\n// file:src/writing/sgpd.js\nBoxParser.sgpdBox.prototype.write = function(stream) {\n\tvar i;\n\tvar entry;\n\t// leave version as read\n\t// this.version;\n\tthis.flags = 0;\n\tthis.size = 12;\n\tfor (i = 0; i < this.entries.length; i++) {\n\t\tentry = this.entries[i];\n\t\tif (this.version === 1) {\n\t\t\tif (this.default_length === 0) {\n\t\t\t\tthis.size += 4;\n\t\t\t}\n\t\t\tthis.size += entry.data.length;\n\t\t}\n\t}\n\tthis.writeHeader(stream);\n\tstream.writeString(this.grouping_type, null, 4);\n\tif (this.version === 1) {\n\t\tstream.writeUint32(this.default_length);\n\t}\n\tif (this.version >= 2) {\n\t\tstream.writeUint32(this.default_sample_description_index);\n\t}\n\tstream.writeUint32(this.entries.length);\n\tfor (i = 0; i < this.entries.length; i++) {\n\t\tentry = this.entries[i];\n\t\tif (this.version === 1) {\n\t\t\tif (this.default_length === 0) {\n\t\t\t\tstream.writeUint32(entry.description_length);\n\t\t\t}\n\t\t}\n\t\tentry.write(stream);\n\t}\n}\n\n\n// file:src/writing/sidx.js\nBoxParser.sidxBox.prototype.write = function(stream) {\n\tthis.version = 0;\t\n\tthis.flags = 0;\n\tthis.size = 4*4+2+2+12*this.references.length;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.reference_ID);\n\tstream.writeUint32(this.timescale);\n\tstream.writeUint32(this.earliest_presentation_time);\n\tstream.writeUint32(this.first_offset);\n\tstream.writeUint16(0);\n\tstream.writeUint16(this.references.length);\n\tfor (var i = 0; i < this.references.length; i++) {\n\t\tvar ref = this.references[i];\n\t\tstream.writeUint32(ref.reference_type << 31 | ref.referenced_size);\n\t\tstream.writeUint32(ref.subsegment_duration);\n\t\tstream.writeUint32(ref.starts_with_SAP << 31 | ref.SAP_type << 28 | ref.SAP_delta_time);\n\t}\n}\n\n// file:src/writing/smhd.js\nBoxParser.smhdBox.prototype.write = function(stream) {\n  var i;\n  this.version = 0;\n  this.flags = 1;\n  this.size = 4;\n  this.writeHeader(stream);\n  stream.writeUint16(this.balance);\n  stream.writeUint16(0);\n}\n// file:src/writing/stco.js\nBoxParser.stcoBox.prototype.write = function(stream) {\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 4+4*this.chunk_offsets.length;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.chunk_offsets.length);\n\tstream.writeUint32Array(this.chunk_offsets);\n}\n\n// file:src/writing/stsc.js\nBoxParser.stscBox.prototype.write = function(stream) {\n\tvar i;\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 4+12*this.first_chunk.length;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.first_chunk.length);\n\tfor(i=0; i<this.first_chunk.length; i++) {\n\t\tstream.writeUint32(this.first_chunk[i]);\n\t\tstream.writeUint32(this.samples_per_chunk[i]);\n\t\tstream.writeUint32(this.sample_description_index[i]);\n\t}\n}\n\n// file:src/writing/stsd.js\nBoxParser.stsdBox.prototype.write = function(stream) {\n\tvar i;\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 0;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.entries.length);\n\tthis.size += 4;\n\tfor (i = 0; i < this.entries.length; i++) {\n\t\tthis.entries[i].write(stream);\n\t\tthis.size += this.entries[i].size;\n\t}\n\t/* adjusting the size, now that all sub-boxes are known */\n\tLog.debug(\"BoxWriter\", \"Adjusting box \"+this.type+\" with new size \"+this.size);\n\tstream.adjustUint32(this.sizePosition, this.size);\n}\n\n// file:src/writing/stsh.js\nBoxParser.stshBox.prototype.write = function(stream) {\n\tvar i;\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 4+8*this.shadowed_sample_numbers.length;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.shadowed_sample_numbers.length);\n\tfor(i=0; i<this.shadowed_sample_numbers.length; i++) {\n\t\tstream.writeUint32(this.shadowed_sample_numbers[i]);\n\t\tstream.writeUint32(this.sync_sample_numbers[i]);\n\t}\n}\n\n// file:src/writing/stss.js\nBoxParser.stssBox.prototype.write = function(stream) {\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 4+4*this.sample_numbers.length;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.sample_numbers.length);\n\tstream.writeUint32Array(this.sample_numbers);\n}\n\n// file:src/writing/stsz.js\nBoxParser.stszBox.prototype.write = function(stream) {\n\tvar i;\n\tvar constant = true;\n\tthis.version = 0;\n\tthis.flags = 0;\n\tif (this.sample_sizes.length > 0) {\n\t\ti = 0;\n\t\twhile (i+1 < this.sample_sizes.length) {\n\t\t\tif (this.sample_sizes[i+1] !==  this.sample_sizes[0]) {\n\t\t\t\tconstant = false;\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tconstant = false;\n\t}\n\tthis.size = 8;\n\tif (!constant) {\n\t\tthis.size += 4*this.sample_sizes.length;\n\t}\n\tthis.writeHeader(stream);\n\tif (!constant) {\n\t\tstream.writeUint32(0);\n\t} else {\n\t\tstream.writeUint32(this.sample_sizes[0]);\n\t}\n\tstream.writeUint32(this.sample_sizes.length);\n\tif (!constant) {\n\t\tstream.writeUint32Array(this.sample_sizes);\n\t}\t\n}\n\n// file:src/writing/stts.js\nBoxParser.sttsBox.prototype.write = function(stream) {\n\tvar i;\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 4+8*this.sample_counts.length;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.sample_counts.length);\n\tfor(i=0; i<this.sample_counts.length; i++) {\n\t\tstream.writeUint32(this.sample_counts[i]);\n\t\tstream.writeUint32(this.sample_deltas[i]);\n\t}\n}\n\n// file:src/writing/tfdt.js\nBoxParser.tfdtBox.prototype.write = function(stream) {\n\tvar UINT32_MAX = Math.pow(2, 32) - 1;\n\t// use version 1 if baseMediaDecodeTime does not fit 32 bits\n\tthis.version = this.baseMediaDecodeTime > UINT32_MAX ? 1 : 0;\n\tthis.flags = 0;\n\tthis.size = 4;\n\tif (this.version === 1) {\n\t\tthis.size += 4;\n\t}\n\tthis.writeHeader(stream);\n\tif (this.version === 1) {\n\t\tstream.writeUint64(this.baseMediaDecodeTime);\n\t} else {\n\t\tstream.writeUint32(this.baseMediaDecodeTime);\n\t}\n}\n\n// file:src/writing/tfhd.js\nBoxParser.tfhdBox.prototype.write = function(stream) {\n\tthis.version = 0;\n\tthis.size = 4;\n\tif (this.flags & BoxParser.TFHD_FLAG_BASE_DATA_OFFSET) {\n\t\tthis.size += 8;\n\t}\n\tif (this.flags & BoxParser.TFHD_FLAG_SAMPLE_DESC) {\n\t\tthis.size += 4;\n\t}\n\tif (this.flags & BoxParser.TFHD_FLAG_SAMPLE_DUR) {\n\t\tthis.size += 4;\n\t}\n\tif (this.flags & BoxParser.TFHD_FLAG_SAMPLE_SIZE) {\n\t\tthis.size += 4;\n\t}\n\tif (this.flags & BoxParser.TFHD_FLAG_SAMPLE_FLAGS) {\n\t\tthis.size += 4;\n\t}\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.track_id);\n\tif (this.flags & BoxParser.TFHD_FLAG_BASE_DATA_OFFSET) {\n\t\tstream.writeUint64(this.base_data_offset);\n\t}\n\tif (this.flags & BoxParser.TFHD_FLAG_SAMPLE_DESC) {\n\t\tstream.writeUint32(this.default_sample_description_index);\n\t}\n\tif (this.flags & BoxParser.TFHD_FLAG_SAMPLE_DUR) {\n\t\tstream.writeUint32(this.default_sample_duration);\n\t}\n\tif (this.flags & BoxParser.TFHD_FLAG_SAMPLE_SIZE) {\n\t\tstream.writeUint32(this.default_sample_size);\n\t}\n\tif (this.flags & BoxParser.TFHD_FLAG_SAMPLE_FLAGS) {\n\t\tstream.writeUint32(this.default_sample_flags);\n\t}\n}\n\n// file:src/writing/tkhd.js\nBoxParser.tkhdBox.prototype.write = function(stream) {\n\tthis.version = 0;\n\t//this.flags = 0;\n\tthis.size = 4*18+2*4;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.creation_time);\n\tstream.writeUint32(this.modification_time);\n\tstream.writeUint32(this.track_id);\n\tstream.writeUint32(0);\n\tstream.writeUint32(this.duration);\n\tstream.writeUint32(0);\n\tstream.writeUint32(0);\n\tstream.writeInt16(this.layer);\n\tstream.writeInt16(this.alternate_group);\n\tstream.writeInt16(this.volume<<8);\n\tstream.writeUint16(0);\n\tstream.writeInt32Array(this.matrix);\n\tstream.writeUint32(this.width);\n\tstream.writeUint32(this.height);\n}\n\n// file:src/writing/trex.js\nBoxParser.trexBox.prototype.write = function(stream) {\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 4*5;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.track_id);\n\tstream.writeUint32(this.default_sample_description_index);\n\tstream.writeUint32(this.default_sample_duration);\n\tstream.writeUint32(this.default_sample_size);\n\tstream.writeUint32(this.default_sample_flags);\n}\n\n// file:src/writing/trun.js\nBoxParser.trunBox.prototype.write = function(stream) {\n\tthis.version = 0;\n\tthis.size = 4;\n\tif (this.flags & BoxParser.TRUN_FLAGS_DATA_OFFSET) {\n\t\tthis.size += 4;\n\t}\n\tif (this.flags & BoxParser.TRUN_FLAGS_FIRST_FLAG) {\n\t\tthis.size += 4;\n\t}\n\tif (this.flags & BoxParser.TRUN_FLAGS_DURATION) {\n\t\tthis.size += 4*this.sample_duration.length;\n\t}\n\tif (this.flags & BoxParser.TRUN_FLAGS_SIZE) {\n\t\tthis.size += 4*this.sample_size.length;\n\t}\n\tif (this.flags & BoxParser.TRUN_FLAGS_FLAGS) {\n\t\tthis.size += 4*this.sample_flags.length;\n\t}\n\tif (this.flags & BoxParser.TRUN_FLAGS_CTS_OFFSET) {\n\t\tthis.size += 4*this.sample_composition_time_offset.length;\n\t}\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.sample_count);\n\tif (this.flags & BoxParser.TRUN_FLAGS_DATA_OFFSET) {\n\t\tthis.data_offset_position = stream.getPosition();\n\t\tstream.writeInt32(this.data_offset); //signed\n\t}\n\tif (this.flags & BoxParser.TRUN_FLAGS_FIRST_FLAG) {\n\t\tstream.writeUint32(this.first_sample_flags);\n\t}\n\tfor (var i = 0; i < this.sample_count; i++) {\n\t\tif (this.flags & BoxParser.TRUN_FLAGS_DURATION) {\n\t\t\tstream.writeUint32(this.sample_duration[i]);\n\t\t}\n\t\tif (this.flags & BoxParser.TRUN_FLAGS_SIZE) {\n\t\t\tstream.writeUint32(this.sample_size[i]);\n\t\t}\n\t\tif (this.flags & BoxParser.TRUN_FLAGS_FLAGS) {\n\t\t\tstream.writeUint32(this.sample_flags[i]);\n\t\t}\n\t\tif (this.flags & BoxParser.TRUN_FLAGS_CTS_OFFSET) {\n\t\t\tif (this.version === 0) {\n\t\t\t\tstream.writeUint32(this.sample_composition_time_offset[i]);\n\t\t\t} else {\n\t\t\t\tstream.writeInt32(this.sample_composition_time_offset[i]); //signed\n\t\t\t}\n\t\t}\n\t}\t\t\n}\n\n// file:src/writing/url.js\nBoxParser[\"url Box\"].prototype.write = function(stream) {\n\tthis.version = 0;\t\n\tif (this.location) {\n\t\tthis.flags = 0;\n\t\tthis.size = this.location.length+1;\n\t} else {\n\t\tthis.flags = 0x000001;\n\t\tthis.size = 0;\n\t}\n\tthis.writeHeader(stream);\n\tif (this.location) {\n\t\tstream.writeCString(this.location);\n\t}\n}\n\n// file:src/writing/urn.js\nBoxParser[\"urn Box\"].prototype.write = function(stream) {\n\tthis.version = 0;\t\n\tthis.flags = 0;\n\tthis.size = this.name.length+1+(this.location ? this.location.length+1 : 0);\n\tthis.writeHeader(stream);\n\tstream.writeCString(this.name);\n\tif (this.location) {\n\t\tstream.writeCString(this.location);\n\t}\n}\n\n// file:src/writing/vmhd.js\nBoxParser.vmhdBox.prototype.write = function(stream) {\n\tvar i;\n\tthis.version = 0;\n\tthis.flags = 1;\n\tthis.size = 8;\n\tthis.writeHeader(stream);\n\tstream.writeUint16(this.graphicsmode);\n\tstream.writeUint16Array(this.opcolor);\n}\n\n// file:src/box-unpack.js\n/* \n * Copyright (c) Telecom ParisTech/TSI/MM/GPAC Cyril Concolato\n * License: BSD-3-Clause (see LICENSE file)\n */\nBoxParser.cttsBox.prototype.unpack = function(samples) {\n\tvar i, j, k;\n\tk = 0;\n\tfor (i = 0; i < this.sample_counts.length; i++) {\n\t\tfor (j = 0; j < this.sample_counts[i]; j++) {\n\t\t\tsamples[k].pts = samples[k].dts + this.sample_offsets[i];\n\t\t\tk++;\n\t\t}\n\t}\n}\n\nBoxParser.sttsBox.prototype.unpack = function(samples) {\n\tvar i, j, k;\n\tk = 0;\n\tfor (i = 0; i < this.sample_counts.length; i++) {\n\t\tfor (j = 0; j < this.sample_counts[i]; j++) {\n\t\t\tif (k === 0) {\n\t\t\t\tsamples[k].dts = 0;\n\t\t\t} else {\n\t\t\t\tsamples[k].dts = samples[k-1].dts + this.sample_deltas[i];\n\t\t\t}\n\t\t\tk++;\n\t\t}\n\t}\n}\n\nBoxParser.stcoBox.prototype.unpack = function(samples) {\n\tvar i;\n\tfor (i = 0; i < this.chunk_offsets.length; i++) {\n\t\tsamples[i].offset = this.chunk_offsets[i];\n\t}\n}\n\nBoxParser.stscBox.prototype.unpack = function(samples) {\n\tvar i, j, k, l, m;\n\tl = 0;\n\tm = 0;\n\tfor (i = 0; i < this.first_chunk.length; i++) {\n\t\tfor (j = 0; j < (i+1 < this.first_chunk.length ? this.first_chunk[i+1] : Infinity); j++) {\n\t\t\tm++;\n\t\t\tfor (k = 0; k < this.samples_per_chunk[i]; k++) {\n\t\t\t\tif (samples[l]) {\n\t\t\t\t\tsamples[l].description_index = this.sample_description_index[i];\n\t\t\t\t\tsamples[l].chunk_index = m;\n\t\t\t\t} else {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tl++;\n\t\t\t}\t\t\t\n\t\t}\n\t}\n}\n\nBoxParser.stszBox.prototype.unpack = function(samples) {\n\tvar i;\n\tfor (i = 0; i < this.sample_sizes.length; i++) {\n\t\tsamples[i].size = this.sample_sizes[i];\n\t}\n}\n// file:src/box-diff.js\n\nBoxParser.DIFF_BOXES_PROP_NAMES = [ \"boxes\", \"entries\", \"references\", \"subsamples\",\n\t\t\t\t\t \t \"items\", \"item_infos\", \"extents\", \"associations\",\n\t\t\t\t\t \t \"subsegments\", \"ranges\", \"seekLists\", \"seekPoints\",\n\t\t\t\t\t \t \"esd\", \"levels\"];\n\nBoxParser.DIFF_PRIMITIVE_ARRAY_PROP_NAMES = [ \"compatible_brands\", \"matrix\", \"opcolor\", \"sample_counts\", \"sample_counts\", \"sample_deltas\",\n\"first_chunk\", \"samples_per_chunk\", \"sample_sizes\", \"chunk_offsets\", \"sample_offsets\", \"sample_description_index\", \"sample_duration\" ];\n\nBoxParser.boxEqualFields = function(box_a, box_b) {\n\tif (box_a && !box_b) return false;\n\tvar prop;\n\tfor (prop in box_a) {\n\t\tif (BoxParser.DIFF_BOXES_PROP_NAMES.indexOf(prop) > -1) {\n\t\t\tcontinue;\n\t\t// } else if (excluded_fields && excluded_fields.indexOf(prop) > -1) {\n\t\t// \tcontinue;\n\t\t} else if (box_a[prop] instanceof BoxParser.Box || box_b[prop] instanceof BoxParser.Box) {\n\t\t\tcontinue;\n\t\t} else if (typeof box_a[prop] === \"undefined\" || typeof box_b[prop] === \"undefined\") {\n\t\t\tcontinue;\n\t\t} else if (typeof box_a[prop] === \"function\" || typeof box_b[prop] === \"function\") {\n\t\t\tcontinue;\n\t\t} else if (\n\t\t\t(box_a.subBoxNames && box_a.subBoxNames.indexOf(prop.slice(0,4)) > -1) ||\n\t\t\t(box_b.subBoxNames && box_b.subBoxNames.indexOf(prop.slice(0,4)) > -1))  {\n\t\t\tcontinue;\n\t\t} else {\n\t\t\tif (prop === \"data\" || prop === \"start\" || prop === \"size\" || prop === \"creation_time\" || prop === \"modification_time\") {\n\t\t\t\tcontinue;\n\t\t\t} else if (BoxParser.DIFF_PRIMITIVE_ARRAY_PROP_NAMES.indexOf(prop) > -1) {\n\t\t\t\tcontinue;\n\t\t\t} else {\n\t\t\t\tif (box_a[prop] !== box_b[prop]) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\nBoxParser.boxEqual = function(box_a, box_b) {\n\tif (!BoxParser.boxEqualFields(box_a, box_b)) {\n\t\treturn false;\n\t}\n\tfor (var j = 0; j < BoxParser.DIFF_BOXES_PROP_NAMES.length; j++) {\n\t\tvar name = BoxParser.DIFF_BOXES_PROP_NAMES[j];\n\t\tif (box_a[name] && box_b[name]) {\n\t\t\tif (!BoxParser.boxEqual(box_a[name], box_b[name])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}// file:src/text-mp4.js\n/* \n * Copyright (c) 2012-2013. Telecom ParisTech/TSI/MM/GPAC Cyril Concolato\n * License: BSD-3-Clause (see LICENSE file)\n */\nvar VTTin4Parser = function() {\t\n}\n\nVTTin4Parser.prototype.parseSample = function(data) {\n\tvar cues, cue;\n\tvar stream = new MP4BoxStream(data.buffer);\n\tcues = [];\n\twhile (!stream.isEos()) {\n\t\tcue = BoxParser.parseOneBox(stream, false);\n\t\tif (cue.code === BoxParser.OK && cue.box.type === \"vttc\") {\n\t\t\tcues.push(cue.box);\n\t\t}\t\t\n\t}\n\treturn cues;\n}\n\nVTTin4Parser.prototype.getText = function (startTime, endTime, data) {\n\tfunction pad(n, width, z) {\n\t  z = z || '0';\n\t  n = n + '';\n\t  return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n\t}\n\tfunction secToTimestamp(insec) {\n\t\tvar h = Math.floor(insec/3600);\n\t\tvar m = Math.floor((insec - h*3600)/60);\n\t\tvar s = Math.floor(insec - h*3600 - m*60);\n\t\tvar ms = Math.floor((insec - h*3600 - m*60 - s)*1000);\n\t\treturn \"\"+pad(h, 2)+\":\"+pad(m,2)+\":\"+pad(s, 2)+\".\"+pad(ms, 3);\n\t}\n\tvar cues = this.parseSample(data);\n\tvar string = \"\";\n\tfor (var i = 0; i < cues.length; i++) {\n\t\tvar cueIn4 = cues[i];\n\t\tstring += secToTimestamp(startTime)+\" --> \"+secToTimestamp(endTime)+\"\\r\\n\";\n\t\tstring += cueIn4.payl.text;\n\t}\n\treturn string;\n}\n\nvar XMLSubtitlein4Parser = function() {\t\n}\n\nXMLSubtitlein4Parser.prototype.parseSample = function(sample) {\n\tvar res = {};\t\n\tvar i;\n\tres.resources = [];\n\tvar stream = new MP4BoxStream(sample.data.buffer);\n\tif (!sample.subsamples || sample.subsamples.length === 0) {\n\t\tres.documentString = stream.readString(sample.data.length);\n\t} else {\n\t\tres.documentString = stream.readString(sample.subsamples[0].size);\n\t\tif (sample.subsamples.length > 1) {\n\t\t\tfor (i = 1; i < sample.subsamples.length; i++) {\n\t\t\t\tres.resources[i] = stream.readUint8Array(sample.subsamples[i].size);\n\t\t\t}\n\t\t}\n\t}\n\tif (typeof (DOMParser) !== \"undefined\") {\n\t\tres.document = (new DOMParser()).parseFromString(res.documentString, \"application/xml\");\n\t}\n\treturn res;\n}\n\nvar Textin4Parser = function() {\t\n}\n\nTextin4Parser.prototype.parseSample = function(sample) {\n\tvar textString;\n\tvar stream = new MP4BoxStream(sample.data.buffer);\n\ttextString = stream.readString(sample.data.length);\n\treturn textString;\n}\n\nTextin4Parser.prototype.parseConfig = function(data) {\n\tvar textString;\n\tvar stream = new MP4BoxStream(data.buffer);\n\tstream.readUint32(); // version & flags\n\ttextString = stream.readCString();\n\treturn textString;\n}\n\nif (typeof exports !== 'undefined') {\n\texports.XMLSubtitlein4Parser = XMLSubtitlein4Parser;\n\texports.Textin4Parser = Textin4Parser;\n}\n// file:src/isofile.js\n/*\n * Copyright (c) 2012-2013. Telecom ParisTech/TSI/MM/GPAC Cyril Concolato\n * License: BSD-3-Clause (see LICENSE file)\n */\nvar ISOFile = function (stream) {\n\t/* MutiBufferStream object used to parse boxes */\n\tthis.stream = stream || new MultiBufferStream();\n\t/* Array of all boxes (in order) found in the file */\n\tthis.boxes = [];\n\t/* Array of all mdats */\n\tthis.mdats = [];\n\t/* Array of all moofs */\n\tthis.moofs = [];\n\t/* Boolean indicating if the file is compatible with progressive parsing (moov first) */\n\tthis.isProgressive = false;\n\t/* Boolean used to fire moov start event only once */\n\tthis.moovStartFound = false;\n\t/* Callback called when the moov parsing starts */\n\tthis.onMoovStart = null;\n\t/* Boolean keeping track of the call to onMoovStart, to avoid double calls */\n\tthis.moovStartSent = false;\n\t/* Callback called when the moov is entirely parsed */\n\tthis.onReady = null;\n\t/* Boolean keeping track of the call to onReady, to avoid double calls */\n\tthis.readySent = false;\n\t/* Callback to call when segments are ready */\n\tthis.onSegment = null;\n\t/* Callback to call when samples are ready */\n\tthis.onSamples = null;\n\t/* Callback to call when there is an error in the parsing or processing of samples */\n\tthis.onError = null;\n\t/* Boolean indicating if the moov box run-length encoded tables of sample information have been processed */\n\tthis.sampleListBuilt = false;\n\t/* Array of Track objects for which fragmentation of samples is requested */\n\tthis.fragmentedTracks = [];\n\t/* Array of Track objects for which extraction of samples is requested */\n\tthis.extractedTracks = [];\n\t/* Boolean indicating that fragmention is ready */\n\tthis.isFragmentationInitialized = false;\n\t/* Boolean indicating that fragmented has started */\n\tthis.sampleProcessingStarted = false;\n\t/* Number of the next 'moof' to generate when fragmenting */\n\tthis.nextMoofNumber = 0;\n\t/* Boolean indicating if the initial list of items has been produced */\n\tthis.itemListBuilt = false;\n\t/* Callback called when the sidx box is entirely parsed */\n\tthis.onSidx = null;\n\t/* Boolean keeping track of the call to onSidx, to avoid double calls */\n\tthis.sidxSent = false;\n}\n\nISOFile.prototype.setSegmentOptions = function(id, user, options) {\n\tvar trak = this.getTrackById(id);\n\tif (trak) {\n\t\tvar fragTrack = {};\n\t\tthis.fragmentedTracks.push(fragTrack);\n\t\tfragTrack.id = id;\n\t\tfragTrack.user = user;\n\t\tfragTrack.trak = trak;\n\t\ttrak.nextSample = 0;\n\t\tfragTrack.segmentStream = null;\n\t\tfragTrack.nb_samples = 1000;\n\t\tfragTrack.rapAlignement = true;\n\t\tif (options) {\n\t\t\tif (options.nbSamples) fragTrack.nb_samples = options.nbSamples;\n\t\t\tif (options.rapAlignement) fragTrack.rapAlignement = options.rapAlignement;\n\t\t}\n\t}\n}\n\nISOFile.prototype.unsetSegmentOptions = function(id) {\n\tvar index = -1;\n\tfor (var i = 0; i < this.fragmentedTracks.length; i++) {\n\t\tvar fragTrack = this.fragmentedTracks[i];\n\t\tif (fragTrack.id == id) {\n\t\t\tindex = i;\n\t\t}\n\t}\n\tif (index > -1) {\n\t\tthis.fragmentedTracks.splice(index, 1);\n\t}\n}\n\nISOFile.prototype.setExtractionOptions = function(id, user, options) {\n\tvar trak = this.getTrackById(id);\n\tif (trak) {\n\t\tvar extractTrack = {};\n\t\tthis.extractedTracks.push(extractTrack);\n\t\textractTrack.id = id;\n\t\textractTrack.user = user;\n\t\textractTrack.trak = trak;\n\t\ttrak.nextSample = 0;\n\t\textractTrack.nb_samples = 1000;\n\t\textractTrack.samples = [];\n\t\tif (options) {\n\t\t\tif (options.nbSamples) extractTrack.nb_samples = options.nbSamples;\n\t\t}\n\t}\n}\n\nISOFile.prototype.unsetExtractionOptions = function(id) {\n\tvar index = -1;\n\tfor (var i = 0; i < this.extractedTracks.length; i++) {\n\t\tvar extractTrack = this.extractedTracks[i];\n\t\tif (extractTrack.id == id) {\n\t\t\tindex = i;\n\t\t}\n\t}\n\tif (index > -1) {\n\t\tthis.extractedTracks.splice(index, 1);\n\t}\n}\n\nISOFile.prototype.parse = function() {\n\tvar found;\n\tvar ret;\n\tvar box;\n\tvar parseBoxHeadersOnly = false;\n\n\tif (this.restoreParsePosition)\t{\n\t\tif (!this.restoreParsePosition()) {\n\t\t\treturn;\n\t\t}\n\t}\n\n\twhile (true) {\n\n\t\tif (this.hasIncompleteMdat && this.hasIncompleteMdat()) {\n\t\t\tif (this.processIncompleteMdat()) {\n\t\t\t\tcontinue;\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this.saveParsePosition)\t{\n\t\t\t\tthis.saveParsePosition();\n\t\t\t}\n\t\t\tret = BoxParser.parseOneBox(this.stream, parseBoxHeadersOnly);\n\t\t\tif (ret.code === BoxParser.ERR_NOT_ENOUGH_DATA) {\n\t\t\t\tif (this.processIncompleteBox) {\n\t\t\t\t\tif (this.processIncompleteBox(ret)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar box_type;\n\t\t\t\t/* the box is entirely parsed */\n\t\t\t\tbox = ret.box;\n\t\t\t\tbox_type = (box.type !== \"uuid\" ? box.type : box.uuid);\n\t\t\t\t/* store the box in the 'boxes' array to preserve box order (for file rewrite if needed)  */\n\t\t\t\tthis.boxes.push(box);\n\t\t\t\t/* but also store box in a property for more direct access */\n\t\t\t\tswitch (box_type) {\n\t\t\t\t\tcase \"mdat\":\n\t\t\t\t\t\tthis.mdats.push(box);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"moof\":\n\t\t\t\t\t\tthis.moofs.push(box);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"moov\":\n\t\t\t\t\t\tthis.moovStartFound = true;\n\t\t\t\t\t\tif (this.mdats.length === 0) {\n\t\t\t\t\t\t\tthis.isProgressive = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t/* no break */\n\t\t\t\t\t\t/* falls through */\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tif (this[box_type] !== undefined) {\n\t\t\t\t\t\t\tLog.warn(\"ISOFile\", \"Duplicate Box of type: \"+box_type+\", overriding previous occurrence\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis[box_type] = box;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (this.updateUsedBytes) {\n\t\t\t\t\tthis.updateUsedBytes(box, ret);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nISOFile.prototype.checkBuffer = function (ab) {\n\tif (ab === null || ab === undefined) {\n\t\tthrow(\"Buffer must be defined and non empty\");\n\t}\n\tif (ab.fileStart === undefined) {\n\t\tthrow(\"Buffer must have a fileStart property\");\n\t}\n\tif (ab.byteLength === 0) {\n\t\tLog.warn(\"ISOFile\", \"Ignoring empty buffer (fileStart: \"+ab.fileStart+\")\");\n\t\tthis.stream.logBufferLevel();\n\t\treturn false;\n\t}\n\tLog.info(\"ISOFile\", \"Processing buffer (fileStart: \"+ab.fileStart+\")\");\n\n\t/* mark the bytes in the buffer as not being used yet */\n\tab.usedBytes = 0;\n\tthis.stream.insertBuffer(ab);\n\tthis.stream.logBufferLevel();\n\n\tif (!this.stream.initialized()) {\n\t\tLog.warn(\"ISOFile\", \"Not ready to start parsing\");\n\t\treturn false;\n\t}\n\treturn true;\n}\n\n/* Processes a new ArrayBuffer (with a fileStart property)\n   Returns the next expected file position, or undefined if not ready to parse */\nISOFile.prototype.appendBuffer = function(ab, last) {\n\tvar nextFileStart;\n\tif (!this.checkBuffer(ab)) {\n\t\treturn;\n\t}\n\n\t/* Parse whatever is in the existing buffers */\n\tthis.parse();\n\n\t/* Check if the moovStart callback needs to be called */\n\tif (this.moovStartFound && !this.moovStartSent) {\n\t\tthis.moovStartSent = true;\n\t\tif (this.onMoovStart) this.onMoovStart();\n\t}\n\n\tif (this.moov) {\n\t\t/* A moov box has been entirely parsed */\n\n\t\t/* if this is the first call after the moov is found we initialize the list of samples (may be empty in fragmented files) */\n\t\tif (!this.sampleListBuilt) {\n\t\t\tthis.buildSampleLists();\n\t\t\tthis.sampleListBuilt = true;\n\t\t}\n\n\t\t/* We update the sample information if there are any new moof boxes */\n\t\tthis.updateSampleLists();\n\n\t\t/* If the application needs to be informed that the 'moov' has been found,\n\t\t   we create the information object and callback the application */\n\t\tif (this.onReady && !this.readySent) {\n\t\t\tthis.readySent = true;\n\t\t\tthis.onReady(this.getInfo());\n\t\t}\n\n\t\t/* See if any sample extraction or segment creation needs to be done with the available samples */\n\t\tthis.processSamples(last);\n\n\t\t/* Inform about the best range to fetch next */\n\t\tif (this.nextSeekPosition) {\n\t\t\tnextFileStart = this.nextSeekPosition;\n\t\t\tthis.nextSeekPosition = undefined;\n\t\t} else {\n\t\t\tnextFileStart = this.nextParsePosition;\n\t\t}\n\t\tif (this.stream.getEndFilePositionAfter) {\n\t\t\tnextFileStart = this.stream.getEndFilePositionAfter(nextFileStart);\n\t\t}\n\t} else {\n\t\tif (this.nextParsePosition) {\n\t\t\t/* moov has not been parsed but the first buffer was received,\n\t\t\t   the next fetch should probably be the next box start */\n\t\t\tnextFileStart = this.nextParsePosition;\n\t\t} else {\n\t\t\t/* No valid buffer has been parsed yet, we cannot know what to parse next */\n\t\t\tnextFileStart = 0;\n\t\t}\n\t}\n\tif (this.sidx) {\n\t\tif (this.onSidx && !this.sidxSent) {\n\t\t\tthis.onSidx(this.sidx);\n\t\t\tthis.sidxSent = true;\n\t\t}\n\t}\n\tif (this.meta) {\n\t\tif (this.flattenItemInfo && !this.itemListBuilt) {\n\t\t\tthis.flattenItemInfo();\n\t\t\tthis.itemListBuilt = true;\n\t\t}\n\t\tif (this.processItems) {\n\t\t\tthis.processItems(this.onItem);\n\t\t}\n\t}\n\n\tif (this.stream.cleanBuffers) {\n\t\tLog.info(\"ISOFile\", \"Done processing buffer (fileStart: \"+ab.fileStart+\") - next buffer to fetch should have a fileStart position of \"+nextFileStart);\n\t\tthis.stream.logBufferLevel();\n\t\tthis.stream.cleanBuffers();\n\t\tthis.stream.logBufferLevel(true);\n\t\tLog.info(\"ISOFile\", \"Sample data size in memory: \"+this.getAllocatedSampleDataSize());\n\t}\n\treturn nextFileStart;\n}\n\nISOFile.prototype.getInfo = function() {\n\tvar i, j;\n\tvar movie = {};\n\tvar trak;\n\tvar track;\n\tvar ref;\n\tvar sample_desc;\n\tvar _1904 = (new Date('1904-01-01T00:00:00Z').getTime());\n\n\tif (this.moov) {\n\t\tmovie.hasMoov = true;\n\t\tmovie.duration = this.moov.mvhd.duration;\n\t\tmovie.timescale = this.moov.mvhd.timescale;\n\t\tmovie.isFragmented = (this.moov.mvex != null);\n\t\tif (movie.isFragmented && this.moov.mvex.mehd) {\n\t\t\tmovie.fragment_duration = this.moov.mvex.mehd.fragment_duration;\n\t\t}\n\t\tmovie.isProgressive = this.isProgressive;\n\t\tmovie.hasIOD = (this.moov.iods != null);\n\t\tmovie.brands = [];\n\t\tmovie.brands.push(this.ftyp.major_brand);\n\t\tmovie.brands = movie.brands.concat(this.ftyp.compatible_brands);\n\t\tmovie.created = new Date(_1904+this.moov.mvhd.creation_time*1000);\n\t\tmovie.modified = new Date(_1904+this.moov.mvhd.modification_time*1000);\n\t\tmovie.tracks = [];\n\t\tmovie.audioTracks = [];\n\t\tmovie.videoTracks = [];\n\t\tmovie.subtitleTracks = [];\n\t\tmovie.metadataTracks = [];\n\t\tmovie.hintTracks = [];\n\t\tmovie.otherTracks = [];\n\t\tfor (i = 0; i < this.moov.traks.length; i++) {\n\t\t\ttrak = this.moov.traks[i];\n\t\t\tsample_desc = trak.mdia.minf.stbl.stsd.entries[0];\n\t\t\ttrack = {};\n\t\t\tmovie.tracks.push(track);\n\t\t\ttrack.id = trak.tkhd.track_id;\n\t\t\ttrack.name = trak.mdia.hdlr.name;\n\t\t\ttrack.references = [];\n\t\t\tif (trak.tref) {\n\t\t\t\tfor (j = 0; j < trak.tref.boxes.length; j++) {\n\t\t\t\t\tref = {};\n\t\t\t\t\ttrack.references.push(ref);\n\t\t\t\t\tref.type = trak.tref.boxes[j].type;\n\t\t\t\t\tref.track_ids = trak.tref.boxes[j].track_ids;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (trak.edts) {\n\t\t\t\ttrack.edits = trak.edts.elst.entries;\n\t\t\t}\n\t\t\ttrack.created = new Date(_1904+trak.tkhd.creation_time*1000);\n\t\t\ttrack.modified = new Date(_1904+trak.tkhd.modification_time*1000);\n\t\t\ttrack.movie_duration = trak.tkhd.duration;\n\t\t\ttrack.movie_timescale = movie.timescale;\n\t\t\ttrack.layer = trak.tkhd.layer;\n\t\t\ttrack.alternate_group = trak.tkhd.alternate_group;\n\t\t\ttrack.volume = trak.tkhd.volume;\n\t\t\ttrack.matrix = trak.tkhd.matrix;\n\t\t\ttrack.track_width = trak.tkhd.width/(1<<16);\n\t\t\ttrack.track_height = trak.tkhd.height/(1<<16);\n\t\t\ttrack.timescale = trak.mdia.mdhd.timescale;\n\t\t\ttrack.cts_shift = trak.mdia.minf.stbl.cslg;\n\t\t\ttrack.duration = trak.mdia.mdhd.duration;\n\t\t\ttrack.samples_duration = trak.samples_duration;\n\t\t\ttrack.codec = sample_desc.getCodec();\n\t\t\ttrack.kind = (trak.udta && trak.udta.kinds.length ? trak.udta.kinds[0] : { schemeURI: \"\", value: \"\"});\n\t\t\ttrack.language = (trak.mdia.elng ? trak.mdia.elng.extended_language : trak.mdia.mdhd.languageString);\n\t\t\ttrack.nb_samples = trak.samples.length;\n\t\t\ttrack.size = trak.samples_size;\n\t\t\ttrack.bitrate = (track.size*8*track.timescale)/track.samples_duration;\n\t\t\tif (sample_desc.isAudio()) {\n\t\t\t\ttrack.type = \"audio\";\n\t\t\t\tmovie.audioTracks.push(track);\n\t\t\t\ttrack.audio = {};\n\t\t\t\ttrack.audio.sample_rate = sample_desc.getSampleRate();\n\t\t\t\ttrack.audio.channel_count = sample_desc.getChannelCount();\n\t\t\t\ttrack.audio.sample_size = sample_desc.getSampleSize();\n\t\t\t} else if (sample_desc.isVideo()) {\n\t\t\t\ttrack.type = \"video\";\n\t\t\t\tmovie.videoTracks.push(track);\n\t\t\t\ttrack.video = {};\n\t\t\t\ttrack.video.width = sample_desc.getWidth();\n\t\t\t\ttrack.video.height = sample_desc.getHeight();\n\t\t\t} else if (sample_desc.isSubtitle()) {\n\t\t\t\ttrack.type = \"subtitles\";\n\t\t\t\tmovie.subtitleTracks.push(track);\n\t\t\t} else if (sample_desc.isHint()) {\n\t\t\t\ttrack.type = \"metadata\";\n\t\t\t\tmovie.hintTracks.push(track);\n\t\t\t} else if (sample_desc.isMetadata()) {\n\t\t\t\ttrack.type = \"metadata\";\n\t\t\t\tmovie.metadataTracks.push(track);\n\t\t\t} else {\n\t\t\t\ttrack.type = \"metadata\";\n\t\t\t\tmovie.otherTracks.push(track);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tmovie.hasMoov = false;\n\t}\n\tmovie.mime = \"\";\n\tif (movie.hasMoov && movie.tracks) {\n\t\tif (movie.videoTracks && movie.videoTracks.length > 0) {\n\t\t\tmovie.mime += 'video/mp4; codecs=\\\"';\n\t\t} else if (movie.audioTracks && movie.audioTracks.length > 0) {\n\t\t\tmovie.mime += 'audio/mp4; codecs=\\\"';\n\t\t} else {\n\t\t\tmovie.mime += 'application/mp4; codecs=\\\"';\n\t\t}\n\t\tfor (i = 0; i < movie.tracks.length; i++) {\n\t\t\tif (i !== 0) movie.mime += ',';\n\t\t\tmovie.mime+= movie.tracks[i].codec;\n\t\t}\n\t\tmovie.mime += '\\\"; profiles=\\\"';\n\t\tmovie.mime += this.ftyp.compatible_brands.join();\n\t\tmovie.mime += '\\\"';\n\t}\n\treturn movie;\n}\n\nISOFile.prototype.processSamples = function(last) {\n\tvar i;\n\tvar trak;\n\tif (!this.sampleProcessingStarted) return;\n\n\t/* For each track marked for fragmentation,\n\t   check if the next sample is there (i.e. if the sample information is known (i.e. moof has arrived) and if it has been downloaded)\n\t   and create a fragment with it */\n\tif (this.isFragmentationInitialized && this.onSegment !== null) {\n\t\tfor (i = 0; i < this.fragmentedTracks.length; i++) {\n\t\t\tvar fragTrak = this.fragmentedTracks[i];\n\t\t\ttrak = fragTrak.trak;\n\t\t\twhile (trak.nextSample < trak.samples.length && this.sampleProcessingStarted) {\n\t\t\t\t/* The sample information is there (either because the file is not fragmented and this is not the last sample,\n\t\t\t\tor because the file is fragmented and the moof for that sample has been received */\n\t\t\t\tLog.debug(\"ISOFile\", \"Creating media fragment on track #\"+fragTrak.id +\" for sample \"+trak.nextSample);\n\t\t\t\tvar result = this.createFragment(fragTrak.id, trak.nextSample, fragTrak.segmentStream);\n\t\t\t\tif (result) {\n\t\t\t\t\tfragTrak.segmentStream = result;\n\t\t\t\t\ttrak.nextSample++;\n\t\t\t\t} else {\n\t\t\t\t\t/* The fragment could not be created because the media data is not there (not downloaded), wait for it */\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t/* A fragment is created by sample, but the segment is the accumulation in the buffer of these fragments.\n\t\t\t\t   It is flushed only as requested by the application (nb_samples) to avoid too many callbacks */\n\t\t\t\tif (trak.nextSample % fragTrak.nb_samples === 0 || (last || trak.nextSample >= trak.samples.length)) {\n\t\t\t\t\tLog.info(\"ISOFile\", \"Sending fragmented data on track #\"+fragTrak.id+\" for samples [\"+Math.max(0,trak.nextSample-fragTrak.nb_samples)+\",\"+(trak.nextSample-1)+\"]\");\n\t\t\t\t\tLog.info(\"ISOFile\", \"Sample data size in memory: \"+this.getAllocatedSampleDataSize());\n\t\t\t\t\tif (this.onSegment) {\n\t\t\t\t\t\tthis.onSegment(fragTrak.id, fragTrak.user, fragTrak.segmentStream.buffer, trak.nextSample, (last || trak.nextSample >= trak.samples.length));\n\t\t\t\t\t}\n\t\t\t\t\t/* force the creation of a new buffer */\n\t\t\t\t\tfragTrak.segmentStream = null;\n\t\t\t\t\tif (fragTrak !== this.fragmentedTracks[i]) {\n\t\t\t\t\t\t/* make sure we can stop fragmentation if needed */\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (this.onSamples !== null) {\n\t\t/* For each track marked for data export,\n\t\t   check if the next sample is there (i.e. has been downloaded) and send it */\n\t\tfor (i = 0; i < this.extractedTracks.length; i++) {\n\t\t\tvar extractTrak = this.extractedTracks[i];\n\t\t\ttrak = extractTrak.trak;\n\t\t\twhile (trak.nextSample < trak.samples.length && this.sampleProcessingStarted) {\n\t\t\t\tLog.debug(\"ISOFile\", \"Exporting on track #\"+extractTrak.id +\" sample #\"+trak.nextSample);\n\t\t\t\tvar sample = this.getSample(trak, trak.nextSample);\n\t\t\t\tif (sample) {\n\t\t\t\t\ttrak.nextSample++;\n\t\t\t\t\textractTrak.samples.push(sample);\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (trak.nextSample % extractTrak.nb_samples === 0 || trak.nextSample >= trak.samples.length) {\n\t\t\t\t\tLog.debug(\"ISOFile\", \"Sending samples on track #\"+extractTrak.id+\" for sample \"+trak.nextSample);\n\t\t\t\t\tif (this.onSamples) {\n\t\t\t\t\t\tthis.onSamples(extractTrak.id, extractTrak.user, extractTrak.samples);\n\t\t\t\t\t}\n\t\t\t\t\textractTrak.samples = [];\n\t\t\t\t\tif (extractTrak !== this.extractedTracks[i]) {\n\t\t\t\t\t\t/* check if the extraction needs to be stopped */\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/* Find and return specific boxes using recursion and early return */\nISOFile.prototype.getBox = function(type) {\n  var result = this.getBoxes(type, true);\n  return (result.length ? result[0] : null);\n}\n\nISOFile.prototype.getBoxes = function(type, returnEarly) {\n  var result = [];\n  ISOFile._sweep.call(this, type, result, returnEarly);\n  return result;\n}\n\nISOFile._sweep = function(type, result, returnEarly) {\n  if (this.type && this.type == type) result.push(this);\n  for (var box in this.boxes) {\n    if (result.length && returnEarly) return;\n    ISOFile._sweep.call(this.boxes[box], type, result, returnEarly);\n  }\n}\n\nISOFile.prototype.getTrackSamplesInfo = function(track_id) {\n\tvar track = this.getTrackById(track_id);\n\tif (track) {\n\t\treturn track.samples;\n\t} else {\n\t\treturn;\n\t}\n}\n\nISOFile.prototype.getTrackSample = function(track_id, number) {\n\tvar track = this.getTrackById(track_id);\n\tvar sample = this.getSample(track, number);\n\treturn sample;\n}\n\n/* Called by the application to release the resources associated to samples already forwarded to the application */\nISOFile.prototype.releaseUsedSamples = function (id, sampleNum) {\n\tvar size = 0;\n\tvar trak = this.getTrackById(id);\n\tif (!trak.lastValidSample) trak.lastValidSample = 0;\n\tfor (var i = trak.lastValidSample; i < sampleNum; i++) {\n\t\tsize+=this.releaseSample(trak, i);\n\t}\n\tLog.info(\"ISOFile\", \"Track #\"+id+\" released samples up to \"+sampleNum+\" (released size: \"+size+\", remaining: \"+this.samplesDataSize+\")\");\n\ttrak.lastValidSample = sampleNum;\n}\n\nISOFile.prototype.start = function() {\n\tthis.sampleProcessingStarted = true;\n\tthis.processSamples(false);\n}\n\nISOFile.prototype.stop = function() {\n\tthis.sampleProcessingStarted = false;\n}\n\n/* Called by the application to flush the remaining samples (e.g. once the download is finished or when no more samples will be added) */\nISOFile.prototype.flush = function() {\n\tLog.info(\"ISOFile\", \"Flushing remaining samples\");\n\tthis.updateSampleLists();\n\tthis.processSamples(true);\n\tthis.stream.cleanBuffers();\n\tthis.stream.logBufferLevel(true);\n}\n\n/* Finds the byte offset for a given time on a given track\n   also returns the time of the previous rap */\nISOFile.prototype.seekTrack = function(time, useRap, trak) {\n\tvar j;\n\tvar sample;\n\tvar seek_offset = Infinity;\n\tvar rap_seek_sample_num = 0;\n\tvar seek_sample_num = 0;\n\tvar timescale;\n\n\tif (trak.samples.length === 0) {\n\t\tLog.info(\"ISOFile\", \"No sample in track, cannot seek! Using time \"+Log.getDurationString(0, 1) +\" and offset: \"+0);\n\t\treturn { offset: 0, time: 0 };\n\t}\n\n\tfor (j = 0; j < trak.samples.length; j++) {\n\t\tsample = trak.samples[j];\n\t\tif (j === 0) {\n\t\t\tseek_sample_num = 0;\n\t\t\ttimescale = sample.timescale;\n\t\t} else if (sample.cts > time * sample.timescale) {\n\t\t\tseek_sample_num = j-1;\n\t\t\tbreak;\n\t\t}\n\t\tif (useRap && sample.is_sync) {\n\t\t\trap_seek_sample_num = j;\n\t\t}\n\t}\n\tif (useRap) {\n\t\tseek_sample_num = rap_seek_sample_num;\n\t}\n\ttime = trak.samples[seek_sample_num].cts;\n\ttrak.nextSample = seek_sample_num;\n\twhile (trak.samples[seek_sample_num].alreadyRead === trak.samples[seek_sample_num].size) {\n\t\t// No remaining samples to look for, all are downloaded.\n\t\tif (!trak.samples[seek_sample_num + 1]) {\n\t\t\tbreak;\n\t\t}\n\t\tseek_sample_num++;\n\t}\n\tseek_offset = trak.samples[seek_sample_num].offset+trak.samples[seek_sample_num].alreadyRead;\n\tLog.info(\"ISOFile\", \"Seeking to \"+(useRap ? \"RAP\": \"\")+\" sample #\"+trak.nextSample+\" on track \"+trak.tkhd.track_id+\", time \"+Log.getDurationString(time, timescale) +\" and offset: \"+seek_offset);\n\treturn { offset: seek_offset, time: time/timescale };\n}\n\n/* Finds the byte offset in the file corresponding to the given time or to the time of the previous RAP */\nISOFile.prototype.seek = function(time, useRap) {\n\tvar moov = this.moov;\n\tvar trak;\n\tvar trak_seek_info;\n\tvar i;\n\tvar seek_info = { offset: Infinity, time: Infinity };\n\tif (!this.moov) {\n\t\tthrow \"Cannot seek: moov not received!\";\n\t} else {\n\t\tfor (i = 0; i<moov.traks.length; i++) {\n\t\t\ttrak = moov.traks[i];\n\t\t\ttrak_seek_info = this.seekTrack(time, useRap, trak);\n\t\t\tif (trak_seek_info.offset < seek_info.offset) {\n\t\t\t\tseek_info.offset = trak_seek_info.offset;\n\t\t\t}\n\t\t\tif (trak_seek_info.time < seek_info.time) {\n\t\t\t\tseek_info.time = trak_seek_info.time;\n\t\t\t}\n\t\t}\n\t\tLog.info(\"ISOFile\", \"Seeking at time \"+Log.getDurationString(seek_info.time, 1)+\" needs a buffer with a fileStart position of \"+seek_info.offset);\n\t\tif (seek_info.offset === Infinity) {\n\t\t\t/* No sample info, in all tracks, cannot seek */\n\t\t\tseek_info = { offset: this.nextParsePosition, time: 0 };\n\t\t} else {\n\t\t\t/* check if the seek position is already in some buffer and\n\t\t\t in that case return the end of that buffer (or of the last contiguous buffer) */\n\t\t\t/* TODO: Should wait until append operations are done */\n\t\t\tseek_info.offset = this.stream.getEndFilePositionAfter(seek_info.offset);\n\t\t}\n\t\tLog.info(\"ISOFile\", \"Adjusted seek position (after checking data already in buffer): \"+seek_info.offset);\n\t\treturn seek_info;\n\t}\n}\n\nISOFile.prototype.equal = function(b) {\n\tvar box_index = 0;\n\twhile (box_index < this.boxes.length && box_index < b.boxes.length) {\n\t\tvar a_box = this.boxes[box_index];\n\t\tvar b_box = b.boxes[box_index];\n\t\tif (!BoxParser.boxEqual(a_box, b_box)) {\n\t\t\treturn false;\n\t\t}\n\t\tbox_index++;\n\t}\n\treturn true;\n}\n\nif (typeof exports !== 'undefined') {\n\texports.ISOFile = ISOFile;\n}\n// file:src/isofile-advanced-parsing.js\n/* position in the current buffer of the beginning of the last box parsed */\nISOFile.prototype.lastBoxStartPosition = 0;\n/* indicator if the parsing is stuck in the middle of an mdat box */\nISOFile.prototype.parsingMdat = null;\n/* next file position that the parser needs:\n    - 0 until the first buffer (i.e. fileStart ===0) has been received \n    - otherwise, the next box start until the moov box has been parsed\n    - otherwise, the position of the next sample to fetch\n */\nISOFile.prototype.nextParsePosition = 0;\n/* keep mdat data */\nISOFile.prototype.discardMdatData = false;\n\nISOFile.prototype.processIncompleteBox = function(ret) {\n\tvar box;\n\tvar merged;\n\tvar found;\n\t\n\t/* we did not have enough bytes in the current buffer to parse the entire box */\n\tif (ret.type === \"mdat\") { \n\t\t/* we had enough bytes to get its type and size and it's an 'mdat' */\n\t\t\n\t\t/* special handling for mdat boxes, since we don't actually need to parse it linearly \n\t\t   we create the box */\n\t\tbox = new BoxParser[ret.type+\"Box\"](ret.size);\t\n\t\tthis.parsingMdat = box;\n\t\tthis.boxes.push(box);\n\t\tthis.mdats.push(box);\t\t\t\n\t\tbox.start = ret.start;\n\t\tbox.hdr_size = ret.hdr_size;\n\t\tthis.stream.addUsedBytes(box.hdr_size);\n\n\t\t/* indicate that the parsing should start from the end of the box */\n\t\tthis.lastBoxStartPosition = box.start + box.size;\n \t\t/* let's see if we have the end of the box in the other buffers */\n\t\tfound = this.stream.seek(box.start + box.size, false, this.discardMdatData);\n\t\tif (found) {\n\t\t\t/* found the end of the box */\n\t\t\tthis.parsingMdat = null;\n\t\t\t/* let's see if we can parse more in this buffer */\n\t\t\treturn true;\n\t\t} else {\n\t\t\t/* 'mdat' end not found in the existing buffers */\n\t\t\t/* determine the next position in the file to start parsing from */\n\t\t\tif (!this.moovStartFound) {\n\t\t\t\t/* moov not find yet, \n\t\t\t\t   the file probably has 'mdat' at the beginning, and 'moov' at the end, \n\t\t\t\t   indicate that the downloader should not try to download those bytes now */\n\t\t\t\tthis.nextParsePosition = box.start + box.size;\n\t\t\t} else {\n\t\t\t\t/* we have the start of the moov box, \n\t\t\t\t   the next bytes should try to complete the current 'mdat' */\n\t\t\t\tthis.nextParsePosition = this.stream.findEndContiguousBuf();\n\t\t\t}\n\t\t\t/* not much we can do, wait for more buffers to arrive */\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\t/* box is incomplete, we may not even know its type */\n\t\tif (ret.type === \"moov\") { \n\t\t\t/* the incomplete box is a 'moov' box */\n\t\t\tthis.moovStartFound = true;\n\t\t\tif (this.mdats.length === 0) {\n\t\t\t\tthis.isProgressive = true;\n\t\t\t}\n\t\t}\n\t\t/* either it's not an mdat box (and we need to parse it, we cannot skip it)\n\t\t   (TODO: we could skip 'free' boxes ...)\n\t\t\t   or we did not have enough data to parse the type and size of the box, \n\t\t   we try to concatenate the current buffer with the next buffer to restart parsing */\n\t\tmerged = (this.stream.mergeNextBuffer ? this.stream.mergeNextBuffer() : false);\n\t\tif (merged) {\n\t\t\t/* The next buffer was contiguous, the merging succeeded,\n\t\t\t   we can now continue parsing, \n\t\t\t   the next best position to parse is at the end of this new buffer */\n\t\t\tthis.nextParsePosition = this.stream.getEndPosition();\n\t\t\treturn true;\n\t\t} else {\n\t\t\t/* we cannot concatenate existing buffers because they are not contiguous or because there is no additional buffer */\n\t\t\t/* The next best position to parse is still at the end of this old buffer */\n\t\t\tif (!ret.type) {\n\t\t\t\t/* There were not enough bytes in the buffer to parse the box type and length,\n\t\t\t\t   the next fetch should retrieve those missing bytes, i.e. the next bytes after this buffer */\n\t\t\t\tthis.nextParsePosition = this.stream.getEndPosition();\n\t\t\t} else {\n\t\t\t\t/* we had enough bytes to parse size and type of the incomplete box\n\t\t\t\t   if we haven't found yet the moov box, skip this one and try the next one \n\t\t\t\t   if we have found the moov box, let's continue linear parsing */\n\t\t\t\tif (this.moovStartFound) {\n\t\t\t\t\tthis.nextParsePosition = this.stream.getEndPosition();\n\t\t\t\t} else {\n\t\t\t\t\tthis.nextParsePosition = this.stream.getPosition() + ret.size;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t}\n}\n\nISOFile.prototype.hasIncompleteMdat = function () {\n\treturn (this.parsingMdat !== null);\n}\n\nISOFile.prototype.processIncompleteMdat = function () {\n\tvar box;\n\tvar found;\n\t\n\t/* we are in the parsing of an incomplete mdat box */\n\tbox = this.parsingMdat;\n\n\tfound = this.stream.seek(box.start + box.size, false, this.discardMdatData);\n\tif (found) {\n\t\tLog.debug(\"ISOFile\", \"Found 'mdat' end in buffered data\");\n\t\t/* the end of the mdat has been found */ \n\t\tthis.parsingMdat = null;\n\t\t/* we can parse more in this buffer */\n\t\treturn true;\n\t} else {\n\t\t/* we don't have the end of this mdat yet, \n\t\t   indicate that the next byte to fetch is the end of the buffers we have so far, \n\t\t   return and wait for more buffer to come */\n\t\tthis.nextParsePosition = this.stream.findEndContiguousBuf();\n\t\treturn false;\n\t}\n}\n\nISOFile.prototype.restoreParsePosition = function() {\n\t/* Reposition at the start position of the previous box not entirely parsed */\n\treturn this.stream.seek(this.lastBoxStartPosition, true, this.discardMdatData);\n}\n\nISOFile.prototype.saveParsePosition = function() {\n\t/* remember the position of the box start in case we need to roll back (if the box is incomplete) */\n\tthis.lastBoxStartPosition = this.stream.getPosition();\t\n}\n\nISOFile.prototype.updateUsedBytes = function(box, ret) {\n\tif (this.stream.addUsedBytes) {\n\t\tif (box.type === \"mdat\") {\n\t\t\t/* for an mdat box, only its header is considered used, other bytes will be used when sample data is requested */\n\t\t\tthis.stream.addUsedBytes(box.hdr_size);\n\t\t\tif (this.discardMdatData) {\n\t\t\t\tthis.stream.addUsedBytes(box.size-box.hdr_size);\n\t\t\t}\n\t\t} else {\n\t\t\t/* for all other boxes, the entire box data is considered used */\n\t\t\tthis.stream.addUsedBytes(box.size);\n\t\t}\t\n\t}\n}\n// file:src/isofile-advanced-creation.js\nISOFile.prototype.add = BoxParser.Box.prototype.add;\nISOFile.prototype.addBox = BoxParser.Box.prototype.addBox;\n\nISOFile.prototype.init = function (_options) {\n\tvar options = _options || {}; \n\tvar ftyp = this.add(\"ftyp\").set(\"major_brand\", (options.brands && options.brands[0]) || \"iso4\")\n\t\t\t\t\t\t\t   .set(\"minor_version\", 0)\n\t\t\t\t\t\t\t   .set(\"compatible_brands\", options.brands || [\"iso4\"]);\n\tvar moov = this.add(\"moov\");\n\tmoov.add(\"mvhd\").set(\"timescale\", options.timescale || 600)\n\t\t\t\t\t.set(\"rate\", options.rate || 1<<16)\n\t\t\t\t\t.set(\"creation_time\", 0)\n\t\t\t\t\t.set(\"modification_time\", 0)\n\t\t\t\t\t.set(\"duration\", options.duration || 0)\n\t\t\t\t\t.set(\"volume\", (options.width) ? 0 : 0x0100)\n\t\t\t\t\t.set(\"matrix\", [ 1<<16, 0, 0, 0, 1<<16, 0, 0, 0, 0x40000000])\n\t\t\t\t\t.set(\"next_track_id\", 1);\n\tmoov.add(\"mvex\");\n\treturn this;\n}\n\nISOFile.prototype.addTrack = function (_options) {\n\tif (!this.moov) {\n\t\tthis.init(_options);\n\t}\n\n\tvar options = _options || {}; \n\toptions.width = options.width || 320;\n\toptions.height = options.height || 320;\n\toptions.id = options.id || this.moov.mvhd.next_track_id;\n\toptions.type = options.type || \"avc1\";\n\n\tvar trak = this.moov.add(\"trak\");\n\tthis.moov.mvhd.next_track_id = options.id+1;\n\ttrak.add(\"tkhd\").set(\"flags\",BoxParser.TKHD_FLAG_ENABLED | \n\t\t\t\t\t\t\t\t BoxParser.TKHD_FLAG_IN_MOVIE | \n\t\t\t\t\t\t\t\t BoxParser.TKHD_FLAG_IN_PREVIEW)\n\t\t\t\t\t.set(\"creation_time\",0)\n\t\t\t\t\t.set(\"modification_time\", 0)\n\t\t\t\t\t.set(\"track_id\", options.id)\n\t\t\t\t\t.set(\"duration\", options.duration || 0)\n\t\t\t\t\t.set(\"layer\", options.layer || 0)\n\t\t\t\t\t.set(\"alternate_group\", 0)\n\t\t\t\t\t.set(\"volume\", 1)\n\t\t\t\t\t.set(\"matrix\", [ 0, 0, 0, 0, 0, 0, 0, 0, 0 ])\n\t\t\t\t\t.set(\"width\", options.width << 16)\n\t\t\t\t\t.set(\"height\", options.height << 16);\n\n\tvar mdia = trak.add(\"mdia\");\n\tmdia.add(\"mdhd\").set(\"creation_time\", 0)\n\t\t\t\t\t.set(\"modification_time\", 0)\n\t\t\t\t\t.set(\"timescale\", options.timescale || 1)\n\t\t\t\t\t.set(\"duration\", options.media_duration || 0)\n\t\t\t\t\t.set(\"language\", options.language || \"und\");\n\n\tmdia.add(\"hdlr\").set(\"handler\", options.hdlr || \"vide\")\n\t\t\t\t\t.set(\"name\", options.name || \"Track created with MP4Box.js\");\n\n\tmdia.add(\"elng\").set(\"extended_language\", options.language || \"fr-FR\");\n\n\tvar minf = mdia.add(\"minf\");\n\tif (BoxParser[options.type+\"SampleEntry\"] === undefined) return;\n\tvar sample_description_entry = new BoxParser[options.type+\"SampleEntry\"]();\n\tsample_description_entry.data_reference_index = 1;\n\tvar media_type = \"\";\n\tfor (var mediaType in BoxParser.sampleEntryCodes) {\n\t\tvar codes = BoxParser.sampleEntryCodes[mediaType];\n\t\tfor (var i = 0; i < codes.length; i++) {\n\t\t\tif (codes.indexOf(options.type) > -1) {\n\t\t\t\tmedia_type = mediaType;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tswitch(media_type) {\n\t\tcase \"Visual\":\n\t\t\tminf.add(\"vmhd\").set(\"graphicsmode\",0).set(\"opcolor\", [ 0, 0, 0 ]);\n\t\t\tsample_description_entry.set(\"width\", options.width)\n\t\t\t\t\t\t.set(\"height\", options.height)\n\t\t\t\t\t\t.set(\"horizresolution\", 0x48<<16)\n\t\t\t\t\t\t.set(\"vertresolution\", 0x48<<16)\n\t\t\t\t\t\t.set(\"frame_count\", 1)\n\t\t\t\t\t\t.set(\"compressorname\", options.type+\" Compressor\")\n\t\t\t\t\t\t.set(\"depth\", 0x18);\n\t\t\tif (options.avcDecoderConfigRecord) {\n\t\t\t\tvar avcC = new BoxParser.avcCBox();\n\t\t\t\tvar stream = new MP4BoxStream(options.avcDecoderConfigRecord);\n\t\t\t\tavcC.parse(stream);\n\t\t\t\tsample_description_entry.addBox(avcC);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"Audio\":\n\t\t\tminf.add(\"smhd\").set(\"balance\", options.balance || 0);\n\t\t\tsample_description_entry.set(\"channel_count\", options.channel_count || 2)\n\t\t\t\t\t\t.set(\"samplesize\", options.samplesize || 16)\n\t\t\t\t\t\t.set(\"samplerate\", options.samplerate || 1<<16);\n\t\t\tbreak;\n\t\tcase \"Hint\":\n\t\t\tminf.add(\"hmhd\"); // TODO: add properties\n\t\t\tbreak;\n\t\tcase \"Subtitle\":\n\t\t\tminf.add(\"sthd\");\n\t\t\tswitch (options.type) {\n\t\t\t\tcase \"stpp\":\n\t\t\t\t\tsample_description_entry.set(\"namespace\", options.namespace || \"nonamespace\")\n\t\t\t\t\t\t\t\t.set(\"schema_location\", options.schema_location || \"\")\n\t\t\t\t\t\t\t\t.set(\"auxiliary_mime_types\", options.auxiliary_mime_types || \"\");\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"Metadata\":\n\t\t\tminf.add(\"nmhd\");\n\t\t\tbreak;\n\t\tcase \"System\":\n\t\t\tminf.add(\"nmhd\");\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tminf.add(\"nmhd\");\n\t\t\tbreak;\n\t}\n\tif (options.description) {\n\t\tsample_description_entry.addBox(options.description);\n\t}\n\tif (options.description_boxes) {\n\t\toptions.description_boxes.forEach(function (b) {\n\t\t\tsample_description_entry.addBox(b);\n\t\t});\n\t}\n\tminf.add(\"dinf\").add(\"dref\").addEntry((new BoxParser[\"url Box\"]()).set(\"flags\", 0x1));\n\tvar stbl = minf.add(\"stbl\");\n\tstbl.add(\"stsd\").addEntry(sample_description_entry);\n\tstbl.add(\"stts\").set(\"sample_counts\", [])\n\t\t\t\t\t.set(\"sample_deltas\", []);\n\tstbl.add(\"stsc\").set(\"first_chunk\", [])\n\t\t\t\t\t.set(\"samples_per_chunk\", [])\n\t\t\t\t\t.set(\"sample_description_index\", []);\n\tstbl.add(\"stco\").set(\"chunk_offsets\", []);\n\tstbl.add(\"stsz\").set(\"sample_sizes\", []);\n\n\tthis.moov.mvex.add(\"trex\").set(\"track_id\", options.id)\n\t\t\t\t\t\t\t  .set(\"default_sample_description_index\", options.default_sample_description_index || 1)\n\t\t\t\t\t\t\t  .set(\"default_sample_duration\", options.default_sample_duration || 0)\n\t\t\t\t\t\t\t  .set(\"default_sample_size\", options.default_sample_size || 0)\n\t\t\t\t\t\t\t  .set(\"default_sample_flags\", options.default_sample_flags || 0);\n\tthis.buildTrakSampleLists(trak);\n\treturn options.id;\n}\n\nBoxParser.Box.prototype.computeSize = function(stream_) {\n\tvar stream = stream_ || new DataStream();\n\tstream.endianness = DataStream.BIG_ENDIAN;\n\tthis.write(stream);\n}\n\nISOFile.prototype.addSample = function (track_id, data, _options) {\n\tvar options = _options || {};\n\tvar sample = {};\n\tvar trak = this.getTrackById(track_id);\n\tif (trak === null) return;\n    sample.number = trak.samples.length;\n\tsample.track_id = trak.tkhd.track_id;\n\tsample.timescale = trak.mdia.mdhd.timescale;\n\tsample.description_index = (options.sample_description_index ? options.sample_description_index - 1: 0);\n\tsample.description = trak.mdia.minf.stbl.stsd.entries[sample.description_index];\n\tsample.data = data;\n\tsample.size = data.byteLength;\n\tsample.alreadyRead = sample.size;\n\tsample.duration = options.duration || 1;\n\tsample.cts = options.cts || 0;\n\tsample.dts = options.dts || 0;\n\tsample.is_sync = options.is_sync || false;\n\tsample.is_leading = options.is_leading || 0;\n\tsample.depends_on = options.depends_on || 0;\n\tsample.is_depended_on = options.is_depended_on || 0;\n\tsample.has_redundancy = options.has_redundancy || 0;\n\tsample.degradation_priority = options.degradation_priority || 0;\n\tsample.offset = 0;\n\tsample.subsamples = options.subsamples;\n\ttrak.samples.push(sample);\n\ttrak.samples_size += sample.size;\n\ttrak.samples_duration += sample.duration;\n\tif (!trak.first_dts) {\n\t\ttrak.first_dts = options.dts;\n\t}\n\n\tthis.processSamples();\n\t\n\tvar moof = this.createSingleSampleMoof(sample);\n\tthis.addBox(moof);\n\tmoof.computeSize();\n\t/* adjusting the data_offset now that the moof size is known*/\n\tmoof.trafs[0].truns[0].data_offset = moof.size+8; //8 is mdat header\n\tthis.add(\"mdat\").data = new Uint8Array(data);\n\treturn sample;\n}\n\nISOFile.prototype.createSingleSampleMoof = function(sample) {\n\tvar sample_flags = 0;\n\tif (sample.is_sync)\n\t\tsample_flags = (1 << 25);  // sample_depends_on_none (I picture)\n\telse\n\t\tsample_flags = (1 << 16);  // non-sync\n\n\tvar moof = new BoxParser.moofBox();\n\tmoof.add(\"mfhd\").set(\"sequence_number\", this.nextMoofNumber);\n\tthis.nextMoofNumber++;\n\tvar traf = moof.add(\"traf\");\n\tvar trak = this.getTrackById(sample.track_id);\n\ttraf.add(\"tfhd\").set(\"track_id\", sample.track_id)\n\t\t\t\t\t.set(\"flags\", BoxParser.TFHD_FLAG_DEFAULT_BASE_IS_MOOF);\n\ttraf.add(\"tfdt\").set(\"baseMediaDecodeTime\", (sample.dts - (trak.first_dts || 0)));\n\ttraf.add(\"trun\").set(\"flags\", BoxParser.TRUN_FLAGS_DATA_OFFSET | BoxParser.TRUN_FLAGS_DURATION | \n\t\t\t\t \t\t\t\t  BoxParser.TRUN_FLAGS_SIZE | BoxParser.TRUN_FLAGS_FLAGS | \n\t\t\t\t \t\t\t\t  BoxParser.TRUN_FLAGS_CTS_OFFSET)\n\t\t\t\t\t.set(\"data_offset\",0)\n\t\t\t\t\t.set(\"first_sample_flags\",0)\n\t\t\t\t\t.set(\"sample_count\",1)\n\t\t\t\t\t.set(\"sample_duration\",[sample.duration])\n\t\t\t\t\t.set(\"sample_size\",[sample.size])\n\t\t\t\t\t.set(\"sample_flags\",[sample_flags])\n\t\t\t\t\t.set(\"sample_composition_time_offset\", [sample.cts - sample.dts]);\n\treturn moof;\n}\n\n// file:src/isofile-sample-processing.js\n/* Index of the last moof box received */\nISOFile.prototype.lastMoofIndex = 0;\n\n/* size of the buffers allocated for samples */\nISOFile.prototype.samplesDataSize = 0;\n\n/* Resets all sample tables */\nISOFile.prototype.resetTables = function () {\n\tvar i;\n\tvar trak, stco, stsc, stsz, stts, ctts, stss;\n\tthis.initial_duration = this.moov.mvhd.duration;\n\tthis.moov.mvhd.duration = 0;\n\tfor (i = 0; i < this.moov.traks.length; i++) {\n\t\ttrak = this.moov.traks[i];\n\t\ttrak.tkhd.duration = 0;\n\t\ttrak.mdia.mdhd.duration = 0;\n\t\tstco = trak.mdia.minf.stbl.stco || trak.mdia.minf.stbl.co64;\n\t\tstco.chunk_offsets = [];\n\t\tstsc = trak.mdia.minf.stbl.stsc;\n\t\tstsc.first_chunk = [];\n\t\tstsc.samples_per_chunk = [];\n\t\tstsc.sample_description_index = [];\n\t\tstsz = trak.mdia.minf.stbl.stsz || trak.mdia.minf.stbl.stz2;\n\t\tstsz.sample_sizes = [];\n\t\tstts = trak.mdia.minf.stbl.stts;\n\t\tstts.sample_counts = [];\n\t\tstts.sample_deltas = [];\n\t\tctts = trak.mdia.minf.stbl.ctts;\n\t\tif (ctts) {\n\t\t\tctts.sample_counts = [];\n\t\t\tctts.sample_offsets = [];\n\t\t}\n\t\tstss = trak.mdia.minf.stbl.stss;\n\t\tvar k = trak.mdia.minf.stbl.boxes.indexOf(stss);\n\t\tif (k != -1) trak.mdia.minf.stbl.boxes[k] = null;\n\t}\n}\n\nISOFile.initSampleGroups = function(trak, traf, sbgps, trak_sgpds, traf_sgpds) {\n\tvar l;\n\tvar k;\n\tvar sample_groups_info;\n\tvar sample_group_info;\n\tvar sample_group_key;\n\tfunction SampleGroupInfo(_type, _parameter, _sbgp) {\n\t\tthis.grouping_type = _type;\n\t\tthis.grouping_type_parameter = _parameter;\n\t\tthis.sbgp = _sbgp;\n\t\tthis.last_sample_in_run = -1;\n\t\tthis.entry_index = -1;\t\t\n\t}\n\tif (traf) {\n\t\ttraf.sample_groups_info = [];\n\t} \n\tif (!trak.sample_groups_info) {\n\t\ttrak.sample_groups_info = [];\n\t}\n\tfor (k = 0; k < sbgps.length; k++) {\n\t\tsample_group_key = sbgps[k].grouping_type +\"/\"+ sbgps[k].grouping_type_parameter;\n\t\tsample_group_info = new SampleGroupInfo(sbgps[k].grouping_type, sbgps[k].grouping_type_parameter, sbgps[k]);\n\t\tif (traf) {\n\t\t\ttraf.sample_groups_info[sample_group_key] = sample_group_info;\n\t\t}\n\t\tif (!trak.sample_groups_info[sample_group_key]) {\n\t\t\ttrak.sample_groups_info[sample_group_key] = sample_group_info;\n\t\t}\n\t\tfor (l=0; l <trak_sgpds.length; l++) {\n\t\t\tif (trak_sgpds[l].grouping_type === sbgps[k].grouping_type) {\n\t\t\t\tsample_group_info.description = trak_sgpds[l];\n\t\t\t\tsample_group_info.description.used = true;\n\t\t\t}\n\t\t}\n\t\tif (traf_sgpds) {\n\t\t\tfor (l=0; l <traf_sgpds.length; l++) {\n\t\t\t\tif (traf_sgpds[l].grouping_type === sbgps[k].grouping_type) {\n\t\t\t\t\tsample_group_info.fragment_description = traf_sgpds[l];\n\t\t\t\t\tsample_group_info.fragment_description.used = true;\n\t\t\t\t\tsample_group_info.is_fragment = true;\n\t\t\t\t}\n\t\t\t}\t\t\t\n\t\t}\n\t}\n\tif (!traf) {\n\t\tfor (k = 0; k < trak_sgpds.length; k++) {\n\t\t\tif (!trak_sgpds[k].used && trak_sgpds[k].version >= 2) {\n\t\t\t\tsample_group_key = trak_sgpds[k].grouping_type +\"/0\";\n\t\t\t\tsample_group_info = new SampleGroupInfo(trak_sgpds[k].grouping_type, 0);\n\t\t\t\tif (!trak.sample_groups_info[sample_group_key]) {\n\t\t\t\t\ttrak.sample_groups_info[sample_group_key] = sample_group_info;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif (traf_sgpds) {\n\t\t\tfor (k = 0; k < traf_sgpds.length; k++) {\n\t\t\t\tif (!traf_sgpds[k].used && traf_sgpds[k].version >= 2) {\n\t\t\t\t\tsample_group_key = traf_sgpds[k].grouping_type +\"/0\";\n\t\t\t\t\tsample_group_info = new SampleGroupInfo(traf_sgpds[k].grouping_type, 0);\n\t\t\t\t\tsample_group_info.is_fragment = true;\n\t\t\t\t\tif (!traf.sample_groups_info[sample_group_key]) {\n\t\t\t\t\t\ttraf.sample_groups_info[sample_group_key] = sample_group_info;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nISOFile.setSampleGroupProperties = function(trak, sample, sample_number, sample_groups_info) {\n\tvar k;\n\tvar index;\n\tsample.sample_groups = [];\n\tfor (k in sample_groups_info) {\n\t\tsample.sample_groups[k] = {};\n\t\tsample.sample_groups[k].grouping_type = sample_groups_info[k].grouping_type;\n\t\tsample.sample_groups[k].grouping_type_parameter = sample_groups_info[k].grouping_type_parameter;\n\t\tif (sample_number >= sample_groups_info[k].last_sample_in_run) {\n\t\t\tif (sample_groups_info[k].last_sample_in_run < 0) {\n\t\t\t\tsample_groups_info[k].last_sample_in_run = 0;\n\t\t\t}\n\t\t\tsample_groups_info[k].entry_index++;\t\n\t\t\tif (sample_groups_info[k].entry_index <= sample_groups_info[k].sbgp.entries.length - 1) {\n\t\t\t\tsample_groups_info[k].last_sample_in_run += sample_groups_info[k].sbgp.entries[sample_groups_info[k].entry_index].sample_count;\n\t\t\t}\n\t\t}\n\t\tif (sample_groups_info[k].entry_index <= sample_groups_info[k].sbgp.entries.length - 1) {\n\t\t\tsample.sample_groups[k].group_description_index = sample_groups_info[k].sbgp.entries[sample_groups_info[k].entry_index].group_description_index;\n\t\t} else {\n\t\t\tsample.sample_groups[k].group_description_index = -1; // special value for not defined\n\t\t}\n\t\tif (sample.sample_groups[k].group_description_index !== 0) {\n\t\t\tvar description;\n\t\t\tif (sample_groups_info[k].fragment_description) {\n\t\t\t\tdescription = sample_groups_info[k].fragment_description;\n\t\t\t} else {\n\t\t\t\tdescription = sample_groups_info[k].description;\n\t\t\t}\n\t\t\tif (sample.sample_groups[k].group_description_index > 0) {\n\t\t\t\tif (sample.sample_groups[k].group_description_index > 65535) {\n\t\t\t\t\tindex = (sample.sample_groups[k].group_description_index >> 16)-1;\n\t\t\t\t} else {\n\t\t\t\t\tindex = sample.sample_groups[k].group_description_index-1;\n\t\t\t\t}\n\t\t\t\tif (description && index >= 0) {\n\t\t\t\t\tsample.sample_groups[k].description = description.entries[index];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (description && description.version >= 2) {\n\t\t\t\t\tif (description.default_group_description_index > 0) {\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tsample.sample_groups[k].description = description.entries[description.default_group_description_index-1];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nISOFile.process_sdtp = function (sdtp, sample, number) {\n\tif (!sample) {\n\t\treturn;\n\t}\n\tif (sdtp) {\n\t\tsample.is_leading = sdtp.is_leading[number];\n\t\tsample.depends_on = sdtp.sample_depends_on[number];\n\t\tsample.is_depended_on = sdtp.sample_is_depended_on[number];\n\t\tsample.has_redundancy = sdtp.sample_has_redundancy[number];\n\t} else {\n\t\tsample.is_leading = 0;\n\t\tsample.depends_on = 0;\n\t\tsample.is_depended_on = 0\n\t\tsample.has_redundancy = 0;\n\t}\t\n}\n\n/* Build initial sample list from  sample tables */\nISOFile.prototype.buildSampleLists = function() {\t\n\tvar i;\n\tvar trak;\n\tfor (i = 0; i < this.moov.traks.length; i++) {\n\t\ttrak = this.moov.traks[i];\n\t\tthis.buildTrakSampleLists(trak);\n\t}\n}\n\nISOFile.prototype.buildTrakSampleLists = function(trak) {\t\n\tvar j, k;\n\tvar stco, stsc, stsz, stts, ctts, stss, stsd, subs, sbgps, sgpds, stdp;\n\tvar chunk_run_index, chunk_index, last_chunk_in_run, offset_in_chunk, last_sample_in_chunk;\n\tvar last_sample_in_stts_run, stts_run_index, last_sample_in_ctts_run, ctts_run_index, last_stss_index, last_subs_index, subs_entry_index, last_subs_sample_index;\n\n\ttrak.samples = [];\n\ttrak.samples_duration = 0;\n\ttrak.samples_size = 0;\n\tstco = trak.mdia.minf.stbl.stco || trak.mdia.minf.stbl.co64;\n\tstsc = trak.mdia.minf.stbl.stsc;\n\tstsz = trak.mdia.minf.stbl.stsz || trak.mdia.minf.stbl.stz2;\n\tstts = trak.mdia.minf.stbl.stts;\n\tctts = trak.mdia.minf.stbl.ctts;\n\tstss = trak.mdia.minf.stbl.stss;\n\tstsd = trak.mdia.minf.stbl.stsd;\n\tsubs = trak.mdia.minf.stbl.subs;\n\tstdp = trak.mdia.minf.stbl.stdp;\n\tsbgps = trak.mdia.minf.stbl.sbgps;\n\tsgpds = trak.mdia.minf.stbl.sgpds;\n\t\n\tlast_sample_in_stts_run = -1;\n\tstts_run_index = -1;\n\tlast_sample_in_ctts_run = -1;\n\tctts_run_index = -1;\n\tlast_stss_index = 0;\n\tsubs_entry_index = 0;\n\tlast_subs_sample_index = 0;\t\t\n\n\tISOFile.initSampleGroups(trak, null, sbgps, sgpds);\n\n\tif (typeof stsz === \"undefined\") {\n\t\treturn;\n\t}\n\n\t/* we build the samples one by one and compute their properties */\n\tfor (j = 0; j < stsz.sample_sizes.length; j++) {\n\t\tvar sample = {};\n\t\tsample.number = j;\n\t\tsample.track_id = trak.tkhd.track_id;\n\t\tsample.timescale = trak.mdia.mdhd.timescale;\n\t\tsample.alreadyRead = 0;\n\t\ttrak.samples[j] = sample;\n\t\t/* size can be known directly */\n\t\tsample.size = stsz.sample_sizes[j];\n\t\ttrak.samples_size += sample.size;\n\t\t/* computing chunk-based properties (offset, sample description index)*/\n\t\tif (j === 0) {\t\t\t\t\n\t\t\tchunk_index = 1; /* the first sample is in the first chunk (chunk indexes are 1-based) */\n\t\t\tchunk_run_index = 0; /* the first chunk is the first entry in the first_chunk table */\n\t\t\tsample.chunk_index = chunk_index;\n\t\t\tsample.chunk_run_index = chunk_run_index;\n\t\t\tlast_sample_in_chunk = stsc.samples_per_chunk[chunk_run_index];\n\t\t\toffset_in_chunk = 0;\n\n\t\t\t/* Is there another entry in the first_chunk table ? */\n\t\t\tif (chunk_run_index + 1 < stsc.first_chunk.length) {\n\t\t\t\t/* The last chunk in the run is the chunk before the next first chunk */\n\t\t\t\tlast_chunk_in_run = stsc.first_chunk[chunk_run_index+1]-1; \t\n\t\t\t} else {\n\t\t\t\t/* There is only one entry in the table, it is valid for all future chunks*/\n\t\t\t\tlast_chunk_in_run = Infinity;\n\t\t\t}\n\t\t} else {\n\t\t\tif (j < last_sample_in_chunk) {\n\t\t\t\t/* the sample is still in the current chunk */\n\t\t\t\tsample.chunk_index = chunk_index;\n\t\t\t\tsample.chunk_run_index = chunk_run_index;\n\t\t\t} else {\n\t\t\t\t/* the sample is in the next chunk */\n\t\t\t\tchunk_index++;\n\t\t\t\tsample.chunk_index = chunk_index;\n\t\t\t\t/* reset the accumulated offset in the chunk */\n\t\t\t\toffset_in_chunk = 0;\n\t\t\t\tif (chunk_index <= last_chunk_in_run) {\n\t\t\t\t\t/* stay in the same entry of the first_chunk table */\n\t\t\t\t\t/* chunk_run_index unmodified */\n\t\t\t\t} else {\n\t\t\t\t\tchunk_run_index++;\n\t\t\t\t\t/* Is there another entry in the first_chunk table ? */\n\t\t\t\t\tif (chunk_run_index + 1 < stsc.first_chunk.length) {\n\t\t\t\t\t\t/* The last chunk in the run is the chunk before the next first chunk */\n\t\t\t\t\t\tlast_chunk_in_run = stsc.first_chunk[chunk_run_index+1]-1; \t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/* There is only one entry in the table, it is valid for all future chunks*/\n\t\t\t\t\t\tlast_chunk_in_run = Infinity;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\tsample.chunk_run_index = chunk_run_index;\n\t\t\t\tlast_sample_in_chunk += stsc.samples_per_chunk[chunk_run_index];\n\t\t\t}\n\t\t}\n\n\t\tsample.description_index = stsc.sample_description_index[sample.chunk_run_index]-1;\n\t\tsample.description = stsd.entries[sample.description_index];\n\t\tsample.offset = stco.chunk_offsets[sample.chunk_index-1] + offset_in_chunk; /* chunk indexes are 1-based */\n\t\toffset_in_chunk += sample.size;\n\n\t\t/* setting dts, cts, duration and rap flags */\n\t\tif (j > last_sample_in_stts_run) {\n\t\t\tstts_run_index++;\n\t\t\tif (last_sample_in_stts_run < 0) {\n\t\t\t\tlast_sample_in_stts_run = 0;\n\t\t\t}\n\t\t\tlast_sample_in_stts_run += stts.sample_counts[stts_run_index];\t\t\t\t\n\t\t}\n\t\tif (j > 0) {\n\t\t\ttrak.samples[j-1].duration = stts.sample_deltas[stts_run_index];\n\t\t\ttrak.samples_duration += trak.samples[j-1].duration;\n\t\t\tsample.dts = trak.samples[j-1].dts + trak.samples[j-1].duration;\n\t\t} else {\n\t\t\tsample.dts = 0;\n\t\t}\n\t\tif (ctts) {\n\t\t\tif (j >= last_sample_in_ctts_run) {\n\t\t\t\tctts_run_index++;\n\t\t\t\tif (last_sample_in_ctts_run < 0) {\n\t\t\t\t\tlast_sample_in_ctts_run = 0;\n\t\t\t\t}\n\t\t\t\tlast_sample_in_ctts_run += ctts.sample_counts[ctts_run_index];\t\t\t\t\n\t\t\t}\n\t\t\tsample.cts = trak.samples[j].dts + ctts.sample_offsets[ctts_run_index];\n\t\t} else {\n\t\t\tsample.cts = sample.dts;\n\t\t}\n\t\tif (stss) {\n\t\t\tif (j == stss.sample_numbers[last_stss_index] - 1) { // sample numbers are 1-based\n\t\t\t\tsample.is_sync = true;\n\t\t\t\tlast_stss_index++;\n\t\t\t} else {\n\t\t\t\tsample.is_sync = false;\t\t\t\t\n\t\t\t\tsample.degradation_priority = 0;\n\t\t\t}\n\t\t\tif (subs) {\n\t\t\t\tif (subs.entries[subs_entry_index].sample_delta + last_subs_sample_index == j+1) {\n\t\t\t\t\tsample.subsamples = subs.entries[subs_entry_index].subsamples;\n\t\t\t\t\tlast_subs_sample_index += subs.entries[subs_entry_index].sample_delta;\n\t\t\t\t\tsubs_entry_index++;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tsample.is_sync = true;\n\t\t}\n\t\tISOFile.process_sdtp(trak.mdia.minf.stbl.sdtp, sample, sample.number);\n\t\tif (stdp) {\n\t\t\tsample.degradation_priority = stdp.priority[j];\n\t\t} else {\n\t\t\tsample.degradation_priority = 0;\n\t\t}\n\t\tif (subs) {\n\t\t\tif (subs.entries[subs_entry_index].sample_delta + last_subs_sample_index == j) {\n\t\t\t\tsample.subsamples = subs.entries[subs_entry_index].subsamples;\n\t\t\t\tlast_subs_sample_index += subs.entries[subs_entry_index].sample_delta;\n\t\t\t}\n\t\t}\n\t\tif (sbgps.length > 0 || sgpds.length > 0) {\n\t\t\tISOFile.setSampleGroupProperties(trak, sample, j, trak.sample_groups_info);\n\t\t}\n\t}\n\tif (j>0) {\n\t\ttrak.samples[j-1].duration = Math.max(trak.mdia.mdhd.duration - trak.samples[j-1].dts, 0);\n\t\ttrak.samples_duration += trak.samples[j-1].duration;\n\t}\n}\n\n/* Update sample list when new 'moof' boxes are received */\nISOFile.prototype.updateSampleLists = function() {\t\n\tvar i, j, k;\n\tvar default_sample_description_index, default_sample_duration, default_sample_size, default_sample_flags;\n\tvar last_run_position;\n\tvar box, moof, traf, trak, trex;\n\tvar sample;\n\tvar sample_flags;\n\t\n\tif (this.moov === undefined) {\n\t\treturn;\n\t}\n\t/* if the input file is fragmented and fetched in multiple downloads, we need to update the list of samples */\n\twhile (this.lastMoofIndex < this.moofs.length) {\n\t\tbox = this.moofs[this.lastMoofIndex];\n\t\tthis.lastMoofIndex++;\n\t\tif (box.type == \"moof\") {\n\t\t\tmoof = box;\n\t\t\tfor (i = 0; i < moof.trafs.length; i++) {\n\t\t\t\ttraf = moof.trafs[i];\n\t\t\t\ttrak = this.getTrackById(traf.tfhd.track_id);\n\t\t\t\ttrex = this.getTrexById(traf.tfhd.track_id);\n\t\t\t\tif (traf.tfhd.flags & BoxParser.TFHD_FLAG_SAMPLE_DESC) {\n\t\t\t\t\tdefault_sample_description_index = traf.tfhd.default_sample_description_index;\n\t\t\t\t} else {\n\t\t\t\t\tdefault_sample_description_index = (trex ? trex.default_sample_description_index: 1);\n\t\t\t\t}\n\t\t\t\tif (traf.tfhd.flags & BoxParser.TFHD_FLAG_SAMPLE_DUR) {\n\t\t\t\t\tdefault_sample_duration = traf.tfhd.default_sample_duration;\n\t\t\t\t} else {\n\t\t\t\t\tdefault_sample_duration = (trex ? trex.default_sample_duration : 0);\n\t\t\t\t}\n\t\t\t\tif (traf.tfhd.flags & BoxParser.TFHD_FLAG_SAMPLE_SIZE) {\n\t\t\t\t\tdefault_sample_size = traf.tfhd.default_sample_size;\n\t\t\t\t} else {\n\t\t\t\t\tdefault_sample_size = (trex ? trex.default_sample_size : 0);\n\t\t\t\t}\n\t\t\t\tif (traf.tfhd.flags & BoxParser.TFHD_FLAG_SAMPLE_FLAGS) {\n\t\t\t\t\tdefault_sample_flags = traf.tfhd.default_sample_flags;\n\t\t\t\t} else {\n\t\t\t\t\tdefault_sample_flags = (trex ? trex.default_sample_flags : 0);\n\t\t\t\t}\n\t\t\t\ttraf.sample_number = 0;\n\t\t\t\t/* process sample groups */\n\t\t\t\tif (traf.sbgps.length > 0) {\n\t\t\t\t\tISOFile.initSampleGroups(trak, traf, traf.sbgps, trak.mdia.minf.stbl.sgpds, traf.sgpds);\n\t\t\t\t}\n\t\t\t\tfor (j = 0; j < traf.truns.length; j++) {\n\t\t\t\t\tvar trun = traf.truns[j];\n\t\t\t\t\tfor (k = 0; k < trun.sample_count; k++) {\n\t\t\t\t\t\tsample = {};\n\t\t\t\t\t\tsample.moof_number = this.lastMoofIndex;\n\t\t\t\t\t\tsample.number_in_traf = traf.sample_number;\n\t\t\t\t\t\ttraf.sample_number++;\n\t\t\t            sample.number = trak.samples.length;\n\t\t\t\t\t\ttraf.first_sample_index = trak.samples.length;\n\t\t\t\t\t\ttrak.samples.push(sample);\n\t\t\t\t\t\tsample.track_id = trak.tkhd.track_id;\n\t\t\t\t\t\tsample.timescale = trak.mdia.mdhd.timescale;\n\t\t\t\t\t\tsample.description_index = default_sample_description_index-1;\n\t\t\t\t\t\tsample.description = trak.mdia.minf.stbl.stsd.entries[sample.description_index];\n\t\t\t\t\t\tsample.size = default_sample_size;\n\t\t\t\t\t\tif (trun.flags & BoxParser.TRUN_FLAGS_SIZE) {\n\t\t\t\t\t\t\tsample.size = trun.sample_size[k];\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttrak.samples_size += sample.size;\n\t\t\t\t\t\tsample.duration = default_sample_duration;\n\t\t\t\t\t\tif (trun.flags & BoxParser.TRUN_FLAGS_DURATION) {\n\t\t\t\t\t\t\tsample.duration = trun.sample_duration[k];\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttrak.samples_duration += sample.duration;\n\t\t\t\t\t\tif (trak.first_traf_merged || k > 0) {\n\t\t\t\t\t\t\tsample.dts = trak.samples[trak.samples.length-2].dts+trak.samples[trak.samples.length-2].duration;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (traf.tfdt) {\n\t\t\t\t\t\t\t\tsample.dts = traf.tfdt.baseMediaDecodeTime;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsample.dts = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttrak.first_traf_merged = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsample.cts = sample.dts;\n\t\t\t\t\t\tif (trun.flags & BoxParser.TRUN_FLAGS_CTS_OFFSET) {\n\t\t\t\t\t\t\tsample.cts = sample.dts + trun.sample_composition_time_offset[k];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsample_flags = default_sample_flags;\n\t\t\t\t\t\tif (trun.flags & BoxParser.TRUN_FLAGS_FLAGS) {\n\t\t\t\t\t\t\tsample_flags = trun.sample_flags[k];\n\t\t\t\t\t\t} else if (k === 0 && (trun.flags & BoxParser.TRUN_FLAGS_FIRST_FLAG)) {\n\t\t\t\t\t\t\tsample_flags = trun.first_sample_flags;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsample.is_sync = ((sample_flags >> 16 & 0x1) ? false : true);\n\t\t\t\t\t\tsample.is_leading = (sample_flags >> 26 & 0x3);\n\t\t\t\t\t\tsample.depends_on = (sample_flags >> 24 & 0x3);\n\t\t\t\t\t\tsample.is_depended_on = (sample_flags >> 22 & 0x3);\n\t\t\t\t\t\tsample.has_redundancy = (sample_flags >> 20 & 0x3);\n\t\t\t\t\t\tsample.degradation_priority = (sample_flags & 0xFFFF);\n\t\t\t\t\t\t//ISOFile.process_sdtp(traf.sdtp, sample, sample.number_in_traf);\n\t\t\t\t\t\tvar bdop = (traf.tfhd.flags & BoxParser.TFHD_FLAG_BASE_DATA_OFFSET) ? true : false;\n\t\t\t\t\t\tvar dbim = (traf.tfhd.flags & BoxParser.TFHD_FLAG_DEFAULT_BASE_IS_MOOF) ? true : false;\n\t\t\t\t\t\tvar dop = (trun.flags & BoxParser.TRUN_FLAGS_DATA_OFFSET) ? true : false;\n\t\t\t\t\t\tvar bdo = 0;\n\t\t\t\t\t\tif (!bdop) {\n\t\t\t\t\t\t\tif (!dbim) {\n\t\t\t\t\t\t\t\tif (j === 0) { // the first track in the movie fragment\n\t\t\t\t\t\t\t\t\tbdo = moof.start; // the position of the first byte of the enclosing Movie Fragment Box\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tbdo = last_run_position; // end of the data defined by the preceding *track* (irrespective of the track id) fragment in the moof\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbdo = moof.start;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbdo = traf.tfhd.base_data_offset;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === 0 && k === 0) {\n\t\t\t\t\t\t\tif (dop) {\n\t\t\t\t\t\t\t\tsample.offset = bdo + trun.data_offset; // If the data-offset is present, it is relative to the base-data-offset established in the track fragment header\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsample.offset = bdo; // the data for this run starts the base-data-offset defined by the track fragment header\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsample.offset = last_run_position; // this run starts immediately after the data of the previous run\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlast_run_position = sample.offset + sample.size;\n\t\t\t\t\t\tif (traf.sbgps.length > 0 || traf.sgpds.length > 0 ||\n\t\t\t\t\t\t\ttrak.mdia.minf.stbl.sbgps.length > 0 || trak.mdia.minf.stbl.sgpds.length > 0) {\n\t\t\t\t\t\t\tISOFile.setSampleGroupProperties(trak, sample, sample.number_in_traf, traf.sample_groups_info);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (traf.subs) {\n\t\t\t\t\ttrak.has_fragment_subsamples = true;\n\t\t\t\t\tvar sample_index = traf.first_sample_index;\n\t\t\t\t\tfor (j = 0; j < traf.subs.entries.length; j++) {\n\t\t\t\t\t\tsample_index += traf.subs.entries[j].sample_delta;\n\t\t\t\t\t\tsample = trak.samples[sample_index-1];\n\t\t\t\t\t\tsample.subsamples = traf.subs.entries[j].subsamples;\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\t\n}\n\n/* Try to get sample data for a given sample:\n   returns null if not found\n   returns the same sample if already requested\n */\nISOFile.prototype.getSample = function(trak, sampleNum) {\t\n\tvar buffer;\n\tvar sample = trak.samples[sampleNum];\n\t\n\tif (!this.moov) {\n\t\treturn null;\n\t}\n\n\tif (!sample.data) {\n\t\t/* Not yet fetched */\n\t\tsample.data = new Uint8Array(sample.size);\n\t\tsample.alreadyRead = 0;\n\t\tthis.samplesDataSize += sample.size;\n\t\tLog.debug(\"ISOFile\", \"Allocating sample #\"+sampleNum+\" on track #\"+trak.tkhd.track_id+\" of size \"+sample.size+\" (total: \"+this.samplesDataSize+\")\");\n\t} else if (sample.alreadyRead == sample.size) {\n\t\t/* Already fetched entirely */\n\t\treturn sample;\n\t}\n\n\t/* The sample has only been partially fetched, we need to check in all buffers */\n\twhile(true) {\n\t\tvar index =\tthis.stream.findPosition(true, sample.offset + sample.alreadyRead, false);\n\t\tif (index > -1) {\n\t\t\tbuffer = this.stream.buffers[index];\n\t\t\tvar lengthAfterStart = buffer.byteLength - (sample.offset + sample.alreadyRead - buffer.fileStart);\n\t\t\tif (sample.size - sample.alreadyRead <= lengthAfterStart) {\n\t\t\t\t/* the (rest of the) sample is entirely contained in this buffer */\n\n\t\t\t\tLog.debug(\"ISOFile\",\"Getting sample #\"+sampleNum+\" data (alreadyRead: \"+sample.alreadyRead+\" offset: \"+\n\t\t\t\t\t(sample.offset+sample.alreadyRead - buffer.fileStart)+\" read size: \"+(sample.size - sample.alreadyRead)+\" full size: \"+sample.size+\")\");\n\n\t\t\t\tDataStream.memcpy(sample.data.buffer, sample.alreadyRead,\n\t\t\t\t                  buffer, sample.offset+sample.alreadyRead - buffer.fileStart, sample.size - sample.alreadyRead);\n\n\t\t\t\t/* update the number of bytes used in this buffer and check if it needs to be removed */\n\t\t\t\tbuffer.usedBytes += sample.size - sample.alreadyRead;\n\t\t\t\tthis.stream.logBufferLevel();\n\n\t\t\t\tsample.alreadyRead = sample.size;\n\n\t\t\t\treturn sample;\n\t\t\t} else {\n\t\t\t\t/* the sample does not end in this buffer */\n\n\t\t\t\tif (lengthAfterStart === 0) return null;\n\n\t\t\t\tLog.debug(\"ISOFile\",\"Getting sample #\"+sampleNum+\" partial data (alreadyRead: \"+sample.alreadyRead+\" offset: \"+\n\t\t\t\t\t(sample.offset+sample.alreadyRead - buffer.fileStart)+\" read size: \"+lengthAfterStart+\" full size: \"+sample.size+\")\");\n\n\t\t\t\tDataStream.memcpy(sample.data.buffer, sample.alreadyRead,\n\t\t\t\t                  buffer, sample.offset+sample.alreadyRead - buffer.fileStart, lengthAfterStart);\n\t\t\t\tsample.alreadyRead += lengthAfterStart;\n\n\t\t\t\t/* update the number of bytes used in this buffer and check if it needs to be removed */\n\t\t\t\tbuffer.usedBytes += lengthAfterStart;\n\t\t\t\tthis.stream.logBufferLevel();\n\n\t\t\t\t/* keep looking in the next buffer */\n\t\t\t}\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\n/* Release the memory used to store the data of the sample */\nISOFile.prototype.releaseSample = function(trak, sampleNum) {\t\n\tvar sample = trak.samples[sampleNum];\n\tif (sample.data) {\n\t\tthis.samplesDataSize -= sample.size;\n\t\tsample.data = null;\n\t\tsample.alreadyRead = 0;\n\t\treturn sample.size;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nISOFile.prototype.getAllocatedSampleDataSize = function() {\n\treturn this.samplesDataSize;\n}\n\n/* Builds the MIME Type 'codecs' sub-parameters for the whole file */\nISOFile.prototype.getCodecs = function() {\t\n\tvar i;\n\tvar codecs = \"\";\n\tfor (i = 0; i < this.moov.traks.length; i++) {\n\t\tvar trak = this.moov.traks[i];\n\t\tif (i>0) {\n\t\t\tcodecs+=\",\"; \n\t\t}\n\t\tcodecs += trak.mdia.minf.stbl.stsd.entries[0].getCodec();\t\t\n\t}\n\treturn codecs;\n}\n\n/* Helper function */\nISOFile.prototype.getTrexById = function(id) {\t\n\tvar i;\n\tif (!this.moov || !this.moov.mvex) return null;\n\tfor (i = 0; i < this.moov.mvex.trexs.length; i++) {\n\t\tvar trex = this.moov.mvex.trexs[i];\n\t\tif (trex.track_id == id) return trex;\n\t}\n\treturn null;\n}\n\n/* Helper function */\nISOFile.prototype.getTrackById = function(id) {\n\tif (this.moov === undefined) {\n\t\treturn null;\n\t}\n\tfor (var j = 0; j < this.moov.traks.length; j++) {\n\t\tvar trak = this.moov.traks[j];\n\t\tif (trak.tkhd.track_id == id) return trak;\n\t}\n\treturn null;\n}\n// file:src/isofile-item-processing.js\nISOFile.prototype.items = [];\n/* size of the buffers allocated for samples */\nISOFile.prototype.itemsDataSize = 0;\n\nISOFile.prototype.flattenItemInfo = function() {\t\n\tvar items = this.items;\n\tvar i, j;\n\tvar item;\n\tvar meta = this.meta;\n\tif (meta === null || meta === undefined) return;\n\tif (meta.hdlr === undefined) return;\n\tif (meta.iinf === undefined) return;\n\tfor (i = 0; i < meta.iinf.item_infos.length; i++) {\n\t\titem = {};\n\t\titem.id = meta.iinf.item_infos[i].item_ID;\n\t\titems[item.id] = item;\n\t\titem.ref_to = [];\n\t\titem.name = meta.iinf.item_infos[i].item_name;\n\t\tif (meta.iinf.item_infos[i].protection_index > 0) {\n\t\t\titem.protection = meta.ipro.protections[meta.iinf.item_infos[i].protection_index-1];\n\t\t}\n\t\tif (meta.iinf.item_infos[i].item_type) {\n\t\t\titem.type = meta.iinf.item_infos[i].item_type;\n\t\t} else {\n\t\t\titem.type = \"mime\";\n\t\t}\n\t\titem.content_type = meta.iinf.item_infos[i].content_type;\n\t\titem.content_encoding = meta.iinf.item_infos[i].content_encoding;\n\t}\n\tif (meta.iloc) {\n\t\tfor(i = 0; i < meta.iloc.items.length; i++) {\n\t\t\tvar offset;\n\t\t\tvar itemloc = meta.iloc.items[i];\n\t\t\titem = items[itemloc.item_ID];\n\t\t\tif (itemloc.data_reference_index !== 0) {\n\t\t\t\tLog.warn(\"Item storage with reference to other files: not supported\");\n\t\t\t\titem.source = meta.dinf.boxes[itemloc.data_reference_index-1];\n\t\t\t}\n\t\t\tswitch(itemloc.construction_method) {\n\t\t\t\tcase 0: // offset into the file referenced by the data reference index\n\t\t\t\tbreak;\n\t\t\t\tcase 1: // offset into the idat box of this meta box\n\t\t\t\tLog.warn(\"Item storage with construction_method : not supported\");\n\t\t\t\tbreak;\n\t\t\t\tcase 2: // offset into another item\n\t\t\t\tLog.warn(\"Item storage with construction_method : not supported\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\titem.extents = [];\n\t\t\titem.size = 0;\n\t\t\tfor (j = 0; j < itemloc.extents.length; j++) {\n\t\t\t\titem.extents[j] = {};\n\t\t\t\titem.extents[j].offset = itemloc.extents[j].extent_offset + itemloc.base_offset;\n\t\t\t\titem.extents[j].length = itemloc.extents[j].extent_length;\n\t\t\t\titem.extents[j].alreadyRead = 0;\n\t\t\t\titem.size += item.extents[j].length;\n\t\t\t}\n\t\t}\n\t}\n\tif (meta.pitm) {\n\t\titems[meta.pitm.item_id].primary = true;\n\t}\n\tif (meta.iref) {\n\t\tfor (i=0; i <meta.iref.references.length; i++) {\n\t\t\tvar ref = meta.iref.references[i];\n\t\t\tfor (j=0; j<ref.references.length; j++) {\n\t\t\t\titems[ref.from_item_ID].ref_to.push({type: ref.type, id: ref.references[j]});\n\t\t\t}\n\t\t}\n\t}\n\tif (meta.iprp) {\n\t\tfor (var k = 0; k < meta.iprp.ipmas.length; k++) {\n\t\t\tvar ipma = meta.iprp.ipmas[k];\n\t\t\tfor (i = 0; i < ipma.associations.length; i++) {\n\t\t\t\tvar association = ipma.associations[i];\n\t\t\t\titem = items[association.id];\n\t\t\t\tif (item.properties === undefined) {\n\t\t\t\t\titem.properties = {};\n\t\t\t\t\titem.properties.boxes = [];\n\t\t\t\t}\n\t\t\t\tfor (j = 0; j < association.props.length; j++) {\n\t\t\t\t\tvar propEntry = association.props[j];\n\t\t\t\t\tif (propEntry.property_index > 0 && propEntry.property_index-1 < meta.iprp.ipco.boxes.length) {\n\t\t\t\t\t\tvar propbox = meta.iprp.ipco.boxes[propEntry.property_index-1];\n\t\t\t\t\t\titem.properties[propbox.type] = propbox;\n\t\t\t\t\t\titem.properties.boxes.push(propbox);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nISOFile.prototype.getItem = function(item_id) {\t\n\tvar buffer;\n\tvar item;\n\t\n\tif (!this.meta) {\n\t\treturn null;\n\t}\n\n \titem = this.items[item_id];\n\tif (!item.data && item.size) {\n\t\t/* Not yet fetched */\n\t\titem.data = new Uint8Array(item.size);\n\t\titem.alreadyRead = 0;\n\t\tthis.itemsDataSize += item.size;\n\t\tLog.debug(\"ISOFile\", \"Allocating item #\"+item_id+\" of size \"+item.size+\" (total: \"+this.itemsDataSize+\")\");\n\t} else if (item.alreadyRead === item.size) {\n\t\t/* Already fetched entirely */\n\t\treturn item;\n\t}\n\n\t/* The item has only been partially fetched, we need to check in all buffers to find the remaining extents*/\n\n\tfor (var i = 0; i < item.extents.length; i++) {\n\t\tvar extent = item.extents[i];\n\t\tif (extent.alreadyRead === extent.length) {\n\t\t\tcontinue;\n\t\t} else {\n\t\t\tvar index =\tthis.stream.findPosition(true, extent.offset + extent.alreadyRead, false);\n\t\t\tif (index > -1) {\n\t\t\t\tbuffer = this.stream.buffers[index];\n\t\t\t\tvar lengthAfterStart = buffer.byteLength - (extent.offset + extent.alreadyRead - buffer.fileStart);\n\t\t\t\tif (extent.length - extent.alreadyRead <= lengthAfterStart) {\n\t\t\t\t\t/* the (rest of the) extent is entirely contained in this buffer */\n\n\t\t\t\t\tLog.debug(\"ISOFile\",\"Getting item #\"+item_id+\" extent #\"+i+\" data (alreadyRead: \"+extent.alreadyRead+\n\t\t\t\t\t\t\" offset: \"+(extent.offset+extent.alreadyRead - buffer.fileStart)+\" read size: \"+(extent.length - extent.alreadyRead)+\n\t\t\t\t\t\t\" full extent size: \"+extent.length+\" full item size: \"+item.size+\")\");\n\n\t\t\t\t\tDataStream.memcpy(item.data.buffer, item.alreadyRead, \n\t\t\t\t\t                  buffer, extent.offset+extent.alreadyRead - buffer.fileStart, extent.length - extent.alreadyRead);\n\n\t\t\t\t\t/* update the number of bytes used in this buffer and check if it needs to be removed */\n\t\t\t\t\tbuffer.usedBytes += extent.length - extent.alreadyRead;\n\t\t\t\t\tthis.stream.logBufferLevel();\n\n\t\t\t\t\titem.alreadyRead += (extent.length - extent.alreadyRead);\n\t\t\t\t\textent.alreadyRead = extent.length;\n\t\t\t\t} else {\n\t\t\t\t\t/* the sample does not end in this buffer */\n\n\t\t\t\t\tLog.debug(\"ISOFile\",\"Getting item #\"+item_id+\" extent #\"+i+\" partial data (alreadyRead: \"+extent.alreadyRead+\" offset: \"+\n\t\t\t\t\t\t(extent.offset+extent.alreadyRead - buffer.fileStart)+\" read size: \"+lengthAfterStart+\n\t\t\t\t\t\t\" full extent size: \"+extent.length+\" full item size: \"+item.size+\")\");\n\n\t\t\t\t\tDataStream.memcpy(item.data.buffer, item.alreadyRead, \n\t\t\t\t\t                  buffer, extent.offset+extent.alreadyRead - buffer.fileStart, lengthAfterStart);\n\t\t\t\t\textent.alreadyRead += lengthAfterStart;\n\t\t\t\t\titem.alreadyRead += lengthAfterStart;\n\n\t\t\t\t\t/* update the number of bytes used in this buffer and check if it needs to be removed */\n\t\t\t\t\tbuffer.usedBytes += lengthAfterStart;\n\t\t\t\t\tthis.stream.logBufferLevel();\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\tif (item.alreadyRead === item.size) {\n\t\t/* fetched entirely */\n\t\treturn item;\n\t} else {\n\t\treturn null;\n\t}\n}\n\n/* Release the memory used to store the data of the item */\nISOFile.prototype.releaseItem = function(item_id) {\t\n\tvar item = this.items[item_id];\n\tif (item.data) {\n\t\tthis.itemsDataSize -= item.size;\n\t\titem.data = null;\n\t\titem.alreadyRead = 0;\n\t\tfor (var i = 0; i < item.extents.length; i++) {\n\t\t\tvar extent = item.extents[i];\n\t\t\textent.alreadyRead = 0;\n\t\t}\n\t\treturn item.size;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\n\nISOFile.prototype.processItems = function(callback) {\n\tfor(var i in this.items) {\n\t\tvar item = this.items[i];\n\t\tthis.getItem(item.id);\n\t\tif (callback && !item.sent) {\n\t\t\tcallback(item);\n\t\t\titem.sent = true;\n\t\t\titem.data = null;\n\t\t}\n\t}\n}\n\nISOFile.prototype.hasItem = function(name) {\n\tfor(var i in this.items) {\n\t\tvar item = this.items[i];\n\t\tif (item.name === name) {\n\t\t\treturn item.id;\n\t\t}\n\t}\n\treturn -1;\n}\n\nISOFile.prototype.getMetaHandler = function() {\n\tif (!this.meta) {\n\t\treturn null;\n\t} else {\n\t\treturn this.meta.hdlr.handler;\t\t\n\t}\n}\n\nISOFile.prototype.getPrimaryItem = function() {\n\tif (!this.meta || !this.meta.pitm) {\n\t\treturn null;\n\t} else {\n\t\treturn this.getItem(this.meta.pitm.item_id);\n\t}\n}\n\nISOFile.prototype.itemToFragmentedTrackFile = function(_options) {\n\tvar options = _options || {};\n\tvar item = null;\n\tif (options.itemId) {\n\t\titem = this.getItem(options.itemId);\n\t} else {\n\t\titem = this.getPrimaryItem();\n\t}\n\tif (item == null) return null;\n\n\tvar file = new ISOFile();\n\tfile.discardMdatData = false;\n\t// assuming the track type is the same as the item type\n\tvar trackOptions = { type: item.type, description_boxes: item.properties.boxes};\n\tif (item.properties.ispe) {\n\t\ttrackOptions.width = item.properties.ispe.image_width;\n\t\ttrackOptions.height = item.properties.ispe.image_height;\n\t}\n\tvar trackId = file.addTrack(trackOptions);\n\tif (trackId) {\n\t\tfile.addSample(trackId, item.data);\n\t\treturn file;\n\t} else {\n\t\treturn null;\n\t}\n}\n\n// file:src/isofile-write.js\n/* Rewrite the entire file */\nISOFile.prototype.write = function(outstream) {\n\tfor (var i=0; i<this.boxes.length; i++) {\n\t\tthis.boxes[i].write(outstream);\n\t}\n}\n\nISOFile.prototype.createFragment = function(track_id, sampleNumber, stream_) {\n\tvar trak = this.getTrackById(track_id);\n\tvar sample = this.getSample(trak, sampleNumber);\n\tif (sample == null) {\n\t\tsample = trak.samples[sampleNumber];\n\t\tif (this.nextSeekPosition) {\n\t\t\tthis.nextSeekPosition = Math.min(sample.offset+sample.alreadyRead,this.nextSeekPosition);\n\t\t} else {\n\t\t\tthis.nextSeekPosition = trak.samples[sampleNumber].offset+sample.alreadyRead;\n\t\t}\n\t\treturn null;\n\t}\n\t\n\tvar stream = stream_ || new DataStream();\n\tstream.endianness = DataStream.BIG_ENDIAN;\n\n\tvar moof = this.createSingleSampleMoof(sample);\n\tmoof.write(stream);\n\n\t/* adjusting the data_offset now that the moof size is known*/\n\tmoof.trafs[0].truns[0].data_offset = moof.size+8; //8 is mdat header\n\tLog.debug(\"MP4Box\", \"Adjusting data_offset with new value \"+moof.trafs[0].truns[0].data_offset);\n\tstream.adjustUint32(moof.trafs[0].truns[0].data_offset_position, moof.trafs[0].truns[0].data_offset);\n\t\t\n\tvar mdat = new BoxParser.mdatBox();\n\tmdat.data = sample.data;\n\tmdat.write(stream);\n\treturn stream;\n}\n\n/* Modify the file and create the initialization segment */\nISOFile.writeInitializationSegment = function(ftyp, moov, total_duration, sample_duration) {\n\tvar i;\n\tvar index;\n\tvar mehd;\n\tvar trex;\n\tvar box;\n\tLog.debug(\"ISOFile\", \"Generating initialization segment\");\n\n\tvar stream = new DataStream();\n\tstream.endianness = DataStream.BIG_ENDIAN;\n\tftyp.write(stream);\n\t\n\t/* we can now create the new mvex box */\n\tvar mvex = moov.add(\"mvex\");\n\tif (total_duration) {\n\t\tmvex.add(\"mehd\").set(\"fragment_duration\", total_duration);\n\t}\n\tfor (i = 0; i < moov.traks.length; i++) {\n\t\tmvex.add(\"trex\").set(\"track_id\", moov.traks[i].tkhd.track_id)\n\t\t\t\t\t\t.set(\"default_sample_description_index\", 1)\n\t\t\t\t\t\t.set(\"default_sample_duration\", sample_duration)\n\t\t\t\t\t\t.set(\"default_sample_size\", 0)\n\t\t\t\t\t\t.set(\"default_sample_flags\", 1<<16)\n\t}\n\tmoov.write(stream);\n\n\treturn stream.buffer;\n\n}\n\nISOFile.prototype.save = function(name) {\n\tvar stream = new DataStream();\n\tstream.endianness = DataStream.BIG_ENDIAN;\n\tthis.write(stream);\n\tstream.save(name);\t\n}\n\nISOFile.prototype.getBuffer = function() {\n\tvar stream = new DataStream();\n\tstream.endianness = DataStream.BIG_ENDIAN;\n\tthis.write(stream);\n\treturn stream.buffer;\n}\n\nISOFile.prototype.initializeSegmentation = function() {\n\tvar i;\n\tvar j;\n\tvar box;\n\tvar initSegs;\n\tvar trak;\n\tvar seg;\n\tif (this.onSegment === null) {\n\t\tLog.warn(\"MP4Box\", \"No segmentation callback set!\");\n\t}\n\tif (!this.isFragmentationInitialized) {\n\t\tthis.isFragmentationInitialized = true;\t\t\n\t\tthis.nextMoofNumber = 0;\n\t\tthis.resetTables();\n\t}\t\n\tinitSegs = [];\t\n\tfor (i = 0; i < this.fragmentedTracks.length; i++) {\n\t\tvar moov = new BoxParser.moovBox();\n\t\tmoov.mvhd = this.moov.mvhd;\n\t    moov.boxes.push(moov.mvhd);\n\t\ttrak = this.getTrackById(this.fragmentedTracks[i].id);\n\t\tmoov.boxes.push(trak);\n\t\tmoov.traks.push(trak);\n\t\tseg = {};\n\t\tseg.id = trak.tkhd.track_id;\n\t\tseg.user = this.fragmentedTracks[i].user;\n\t\tseg.buffer = ISOFile.writeInitializationSegment(this.ftyp, moov, (this.moov.mvex && this.moov.mvex.mehd ? this.moov.mvex.mehd.fragment_duration: undefined), (this.moov.traks[i].samples.length>0 ? this.moov.traks[i].samples[0].duration: 0));\n\t\tinitSegs.push(seg);\n\t}\n\treturn initSegs;\n}\n\n// file:src/box-print.js\n/* \n * Copyright (c) Telecom ParisTech/TSI/MM/GPAC Cyril Concolato\n * License: BSD-3-Clause (see LICENSE file)\n */\nBoxParser.Box.prototype.printHeader = function(output) {\n\tthis.size += 8;\n\tif (this.size > MAX_SIZE) {\n\t\tthis.size += 8;\n\t}\n\tif (this.type === \"uuid\") {\n\t\tthis.size += 16;\n\t}\n\toutput.log(output.indent+\"size:\"+this.size);\n\toutput.log(output.indent+\"type:\"+this.type);\n}\n\nBoxParser.FullBox.prototype.printHeader = function(output) {\n\tthis.size += 4;\n\tBoxParser.Box.prototype.printHeader.call(this, output);\n\toutput.log(output.indent+\"version:\"+this.version);\n\toutput.log(output.indent+\"flags:\"+this.flags);\n}\n\nBoxParser.Box.prototype.print = function(output) {\n\tthis.printHeader(output);\n}\n\nBoxParser.ContainerBox.prototype.print = function(output) {\n\tthis.printHeader(output);\n\tfor (var i=0; i<this.boxes.length; i++) {\n\t\tif (this.boxes[i]) {\n\t\t\tvar prev_indent = output.indent;\n\t\t\toutput.indent += \" \";\n\t\t\tthis.boxes[i].print(output);\n\t\t\toutput.indent = prev_indent;\n\t\t}\n\t}\n}\n\nISOFile.prototype.print = function(output) {\n\toutput.indent = \"\";\n\tfor (var i=0; i<this.boxes.length; i++) {\n\t\tif (this.boxes[i]) {\n\t\t\tthis.boxes[i].print(output);\n\t\t}\n\t}\t\n}\n\nBoxParser.mvhdBox.prototype.print = function(output) {\n\tBoxParser.FullBox.prototype.printHeader.call(this, output);\n\toutput.log(output.indent+\"creation_time: \"+this.creation_time);\n\toutput.log(output.indent+\"modification_time: \"+this.modification_time);\n\toutput.log(output.indent+\"timescale: \"+this.timescale);\n\toutput.log(output.indent+\"duration: \"+this.duration);\n\toutput.log(output.indent+\"rate: \"+this.rate);\n\toutput.log(output.indent+\"volume: \"+(this.volume>>8));\n\toutput.log(output.indent+\"matrix: \"+this.matrix.join(\", \"));\n\toutput.log(output.indent+\"next_track_id: \"+this.next_track_id);\n}\n\nBoxParser.tkhdBox.prototype.print = function(output) {\n\tBoxParser.FullBox.prototype.printHeader.call(this, output);\n\toutput.log(output.indent+\"creation_time: \"+this.creation_time);\n\toutput.log(output.indent+\"modification_time: \"+this.modification_time);\n\toutput.log(output.indent+\"track_id: \"+this.track_id);\n\toutput.log(output.indent+\"duration: \"+this.duration);\n\toutput.log(output.indent+\"volume: \"+(this.volume>>8));\n\toutput.log(output.indent+\"matrix: \"+this.matrix.join(\", \"));\n\toutput.log(output.indent+\"layer: \"+this.layer);\n\toutput.log(output.indent+\"alternate_group: \"+this.alternate_group);\n\toutput.log(output.indent+\"width: \"+this.width);\n\toutput.log(output.indent+\"height: \"+this.height);\n}// file:src/mp4box.js\n/*\n * Copyright (c) 2012-2013. Telecom ParisTech/TSI/MM/GPAC Cyril Concolato\n * License: BSD-3-Clause (see LICENSE file)\n */\nvar MP4Box = {};\n\nMP4Box.createFile = function (_keepMdatData, _stream) {\n\t/* Boolean indicating if bytes containing media data should be kept in memory */\n\tvar keepMdatData = (_keepMdatData !== undefined ? _keepMdatData : true);\n\tvar file = new ISOFile(_stream);\n\tfile.discardMdatData = (keepMdatData ? false : true);\n\treturn file;\n}\n\nif (typeof exports !== 'undefined') {\n\texports.createFile = MP4Box.createFile;\n}\n","module.exports = \"var Module = typeof Module !== \\\"undefined\\\" ? Module : {};\\nvar moduleOverrides = {};\\nvar key;\\nfor (key in Module) {\\n  if (Module.hasOwnProperty(key)) {\\n    moduleOverrides[key] = Module[key];\\n  }\\n}\\nvar arguments_ = [];\\nvar thisProgram = \\\"./this.program\\\";\\nvar quit_ = function (status, toThrow) {\\n  throw toThrow;\\n};\\nvar ENVIRONMENT_IS_WEB = false;\\nvar ENVIRONMENT_IS_WORKER = false;\\nvar ENVIRONMENT_IS_NODE = false;\\nvar ENVIRONMENT_IS_SHELL = false;\\nENVIRONMENT_IS_WEB = typeof window === \\\"object\\\";\\nENVIRONMENT_IS_WORKER = typeof importScripts === \\\"function\\\";\\nENVIRONMENT_IS_NODE = typeof process === \\\"object\\\" && typeof process.versions === \\\"object\\\" && typeof process.versions.node === \\\"string\\\";\\nENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\\nvar scriptDirectory = \\\"\\\";\\nfunction locateFile(path) {\\n  if (Module[\\\"locateFile\\\"]) {\\n    return Module[\\\"locateFile\\\"](path, scriptDirectory);\\n  }\\n  return scriptDirectory + path;\\n}\\nvar read_, readAsync, readBinary, setWindowTitle;\\nvar nodeFS;\\nvar nodePath;\\nif (ENVIRONMENT_IS_NODE) {\\n  if (ENVIRONMENT_IS_WORKER) {\\n    scriptDirectory = require(\\\"path\\\").dirname(scriptDirectory) + \\\"/\\\";\\n  } else {\\n    scriptDirectory = __dirname + \\\"/\\\";\\n  }\\n  read_ = function shell_read(filename, binary) {\\n    if (!nodeFS) nodeFS = require(\\\"fs\\\");\\n    if (!nodePath) nodePath = require(\\\"path\\\");\\n    filename = nodePath[\\\"normalize\\\"](filename);\\n    return nodeFS[\\\"readFileSync\\\"](filename, binary ? null : \\\"utf8\\\");\\n  };\\n  readBinary = function readBinary(filename) {\\n    var ret = read_(filename, true);\\n    if (!ret.buffer) {\\n      ret = new Uint8Array(ret);\\n    }\\n    assert(ret.buffer);\\n    return ret;\\n  };\\n  if (process[\\\"argv\\\"].length > 1) {\\n    thisProgram = process[\\\"argv\\\"][1].replace(/\\\\\\\\/g, \\\"/\\\");\\n  }\\n  arguments_ = process[\\\"argv\\\"].slice(2);\\n  if (typeof module !== \\\"undefined\\\") {\\n    module[\\\"exports\\\"] = Module;\\n  }\\n  process[\\\"on\\\"](\\\"uncaughtException\\\", function (ex) {\\n    if (!(ex instanceof ExitStatus)) {\\n      throw ex;\\n    }\\n  });\\n  process[\\\"on\\\"](\\\"unhandledRejection\\\", abort);\\n  quit_ = function (status) {\\n    process[\\\"exit\\\"](status);\\n  };\\n  Module[\\\"inspect\\\"] = function () {\\n    return \\\"[Emscripten Module object]\\\";\\n  };\\n} else if (ENVIRONMENT_IS_SHELL) {\\n  if (typeof read != \\\"undefined\\\") {\\n    read_ = function shell_read(f) {\\n      return read(f);\\n    };\\n  }\\n  readBinary = function readBinary(f) {\\n    var data;\\n    if (typeof readbuffer === \\\"function\\\") {\\n      return new Uint8Array(readbuffer(f));\\n    }\\n    data = read(f, \\\"binary\\\");\\n    assert(typeof data === \\\"object\\\");\\n    return data;\\n  };\\n  if (typeof scriptArgs != \\\"undefined\\\") {\\n    arguments_ = scriptArgs;\\n  } else if (typeof arguments != \\\"undefined\\\") {\\n    arguments_ = arguments;\\n  }\\n  if (typeof quit === \\\"function\\\") {\\n    quit_ = function (status) {\\n      quit(status);\\n    };\\n  }\\n  if (typeof print !== \\\"undefined\\\") {\\n    if (typeof console === \\\"undefined\\\") console = {};\\n    console.log = print;\\n    console.warn = console.error = typeof printErr !== \\\"undefined\\\" ? printErr : print;\\n  }\\n} else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\\n  if (ENVIRONMENT_IS_WORKER) {\\n    scriptDirectory = self.location.href;\\n  } else if (document.currentScript) {\\n    scriptDirectory = document.currentScript.src;\\n  }\\n  if (scriptDirectory.indexOf(\\\"blob:\\\") !== 0) {\\n    scriptDirectory = scriptDirectory.substr(0, scriptDirectory.lastIndexOf(\\\"/\\\") + 1);\\n  } else {\\n    scriptDirectory = \\\"\\\";\\n  }\\n  {\\n    read_ = function shell_read(url) {\\n      var xhr = new XMLHttpRequest();\\n      xhr.open(\\\"GET\\\", url, false);\\n      xhr.send(null);\\n      return xhr.responseText;\\n    };\\n    if (ENVIRONMENT_IS_WORKER) {\\n      readBinary = function readBinary(url) {\\n        var xhr = new XMLHttpRequest();\\n        xhr.open(\\\"GET\\\", url, false);\\n        xhr.responseType = \\\"arraybuffer\\\";\\n        xhr.send(null);\\n        return new Uint8Array(xhr.response);\\n      };\\n    }\\n    readAsync = function readAsync(url, onload, onerror) {\\n      var xhr = new XMLHttpRequest();\\n      xhr.open(\\\"GET\\\", url, true);\\n      xhr.responseType = \\\"arraybuffer\\\";\\n      xhr.onload = function xhr_onload() {\\n        if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\\n          onload(xhr.response);\\n          return;\\n        }\\n        onerror();\\n      };\\n      xhr.onerror = onerror;\\n      xhr.send(null);\\n    };\\n  }\\n  setWindowTitle = function (title) {\\n    document.title = title;\\n  };\\n} else {}\\nvar out = Module[\\\"print\\\"] || console.log.bind(console);\\nvar err = Module[\\\"printErr\\\"] || console.warn.bind(console);\\nfor (key in moduleOverrides) {\\n  if (moduleOverrides.hasOwnProperty(key)) {\\n    Module[key] = moduleOverrides[key];\\n  }\\n}\\nmoduleOverrides = null;\\nif (Module[\\\"arguments\\\"]) arguments_ = Module[\\\"arguments\\\"];\\nif (Module[\\\"thisProgram\\\"]) thisProgram = Module[\\\"thisProgram\\\"];\\nif (Module[\\\"quit\\\"]) quit_ = Module[\\\"quit\\\"];\\nfunction dynamicAlloc(size) {\\n  var ret = HEAP32[DYNAMICTOP_PTR >> 2];\\n  var end = ret + size + 15 & -16;\\n  HEAP32[DYNAMICTOP_PTR >> 2] = end;\\n  return ret;\\n}\\nfunction getNativeTypeSize(type) {\\n  switch (type) {\\n    case \\\"i1\\\":\\n    case \\\"i8\\\":\\n      return 1;\\n    case \\\"i16\\\":\\n      return 2;\\n    case \\\"i32\\\":\\n      return 4;\\n    case \\\"i64\\\":\\n      return 8;\\n    case \\\"float\\\":\\n      return 4;\\n    case \\\"double\\\":\\n      return 8;\\n    default:\\n      {\\n        if (type[type.length - 1] === \\\"*\\\") {\\n          return 4;\\n        } else if (type[0] === \\\"i\\\") {\\n          var bits = Number(type.substr(1));\\n          assert(bits % 8 === 0, \\\"getNativeTypeSize invalid bits \\\" + bits + \\\", type \\\" + type);\\n          return bits / 8;\\n        } else {\\n          return 0;\\n        }\\n      }\\n  }\\n}\\nvar tempRet0 = 0;\\nvar setTempRet0 = function (value) {\\n  tempRet0 = value;\\n};\\nvar getTempRet0 = function () {\\n  return tempRet0;\\n};\\nvar wasmBinary;\\nif (Module[\\\"wasmBinary\\\"]) wasmBinary = Module[\\\"wasmBinary\\\"];\\nvar noExitRuntime;\\nif (Module[\\\"noExitRuntime\\\"]) noExitRuntime = Module[\\\"noExitRuntime\\\"];\\nif (typeof WebAssembly !== \\\"object\\\") {\\n  err(\\\"no native wasm support detected\\\");\\n}\\nfunction setValue(ptr, value, type, noSafe) {\\n  type = type || \\\"i8\\\";\\n  if (type.charAt(type.length - 1) === \\\"*\\\") type = \\\"i32\\\";\\n  switch (type) {\\n    case \\\"i1\\\":\\n      HEAP8[ptr >> 0] = value;\\n      break;\\n    case \\\"i8\\\":\\n      HEAP8[ptr >> 0] = value;\\n      break;\\n    case \\\"i16\\\":\\n      HEAP16[ptr >> 1] = value;\\n      break;\\n    case \\\"i32\\\":\\n      HEAP32[ptr >> 2] = value;\\n      break;\\n    case \\\"i64\\\":\\n      tempI64 = [value >>> 0, (tempDouble = value, +Math_abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math_min(+Math_floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[ptr >> 2] = tempI64[0], HEAP32[ptr + 4 >> 2] = tempI64[1];\\n      break;\\n    case \\\"float\\\":\\n      HEAPF32[ptr >> 2] = value;\\n      break;\\n    case \\\"double\\\":\\n      HEAPF64[ptr >> 3] = value;\\n      break;\\n    default:\\n      abort(\\\"invalid type for setValue: \\\" + type);\\n  }\\n}\\nvar wasmMemory;\\nvar wasmTable = new WebAssembly.Table({\\n  \\\"initial\\\": 522,\\n  \\\"maximum\\\": 522 + 0,\\n  \\\"element\\\": \\\"anyfunc\\\"\\n});\\nvar ABORT = false;\\nvar EXITSTATUS = 0;\\nfunction assert(condition, text) {\\n  if (!condition) {\\n    abort(\\\"Assertion failed: \\\" + text);\\n  }\\n}\\nfunction getCFunc(ident) {\\n  var func = Module[\\\"_\\\" + ident];\\n  assert(func, \\\"Cannot call unknown function \\\" + ident + \\\", make sure it is exported\\\");\\n  return func;\\n}\\nfunction ccall(ident, returnType, argTypes, args, opts) {\\n  var toC = {\\n    \\\"string\\\": function (str) {\\n      var ret = 0;\\n      if (str !== null && str !== undefined && str !== 0) {\\n        var len = (str.length << 2) + 1;\\n        ret = stackAlloc(len);\\n        stringToUTF8(str, ret, len);\\n      }\\n      return ret;\\n    },\\n    \\\"array\\\": function (arr) {\\n      var ret = stackAlloc(arr.length);\\n      writeArrayToMemory(arr, ret);\\n      return ret;\\n    }\\n  };\\n  function convertReturnValue(ret) {\\n    if (returnType === \\\"string\\\") return UTF8ToString(ret);\\n    if (returnType === \\\"boolean\\\") return Boolean(ret);\\n    return ret;\\n  }\\n  var func = getCFunc(ident);\\n  var cArgs = [];\\n  var stack = 0;\\n  if (args) {\\n    for (var i = 0; i < args.length; i++) {\\n      var converter = toC[argTypes[i]];\\n      if (converter) {\\n        if (stack === 0) stack = stackSave();\\n        cArgs[i] = converter(args[i]);\\n      } else {\\n        cArgs[i] = args[i];\\n      }\\n    }\\n  }\\n  var ret = func.apply(null, cArgs);\\n  ret = convertReturnValue(ret);\\n  if (stack !== 0) stackRestore(stack);\\n  return ret;\\n}\\nfunction cwrap(ident, returnType, argTypes, opts) {\\n  argTypes = argTypes || [];\\n  var numericArgs = argTypes.every(function (type) {\\n    return type === \\\"number\\\";\\n  });\\n  var numericRet = returnType !== \\\"string\\\";\\n  if (numericRet && numericArgs && !opts) {\\n    return getCFunc(ident);\\n  }\\n  return function () {\\n    return ccall(ident, returnType, argTypes, arguments, opts);\\n  };\\n}\\nvar ALLOC_NONE = 3;\\nfunction allocate(slab, types, allocator, ptr) {\\n  var zeroinit, size;\\n  if (typeof slab === \\\"number\\\") {\\n    zeroinit = true;\\n    size = slab;\\n  } else {\\n    zeroinit = false;\\n    size = slab.length;\\n  }\\n  var singleType = typeof types === \\\"string\\\" ? types : null;\\n  var ret;\\n  if (allocator == ALLOC_NONE) {\\n    ret = ptr;\\n  } else {\\n    ret = [_malloc, stackAlloc, dynamicAlloc][allocator](Math.max(size, singleType ? 1 : types.length));\\n  }\\n  if (zeroinit) {\\n    var stop;\\n    ptr = ret;\\n    assert((ret & 3) == 0);\\n    stop = ret + (size & ~3);\\n    for (; ptr < stop; ptr += 4) {\\n      HEAP32[ptr >> 2] = 0;\\n    }\\n    stop = ret + size;\\n    while (ptr < stop) {\\n      HEAP8[ptr++ >> 0] = 0;\\n    }\\n    return ret;\\n  }\\n  if (singleType === \\\"i8\\\") {\\n    if (slab.subarray || slab.slice) {\\n      HEAPU8.set(slab, ret);\\n    } else {\\n      HEAPU8.set(new Uint8Array(slab), ret);\\n    }\\n    return ret;\\n  }\\n  var i = 0,\\n    type,\\n    typeSize,\\n    previousType;\\n  while (i < size) {\\n    var curr = slab[i];\\n    type = singleType || types[i];\\n    if (type === 0) {\\n      i++;\\n      continue;\\n    }\\n    if (type == \\\"i64\\\") type = \\\"i32\\\";\\n    setValue(ret + i, curr, type);\\n    if (previousType !== type) {\\n      typeSize = getNativeTypeSize(type);\\n      previousType = type;\\n    }\\n    i += typeSize;\\n  }\\n  return ret;\\n}\\nvar UTF8Decoder = typeof TextDecoder !== \\\"undefined\\\" ? new TextDecoder(\\\"utf8\\\") : undefined;\\nfunction UTF8ArrayToString(heap, idx, maxBytesToRead) {\\n  var endIdx = idx + maxBytesToRead;\\n  var endPtr = idx;\\n  while (heap[endPtr] && !(endPtr >= endIdx)) ++endPtr;\\n  if (endPtr - idx > 16 && heap.subarray && UTF8Decoder) {\\n    return UTF8Decoder.decode(heap.subarray(idx, endPtr));\\n  } else {\\n    var str = \\\"\\\";\\n    while (idx < endPtr) {\\n      var u0 = heap[idx++];\\n      if (!(u0 & 128)) {\\n        str += String.fromCharCode(u0);\\n        continue;\\n      }\\n      var u1 = heap[idx++] & 63;\\n      if ((u0 & 224) == 192) {\\n        str += String.fromCharCode((u0 & 31) << 6 | u1);\\n        continue;\\n      }\\n      var u2 = heap[idx++] & 63;\\n      if ((u0 & 240) == 224) {\\n        u0 = (u0 & 15) << 12 | u1 << 6 | u2;\\n      } else {\\n        u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heap[idx++] & 63;\\n      }\\n      if (u0 < 65536) {\\n        str += String.fromCharCode(u0);\\n      } else {\\n        var ch = u0 - 65536;\\n        str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\\n      }\\n    }\\n  }\\n  return str;\\n}\\nfunction UTF8ToString(ptr, maxBytesToRead) {\\n  return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \\\"\\\";\\n}\\nfunction stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\\n  if (!(maxBytesToWrite > 0)) return 0;\\n  var startIdx = outIdx;\\n  var endIdx = outIdx + maxBytesToWrite - 1;\\n  for (var i = 0; i < str.length; ++i) {\\n    var u = str.charCodeAt(i);\\n    if (u >= 55296 && u <= 57343) {\\n      var u1 = str.charCodeAt(++i);\\n      u = 65536 + ((u & 1023) << 10) | u1 & 1023;\\n    }\\n    if (u <= 127) {\\n      if (outIdx >= endIdx) break;\\n      heap[outIdx++] = u;\\n    } else if (u <= 2047) {\\n      if (outIdx + 1 >= endIdx) break;\\n      heap[outIdx++] = 192 | u >> 6;\\n      heap[outIdx++] = 128 | u & 63;\\n    } else if (u <= 65535) {\\n      if (outIdx + 2 >= endIdx) break;\\n      heap[outIdx++] = 224 | u >> 12;\\n      heap[outIdx++] = 128 | u >> 6 & 63;\\n      heap[outIdx++] = 128 | u & 63;\\n    } else {\\n      if (outIdx + 3 >= endIdx) break;\\n      heap[outIdx++] = 240 | u >> 18;\\n      heap[outIdx++] = 128 | u >> 12 & 63;\\n      heap[outIdx++] = 128 | u >> 6 & 63;\\n      heap[outIdx++] = 128 | u & 63;\\n    }\\n  }\\n  heap[outIdx] = 0;\\n  return outIdx - startIdx;\\n}\\nfunction stringToUTF8(str, outPtr, maxBytesToWrite) {\\n  return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\\n}\\nfunction lengthBytesUTF8(str) {\\n  var len = 0;\\n  for (var i = 0; i < str.length; ++i) {\\n    var u = str.charCodeAt(i);\\n    if (u >= 55296 && u <= 57343) u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;\\n    if (u <= 127) ++len;else if (u <= 2047) len += 2;else if (u <= 65535) len += 3;else len += 4;\\n  }\\n  return len;\\n}\\nfunction writeArrayToMemory(array, buffer) {\\n  HEAP8.set(array, buffer);\\n}\\nfunction writeAsciiToMemory(str, buffer, dontAddNull) {\\n  for (var i = 0; i < str.length; ++i) {\\n    HEAP8[buffer++ >> 0] = str.charCodeAt(i);\\n  }\\n  if (!dontAddNull) HEAP8[buffer >> 0] = 0;\\n}\\nvar WASM_PAGE_SIZE = 65536;\\nfunction alignUp(x, multiple) {\\n  if (x % multiple > 0) {\\n    x += multiple - x % multiple;\\n  }\\n  return x;\\n}\\nvar buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\\nfunction updateGlobalBufferAndViews(buf) {\\n  buffer = buf;\\n  Module[\\\"HEAP8\\\"] = HEAP8 = new Int8Array(buf);\\n  Module[\\\"HEAP16\\\"] = HEAP16 = new Int16Array(buf);\\n  Module[\\\"HEAP32\\\"] = HEAP32 = new Int32Array(buf);\\n  Module[\\\"HEAPU8\\\"] = HEAPU8 = new Uint8Array(buf);\\n  Module[\\\"HEAPU16\\\"] = HEAPU16 = new Uint16Array(buf);\\n  Module[\\\"HEAPU32\\\"] = HEAPU32 = new Uint32Array(buf);\\n  Module[\\\"HEAPF32\\\"] = HEAPF32 = new Float32Array(buf);\\n  Module[\\\"HEAPF64\\\"] = HEAPF64 = new Float64Array(buf);\\n}\\nvar DYNAMIC_BASE = 5275232,\\n  DYNAMICTOP_PTR = 32192;\\nvar INITIAL_INITIAL_MEMORY = Module[\\\"INITIAL_MEMORY\\\"] || 16777216;\\nif (Module[\\\"wasmMemory\\\"]) {\\n  wasmMemory = Module[\\\"wasmMemory\\\"];\\n} else {\\n  wasmMemory = new WebAssembly.Memory({\\n    \\\"initial\\\": INITIAL_INITIAL_MEMORY / WASM_PAGE_SIZE,\\n    \\\"maximum\\\": 2147483648 / WASM_PAGE_SIZE\\n  });\\n}\\nif (wasmMemory) {\\n  buffer = wasmMemory.buffer;\\n}\\nINITIAL_INITIAL_MEMORY = buffer.byteLength;\\nupdateGlobalBufferAndViews(buffer);\\nHEAP32[DYNAMICTOP_PTR >> 2] = DYNAMIC_BASE;\\nfunction callRuntimeCallbacks(callbacks) {\\n  while (callbacks.length > 0) {\\n    var callback = callbacks.shift();\\n    if (typeof callback == \\\"function\\\") {\\n      callback(Module);\\n      continue;\\n    }\\n    var func = callback.func;\\n    if (typeof func === \\\"number\\\") {\\n      if (callback.arg === undefined) {\\n        Module[\\\"dynCall_v\\\"](func);\\n      } else {\\n        Module[\\\"dynCall_vi\\\"](func, callback.arg);\\n      }\\n    } else {\\n      func(callback.arg === undefined ? null : callback.arg);\\n    }\\n  }\\n}\\nvar __ATPRERUN__ = [];\\nvar __ATINIT__ = [];\\nvar __ATMAIN__ = [];\\nvar __ATPOSTRUN__ = [];\\nvar runtimeInitialized = false;\\nfunction preRun() {\\n  if (Module[\\\"preRun\\\"]) {\\n    if (typeof Module[\\\"preRun\\\"] == \\\"function\\\") Module[\\\"preRun\\\"] = [Module[\\\"preRun\\\"]];\\n    while (Module[\\\"preRun\\\"].length) {\\n      addOnPreRun(Module[\\\"preRun\\\"].shift());\\n    }\\n  }\\n  callRuntimeCallbacks(__ATPRERUN__);\\n}\\nfunction initRuntime() {\\n  runtimeInitialized = true;\\n  if (!Module[\\\"noFSInit\\\"] && !FS.init.initialized) FS.init();\\n  TTY.init();\\n  callRuntimeCallbacks(__ATINIT__);\\n}\\nfunction preMain() {\\n  FS.ignorePermissions = false;\\n  callRuntimeCallbacks(__ATMAIN__);\\n}\\nfunction postRun() {\\n  if (Module[\\\"postRun\\\"]) {\\n    if (typeof Module[\\\"postRun\\\"] == \\\"function\\\") Module[\\\"postRun\\\"] = [Module[\\\"postRun\\\"]];\\n    while (Module[\\\"postRun\\\"].length) {\\n      addOnPostRun(Module[\\\"postRun\\\"].shift());\\n    }\\n  }\\n  callRuntimeCallbacks(__ATPOSTRUN__);\\n}\\nfunction addOnPreRun(cb) {\\n  __ATPRERUN__.unshift(cb);\\n}\\nfunction addOnPostRun(cb) {\\n  __ATPOSTRUN__.unshift(cb);\\n}\\nvar Math_abs = Math.abs;\\nvar Math_ceil = Math.ceil;\\nvar Math_floor = Math.floor;\\nvar Math_min = Math.min;\\nvar runDependencies = 0;\\nvar runDependencyWatcher = null;\\nvar dependenciesFulfilled = null;\\nfunction getUniqueRunDependency(id) {\\n  return id;\\n}\\nfunction addRunDependency(id) {\\n  runDependencies++;\\n  if (Module[\\\"monitorRunDependencies\\\"]) {\\n    Module[\\\"monitorRunDependencies\\\"](runDependencies);\\n  }\\n}\\nfunction removeRunDependency(id) {\\n  runDependencies--;\\n  if (Module[\\\"monitorRunDependencies\\\"]) {\\n    Module[\\\"monitorRunDependencies\\\"](runDependencies);\\n  }\\n  if (runDependencies == 0) {\\n    if (runDependencyWatcher !== null) {\\n      clearInterval(runDependencyWatcher);\\n      runDependencyWatcher = null;\\n    }\\n    if (dependenciesFulfilled) {\\n      var callback = dependenciesFulfilled;\\n      dependenciesFulfilled = null;\\n      callback();\\n    }\\n  }\\n}\\nModule[\\\"preloadedImages\\\"] = {};\\nModule[\\\"preloadedAudios\\\"] = {};\\nfunction abort(what) {\\n  if (Module[\\\"onAbort\\\"]) {\\n    Module[\\\"onAbort\\\"](what);\\n  }\\n  what += \\\"\\\";\\n  out(what);\\n  err(what);\\n  ABORT = true;\\n  EXITSTATUS = 1;\\n  what = \\\"abort(\\\" + what + \\\"). Build with -s ASSERTIONS=1 for more info.\\\";\\n  throw new WebAssembly.RuntimeError(what);\\n}\\nfunction hasPrefix(str, prefix) {\\n  return String.prototype.startsWith ? str.startsWith(prefix) : str.indexOf(prefix) === 0;\\n}\\nvar dataURIPrefix = \\\"data:application/octet-stream;base64,\\\";\\nfunction isDataURI(filename) {\\n  return hasPrefix(filename, dataURIPrefix);\\n}\\nvar fileURIPrefix = \\\"file://\\\";\\nfunction isFileURI(filename) {\\n  return hasPrefix(filename, fileURIPrefix);\\n}\\nvar wasmBinaryFile = \\\"rlottie-wasm.wasm\\\";\\nif (!isDataURI(wasmBinaryFile)) {\\n  wasmBinaryFile = locateFile(wasmBinaryFile);\\n}\\nfunction getBinary() {\\n  try {\\n    if (wasmBinary) {\\n      return new Uint8Array(wasmBinary);\\n    }\\n    if (readBinary) {\\n      return readBinary(wasmBinaryFile);\\n    } else {\\n      throw \\\"both async and sync fetching of the wasm failed\\\";\\n    }\\n  } catch (err) {\\n    abort(err);\\n  }\\n}\\nfunction getBinaryPromise() {\\n  if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) && typeof fetch === \\\"function\\\" && !isFileURI(wasmBinaryFile)) {\\n    return fetch(wasmBinaryFile, {\\n      credentials: \\\"same-origin\\\"\\n    }).then(function (response) {\\n      if (!response[\\\"ok\\\"]) {\\n        throw \\\"failed to load wasm binary file at '\\\" + wasmBinaryFile + \\\"'\\\";\\n      }\\n      return response[\\\"arrayBuffer\\\"]();\\n    }).catch(function () {\\n      return getBinary();\\n    });\\n  }\\n  return new Promise(function (resolve, reject) {\\n    resolve(getBinary());\\n  });\\n}\\nfunction createWasm() {\\n  var info = {\\n    \\\"a\\\": asmLibraryArg\\n  };\\n  function receiveInstance(instance, module) {\\n    var exports = instance.exports;\\n    Module[\\\"asm\\\"] = exports;\\n    removeRunDependency(\\\"wasm-instantiate\\\");\\n  }\\n  addRunDependency(\\\"wasm-instantiate\\\");\\n  function receiveInstantiatedSource(output) {\\n    receiveInstance(output[\\\"instance\\\"]);\\n  }\\n  function instantiateArrayBuffer(receiver) {\\n    return getBinaryPromise().then(function (binary) {\\n      return WebAssembly.instantiate(binary, info);\\n    }).then(receiver, function (reason) {\\n      err(\\\"failed to asynchronously prepare wasm: \\\" + reason);\\n      abort(reason);\\n    });\\n  }\\n  function instantiateAsync() {\\n    if (!wasmBinary && typeof WebAssembly.instantiateStreaming === \\\"function\\\" && !isDataURI(wasmBinaryFile) && !isFileURI(wasmBinaryFile) && typeof fetch === \\\"function\\\") {\\n      fetch(wasmBinaryFile, {\\n        credentials: \\\"same-origin\\\"\\n      }).then(function (response) {\\n        var result = WebAssembly.instantiateStreaming(response, info);\\n        return result.then(receiveInstantiatedSource, function (reason) {\\n          err(\\\"wasm streaming compile failed: \\\" + reason);\\n          err(\\\"falling back to ArrayBuffer instantiation\\\");\\n          instantiateArrayBuffer(receiveInstantiatedSource);\\n        });\\n      });\\n    } else {\\n      return instantiateArrayBuffer(receiveInstantiatedSource);\\n    }\\n  }\\n  if (Module[\\\"instantiateWasm\\\"]) {\\n    try {\\n      var exports = Module[\\\"instantiateWasm\\\"](info, receiveInstance);\\n      return exports;\\n    } catch (e) {\\n      err(\\\"Module.instantiateWasm callback failed with error: \\\" + e);\\n      return false;\\n    }\\n  }\\n  instantiateAsync();\\n  return {};\\n}\\nvar tempDouble;\\nvar tempI64;\\n__ATINIT__.push({\\n  func: function () {\\n    ___wasm_call_ctors();\\n  }\\n});\\nfunction demangle(func) {\\n  return func;\\n}\\nfunction demangleAll(text) {\\n  var regex = /\\\\b_Z[\\\\w\\\\d_]+/g;\\n  return text.replace(regex, function (x) {\\n    var y = demangle(x);\\n    return x === y ? x : y + \\\" [\\\" + x + \\\"]\\\";\\n  });\\n}\\nfunction jsStackTrace() {\\n  var err = new Error();\\n  if (!err.stack) {\\n    try {\\n      throw new Error();\\n    } catch (e) {\\n      err = e;\\n    }\\n    if (!err.stack) {\\n      return \\\"(no stack trace available)\\\";\\n    }\\n  }\\n  return err.stack.toString();\\n}\\nfunction stackTrace() {\\n  var js = jsStackTrace();\\n  if (Module[\\\"extraStackTrace\\\"]) js += \\\"\\\\n\\\" + Module[\\\"extraStackTrace\\\"]();\\n  return demangleAll(js);\\n}\\nfunction __ZN7VRegionC1ERK5VRect() {\\n  err(\\\"missing function: _ZN7VRegionC1ERK5VRect\\\");\\n  abort(-1);\\n}\\nfunction __ZN7VRegionD1Ev() {\\n  err(\\\"missing function: _ZN7VRegionD1Ev\\\");\\n  abort(-1);\\n}\\nfunction __ZN7VRegionpLERK5VRect() {\\n  err(\\\"missing function: _ZN7VRegionpLERK5VRect\\\");\\n  abort(-1);\\n}\\nfunction __ZNK7VRegion12boundingRectEv() {\\n  err(\\\"missing function: _ZNK7VRegion12boundingRectEv\\\");\\n  abort(-1);\\n}\\nfunction ___assert_fail(condition, filename, line, func) {\\n  abort(\\\"Assertion failed: \\\" + UTF8ToString(condition) + \\\", at: \\\" + [filename ? UTF8ToString(filename) : \\\"unknown filename\\\", line, func ? UTF8ToString(func) : \\\"unknown function\\\"]);\\n}\\nfunction setErrNo(value) {\\n  HEAP32[___errno_location() >> 2] = value;\\n  return value;\\n}\\nfunction ___map_file(pathname, size) {\\n  setErrNo(63);\\n  return -1;\\n}\\nvar PATH = {\\n  splitPath: function (filename) {\\n    var splitPathRe = /^(\\\\/?|)([\\\\s\\\\S]*?)((?:\\\\.{1,2}|[^\\\\/]+?|)(\\\\.[^.\\\\/]*|))(?:[\\\\/]*)$/;\\n    return splitPathRe.exec(filename).slice(1);\\n  },\\n  normalizeArray: function (parts, allowAboveRoot) {\\n    var up = 0;\\n    for (var i = parts.length - 1; i >= 0; i--) {\\n      var last = parts[i];\\n      if (last === \\\".\\\") {\\n        parts.splice(i, 1);\\n      } else if (last === \\\"..\\\") {\\n        parts.splice(i, 1);\\n        up++;\\n      } else if (up) {\\n        parts.splice(i, 1);\\n        up--;\\n      }\\n    }\\n    if (allowAboveRoot) {\\n      for (; up; up--) {\\n        parts.unshift(\\\"..\\\");\\n      }\\n    }\\n    return parts;\\n  },\\n  normalize: function (path) {\\n    var isAbsolute = path.charAt(0) === \\\"/\\\",\\n      trailingSlash = path.substr(-1) === \\\"/\\\";\\n    path = PATH.normalizeArray(path.split(\\\"/\\\").filter(function (p) {\\n      return !!p;\\n    }), !isAbsolute).join(\\\"/\\\");\\n    if (!path && !isAbsolute) {\\n      path = \\\".\\\";\\n    }\\n    if (path && trailingSlash) {\\n      path += \\\"/\\\";\\n    }\\n    return (isAbsolute ? \\\"/\\\" : \\\"\\\") + path;\\n  },\\n  dirname: function (path) {\\n    var result = PATH.splitPath(path),\\n      root = result[0],\\n      dir = result[1];\\n    if (!root && !dir) {\\n      return \\\".\\\";\\n    }\\n    if (dir) {\\n      dir = dir.substr(0, dir.length - 1);\\n    }\\n    return root + dir;\\n  },\\n  basename: function (path) {\\n    if (path === \\\"/\\\") return \\\"/\\\";\\n    var lastSlash = path.lastIndexOf(\\\"/\\\");\\n    if (lastSlash === -1) return path;\\n    return path.substr(lastSlash + 1);\\n  },\\n  extname: function (path) {\\n    return PATH.splitPath(path)[3];\\n  },\\n  join: function () {\\n    var paths = Array.prototype.slice.call(arguments, 0);\\n    return PATH.normalize(paths.join(\\\"/\\\"));\\n  },\\n  join2: function (l, r) {\\n    return PATH.normalize(l + \\\"/\\\" + r);\\n  }\\n};\\nvar PATH_FS = {\\n  resolve: function () {\\n    var resolvedPath = \\\"\\\",\\n      resolvedAbsolute = false;\\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\\n      var path = i >= 0 ? arguments[i] : FS.cwd();\\n      if (typeof path !== \\\"string\\\") {\\n        throw new TypeError(\\\"Arguments to path.resolve must be strings\\\");\\n      } else if (!path) {\\n        return \\\"\\\";\\n      }\\n      resolvedPath = path + \\\"/\\\" + resolvedPath;\\n      resolvedAbsolute = path.charAt(0) === \\\"/\\\";\\n    }\\n    resolvedPath = PATH.normalizeArray(resolvedPath.split(\\\"/\\\").filter(function (p) {\\n      return !!p;\\n    }), !resolvedAbsolute).join(\\\"/\\\");\\n    return (resolvedAbsolute ? \\\"/\\\" : \\\"\\\") + resolvedPath || \\\".\\\";\\n  },\\n  relative: function (from, to) {\\n    from = PATH_FS.resolve(from).substr(1);\\n    to = PATH_FS.resolve(to).substr(1);\\n    function trim(arr) {\\n      var start = 0;\\n      for (; start < arr.length; start++) {\\n        if (arr[start] !== \\\"\\\") break;\\n      }\\n      var end = arr.length - 1;\\n      for (; end >= 0; end--) {\\n        if (arr[end] !== \\\"\\\") break;\\n      }\\n      if (start > end) return [];\\n      return arr.slice(start, end - start + 1);\\n    }\\n    var fromParts = trim(from.split(\\\"/\\\"));\\n    var toParts = trim(to.split(\\\"/\\\"));\\n    var length = Math.min(fromParts.length, toParts.length);\\n    var samePartsLength = length;\\n    for (var i = 0; i < length; i++) {\\n      if (fromParts[i] !== toParts[i]) {\\n        samePartsLength = i;\\n        break;\\n      }\\n    }\\n    var outputParts = [];\\n    for (var i = samePartsLength; i < fromParts.length; i++) {\\n      outputParts.push(\\\"..\\\");\\n    }\\n    outputParts = outputParts.concat(toParts.slice(samePartsLength));\\n    return outputParts.join(\\\"/\\\");\\n  }\\n};\\nvar TTY = {\\n  ttys: [],\\n  init: function () {},\\n  shutdown: function () {},\\n  register: function (dev, ops) {\\n    TTY.ttys[dev] = {\\n      input: [],\\n      output: [],\\n      ops: ops\\n    };\\n    FS.registerDevice(dev, TTY.stream_ops);\\n  },\\n  stream_ops: {\\n    open: function (stream) {\\n      var tty = TTY.ttys[stream.node.rdev];\\n      if (!tty) {\\n        throw new FS.ErrnoError(43);\\n      }\\n      stream.tty = tty;\\n      stream.seekable = false;\\n    },\\n    close: function (stream) {\\n      stream.tty.ops.flush(stream.tty);\\n    },\\n    flush: function (stream) {\\n      stream.tty.ops.flush(stream.tty);\\n    },\\n    read: function (stream, buffer, offset, length, pos) {\\n      if (!stream.tty || !stream.tty.ops.get_char) {\\n        throw new FS.ErrnoError(60);\\n      }\\n      var bytesRead = 0;\\n      for (var i = 0; i < length; i++) {\\n        var result;\\n        try {\\n          result = stream.tty.ops.get_char(stream.tty);\\n        } catch (e) {\\n          throw new FS.ErrnoError(29);\\n        }\\n        if (result === undefined && bytesRead === 0) {\\n          throw new FS.ErrnoError(6);\\n        }\\n        if (result === null || result === undefined) break;\\n        bytesRead++;\\n        buffer[offset + i] = result;\\n      }\\n      if (bytesRead) {\\n        stream.node.timestamp = Date.now();\\n      }\\n      return bytesRead;\\n    },\\n    write: function (stream, buffer, offset, length, pos) {\\n      if (!stream.tty || !stream.tty.ops.put_char) {\\n        throw new FS.ErrnoError(60);\\n      }\\n      try {\\n        for (var i = 0; i < length; i++) {\\n          stream.tty.ops.put_char(stream.tty, buffer[offset + i]);\\n        }\\n      } catch (e) {\\n        throw new FS.ErrnoError(29);\\n      }\\n      if (length) {\\n        stream.node.timestamp = Date.now();\\n      }\\n      return i;\\n    }\\n  },\\n  default_tty_ops: {\\n    get_char: function (tty) {\\n      if (!tty.input.length) {\\n        var result = null;\\n        if (ENVIRONMENT_IS_NODE) {\\n          var BUFSIZE = 256;\\n          var buf = Buffer.alloc ? Buffer.alloc(BUFSIZE) : new Buffer(BUFSIZE);\\n          var bytesRead = 0;\\n          try {\\n            bytesRead = nodeFS.readSync(process.stdin.fd, buf, 0, BUFSIZE, null);\\n          } catch (e) {\\n            if (e.toString().indexOf(\\\"EOF\\\") != -1) bytesRead = 0;else throw e;\\n          }\\n          if (bytesRead > 0) {\\n            result = buf.slice(0, bytesRead).toString(\\\"utf-8\\\");\\n          } else {\\n            result = null;\\n          }\\n        } else if (typeof window != \\\"undefined\\\" && typeof window.prompt == \\\"function\\\") {\\n          result = window.prompt(\\\"Input: \\\");\\n          if (result !== null) {\\n            result += \\\"\\\\n\\\";\\n          }\\n        } else if (typeof readline == \\\"function\\\") {\\n          result = readline();\\n          if (result !== null) {\\n            result += \\\"\\\\n\\\";\\n          }\\n        }\\n        if (!result) {\\n          return null;\\n        }\\n        tty.input = intArrayFromString(result, true);\\n      }\\n      return tty.input.shift();\\n    },\\n    put_char: function (tty, val) {\\n      if (val === null || val === 10) {\\n        out(UTF8ArrayToString(tty.output, 0));\\n        tty.output = [];\\n      } else {\\n        if (val != 0) tty.output.push(val);\\n      }\\n    },\\n    flush: function (tty) {\\n      if (tty.output && tty.output.length > 0) {\\n        out(UTF8ArrayToString(tty.output, 0));\\n        tty.output = [];\\n      }\\n    }\\n  },\\n  default_tty1_ops: {\\n    put_char: function (tty, val) {\\n      if (val === null || val === 10) {\\n        err(UTF8ArrayToString(tty.output, 0));\\n        tty.output = [];\\n      } else {\\n        if (val != 0) tty.output.push(val);\\n      }\\n    },\\n    flush: function (tty) {\\n      if (tty.output && tty.output.length > 0) {\\n        err(UTF8ArrayToString(tty.output, 0));\\n        tty.output = [];\\n      }\\n    }\\n  }\\n};\\nvar MEMFS = {\\n  ops_table: null,\\n  mount: function (mount) {\\n    return MEMFS.createNode(null, \\\"/\\\", 16384 | 511, 0);\\n  },\\n  createNode: function (parent, name, mode, dev) {\\n    if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\\n      throw new FS.ErrnoError(63);\\n    }\\n    if (!MEMFS.ops_table) {\\n      MEMFS.ops_table = {\\n        dir: {\\n          node: {\\n            getattr: MEMFS.node_ops.getattr,\\n            setattr: MEMFS.node_ops.setattr,\\n            lookup: MEMFS.node_ops.lookup,\\n            mknod: MEMFS.node_ops.mknod,\\n            rename: MEMFS.node_ops.rename,\\n            unlink: MEMFS.node_ops.unlink,\\n            rmdir: MEMFS.node_ops.rmdir,\\n            readdir: MEMFS.node_ops.readdir,\\n            symlink: MEMFS.node_ops.symlink\\n          },\\n          stream: {\\n            llseek: MEMFS.stream_ops.llseek\\n          }\\n        },\\n        file: {\\n          node: {\\n            getattr: MEMFS.node_ops.getattr,\\n            setattr: MEMFS.node_ops.setattr\\n          },\\n          stream: {\\n            llseek: MEMFS.stream_ops.llseek,\\n            read: MEMFS.stream_ops.read,\\n            write: MEMFS.stream_ops.write,\\n            allocate: MEMFS.stream_ops.allocate,\\n            mmap: MEMFS.stream_ops.mmap,\\n            msync: MEMFS.stream_ops.msync\\n          }\\n        },\\n        link: {\\n          node: {\\n            getattr: MEMFS.node_ops.getattr,\\n            setattr: MEMFS.node_ops.setattr,\\n            readlink: MEMFS.node_ops.readlink\\n          },\\n          stream: {}\\n        },\\n        chrdev: {\\n          node: {\\n            getattr: MEMFS.node_ops.getattr,\\n            setattr: MEMFS.node_ops.setattr\\n          },\\n          stream: FS.chrdev_stream_ops\\n        }\\n      };\\n    }\\n    var node = FS.createNode(parent, name, mode, dev);\\n    if (FS.isDir(node.mode)) {\\n      node.node_ops = MEMFS.ops_table.dir.node;\\n      node.stream_ops = MEMFS.ops_table.dir.stream;\\n      node.contents = {};\\n    } else if (FS.isFile(node.mode)) {\\n      node.node_ops = MEMFS.ops_table.file.node;\\n      node.stream_ops = MEMFS.ops_table.file.stream;\\n      node.usedBytes = 0;\\n      node.contents = null;\\n    } else if (FS.isLink(node.mode)) {\\n      node.node_ops = MEMFS.ops_table.link.node;\\n      node.stream_ops = MEMFS.ops_table.link.stream;\\n    } else if (FS.isChrdev(node.mode)) {\\n      node.node_ops = MEMFS.ops_table.chrdev.node;\\n      node.stream_ops = MEMFS.ops_table.chrdev.stream;\\n    }\\n    node.timestamp = Date.now();\\n    if (parent) {\\n      parent.contents[name] = node;\\n    }\\n    return node;\\n  },\\n  getFileDataAsRegularArray: function (node) {\\n    if (node.contents && node.contents.subarray) {\\n      var arr = [];\\n      for (var i = 0; i < node.usedBytes; ++i) arr.push(node.contents[i]);\\n      return arr;\\n    }\\n    return node.contents;\\n  },\\n  getFileDataAsTypedArray: function (node) {\\n    if (!node.contents) return new Uint8Array(0);\\n    if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes);\\n    return new Uint8Array(node.contents);\\n  },\\n  expandFileStorage: function (node, newCapacity) {\\n    var prevCapacity = node.contents ? node.contents.length : 0;\\n    if (prevCapacity >= newCapacity) return;\\n    var CAPACITY_DOUBLING_MAX = 1024 * 1024;\\n    newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125) >>> 0);\\n    if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);\\n    var oldContents = node.contents;\\n    node.contents = new Uint8Array(newCapacity);\\n    if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0);\\n    return;\\n  },\\n  resizeFileStorage: function (node, newSize) {\\n    if (node.usedBytes == newSize) return;\\n    if (newSize == 0) {\\n      node.contents = null;\\n      node.usedBytes = 0;\\n      return;\\n    }\\n    if (!node.contents || node.contents.subarray) {\\n      var oldContents = node.contents;\\n      node.contents = new Uint8Array(newSize);\\n      if (oldContents) {\\n        node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)));\\n      }\\n      node.usedBytes = newSize;\\n      return;\\n    }\\n    if (!node.contents) node.contents = [];\\n    if (node.contents.length > newSize) node.contents.length = newSize;else while (node.contents.length < newSize) node.contents.push(0);\\n    node.usedBytes = newSize;\\n  },\\n  node_ops: {\\n    getattr: function (node) {\\n      var attr = {};\\n      attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\\n      attr.ino = node.id;\\n      attr.mode = node.mode;\\n      attr.nlink = 1;\\n      attr.uid = 0;\\n      attr.gid = 0;\\n      attr.rdev = node.rdev;\\n      if (FS.isDir(node.mode)) {\\n        attr.size = 4096;\\n      } else if (FS.isFile(node.mode)) {\\n        attr.size = node.usedBytes;\\n      } else if (FS.isLink(node.mode)) {\\n        attr.size = node.link.length;\\n      } else {\\n        attr.size = 0;\\n      }\\n      attr.atime = new Date(node.timestamp);\\n      attr.mtime = new Date(node.timestamp);\\n      attr.ctime = new Date(node.timestamp);\\n      attr.blksize = 4096;\\n      attr.blocks = Math.ceil(attr.size / attr.blksize);\\n      return attr;\\n    },\\n    setattr: function (node, attr) {\\n      if (attr.mode !== undefined) {\\n        node.mode = attr.mode;\\n      }\\n      if (attr.timestamp !== undefined) {\\n        node.timestamp = attr.timestamp;\\n      }\\n      if (attr.size !== undefined) {\\n        MEMFS.resizeFileStorage(node, attr.size);\\n      }\\n    },\\n    lookup: function (parent, name) {\\n      throw FS.genericErrors[44];\\n    },\\n    mknod: function (parent, name, mode, dev) {\\n      return MEMFS.createNode(parent, name, mode, dev);\\n    },\\n    rename: function (old_node, new_dir, new_name) {\\n      if (FS.isDir(old_node.mode)) {\\n        var new_node;\\n        try {\\n          new_node = FS.lookupNode(new_dir, new_name);\\n        } catch (e) {}\\n        if (new_node) {\\n          for (var i in new_node.contents) {\\n            throw new FS.ErrnoError(55);\\n          }\\n        }\\n      }\\n      delete old_node.parent.contents[old_node.name];\\n      old_node.name = new_name;\\n      new_dir.contents[new_name] = old_node;\\n      old_node.parent = new_dir;\\n    },\\n    unlink: function (parent, name) {\\n      delete parent.contents[name];\\n    },\\n    rmdir: function (parent, name) {\\n      var node = FS.lookupNode(parent, name);\\n      for (var i in node.contents) {\\n        throw new FS.ErrnoError(55);\\n      }\\n      delete parent.contents[name];\\n    },\\n    readdir: function (node) {\\n      var entries = [\\\".\\\", \\\"..\\\"];\\n      for (var key in node.contents) {\\n        if (!node.contents.hasOwnProperty(key)) {\\n          continue;\\n        }\\n        entries.push(key);\\n      }\\n      return entries;\\n    },\\n    symlink: function (parent, newname, oldpath) {\\n      var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);\\n      node.link = oldpath;\\n      return node;\\n    },\\n    readlink: function (node) {\\n      if (!FS.isLink(node.mode)) {\\n        throw new FS.ErrnoError(28);\\n      }\\n      return node.link;\\n    }\\n  },\\n  stream_ops: {\\n    read: function (stream, buffer, offset, length, position) {\\n      var contents = stream.node.contents;\\n      if (position >= stream.node.usedBytes) return 0;\\n      var size = Math.min(stream.node.usedBytes - position, length);\\n      if (size > 8 && contents.subarray) {\\n        buffer.set(contents.subarray(position, position + size), offset);\\n      } else {\\n        for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];\\n      }\\n      return size;\\n    },\\n    write: function (stream, buffer, offset, length, position, canOwn) {\\n      if (buffer.buffer === HEAP8.buffer) {\\n        canOwn = false;\\n      }\\n      if (!length) return 0;\\n      var node = stream.node;\\n      node.timestamp = Date.now();\\n      if (buffer.subarray && (!node.contents || node.contents.subarray)) {\\n        if (canOwn) {\\n          node.contents = buffer.subarray(offset, offset + length);\\n          node.usedBytes = length;\\n          return length;\\n        } else if (node.usedBytes === 0 && position === 0) {\\n          node.contents = buffer.slice(offset, offset + length);\\n          node.usedBytes = length;\\n          return length;\\n        } else if (position + length <= node.usedBytes) {\\n          node.contents.set(buffer.subarray(offset, offset + length), position);\\n          return length;\\n        }\\n      }\\n      MEMFS.expandFileStorage(node, position + length);\\n      if (node.contents.subarray && buffer.subarray) node.contents.set(buffer.subarray(offset, offset + length), position);else {\\n        for (var i = 0; i < length; i++) {\\n          node.contents[position + i] = buffer[offset + i];\\n        }\\n      }\\n      node.usedBytes = Math.max(node.usedBytes, position + length);\\n      return length;\\n    },\\n    llseek: function (stream, offset, whence) {\\n      var position = offset;\\n      if (whence === 1) {\\n        position += stream.position;\\n      } else if (whence === 2) {\\n        if (FS.isFile(stream.node.mode)) {\\n          position += stream.node.usedBytes;\\n        }\\n      }\\n      if (position < 0) {\\n        throw new FS.ErrnoError(28);\\n      }\\n      return position;\\n    },\\n    allocate: function (stream, offset, length) {\\n      MEMFS.expandFileStorage(stream.node, offset + length);\\n      stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);\\n    },\\n    mmap: function (stream, buffer, offset, length, position, prot, flags) {\\n      if (!FS.isFile(stream.node.mode)) {\\n        throw new FS.ErrnoError(43);\\n      }\\n      var ptr;\\n      var allocated;\\n      var contents = stream.node.contents;\\n      if (!(flags & 2) && contents.buffer === buffer.buffer) {\\n        allocated = false;\\n        ptr = contents.byteOffset;\\n      } else {\\n        if (position > 0 || position + length < contents.length) {\\n          if (contents.subarray) {\\n            contents = contents.subarray(position, position + length);\\n          } else {\\n            contents = Array.prototype.slice.call(contents, position, position + length);\\n          }\\n        }\\n        allocated = true;\\n        var fromHeap = buffer.buffer == HEAP8.buffer;\\n        ptr = _malloc(length);\\n        if (!ptr) {\\n          throw new FS.ErrnoError(48);\\n        }\\n        (fromHeap ? HEAP8 : buffer).set(contents, ptr);\\n      }\\n      return {\\n        ptr: ptr,\\n        allocated: allocated\\n      };\\n    },\\n    msync: function (stream, buffer, offset, length, mmapFlags) {\\n      if (!FS.isFile(stream.node.mode)) {\\n        throw new FS.ErrnoError(43);\\n      }\\n      if (mmapFlags & 2) {\\n        return 0;\\n      }\\n      var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\\n      return 0;\\n    }\\n  }\\n};\\nvar FS = {\\n  root: null,\\n  mounts: [],\\n  devices: {},\\n  streams: [],\\n  nextInode: 1,\\n  nameTable: null,\\n  currentPath: \\\"/\\\",\\n  initialized: false,\\n  ignorePermissions: true,\\n  trackingDelegate: {},\\n  tracking: {\\n    openFlags: {\\n      READ: 1,\\n      WRITE: 2\\n    }\\n  },\\n  ErrnoError: null,\\n  genericErrors: {},\\n  filesystems: null,\\n  syncFSRequests: 0,\\n  handleFSError: function (e) {\\n    if (!(e instanceof FS.ErrnoError)) throw e + \\\" : \\\" + stackTrace();\\n    return setErrNo(e.errno);\\n  },\\n  lookupPath: function (path, opts) {\\n    path = PATH_FS.resolve(FS.cwd(), path);\\n    opts = opts || {};\\n    if (!path) return {\\n      path: \\\"\\\",\\n      node: null\\n    };\\n    var defaults = {\\n      follow_mount: true,\\n      recurse_count: 0\\n    };\\n    for (var key in defaults) {\\n      if (opts[key] === undefined) {\\n        opts[key] = defaults[key];\\n      }\\n    }\\n    if (opts.recurse_count > 8) {\\n      throw new FS.ErrnoError(32);\\n    }\\n    var parts = PATH.normalizeArray(path.split(\\\"/\\\").filter(function (p) {\\n      return !!p;\\n    }), false);\\n    var current = FS.root;\\n    var current_path = \\\"/\\\";\\n    for (var i = 0; i < parts.length; i++) {\\n      var islast = i === parts.length - 1;\\n      if (islast && opts.parent) {\\n        break;\\n      }\\n      current = FS.lookupNode(current, parts[i]);\\n      current_path = PATH.join2(current_path, parts[i]);\\n      if (FS.isMountpoint(current)) {\\n        if (!islast || islast && opts.follow_mount) {\\n          current = current.mounted.root;\\n        }\\n      }\\n      if (!islast || opts.follow) {\\n        var count = 0;\\n        while (FS.isLink(current.mode)) {\\n          var link = FS.readlink(current_path);\\n          current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\\n          var lookup = FS.lookupPath(current_path, {\\n            recurse_count: opts.recurse_count\\n          });\\n          current = lookup.node;\\n          if (count++ > 40) {\\n            throw new FS.ErrnoError(32);\\n          }\\n        }\\n      }\\n    }\\n    return {\\n      path: current_path,\\n      node: current\\n    };\\n  },\\n  getPath: function (node) {\\n    var path;\\n    while (true) {\\n      if (FS.isRoot(node)) {\\n        var mount = node.mount.mountpoint;\\n        if (!path) return mount;\\n        return mount[mount.length - 1] !== \\\"/\\\" ? mount + \\\"/\\\" + path : mount + path;\\n      }\\n      path = path ? node.name + \\\"/\\\" + path : node.name;\\n      node = node.parent;\\n    }\\n  },\\n  hashName: function (parentid, name) {\\n    var hash = 0;\\n    for (var i = 0; i < name.length; i++) {\\n      hash = (hash << 5) - hash + name.charCodeAt(i) | 0;\\n    }\\n    return (parentid + hash >>> 0) % FS.nameTable.length;\\n  },\\n  hashAddNode: function (node) {\\n    var hash = FS.hashName(node.parent.id, node.name);\\n    node.name_next = FS.nameTable[hash];\\n    FS.nameTable[hash] = node;\\n  },\\n  hashRemoveNode: function (node) {\\n    var hash = FS.hashName(node.parent.id, node.name);\\n    if (FS.nameTable[hash] === node) {\\n      FS.nameTable[hash] = node.name_next;\\n    } else {\\n      var current = FS.nameTable[hash];\\n      while (current) {\\n        if (current.name_next === node) {\\n          current.name_next = node.name_next;\\n          break;\\n        }\\n        current = current.name_next;\\n      }\\n    }\\n  },\\n  lookupNode: function (parent, name) {\\n    var errCode = FS.mayLookup(parent);\\n    if (errCode) {\\n      throw new FS.ErrnoError(errCode, parent);\\n    }\\n    var hash = FS.hashName(parent.id, name);\\n    for (var node = FS.nameTable[hash]; node; node = node.name_next) {\\n      var nodeName = node.name;\\n      if (node.parent.id === parent.id && nodeName === name) {\\n        return node;\\n      }\\n    }\\n    return FS.lookup(parent, name);\\n  },\\n  createNode: function (parent, name, mode, rdev) {\\n    var node = new FS.FSNode(parent, name, mode, rdev);\\n    FS.hashAddNode(node);\\n    return node;\\n  },\\n  destroyNode: function (node) {\\n    FS.hashRemoveNode(node);\\n  },\\n  isRoot: function (node) {\\n    return node === node.parent;\\n  },\\n  isMountpoint: function (node) {\\n    return !!node.mounted;\\n  },\\n  isFile: function (mode) {\\n    return (mode & 61440) === 32768;\\n  },\\n  isDir: function (mode) {\\n    return (mode & 61440) === 16384;\\n  },\\n  isLink: function (mode) {\\n    return (mode & 61440) === 40960;\\n  },\\n  isChrdev: function (mode) {\\n    return (mode & 61440) === 8192;\\n  },\\n  isBlkdev: function (mode) {\\n    return (mode & 61440) === 24576;\\n  },\\n  isFIFO: function (mode) {\\n    return (mode & 61440) === 4096;\\n  },\\n  isSocket: function (mode) {\\n    return (mode & 49152) === 49152;\\n  },\\n  flagModes: {\\n    \\\"r\\\": 0,\\n    \\\"rs\\\": 1052672,\\n    \\\"r+\\\": 2,\\n    \\\"w\\\": 577,\\n    \\\"wx\\\": 705,\\n    \\\"xw\\\": 705,\\n    \\\"w+\\\": 578,\\n    \\\"wx+\\\": 706,\\n    \\\"xw+\\\": 706,\\n    \\\"a\\\": 1089,\\n    \\\"ax\\\": 1217,\\n    \\\"xa\\\": 1217,\\n    \\\"a+\\\": 1090,\\n    \\\"ax+\\\": 1218,\\n    \\\"xa+\\\": 1218\\n  },\\n  modeStringToFlags: function (str) {\\n    var flags = FS.flagModes[str];\\n    if (typeof flags === \\\"undefined\\\") {\\n      throw new Error(\\\"Unknown file open mode: \\\" + str);\\n    }\\n    return flags;\\n  },\\n  flagsToPermissionString: function (flag) {\\n    var perms = [\\\"r\\\", \\\"w\\\", \\\"rw\\\"][flag & 3];\\n    if (flag & 512) {\\n      perms += \\\"w\\\";\\n    }\\n    return perms;\\n  },\\n  nodePermissions: function (node, perms) {\\n    if (FS.ignorePermissions) {\\n      return 0;\\n    }\\n    if (perms.indexOf(\\\"r\\\") !== -1 && !(node.mode & 292)) {\\n      return 2;\\n    } else if (perms.indexOf(\\\"w\\\") !== -1 && !(node.mode & 146)) {\\n      return 2;\\n    } else if (perms.indexOf(\\\"x\\\") !== -1 && !(node.mode & 73)) {\\n      return 2;\\n    }\\n    return 0;\\n  },\\n  mayLookup: function (dir) {\\n    var errCode = FS.nodePermissions(dir, \\\"x\\\");\\n    if (errCode) return errCode;\\n    if (!dir.node_ops.lookup) return 2;\\n    return 0;\\n  },\\n  mayCreate: function (dir, name) {\\n    try {\\n      var node = FS.lookupNode(dir, name);\\n      return 20;\\n    } catch (e) {}\\n    return FS.nodePermissions(dir, \\\"wx\\\");\\n  },\\n  mayDelete: function (dir, name, isdir) {\\n    var node;\\n    try {\\n      node = FS.lookupNode(dir, name);\\n    } catch (e) {\\n      return e.errno;\\n    }\\n    var errCode = FS.nodePermissions(dir, \\\"wx\\\");\\n    if (errCode) {\\n      return errCode;\\n    }\\n    if (isdir) {\\n      if (!FS.isDir(node.mode)) {\\n        return 54;\\n      }\\n      if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\\n        return 10;\\n      }\\n    } else {\\n      if (FS.isDir(node.mode)) {\\n        return 31;\\n      }\\n    }\\n    return 0;\\n  },\\n  mayOpen: function (node, flags) {\\n    if (!node) {\\n      return 44;\\n    }\\n    if (FS.isLink(node.mode)) {\\n      return 32;\\n    } else if (FS.isDir(node.mode)) {\\n      if (FS.flagsToPermissionString(flags) !== \\\"r\\\" || flags & 512) {\\n        return 31;\\n      }\\n    }\\n    return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\\n  },\\n  MAX_OPEN_FDS: 4096,\\n  nextfd: function (fd_start, fd_end) {\\n    fd_start = fd_start || 0;\\n    fd_end = fd_end || FS.MAX_OPEN_FDS;\\n    for (var fd = fd_start; fd <= fd_end; fd++) {\\n      if (!FS.streams[fd]) {\\n        return fd;\\n      }\\n    }\\n    throw new FS.ErrnoError(33);\\n  },\\n  getStream: function (fd) {\\n    return FS.streams[fd];\\n  },\\n  createStream: function (stream, fd_start, fd_end) {\\n    if (!FS.FSStream) {\\n      FS.FSStream = function () {};\\n      FS.FSStream.prototype = {\\n        object: {\\n          get: function () {\\n            return this.node;\\n          },\\n          set: function (val) {\\n            this.node = val;\\n          }\\n        },\\n        isRead: {\\n          get: function () {\\n            return (this.flags & 2097155) !== 1;\\n          }\\n        },\\n        isWrite: {\\n          get: function () {\\n            return (this.flags & 2097155) !== 0;\\n          }\\n        },\\n        isAppend: {\\n          get: function () {\\n            return this.flags & 1024;\\n          }\\n        }\\n      };\\n    }\\n    var newStream = new FS.FSStream();\\n    for (var p in stream) {\\n      newStream[p] = stream[p];\\n    }\\n    stream = newStream;\\n    var fd = FS.nextfd(fd_start, fd_end);\\n    stream.fd = fd;\\n    FS.streams[fd] = stream;\\n    return stream;\\n  },\\n  closeStream: function (fd) {\\n    FS.streams[fd] = null;\\n  },\\n  chrdev_stream_ops: {\\n    open: function (stream) {\\n      var device = FS.getDevice(stream.node.rdev);\\n      stream.stream_ops = device.stream_ops;\\n      if (stream.stream_ops.open) {\\n        stream.stream_ops.open(stream);\\n      }\\n    },\\n    llseek: function () {\\n      throw new FS.ErrnoError(70);\\n    }\\n  },\\n  major: function (dev) {\\n    return dev >> 8;\\n  },\\n  minor: function (dev) {\\n    return dev & 255;\\n  },\\n  makedev: function (ma, mi) {\\n    return ma << 8 | mi;\\n  },\\n  registerDevice: function (dev, ops) {\\n    FS.devices[dev] = {\\n      stream_ops: ops\\n    };\\n  },\\n  getDevice: function (dev) {\\n    return FS.devices[dev];\\n  },\\n  getMounts: function (mount) {\\n    var mounts = [];\\n    var check = [mount];\\n    while (check.length) {\\n      var m = check.pop();\\n      mounts.push(m);\\n      check.push.apply(check, m.mounts);\\n    }\\n    return mounts;\\n  },\\n  syncfs: function (populate, callback) {\\n    if (typeof populate === \\\"function\\\") {\\n      callback = populate;\\n      populate = false;\\n    }\\n    FS.syncFSRequests++;\\n    if (FS.syncFSRequests > 1) {\\n      err(\\\"warning: \\\" + FS.syncFSRequests + \\\" FS.syncfs operations in flight at once, probably just doing extra work\\\");\\n    }\\n    var mounts = FS.getMounts(FS.root.mount);\\n    var completed = 0;\\n    function doCallback(errCode) {\\n      FS.syncFSRequests--;\\n      return callback(errCode);\\n    }\\n    function done(errCode) {\\n      if (errCode) {\\n        if (!done.errored) {\\n          done.errored = true;\\n          return doCallback(errCode);\\n        }\\n        return;\\n      }\\n      if (++completed >= mounts.length) {\\n        doCallback(null);\\n      }\\n    }\\n    mounts.forEach(function (mount) {\\n      if (!mount.type.syncfs) {\\n        return done(null);\\n      }\\n      mount.type.syncfs(mount, populate, done);\\n    });\\n  },\\n  mount: function (type, opts, mountpoint) {\\n    var root = mountpoint === \\\"/\\\";\\n    var pseudo = !mountpoint;\\n    var node;\\n    if (root && FS.root) {\\n      throw new FS.ErrnoError(10);\\n    } else if (!root && !pseudo) {\\n      var lookup = FS.lookupPath(mountpoint, {\\n        follow_mount: false\\n      });\\n      mountpoint = lookup.path;\\n      node = lookup.node;\\n      if (FS.isMountpoint(node)) {\\n        throw new FS.ErrnoError(10);\\n      }\\n      if (!FS.isDir(node.mode)) {\\n        throw new FS.ErrnoError(54);\\n      }\\n    }\\n    var mount = {\\n      type: type,\\n      opts: opts,\\n      mountpoint: mountpoint,\\n      mounts: []\\n    };\\n    var mountRoot = type.mount(mount);\\n    mountRoot.mount = mount;\\n    mount.root = mountRoot;\\n    if (root) {\\n      FS.root = mountRoot;\\n    } else if (node) {\\n      node.mounted = mount;\\n      if (node.mount) {\\n        node.mount.mounts.push(mount);\\n      }\\n    }\\n    return mountRoot;\\n  },\\n  unmount: function (mountpoint) {\\n    var lookup = FS.lookupPath(mountpoint, {\\n      follow_mount: false\\n    });\\n    if (!FS.isMountpoint(lookup.node)) {\\n      throw new FS.ErrnoError(28);\\n    }\\n    var node = lookup.node;\\n    var mount = node.mounted;\\n    var mounts = FS.getMounts(mount);\\n    Object.keys(FS.nameTable).forEach(function (hash) {\\n      var current = FS.nameTable[hash];\\n      while (current) {\\n        var next = current.name_next;\\n        if (mounts.indexOf(current.mount) !== -1) {\\n          FS.destroyNode(current);\\n        }\\n        current = next;\\n      }\\n    });\\n    node.mounted = null;\\n    var idx = node.mount.mounts.indexOf(mount);\\n    node.mount.mounts.splice(idx, 1);\\n  },\\n  lookup: function (parent, name) {\\n    return parent.node_ops.lookup(parent, name);\\n  },\\n  mknod: function (path, mode, dev) {\\n    var lookup = FS.lookupPath(path, {\\n      parent: true\\n    });\\n    var parent = lookup.node;\\n    var name = PATH.basename(path);\\n    if (!name || name === \\\".\\\" || name === \\\"..\\\") {\\n      throw new FS.ErrnoError(28);\\n    }\\n    var errCode = FS.mayCreate(parent, name);\\n    if (errCode) {\\n      throw new FS.ErrnoError(errCode);\\n    }\\n    if (!parent.node_ops.mknod) {\\n      throw new FS.ErrnoError(63);\\n    }\\n    return parent.node_ops.mknod(parent, name, mode, dev);\\n  },\\n  create: function (path, mode) {\\n    mode = mode !== undefined ? mode : 438;\\n    mode &= 4095;\\n    mode |= 32768;\\n    return FS.mknod(path, mode, 0);\\n  },\\n  mkdir: function (path, mode) {\\n    mode = mode !== undefined ? mode : 511;\\n    mode &= 511 | 512;\\n    mode |= 16384;\\n    return FS.mknod(path, mode, 0);\\n  },\\n  mkdirTree: function (path, mode) {\\n    var dirs = path.split(\\\"/\\\");\\n    var d = \\\"\\\";\\n    for (var i = 0; i < dirs.length; ++i) {\\n      if (!dirs[i]) continue;\\n      d += \\\"/\\\" + dirs[i];\\n      try {\\n        FS.mkdir(d, mode);\\n      } catch (e) {\\n        if (e.errno != 20) throw e;\\n      }\\n    }\\n  },\\n  mkdev: function (path, mode, dev) {\\n    if (typeof dev === \\\"undefined\\\") {\\n      dev = mode;\\n      mode = 438;\\n    }\\n    mode |= 8192;\\n    return FS.mknod(path, mode, dev);\\n  },\\n  symlink: function (oldpath, newpath) {\\n    if (!PATH_FS.resolve(oldpath)) {\\n      throw new FS.ErrnoError(44);\\n    }\\n    var lookup = FS.lookupPath(newpath, {\\n      parent: true\\n    });\\n    var parent = lookup.node;\\n    if (!parent) {\\n      throw new FS.ErrnoError(44);\\n    }\\n    var newname = PATH.basename(newpath);\\n    var errCode = FS.mayCreate(parent, newname);\\n    if (errCode) {\\n      throw new FS.ErrnoError(errCode);\\n    }\\n    if (!parent.node_ops.symlink) {\\n      throw new FS.ErrnoError(63);\\n    }\\n    return parent.node_ops.symlink(parent, newname, oldpath);\\n  },\\n  rename: function (old_path, new_path) {\\n    var old_dirname = PATH.dirname(old_path);\\n    var new_dirname = PATH.dirname(new_path);\\n    var old_name = PATH.basename(old_path);\\n    var new_name = PATH.basename(new_path);\\n    var lookup, old_dir, new_dir;\\n    try {\\n      lookup = FS.lookupPath(old_path, {\\n        parent: true\\n      });\\n      old_dir = lookup.node;\\n      lookup = FS.lookupPath(new_path, {\\n        parent: true\\n      });\\n      new_dir = lookup.node;\\n    } catch (e) {\\n      throw new FS.ErrnoError(10);\\n    }\\n    if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\\n    if (old_dir.mount !== new_dir.mount) {\\n      throw new FS.ErrnoError(75);\\n    }\\n    var old_node = FS.lookupNode(old_dir, old_name);\\n    var relative = PATH_FS.relative(old_path, new_dirname);\\n    if (relative.charAt(0) !== \\\".\\\") {\\n      throw new FS.ErrnoError(28);\\n    }\\n    relative = PATH_FS.relative(new_path, old_dirname);\\n    if (relative.charAt(0) !== \\\".\\\") {\\n      throw new FS.ErrnoError(55);\\n    }\\n    var new_node;\\n    try {\\n      new_node = FS.lookupNode(new_dir, new_name);\\n    } catch (e) {}\\n    if (old_node === new_node) {\\n      return;\\n    }\\n    var isdir = FS.isDir(old_node.mode);\\n    var errCode = FS.mayDelete(old_dir, old_name, isdir);\\n    if (errCode) {\\n      throw new FS.ErrnoError(errCode);\\n    }\\n    errCode = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);\\n    if (errCode) {\\n      throw new FS.ErrnoError(errCode);\\n    }\\n    if (!old_dir.node_ops.rename) {\\n      throw new FS.ErrnoError(63);\\n    }\\n    if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {\\n      throw new FS.ErrnoError(10);\\n    }\\n    if (new_dir !== old_dir) {\\n      errCode = FS.nodePermissions(old_dir, \\\"w\\\");\\n      if (errCode) {\\n        throw new FS.ErrnoError(errCode);\\n      }\\n    }\\n    try {\\n      if (FS.trackingDelegate[\\\"willMovePath\\\"]) {\\n        FS.trackingDelegate[\\\"willMovePath\\\"](old_path, new_path);\\n      }\\n    } catch (e) {\\n      err(\\\"FS.trackingDelegate['willMovePath']('\\\" + old_path + \\\"', '\\\" + new_path + \\\"') threw an exception: \\\" + e.message);\\n    }\\n    FS.hashRemoveNode(old_node);\\n    try {\\n      old_dir.node_ops.rename(old_node, new_dir, new_name);\\n    } catch (e) {\\n      throw e;\\n    } finally {\\n      FS.hashAddNode(old_node);\\n    }\\n    try {\\n      if (FS.trackingDelegate[\\\"onMovePath\\\"]) FS.trackingDelegate[\\\"onMovePath\\\"](old_path, new_path);\\n    } catch (e) {\\n      err(\\\"FS.trackingDelegate['onMovePath']('\\\" + old_path + \\\"', '\\\" + new_path + \\\"') threw an exception: \\\" + e.message);\\n    }\\n  },\\n  rmdir: function (path) {\\n    var lookup = FS.lookupPath(path, {\\n      parent: true\\n    });\\n    var parent = lookup.node;\\n    var name = PATH.basename(path);\\n    var node = FS.lookupNode(parent, name);\\n    var errCode = FS.mayDelete(parent, name, true);\\n    if (errCode) {\\n      throw new FS.ErrnoError(errCode);\\n    }\\n    if (!parent.node_ops.rmdir) {\\n      throw new FS.ErrnoError(63);\\n    }\\n    if (FS.isMountpoint(node)) {\\n      throw new FS.ErrnoError(10);\\n    }\\n    try {\\n      if (FS.trackingDelegate[\\\"willDeletePath\\\"]) {\\n        FS.trackingDelegate[\\\"willDeletePath\\\"](path);\\n      }\\n    } catch (e) {\\n      err(\\\"FS.trackingDelegate['willDeletePath']('\\\" + path + \\\"') threw an exception: \\\" + e.message);\\n    }\\n    parent.node_ops.rmdir(parent, name);\\n    FS.destroyNode(node);\\n    try {\\n      if (FS.trackingDelegate[\\\"onDeletePath\\\"]) FS.trackingDelegate[\\\"onDeletePath\\\"](path);\\n    } catch (e) {\\n      err(\\\"FS.trackingDelegate['onDeletePath']('\\\" + path + \\\"') threw an exception: \\\" + e.message);\\n    }\\n  },\\n  readdir: function (path) {\\n    var lookup = FS.lookupPath(path, {\\n      follow: true\\n    });\\n    var node = lookup.node;\\n    if (!node.node_ops.readdir) {\\n      throw new FS.ErrnoError(54);\\n    }\\n    return node.node_ops.readdir(node);\\n  },\\n  unlink: function (path) {\\n    var lookup = FS.lookupPath(path, {\\n      parent: true\\n    });\\n    var parent = lookup.node;\\n    var name = PATH.basename(path);\\n    var node = FS.lookupNode(parent, name);\\n    var errCode = FS.mayDelete(parent, name, false);\\n    if (errCode) {\\n      throw new FS.ErrnoError(errCode);\\n    }\\n    if (!parent.node_ops.unlink) {\\n      throw new FS.ErrnoError(63);\\n    }\\n    if (FS.isMountpoint(node)) {\\n      throw new FS.ErrnoError(10);\\n    }\\n    try {\\n      if (FS.trackingDelegate[\\\"willDeletePath\\\"]) {\\n        FS.trackingDelegate[\\\"willDeletePath\\\"](path);\\n      }\\n    } catch (e) {\\n      err(\\\"FS.trackingDelegate['willDeletePath']('\\\" + path + \\\"') threw an exception: \\\" + e.message);\\n    }\\n    parent.node_ops.unlink(parent, name);\\n    FS.destroyNode(node);\\n    try {\\n      if (FS.trackingDelegate[\\\"onDeletePath\\\"]) FS.trackingDelegate[\\\"onDeletePath\\\"](path);\\n    } catch (e) {\\n      err(\\\"FS.trackingDelegate['onDeletePath']('\\\" + path + \\\"') threw an exception: \\\" + e.message);\\n    }\\n  },\\n  readlink: function (path) {\\n    var lookup = FS.lookupPath(path);\\n    var link = lookup.node;\\n    if (!link) {\\n      throw new FS.ErrnoError(44);\\n    }\\n    if (!link.node_ops.readlink) {\\n      throw new FS.ErrnoError(28);\\n    }\\n    return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));\\n  },\\n  stat: function (path, dontFollow) {\\n    var lookup = FS.lookupPath(path, {\\n      follow: !dontFollow\\n    });\\n    var node = lookup.node;\\n    if (!node) {\\n      throw new FS.ErrnoError(44);\\n    }\\n    if (!node.node_ops.getattr) {\\n      throw new FS.ErrnoError(63);\\n    }\\n    return node.node_ops.getattr(node);\\n  },\\n  lstat: function (path) {\\n    return FS.stat(path, true);\\n  },\\n  chmod: function (path, mode, dontFollow) {\\n    var node;\\n    if (typeof path === \\\"string\\\") {\\n      var lookup = FS.lookupPath(path, {\\n        follow: !dontFollow\\n      });\\n      node = lookup.node;\\n    } else {\\n      node = path;\\n    }\\n    if (!node.node_ops.setattr) {\\n      throw new FS.ErrnoError(63);\\n    }\\n    node.node_ops.setattr(node, {\\n      mode: mode & 4095 | node.mode & ~4095,\\n      timestamp: Date.now()\\n    });\\n  },\\n  lchmod: function (path, mode) {\\n    FS.chmod(path, mode, true);\\n  },\\n  fchmod: function (fd, mode) {\\n    var stream = FS.getStream(fd);\\n    if (!stream) {\\n      throw new FS.ErrnoError(8);\\n    }\\n    FS.chmod(stream.node, mode);\\n  },\\n  chown: function (path, uid, gid, dontFollow) {\\n    var node;\\n    if (typeof path === \\\"string\\\") {\\n      var lookup = FS.lookupPath(path, {\\n        follow: !dontFollow\\n      });\\n      node = lookup.node;\\n    } else {\\n      node = path;\\n    }\\n    if (!node.node_ops.setattr) {\\n      throw new FS.ErrnoError(63);\\n    }\\n    node.node_ops.setattr(node, {\\n      timestamp: Date.now()\\n    });\\n  },\\n  lchown: function (path, uid, gid) {\\n    FS.chown(path, uid, gid, true);\\n  },\\n  fchown: function (fd, uid, gid) {\\n    var stream = FS.getStream(fd);\\n    if (!stream) {\\n      throw new FS.ErrnoError(8);\\n    }\\n    FS.chown(stream.node, uid, gid);\\n  },\\n  truncate: function (path, len) {\\n    if (len < 0) {\\n      throw new FS.ErrnoError(28);\\n    }\\n    var node;\\n    if (typeof path === \\\"string\\\") {\\n      var lookup = FS.lookupPath(path, {\\n        follow: true\\n      });\\n      node = lookup.node;\\n    } else {\\n      node = path;\\n    }\\n    if (!node.node_ops.setattr) {\\n      throw new FS.ErrnoError(63);\\n    }\\n    if (FS.isDir(node.mode)) {\\n      throw new FS.ErrnoError(31);\\n    }\\n    if (!FS.isFile(node.mode)) {\\n      throw new FS.ErrnoError(28);\\n    }\\n    var errCode = FS.nodePermissions(node, \\\"w\\\");\\n    if (errCode) {\\n      throw new FS.ErrnoError(errCode);\\n    }\\n    node.node_ops.setattr(node, {\\n      size: len,\\n      timestamp: Date.now()\\n    });\\n  },\\n  ftruncate: function (fd, len) {\\n    var stream = FS.getStream(fd);\\n    if (!stream) {\\n      throw new FS.ErrnoError(8);\\n    }\\n    if ((stream.flags & 2097155) === 0) {\\n      throw new FS.ErrnoError(28);\\n    }\\n    FS.truncate(stream.node, len);\\n  },\\n  utime: function (path, atime, mtime) {\\n    var lookup = FS.lookupPath(path, {\\n      follow: true\\n    });\\n    var node = lookup.node;\\n    node.node_ops.setattr(node, {\\n      timestamp: Math.max(atime, mtime)\\n    });\\n  },\\n  open: function (path, flags, mode, fd_start, fd_end) {\\n    if (path === \\\"\\\") {\\n      throw new FS.ErrnoError(44);\\n    }\\n    flags = typeof flags === \\\"string\\\" ? FS.modeStringToFlags(flags) : flags;\\n    mode = typeof mode === \\\"undefined\\\" ? 438 : mode;\\n    if (flags & 64) {\\n      mode = mode & 4095 | 32768;\\n    } else {\\n      mode = 0;\\n    }\\n    var node;\\n    if (typeof path === \\\"object\\\") {\\n      node = path;\\n    } else {\\n      path = PATH.normalize(path);\\n      try {\\n        var lookup = FS.lookupPath(path, {\\n          follow: !(flags & 131072)\\n        });\\n        node = lookup.node;\\n      } catch (e) {}\\n    }\\n    var created = false;\\n    if (flags & 64) {\\n      if (node) {\\n        if (flags & 128) {\\n          throw new FS.ErrnoError(20);\\n        }\\n      } else {\\n        node = FS.mknod(path, mode, 0);\\n        created = true;\\n      }\\n    }\\n    if (!node) {\\n      throw new FS.ErrnoError(44);\\n    }\\n    if (FS.isChrdev(node.mode)) {\\n      flags &= ~512;\\n    }\\n    if (flags & 65536 && !FS.isDir(node.mode)) {\\n      throw new FS.ErrnoError(54);\\n    }\\n    if (!created) {\\n      var errCode = FS.mayOpen(node, flags);\\n      if (errCode) {\\n        throw new FS.ErrnoError(errCode);\\n      }\\n    }\\n    if (flags & 512) {\\n      FS.truncate(node, 0);\\n    }\\n    flags &= ~(128 | 512 | 131072);\\n    var stream = FS.createStream({\\n      node: node,\\n      path: FS.getPath(node),\\n      flags: flags,\\n      seekable: true,\\n      position: 0,\\n      stream_ops: node.stream_ops,\\n      ungotten: [],\\n      error: false\\n    }, fd_start, fd_end);\\n    if (stream.stream_ops.open) {\\n      stream.stream_ops.open(stream);\\n    }\\n    if (Module[\\\"logReadFiles\\\"] && !(flags & 1)) {\\n      if (!FS.readFiles) FS.readFiles = {};\\n      if (!(path in FS.readFiles)) {\\n        FS.readFiles[path] = 1;\\n        err(\\\"FS.trackingDelegate error on read file: \\\" + path);\\n      }\\n    }\\n    try {\\n      if (FS.trackingDelegate[\\\"onOpenFile\\\"]) {\\n        var trackingFlags = 0;\\n        if ((flags & 2097155) !== 1) {\\n          trackingFlags |= FS.tracking.openFlags.READ;\\n        }\\n        if ((flags & 2097155) !== 0) {\\n          trackingFlags |= FS.tracking.openFlags.WRITE;\\n        }\\n        FS.trackingDelegate[\\\"onOpenFile\\\"](path, trackingFlags);\\n      }\\n    } catch (e) {\\n      err(\\\"FS.trackingDelegate['onOpenFile']('\\\" + path + \\\"', flags) threw an exception: \\\" + e.message);\\n    }\\n    return stream;\\n  },\\n  close: function (stream) {\\n    if (FS.isClosed(stream)) {\\n      throw new FS.ErrnoError(8);\\n    }\\n    if (stream.getdents) stream.getdents = null;\\n    try {\\n      if (stream.stream_ops.close) {\\n        stream.stream_ops.close(stream);\\n      }\\n    } catch (e) {\\n      throw e;\\n    } finally {\\n      FS.closeStream(stream.fd);\\n    }\\n    stream.fd = null;\\n  },\\n  isClosed: function (stream) {\\n    return stream.fd === null;\\n  },\\n  llseek: function (stream, offset, whence) {\\n    if (FS.isClosed(stream)) {\\n      throw new FS.ErrnoError(8);\\n    }\\n    if (!stream.seekable || !stream.stream_ops.llseek) {\\n      throw new FS.ErrnoError(70);\\n    }\\n    if (whence != 0 && whence != 1 && whence != 2) {\\n      throw new FS.ErrnoError(28);\\n    }\\n    stream.position = stream.stream_ops.llseek(stream, offset, whence);\\n    stream.ungotten = [];\\n    return stream.position;\\n  },\\n  read: function (stream, buffer, offset, length, position) {\\n    if (length < 0 || position < 0) {\\n      throw new FS.ErrnoError(28);\\n    }\\n    if (FS.isClosed(stream)) {\\n      throw new FS.ErrnoError(8);\\n    }\\n    if ((stream.flags & 2097155) === 1) {\\n      throw new FS.ErrnoError(8);\\n    }\\n    if (FS.isDir(stream.node.mode)) {\\n      throw new FS.ErrnoError(31);\\n    }\\n    if (!stream.stream_ops.read) {\\n      throw new FS.ErrnoError(28);\\n    }\\n    var seeking = typeof position !== \\\"undefined\\\";\\n    if (!seeking) {\\n      position = stream.position;\\n    } else if (!stream.seekable) {\\n      throw new FS.ErrnoError(70);\\n    }\\n    var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);\\n    if (!seeking) stream.position += bytesRead;\\n    return bytesRead;\\n  },\\n  write: function (stream, buffer, offset, length, position, canOwn) {\\n    if (length < 0 || position < 0) {\\n      throw new FS.ErrnoError(28);\\n    }\\n    if (FS.isClosed(stream)) {\\n      throw new FS.ErrnoError(8);\\n    }\\n    if ((stream.flags & 2097155) === 0) {\\n      throw new FS.ErrnoError(8);\\n    }\\n    if (FS.isDir(stream.node.mode)) {\\n      throw new FS.ErrnoError(31);\\n    }\\n    if (!stream.stream_ops.write) {\\n      throw new FS.ErrnoError(28);\\n    }\\n    if (stream.seekable && stream.flags & 1024) {\\n      FS.llseek(stream, 0, 2);\\n    }\\n    var seeking = typeof position !== \\\"undefined\\\";\\n    if (!seeking) {\\n      position = stream.position;\\n    } else if (!stream.seekable) {\\n      throw new FS.ErrnoError(70);\\n    }\\n    var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);\\n    if (!seeking) stream.position += bytesWritten;\\n    try {\\n      if (stream.path && FS.trackingDelegate[\\\"onWriteToFile\\\"]) FS.trackingDelegate[\\\"onWriteToFile\\\"](stream.path);\\n    } catch (e) {\\n      err(\\\"FS.trackingDelegate['onWriteToFile']('\\\" + stream.path + \\\"') threw an exception: \\\" + e.message);\\n    }\\n    return bytesWritten;\\n  },\\n  allocate: function (stream, offset, length) {\\n    if (FS.isClosed(stream)) {\\n      throw new FS.ErrnoError(8);\\n    }\\n    if (offset < 0 || length <= 0) {\\n      throw new FS.ErrnoError(28);\\n    }\\n    if ((stream.flags & 2097155) === 0) {\\n      throw new FS.ErrnoError(8);\\n    }\\n    if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\\n      throw new FS.ErrnoError(43);\\n    }\\n    if (!stream.stream_ops.allocate) {\\n      throw new FS.ErrnoError(138);\\n    }\\n    stream.stream_ops.allocate(stream, offset, length);\\n  },\\n  mmap: function (stream, buffer, offset, length, position, prot, flags) {\\n    if ((prot & 2) !== 0 && (flags & 2) === 0 && (stream.flags & 2097155) !== 2) {\\n      throw new FS.ErrnoError(2);\\n    }\\n    if ((stream.flags & 2097155) === 1) {\\n      throw new FS.ErrnoError(2);\\n    }\\n    if (!stream.stream_ops.mmap) {\\n      throw new FS.ErrnoError(43);\\n    }\\n    return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);\\n  },\\n  msync: function (stream, buffer, offset, length, mmapFlags) {\\n    if (!stream || !stream.stream_ops.msync) {\\n      return 0;\\n    }\\n    return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);\\n  },\\n  munmap: function (stream) {\\n    return 0;\\n  },\\n  ioctl: function (stream, cmd, arg) {\\n    if (!stream.stream_ops.ioctl) {\\n      throw new FS.ErrnoError(59);\\n    }\\n    return stream.stream_ops.ioctl(stream, cmd, arg);\\n  },\\n  readFile: function (path, opts) {\\n    opts = opts || {};\\n    opts.flags = opts.flags || \\\"r\\\";\\n    opts.encoding = opts.encoding || \\\"binary\\\";\\n    if (opts.encoding !== \\\"utf8\\\" && opts.encoding !== \\\"binary\\\") {\\n      throw new Error('Invalid encoding type \\\"' + opts.encoding + '\\\"');\\n    }\\n    var ret;\\n    var stream = FS.open(path, opts.flags);\\n    var stat = FS.stat(path);\\n    var length = stat.size;\\n    var buf = new Uint8Array(length);\\n    FS.read(stream, buf, 0, length, 0);\\n    if (opts.encoding === \\\"utf8\\\") {\\n      ret = UTF8ArrayToString(buf, 0);\\n    } else if (opts.encoding === \\\"binary\\\") {\\n      ret = buf;\\n    }\\n    FS.close(stream);\\n    return ret;\\n  },\\n  writeFile: function (path, data, opts) {\\n    opts = opts || {};\\n    opts.flags = opts.flags || \\\"w\\\";\\n    var stream = FS.open(path, opts.flags, opts.mode);\\n    if (typeof data === \\\"string\\\") {\\n      var buf = new Uint8Array(lengthBytesUTF8(data) + 1);\\n      var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\\n      FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);\\n    } else if (ArrayBuffer.isView(data)) {\\n      FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\\n    } else {\\n      throw new Error(\\\"Unsupported data type\\\");\\n    }\\n    FS.close(stream);\\n  },\\n  cwd: function () {\\n    return FS.currentPath;\\n  },\\n  chdir: function (path) {\\n    var lookup = FS.lookupPath(path, {\\n      follow: true\\n    });\\n    if (lookup.node === null) {\\n      throw new FS.ErrnoError(44);\\n    }\\n    if (!FS.isDir(lookup.node.mode)) {\\n      throw new FS.ErrnoError(54);\\n    }\\n    var errCode = FS.nodePermissions(lookup.node, \\\"x\\\");\\n    if (errCode) {\\n      throw new FS.ErrnoError(errCode);\\n    }\\n    FS.currentPath = lookup.path;\\n  },\\n  createDefaultDirectories: function () {\\n    FS.mkdir(\\\"/tmp\\\");\\n    FS.mkdir(\\\"/home\\\");\\n    FS.mkdir(\\\"/home/web_user\\\");\\n  },\\n  createDefaultDevices: function () {\\n    FS.mkdir(\\\"/dev\\\");\\n    FS.registerDevice(FS.makedev(1, 3), {\\n      read: function () {\\n        return 0;\\n      },\\n      write: function (stream, buffer, offset, length, pos) {\\n        return length;\\n      }\\n    });\\n    FS.mkdev(\\\"/dev/null\\\", FS.makedev(1, 3));\\n    TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\\n    TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\\n    FS.mkdev(\\\"/dev/tty\\\", FS.makedev(5, 0));\\n    FS.mkdev(\\\"/dev/tty1\\\", FS.makedev(6, 0));\\n    var random_device;\\n    if (typeof crypto === \\\"object\\\" && typeof crypto[\\\"getRandomValues\\\"] === \\\"function\\\") {\\n      var randomBuffer = new Uint8Array(1);\\n      random_device = function () {\\n        crypto.getRandomValues(randomBuffer);\\n        return randomBuffer[0];\\n      };\\n    } else if (ENVIRONMENT_IS_NODE) {\\n      try {\\n        var crypto_module = require(\\\"crypto\\\");\\n        random_device = function () {\\n          return crypto_module[\\\"randomBytes\\\"](1)[0];\\n        };\\n      } catch (e) {}\\n    } else {}\\n    if (!random_device) {\\n      random_device = function () {\\n        abort(\\\"random_device\\\");\\n      };\\n    }\\n    FS.createDevice(\\\"/dev\\\", \\\"random\\\", random_device);\\n    FS.createDevice(\\\"/dev\\\", \\\"urandom\\\", random_device);\\n    FS.mkdir(\\\"/dev/shm\\\");\\n    FS.mkdir(\\\"/dev/shm/tmp\\\");\\n  },\\n  createSpecialDirectories: function () {\\n    FS.mkdir(\\\"/proc\\\");\\n    FS.mkdir(\\\"/proc/self\\\");\\n    FS.mkdir(\\\"/proc/self/fd\\\");\\n    FS.mount({\\n      mount: function () {\\n        var node = FS.createNode(\\\"/proc/self\\\", \\\"fd\\\", 16384 | 511, 73);\\n        node.node_ops = {\\n          lookup: function (parent, name) {\\n            var fd = +name;\\n            var stream = FS.getStream(fd);\\n            if (!stream) throw new FS.ErrnoError(8);\\n            var ret = {\\n              parent: null,\\n              mount: {\\n                mountpoint: \\\"fake\\\"\\n              },\\n              node_ops: {\\n                readlink: function () {\\n                  return stream.path;\\n                }\\n              }\\n            };\\n            ret.parent = ret;\\n            return ret;\\n          }\\n        };\\n        return node;\\n      }\\n    }, {}, \\\"/proc/self/fd\\\");\\n  },\\n  createStandardStreams: function () {\\n    if (Module[\\\"stdin\\\"]) {\\n      FS.createDevice(\\\"/dev\\\", \\\"stdin\\\", Module[\\\"stdin\\\"]);\\n    } else {\\n      FS.symlink(\\\"/dev/tty\\\", \\\"/dev/stdin\\\");\\n    }\\n    if (Module[\\\"stdout\\\"]) {\\n      FS.createDevice(\\\"/dev\\\", \\\"stdout\\\", null, Module[\\\"stdout\\\"]);\\n    } else {\\n      FS.symlink(\\\"/dev/tty\\\", \\\"/dev/stdout\\\");\\n    }\\n    if (Module[\\\"stderr\\\"]) {\\n      FS.createDevice(\\\"/dev\\\", \\\"stderr\\\", null, Module[\\\"stderr\\\"]);\\n    } else {\\n      FS.symlink(\\\"/dev/tty1\\\", \\\"/dev/stderr\\\");\\n    }\\n    var stdin = FS.open(\\\"/dev/stdin\\\", \\\"r\\\");\\n    var stdout = FS.open(\\\"/dev/stdout\\\", \\\"w\\\");\\n    var stderr = FS.open(\\\"/dev/stderr\\\", \\\"w\\\");\\n  },\\n  ensureErrnoError: function () {\\n    if (FS.ErrnoError) return;\\n    FS.ErrnoError = function ErrnoError(errno, node) {\\n      this.node = node;\\n      this.setErrno = function (errno) {\\n        this.errno = errno;\\n      };\\n      this.setErrno(errno);\\n      this.message = \\\"FS error\\\";\\n    };\\n    FS.ErrnoError.prototype = new Error();\\n    FS.ErrnoError.prototype.constructor = FS.ErrnoError;\\n    [44].forEach(function (code) {\\n      FS.genericErrors[code] = new FS.ErrnoError(code);\\n      FS.genericErrors[code].stack = \\\"<generic error, no stack>\\\";\\n    });\\n  },\\n  staticInit: function () {\\n    FS.ensureErrnoError();\\n    FS.nameTable = new Array(4096);\\n    FS.mount(MEMFS, {}, \\\"/\\\");\\n    FS.createDefaultDirectories();\\n    FS.createDefaultDevices();\\n    FS.createSpecialDirectories();\\n    FS.filesystems = {\\n      \\\"MEMFS\\\": MEMFS\\n    };\\n  },\\n  init: function (input, output, error) {\\n    FS.init.initialized = true;\\n    FS.ensureErrnoError();\\n    Module[\\\"stdin\\\"] = input || Module[\\\"stdin\\\"];\\n    Module[\\\"stdout\\\"] = output || Module[\\\"stdout\\\"];\\n    Module[\\\"stderr\\\"] = error || Module[\\\"stderr\\\"];\\n    FS.createStandardStreams();\\n  },\\n  quit: function () {\\n    FS.init.initialized = false;\\n    var fflush = Module[\\\"_fflush\\\"];\\n    if (fflush) fflush(0);\\n    for (var i = 0; i < FS.streams.length; i++) {\\n      var stream = FS.streams[i];\\n      if (!stream) {\\n        continue;\\n      }\\n      FS.close(stream);\\n    }\\n  },\\n  getMode: function (canRead, canWrite) {\\n    var mode = 0;\\n    if (canRead) mode |= 292 | 73;\\n    if (canWrite) mode |= 146;\\n    return mode;\\n  },\\n  joinPath: function (parts, forceRelative) {\\n    var path = PATH.join.apply(null, parts);\\n    if (forceRelative && path[0] == \\\"/\\\") path = path.substr(1);\\n    return path;\\n  },\\n  absolutePath: function (relative, base) {\\n    return PATH_FS.resolve(base, relative);\\n  },\\n  standardizePath: function (path) {\\n    return PATH.normalize(path);\\n  },\\n  findObject: function (path, dontResolveLastLink) {\\n    var ret = FS.analyzePath(path, dontResolveLastLink);\\n    if (ret.exists) {\\n      return ret.object;\\n    } else {\\n      setErrNo(ret.error);\\n      return null;\\n    }\\n  },\\n  analyzePath: function (path, dontResolveLastLink) {\\n    try {\\n      var lookup = FS.lookupPath(path, {\\n        follow: !dontResolveLastLink\\n      });\\n      path = lookup.path;\\n    } catch (e) {}\\n    var ret = {\\n      isRoot: false,\\n      exists: false,\\n      error: 0,\\n      name: null,\\n      path: null,\\n      object: null,\\n      parentExists: false,\\n      parentPath: null,\\n      parentObject: null\\n    };\\n    try {\\n      var lookup = FS.lookupPath(path, {\\n        parent: true\\n      });\\n      ret.parentExists = true;\\n      ret.parentPath = lookup.path;\\n      ret.parentObject = lookup.node;\\n      ret.name = PATH.basename(path);\\n      lookup = FS.lookupPath(path, {\\n        follow: !dontResolveLastLink\\n      });\\n      ret.exists = true;\\n      ret.path = lookup.path;\\n      ret.object = lookup.node;\\n      ret.name = lookup.node.name;\\n      ret.isRoot = lookup.path === \\\"/\\\";\\n    } catch (e) {\\n      ret.error = e.errno;\\n    }\\n    return ret;\\n  },\\n  createFolder: function (parent, name, canRead, canWrite) {\\n    var path = PATH.join2(typeof parent === \\\"string\\\" ? parent : FS.getPath(parent), name);\\n    var mode = FS.getMode(canRead, canWrite);\\n    return FS.mkdir(path, mode);\\n  },\\n  createPath: function (parent, path, canRead, canWrite) {\\n    parent = typeof parent === \\\"string\\\" ? parent : FS.getPath(parent);\\n    var parts = path.split(\\\"/\\\").reverse();\\n    while (parts.length) {\\n      var part = parts.pop();\\n      if (!part) continue;\\n      var current = PATH.join2(parent, part);\\n      try {\\n        FS.mkdir(current);\\n      } catch (e) {}\\n      parent = current;\\n    }\\n    return current;\\n  },\\n  createFile: function (parent, name, properties, canRead, canWrite) {\\n    var path = PATH.join2(typeof parent === \\\"string\\\" ? parent : FS.getPath(parent), name);\\n    var mode = FS.getMode(canRead, canWrite);\\n    return FS.create(path, mode);\\n  },\\n  createDataFile: function (parent, name, data, canRead, canWrite, canOwn) {\\n    var path = name ? PATH.join2(typeof parent === \\\"string\\\" ? parent : FS.getPath(parent), name) : parent;\\n    var mode = FS.getMode(canRead, canWrite);\\n    var node = FS.create(path, mode);\\n    if (data) {\\n      if (typeof data === \\\"string\\\") {\\n        var arr = new Array(data.length);\\n        for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);\\n        data = arr;\\n      }\\n      FS.chmod(node, mode | 146);\\n      var stream = FS.open(node, \\\"w\\\");\\n      FS.write(stream, data, 0, data.length, 0, canOwn);\\n      FS.close(stream);\\n      FS.chmod(node, mode);\\n    }\\n    return node;\\n  },\\n  createDevice: function (parent, name, input, output) {\\n    var path = PATH.join2(typeof parent === \\\"string\\\" ? parent : FS.getPath(parent), name);\\n    var mode = FS.getMode(!!input, !!output);\\n    if (!FS.createDevice.major) FS.createDevice.major = 64;\\n    var dev = FS.makedev(FS.createDevice.major++, 0);\\n    FS.registerDevice(dev, {\\n      open: function (stream) {\\n        stream.seekable = false;\\n      },\\n      close: function (stream) {\\n        if (output && output.buffer && output.buffer.length) {\\n          output(10);\\n        }\\n      },\\n      read: function (stream, buffer, offset, length, pos) {\\n        var bytesRead = 0;\\n        for (var i = 0; i < length; i++) {\\n          var result;\\n          try {\\n            result = input();\\n          } catch (e) {\\n            throw new FS.ErrnoError(29);\\n          }\\n          if (result === undefined && bytesRead === 0) {\\n            throw new FS.ErrnoError(6);\\n          }\\n          if (result === null || result === undefined) break;\\n          bytesRead++;\\n          buffer[offset + i] = result;\\n        }\\n        if (bytesRead) {\\n          stream.node.timestamp = Date.now();\\n        }\\n        return bytesRead;\\n      },\\n      write: function (stream, buffer, offset, length, pos) {\\n        for (var i = 0; i < length; i++) {\\n          try {\\n            output(buffer[offset + i]);\\n          } catch (e) {\\n            throw new FS.ErrnoError(29);\\n          }\\n        }\\n        if (length) {\\n          stream.node.timestamp = Date.now();\\n        }\\n        return i;\\n      }\\n    });\\n    return FS.mkdev(path, mode, dev);\\n  },\\n  createLink: function (parent, name, target, canRead, canWrite) {\\n    var path = PATH.join2(typeof parent === \\\"string\\\" ? parent : FS.getPath(parent), name);\\n    return FS.symlink(target, path);\\n  },\\n  forceLoadFile: function (obj) {\\n    if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;\\n    var success = true;\\n    if (typeof XMLHttpRequest !== \\\"undefined\\\") {\\n      throw new Error(\\\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\\\");\\n    } else if (read_) {\\n      try {\\n        obj.contents = intArrayFromString(read_(obj.url), true);\\n        obj.usedBytes = obj.contents.length;\\n      } catch (e) {\\n        success = false;\\n      }\\n    } else {\\n      throw new Error(\\\"Cannot load without read() or XMLHttpRequest.\\\");\\n    }\\n    if (!success) setErrNo(29);\\n    return success;\\n  },\\n  createLazyFile: function (parent, name, url, canRead, canWrite) {\\n    function LazyUint8Array() {\\n      this.lengthKnown = false;\\n      this.chunks = [];\\n    }\\n    LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {\\n      if (idx > this.length - 1 || idx < 0) {\\n        return undefined;\\n      }\\n      var chunkOffset = idx % this.chunkSize;\\n      var chunkNum = idx / this.chunkSize | 0;\\n      return this.getter(chunkNum)[chunkOffset];\\n    };\\n    LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {\\n      this.getter = getter;\\n    };\\n    LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {\\n      var xhr = new XMLHttpRequest();\\n      xhr.open(\\\"HEAD\\\", url, false);\\n      xhr.send(null);\\n      if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\\\"Couldn't load \\\" + url + \\\". Status: \\\" + xhr.status);\\n      var datalength = Number(xhr.getResponseHeader(\\\"Content-length\\\"));\\n      var header;\\n      var hasByteServing = (header = xhr.getResponseHeader(\\\"Accept-Ranges\\\")) && header === \\\"bytes\\\";\\n      var usesGzip = (header = xhr.getResponseHeader(\\\"Content-Encoding\\\")) && header === \\\"gzip\\\";\\n      var chunkSize = 1024 * 1024;\\n      if (!hasByteServing) chunkSize = datalength;\\n      var doXHR = function (from, to) {\\n        if (from > to) throw new Error(\\\"invalid range (\\\" + from + \\\", \\\" + to + \\\") or no bytes requested!\\\");\\n        if (to > datalength - 1) throw new Error(\\\"only \\\" + datalength + \\\" bytes available! programmer error!\\\");\\n        var xhr = new XMLHttpRequest();\\n        xhr.open(\\\"GET\\\", url, false);\\n        if (datalength !== chunkSize) xhr.setRequestHeader(\\\"Range\\\", \\\"bytes=\\\" + from + \\\"-\\\" + to);\\n        if (typeof Uint8Array != \\\"undefined\\\") xhr.responseType = \\\"arraybuffer\\\";\\n        if (xhr.overrideMimeType) {\\n          xhr.overrideMimeType(\\\"text/plain; charset=x-user-defined\\\");\\n        }\\n        xhr.send(null);\\n        if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\\\"Couldn't load \\\" + url + \\\". Status: \\\" + xhr.status);\\n        if (xhr.response !== undefined) {\\n          return new Uint8Array(xhr.response || []);\\n        } else {\\n          return intArrayFromString(xhr.responseText || \\\"\\\", true);\\n        }\\n      };\\n      var lazyArray = this;\\n      lazyArray.setDataGetter(function (chunkNum) {\\n        var start = chunkNum * chunkSize;\\n        var end = (chunkNum + 1) * chunkSize - 1;\\n        end = Math.min(end, datalength - 1);\\n        if (typeof lazyArray.chunks[chunkNum] === \\\"undefined\\\") {\\n          lazyArray.chunks[chunkNum] = doXHR(start, end);\\n        }\\n        if (typeof lazyArray.chunks[chunkNum] === \\\"undefined\\\") throw new Error(\\\"doXHR failed!\\\");\\n        return lazyArray.chunks[chunkNum];\\n      });\\n      if (usesGzip || !datalength) {\\n        chunkSize = datalength = 1;\\n        datalength = this.getter(0).length;\\n        chunkSize = datalength;\\n        out(\\\"LazyFiles on gzip forces download of the whole file when length is accessed\\\");\\n      }\\n      this._length = datalength;\\n      this._chunkSize = chunkSize;\\n      this.lengthKnown = true;\\n    };\\n    if (typeof XMLHttpRequest !== \\\"undefined\\\") {\\n      if (!ENVIRONMENT_IS_WORKER) throw \\\"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\\\";\\n      var lazyArray = new LazyUint8Array();\\n      Object.defineProperties(lazyArray, {\\n        length: {\\n          get: function () {\\n            if (!this.lengthKnown) {\\n              this.cacheLength();\\n            }\\n            return this._length;\\n          }\\n        },\\n        chunkSize: {\\n          get: function () {\\n            if (!this.lengthKnown) {\\n              this.cacheLength();\\n            }\\n            return this._chunkSize;\\n          }\\n        }\\n      });\\n      var properties = {\\n        isDevice: false,\\n        contents: lazyArray\\n      };\\n    } else {\\n      var properties = {\\n        isDevice: false,\\n        url: url\\n      };\\n    }\\n    var node = FS.createFile(parent, name, properties, canRead, canWrite);\\n    if (properties.contents) {\\n      node.contents = properties.contents;\\n    } else if (properties.url) {\\n      node.contents = null;\\n      node.url = properties.url;\\n    }\\n    Object.defineProperties(node, {\\n      usedBytes: {\\n        get: function () {\\n          return this.contents.length;\\n        }\\n      }\\n    });\\n    var stream_ops = {};\\n    var keys = Object.keys(node.stream_ops);\\n    keys.forEach(function (key) {\\n      var fn = node.stream_ops[key];\\n      stream_ops[key] = function forceLoadLazyFile() {\\n        if (!FS.forceLoadFile(node)) {\\n          throw new FS.ErrnoError(29);\\n        }\\n        return fn.apply(null, arguments);\\n      };\\n    });\\n    stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {\\n      if (!FS.forceLoadFile(node)) {\\n        throw new FS.ErrnoError(29);\\n      }\\n      var contents = stream.node.contents;\\n      if (position >= contents.length) return 0;\\n      var size = Math.min(contents.length - position, length);\\n      if (contents.slice) {\\n        for (var i = 0; i < size; i++) {\\n          buffer[offset + i] = contents[position + i];\\n        }\\n      } else {\\n        for (var i = 0; i < size; i++) {\\n          buffer[offset + i] = contents.get(position + i);\\n        }\\n      }\\n      return size;\\n    };\\n    node.stream_ops = stream_ops;\\n    return node;\\n  },\\n  createPreloadedFile: function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {\\n    Browser.init();\\n    var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;\\n    var dep = getUniqueRunDependency(\\\"cp \\\" + fullname);\\n    function processData(byteArray) {\\n      function finish(byteArray) {\\n        if (preFinish) preFinish();\\n        if (!dontCreateFile) {\\n          FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);\\n        }\\n        if (onload) onload();\\n        removeRunDependency(dep);\\n      }\\n      var handled = false;\\n      Module[\\\"preloadPlugins\\\"].forEach(function (plugin) {\\n        if (handled) return;\\n        if (plugin[\\\"canHandle\\\"](fullname)) {\\n          plugin[\\\"handle\\\"](byteArray, fullname, finish, function () {\\n            if (onerror) onerror();\\n            removeRunDependency(dep);\\n          });\\n          handled = true;\\n        }\\n      });\\n      if (!handled) finish(byteArray);\\n    }\\n    addRunDependency(dep);\\n    if (typeof url == \\\"string\\\") {\\n      Browser.asyncLoad(url, function (byteArray) {\\n        processData(byteArray);\\n      }, onerror);\\n    } else {\\n      processData(url);\\n    }\\n  },\\n  indexedDB: function () {\\n    return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\\n  },\\n  DB_NAME: function () {\\n    return \\\"EM_FS_\\\" + window.location.pathname;\\n  },\\n  DB_VERSION: 20,\\n  DB_STORE_NAME: \\\"FILE_DATA\\\",\\n  saveFilesToDB: function (paths, onload, onerror) {\\n    onload = onload || function () {};\\n    onerror = onerror || function () {};\\n    var indexedDB = FS.indexedDB();\\n    try {\\n      var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\\n    } catch (e) {\\n      return onerror(e);\\n    }\\n    openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {\\n      out(\\\"creating db\\\");\\n      var db = openRequest.result;\\n      db.createObjectStore(FS.DB_STORE_NAME);\\n    };\\n    openRequest.onsuccess = function openRequest_onsuccess() {\\n      var db = openRequest.result;\\n      var transaction = db.transaction([FS.DB_STORE_NAME], \\\"readwrite\\\");\\n      var files = transaction.objectStore(FS.DB_STORE_NAME);\\n      var ok = 0,\\n        fail = 0,\\n        total = paths.length;\\n      function finish() {\\n        if (fail == 0) onload();else onerror();\\n      }\\n      paths.forEach(function (path) {\\n        var putRequest = files.put(FS.analyzePath(path).object.contents, path);\\n        putRequest.onsuccess = function putRequest_onsuccess() {\\n          ok++;\\n          if (ok + fail == total) finish();\\n        };\\n        putRequest.onerror = function putRequest_onerror() {\\n          fail++;\\n          if (ok + fail == total) finish();\\n        };\\n      });\\n      transaction.onerror = onerror;\\n    };\\n    openRequest.onerror = onerror;\\n  },\\n  loadFilesFromDB: function (paths, onload, onerror) {\\n    onload = onload || function () {};\\n    onerror = onerror || function () {};\\n    var indexedDB = FS.indexedDB();\\n    try {\\n      var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\\n    } catch (e) {\\n      return onerror(e);\\n    }\\n    openRequest.onupgradeneeded = onerror;\\n    openRequest.onsuccess = function openRequest_onsuccess() {\\n      var db = openRequest.result;\\n      try {\\n        var transaction = db.transaction([FS.DB_STORE_NAME], \\\"readonly\\\");\\n      } catch (e) {\\n        onerror(e);\\n        return;\\n      }\\n      var files = transaction.objectStore(FS.DB_STORE_NAME);\\n      var ok = 0,\\n        fail = 0,\\n        total = paths.length;\\n      function finish() {\\n        if (fail == 0) onload();else onerror();\\n      }\\n      paths.forEach(function (path) {\\n        var getRequest = files.get(path);\\n        getRequest.onsuccess = function getRequest_onsuccess() {\\n          if (FS.analyzePath(path).exists) {\\n            FS.unlink(path);\\n          }\\n          FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);\\n          ok++;\\n          if (ok + fail == total) finish();\\n        };\\n        getRequest.onerror = function getRequest_onerror() {\\n          fail++;\\n          if (ok + fail == total) finish();\\n        };\\n      });\\n      transaction.onerror = onerror;\\n    };\\n    openRequest.onerror = onerror;\\n  }\\n};\\nvar SYSCALLS = {\\n  mappings: {},\\n  DEFAULT_POLLMASK: 5,\\n  umask: 511,\\n  calculateAt: function (dirfd, path) {\\n    if (path[0] !== \\\"/\\\") {\\n      var dir;\\n      if (dirfd === -100) {\\n        dir = FS.cwd();\\n      } else {\\n        var dirstream = FS.getStream(dirfd);\\n        if (!dirstream) throw new FS.ErrnoError(8);\\n        dir = dirstream.path;\\n      }\\n      path = PATH.join2(dir, path);\\n    }\\n    return path;\\n  },\\n  doStat: function (func, path, buf) {\\n    try {\\n      var stat = func(path);\\n    } catch (e) {\\n      if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {\\n        return -54;\\n      }\\n      throw e;\\n    }\\n    HEAP32[buf >> 2] = stat.dev;\\n    HEAP32[buf + 4 >> 2] = 0;\\n    HEAP32[buf + 8 >> 2] = stat.ino;\\n    HEAP32[buf + 12 >> 2] = stat.mode;\\n    HEAP32[buf + 16 >> 2] = stat.nlink;\\n    HEAP32[buf + 20 >> 2] = stat.uid;\\n    HEAP32[buf + 24 >> 2] = stat.gid;\\n    HEAP32[buf + 28 >> 2] = stat.rdev;\\n    HEAP32[buf + 32 >> 2] = 0;\\n    tempI64 = [stat.size >>> 0, (tempDouble = stat.size, +Math_abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math_min(+Math_floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 40 >> 2] = tempI64[0], HEAP32[buf + 44 >> 2] = tempI64[1];\\n    HEAP32[buf + 48 >> 2] = 4096;\\n    HEAP32[buf + 52 >> 2] = stat.blocks;\\n    HEAP32[buf + 56 >> 2] = stat.atime.getTime() / 1e3 | 0;\\n    HEAP32[buf + 60 >> 2] = 0;\\n    HEAP32[buf + 64 >> 2] = stat.mtime.getTime() / 1e3 | 0;\\n    HEAP32[buf + 68 >> 2] = 0;\\n    HEAP32[buf + 72 >> 2] = stat.ctime.getTime() / 1e3 | 0;\\n    HEAP32[buf + 76 >> 2] = 0;\\n    tempI64 = [stat.ino >>> 0, (tempDouble = stat.ino, +Math_abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math_min(+Math_floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 80 >> 2] = tempI64[0], HEAP32[buf + 84 >> 2] = tempI64[1];\\n    return 0;\\n  },\\n  doMsync: function (addr, stream, len, flags, offset) {\\n    var buffer = HEAPU8.slice(addr, addr + len);\\n    FS.msync(stream, buffer, offset, len, flags);\\n  },\\n  doMkdir: function (path, mode) {\\n    path = PATH.normalize(path);\\n    if (path[path.length - 1] === \\\"/\\\") path = path.substr(0, path.length - 1);\\n    FS.mkdir(path, mode, 0);\\n    return 0;\\n  },\\n  doMknod: function (path, mode, dev) {\\n    switch (mode & 61440) {\\n      case 32768:\\n      case 8192:\\n      case 24576:\\n      case 4096:\\n      case 49152:\\n        break;\\n      default:\\n        return -28;\\n    }\\n    FS.mknod(path, mode, dev);\\n    return 0;\\n  },\\n  doReadlink: function (path, buf, bufsize) {\\n    if (bufsize <= 0) return -28;\\n    var ret = FS.readlink(path);\\n    var len = Math.min(bufsize, lengthBytesUTF8(ret));\\n    var endChar = HEAP8[buf + len];\\n    stringToUTF8(ret, buf, bufsize + 1);\\n    HEAP8[buf + len] = endChar;\\n    return len;\\n  },\\n  doAccess: function (path, amode) {\\n    if (amode & ~7) {\\n      return -28;\\n    }\\n    var node;\\n    var lookup = FS.lookupPath(path, {\\n      follow: true\\n    });\\n    node = lookup.node;\\n    if (!node) {\\n      return -44;\\n    }\\n    var perms = \\\"\\\";\\n    if (amode & 4) perms += \\\"r\\\";\\n    if (amode & 2) perms += \\\"w\\\";\\n    if (amode & 1) perms += \\\"x\\\";\\n    if (perms && FS.nodePermissions(node, perms)) {\\n      return -2;\\n    }\\n    return 0;\\n  },\\n  doDup: function (path, flags, suggestFD) {\\n    var suggest = FS.getStream(suggestFD);\\n    if (suggest) FS.close(suggest);\\n    return FS.open(path, flags, 0, suggestFD, suggestFD).fd;\\n  },\\n  doReadv: function (stream, iov, iovcnt, offset) {\\n    var ret = 0;\\n    for (var i = 0; i < iovcnt; i++) {\\n      var ptr = HEAP32[iov + i * 8 >> 2];\\n      var len = HEAP32[iov + (i * 8 + 4) >> 2];\\n      var curr = FS.read(stream, HEAP8, ptr, len, offset);\\n      if (curr < 0) return -1;\\n      ret += curr;\\n      if (curr < len) break;\\n    }\\n    return ret;\\n  },\\n  doWritev: function (stream, iov, iovcnt, offset) {\\n    var ret = 0;\\n    for (var i = 0; i < iovcnt; i++) {\\n      var ptr = HEAP32[iov + i * 8 >> 2];\\n      var len = HEAP32[iov + (i * 8 + 4) >> 2];\\n      var curr = FS.write(stream, HEAP8, ptr, len, offset);\\n      if (curr < 0) return -1;\\n      ret += curr;\\n    }\\n    return ret;\\n  },\\n  varargs: undefined,\\n  get: function () {\\n    SYSCALLS.varargs += 4;\\n    var ret = HEAP32[SYSCALLS.varargs - 4 >> 2];\\n    return ret;\\n  },\\n  getStr: function (ptr) {\\n    var ret = UTF8ToString(ptr);\\n    return ret;\\n  },\\n  getStreamFromFD: function (fd) {\\n    var stream = FS.getStream(fd);\\n    if (!stream) throw new FS.ErrnoError(8);\\n    return stream;\\n  },\\n  get64: function (low, high) {\\n    return low;\\n  }\\n};\\nfunction ___sys_fcntl64(fd, cmd, varargs) {\\n  SYSCALLS.varargs = varargs;\\n  try {\\n    var stream = SYSCALLS.getStreamFromFD(fd);\\n    switch (cmd) {\\n      case 0:\\n        {\\n          var arg = SYSCALLS.get();\\n          if (arg < 0) {\\n            return -28;\\n          }\\n          var newStream;\\n          newStream = FS.open(stream.path, stream.flags, 0, arg);\\n          return newStream.fd;\\n        }\\n      case 1:\\n      case 2:\\n        return 0;\\n      case 3:\\n        return stream.flags;\\n      case 4:\\n        {\\n          var arg = SYSCALLS.get();\\n          stream.flags |= arg;\\n          return 0;\\n        }\\n      case 12:\\n        {\\n          var arg = SYSCALLS.get();\\n          var offset = 0;\\n          HEAP16[arg + offset >> 1] = 2;\\n          return 0;\\n        }\\n      case 13:\\n      case 14:\\n        return 0;\\n      case 16:\\n      case 8:\\n        return -28;\\n      case 9:\\n        setErrNo(28);\\n        return -1;\\n      default:\\n        {\\n          return -28;\\n        }\\n    }\\n  } catch (e) {\\n    if (typeof FS === \\\"undefined\\\" || !(e instanceof FS.ErrnoError)) abort(e);\\n    return -e.errno;\\n  }\\n}\\nfunction ___sys_ioctl(fd, op, varargs) {\\n  SYSCALLS.varargs = varargs;\\n  try {\\n    var stream = SYSCALLS.getStreamFromFD(fd);\\n    switch (op) {\\n      case 21509:\\n      case 21505:\\n        {\\n          if (!stream.tty) return -59;\\n          return 0;\\n        }\\n      case 21510:\\n      case 21511:\\n      case 21512:\\n      case 21506:\\n      case 21507:\\n      case 21508:\\n        {\\n          if (!stream.tty) return -59;\\n          return 0;\\n        }\\n      case 21519:\\n        {\\n          if (!stream.tty) return -59;\\n          var argp = SYSCALLS.get();\\n          HEAP32[argp >> 2] = 0;\\n          return 0;\\n        }\\n      case 21520:\\n        {\\n          if (!stream.tty) return -59;\\n          return -28;\\n        }\\n      case 21531:\\n        {\\n          var argp = SYSCALLS.get();\\n          return FS.ioctl(stream, op, argp);\\n        }\\n      case 21523:\\n        {\\n          if (!stream.tty) return -59;\\n          return 0;\\n        }\\n      case 21524:\\n        {\\n          if (!stream.tty) return -59;\\n          return 0;\\n        }\\n      default:\\n        abort(\\\"bad ioctl syscall \\\" + op);\\n    }\\n  } catch (e) {\\n    if (typeof FS === \\\"undefined\\\" || !(e instanceof FS.ErrnoError)) abort(e);\\n    return -e.errno;\\n  }\\n}\\nfunction syscallMunmap(addr, len) {\\n  if ((addr | 0) === -1 || len === 0) {\\n    return -28;\\n  }\\n  var info = SYSCALLS.mappings[addr];\\n  if (!info) return 0;\\n  if (len === info.len) {\\n    var stream = FS.getStream(info.fd);\\n    if (info.prot & 2) {\\n      SYSCALLS.doMsync(addr, stream, len, info.flags, info.offset);\\n    }\\n    FS.munmap(stream);\\n    SYSCALLS.mappings[addr] = null;\\n    if (info.allocated) {\\n      _free(info.malloc);\\n    }\\n  }\\n  return 0;\\n}\\nfunction ___sys_munmap(addr, len) {\\n  try {\\n    return syscallMunmap(addr, len);\\n  } catch (e) {\\n    if (typeof FS === \\\"undefined\\\" || !(e instanceof FS.ErrnoError)) abort(e);\\n    return -e.errno;\\n  }\\n}\\nfunction ___sys_open(path, flags, varargs) {\\n  SYSCALLS.varargs = varargs;\\n  try {\\n    var pathname = SYSCALLS.getStr(path);\\n    var mode = SYSCALLS.get();\\n    var stream = FS.open(pathname, flags, mode);\\n    return stream.fd;\\n  } catch (e) {\\n    if (typeof FS === \\\"undefined\\\" || !(e instanceof FS.ErrnoError)) abort(e);\\n    return -e.errno;\\n  }\\n}\\nfunction _abort() {\\n  abort();\\n}\\nvar setjmpId = 0;\\nfunction _saveSetjmp(env, label, table, size) {\\n  env = env | 0;\\n  label = label | 0;\\n  table = table | 0;\\n  size = size | 0;\\n  var i = 0;\\n  setjmpId = setjmpId + 1 | 0;\\n  HEAP32[env >> 2] = setjmpId;\\n  while ((i | 0) < (size | 0)) {\\n    if ((HEAP32[table + (i << 3) >> 2] | 0) == 0) {\\n      HEAP32[table + (i << 3) >> 2] = setjmpId;\\n      HEAP32[table + ((i << 3) + 4) >> 2] = label;\\n      HEAP32[table + ((i << 3) + 8) >> 2] = 0;\\n      setTempRet0(size | 0);\\n      return table | 0;\\n    }\\n    i = i + 1 | 0;\\n  }\\n  size = size * 2 | 0;\\n  table = _realloc(table | 0, 8 * (size + 1 | 0) | 0) | 0;\\n  table = _saveSetjmp(env | 0, label | 0, table | 0, size | 0) | 0;\\n  setTempRet0(size | 0);\\n  return table | 0;\\n}\\nfunction _testSetjmp(id, table, size) {\\n  id = id | 0;\\n  table = table | 0;\\n  size = size | 0;\\n  var i = 0,\\n    curr = 0;\\n  while ((i | 0) < (size | 0)) {\\n    curr = HEAP32[table + (i << 3) >> 2] | 0;\\n    if ((curr | 0) == 0) break;\\n    if ((curr | 0) == (id | 0)) {\\n      return HEAP32[table + ((i << 3) + 4) >> 2] | 0;\\n    }\\n    i = i + 1 | 0;\\n  }\\n  return 0;\\n}\\nfunction _longjmp(env, value) {\\n  _setThrew(env, value || 1);\\n  throw \\\"longjmp\\\";\\n}\\nfunction _emscripten_longjmp(env, value) {\\n  _longjmp(env, value);\\n}\\nfunction _emscripten_memcpy_big(dest, src, num) {\\n  HEAPU8.copyWithin(dest, src, src + num);\\n}\\nfunction _emscripten_get_heap_size() {\\n  return HEAPU8.length;\\n}\\nfunction emscripten_realloc_buffer(size) {\\n  try {\\n    wasmMemory.grow(size - buffer.byteLength + 65535 >>> 16);\\n    updateGlobalBufferAndViews(wasmMemory.buffer);\\n    return 1;\\n  } catch (e) {}\\n}\\nfunction _emscripten_resize_heap(requestedSize) {\\n  requestedSize = requestedSize >>> 0;\\n  var oldSize = _emscripten_get_heap_size();\\n  var PAGE_MULTIPLE = 65536;\\n  var maxHeapSize = 2147483648;\\n  if (requestedSize > maxHeapSize) {\\n    return false;\\n  }\\n  var minHeapSize = 16777216;\\n  for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\\n    var overGrownHeapSize = oldSize * (1 + .2 / cutDown);\\n    overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\\n    var newSize = Math.min(maxHeapSize, alignUp(Math.max(minHeapSize, requestedSize, overGrownHeapSize), PAGE_MULTIPLE));\\n    var replacement = emscripten_realloc_buffer(newSize);\\n    if (replacement) {\\n      return true;\\n    }\\n  }\\n  return false;\\n}\\nvar ENV = {};\\nfunction __getExecutableName() {\\n  return thisProgram || \\\"./this.program\\\";\\n}\\nfunction getEnvStrings() {\\n  if (!getEnvStrings.strings) {\\n    var env = {\\n      \\\"USER\\\": \\\"web_user\\\",\\n      \\\"LOGNAME\\\": \\\"web_user\\\",\\n      \\\"PATH\\\": \\\"/\\\",\\n      \\\"PWD\\\": \\\"/\\\",\\n      \\\"HOME\\\": \\\"/home/web_user\\\",\\n      \\\"LANG\\\": (typeof navigator === \\\"object\\\" && navigator.languages && navigator.languages[0] || \\\"C\\\").replace(\\\"-\\\", \\\"_\\\") + \\\".UTF-8\\\",\\n      \\\"_\\\": __getExecutableName()\\n    };\\n    for (var x in ENV) {\\n      env[x] = ENV[x];\\n    }\\n    var strings = [];\\n    for (var x in env) {\\n      strings.push(x + \\\"=\\\" + env[x]);\\n    }\\n    getEnvStrings.strings = strings;\\n  }\\n  return getEnvStrings.strings;\\n}\\nfunction _environ_get(__environ, environ_buf) {\\n  var bufSize = 0;\\n  getEnvStrings().forEach(function (string, i) {\\n    var ptr = environ_buf + bufSize;\\n    HEAP32[__environ + i * 4 >> 2] = ptr;\\n    writeAsciiToMemory(string, ptr);\\n    bufSize += string.length + 1;\\n  });\\n  return 0;\\n}\\nfunction _environ_sizes_get(penviron_count, penviron_buf_size) {\\n  var strings = getEnvStrings();\\n  HEAP32[penviron_count >> 2] = strings.length;\\n  var bufSize = 0;\\n  strings.forEach(function (string) {\\n    bufSize += string.length + 1;\\n  });\\n  HEAP32[penviron_buf_size >> 2] = bufSize;\\n  return 0;\\n}\\nfunction _fd_close(fd) {\\n  try {\\n    var stream = SYSCALLS.getStreamFromFD(fd);\\n    FS.close(stream);\\n    return 0;\\n  } catch (e) {\\n    if (typeof FS === \\\"undefined\\\" || !(e instanceof FS.ErrnoError)) abort(e);\\n    return e.errno;\\n  }\\n}\\nfunction _fd_read(fd, iov, iovcnt, pnum) {\\n  try {\\n    var stream = SYSCALLS.getStreamFromFD(fd);\\n    var num = SYSCALLS.doReadv(stream, iov, iovcnt);\\n    HEAP32[pnum >> 2] = num;\\n    return 0;\\n  } catch (e) {\\n    if (typeof FS === \\\"undefined\\\" || !(e instanceof FS.ErrnoError)) abort(e);\\n    return e.errno;\\n  }\\n}\\nfunction _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\\n  try {\\n    var stream = SYSCALLS.getStreamFromFD(fd);\\n    var HIGH_OFFSET = 4294967296;\\n    var offset = offset_high * HIGH_OFFSET + (offset_low >>> 0);\\n    var DOUBLE_LIMIT = 9007199254740992;\\n    if (offset <= -DOUBLE_LIMIT || offset >= DOUBLE_LIMIT) {\\n      return -61;\\n    }\\n    FS.llseek(stream, offset, whence);\\n    tempI64 = [stream.position >>> 0, (tempDouble = stream.position, +Math_abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math_min(+Math_floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[newOffset >> 2] = tempI64[0], HEAP32[newOffset + 4 >> 2] = tempI64[1];\\n    if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null;\\n    return 0;\\n  } catch (e) {\\n    if (typeof FS === \\\"undefined\\\" || !(e instanceof FS.ErrnoError)) abort(e);\\n    return e.errno;\\n  }\\n}\\nfunction _fd_write(fd, iov, iovcnt, pnum) {\\n  try {\\n    var stream = SYSCALLS.getStreamFromFD(fd);\\n    var num = SYSCALLS.doWritev(stream, iov, iovcnt);\\n    HEAP32[pnum >> 2] = num;\\n    return 0;\\n  } catch (e) {\\n    if (typeof FS === \\\"undefined\\\" || !(e instanceof FS.ErrnoError)) abort(e);\\n    return e.errno;\\n  }\\n}\\nfunction _getTempRet0() {\\n  return getTempRet0() | 0;\\n}\\nfunction _round(d) {\\n  d = +d;\\n  return d >= +0 ? +Math_floor(d + +.5) : +Math_ceil(d - +.5);\\n}\\nfunction _setTempRet0($i) {\\n  setTempRet0($i | 0);\\n}\\nfunction __isLeapYear(year) {\\n  return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\\n}\\nfunction __arraySum(array, index) {\\n  var sum = 0;\\n  for (var i = 0; i <= index; sum += array[i++]) {}\\n  return sum;\\n}\\nvar __MONTH_DAYS_LEAP = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\\nvar __MONTH_DAYS_REGULAR = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\\nfunction __addDays(date, days) {\\n  var newDate = new Date(date.getTime());\\n  while (days > 0) {\\n    var leap = __isLeapYear(newDate.getFullYear());\\n    var currentMonth = newDate.getMonth();\\n    var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];\\n    if (days > daysInCurrentMonth - newDate.getDate()) {\\n      days -= daysInCurrentMonth - newDate.getDate() + 1;\\n      newDate.setDate(1);\\n      if (currentMonth < 11) {\\n        newDate.setMonth(currentMonth + 1);\\n      } else {\\n        newDate.setMonth(0);\\n        newDate.setFullYear(newDate.getFullYear() + 1);\\n      }\\n    } else {\\n      newDate.setDate(newDate.getDate() + days);\\n      return newDate;\\n    }\\n  }\\n  return newDate;\\n}\\nfunction _strftime(s, maxsize, format, tm) {\\n  var tm_zone = HEAP32[tm + 40 >> 2];\\n  var date = {\\n    tm_sec: HEAP32[tm >> 2],\\n    tm_min: HEAP32[tm + 4 >> 2],\\n    tm_hour: HEAP32[tm + 8 >> 2],\\n    tm_mday: HEAP32[tm + 12 >> 2],\\n    tm_mon: HEAP32[tm + 16 >> 2],\\n    tm_year: HEAP32[tm + 20 >> 2],\\n    tm_wday: HEAP32[tm + 24 >> 2],\\n    tm_yday: HEAP32[tm + 28 >> 2],\\n    tm_isdst: HEAP32[tm + 32 >> 2],\\n    tm_gmtoff: HEAP32[tm + 36 >> 2],\\n    tm_zone: tm_zone ? UTF8ToString(tm_zone) : \\\"\\\"\\n  };\\n  var pattern = UTF8ToString(format);\\n  var EXPANSION_RULES_1 = {\\n    \\\"%c\\\": \\\"%a %b %d %H:%M:%S %Y\\\",\\n    \\\"%D\\\": \\\"%m/%d/%y\\\",\\n    \\\"%F\\\": \\\"%Y-%m-%d\\\",\\n    \\\"%h\\\": \\\"%b\\\",\\n    \\\"%r\\\": \\\"%I:%M:%S %p\\\",\\n    \\\"%R\\\": \\\"%H:%M\\\",\\n    \\\"%T\\\": \\\"%H:%M:%S\\\",\\n    \\\"%x\\\": \\\"%m/%d/%y\\\",\\n    \\\"%X\\\": \\\"%H:%M:%S\\\",\\n    \\\"%Ec\\\": \\\"%c\\\",\\n    \\\"%EC\\\": \\\"%C\\\",\\n    \\\"%Ex\\\": \\\"%m/%d/%y\\\",\\n    \\\"%EX\\\": \\\"%H:%M:%S\\\",\\n    \\\"%Ey\\\": \\\"%y\\\",\\n    \\\"%EY\\\": \\\"%Y\\\",\\n    \\\"%Od\\\": \\\"%d\\\",\\n    \\\"%Oe\\\": \\\"%e\\\",\\n    \\\"%OH\\\": \\\"%H\\\",\\n    \\\"%OI\\\": \\\"%I\\\",\\n    \\\"%Om\\\": \\\"%m\\\",\\n    \\\"%OM\\\": \\\"%M\\\",\\n    \\\"%OS\\\": \\\"%S\\\",\\n    \\\"%Ou\\\": \\\"%u\\\",\\n    \\\"%OU\\\": \\\"%U\\\",\\n    \\\"%OV\\\": \\\"%V\\\",\\n    \\\"%Ow\\\": \\\"%w\\\",\\n    \\\"%OW\\\": \\\"%W\\\",\\n    \\\"%Oy\\\": \\\"%y\\\"\\n  };\\n  for (var rule in EXPANSION_RULES_1) {\\n    pattern = pattern.replace(new RegExp(rule, \\\"g\\\"), EXPANSION_RULES_1[rule]);\\n  }\\n  var WEEKDAYS = [\\\"Sunday\\\", \\\"Monday\\\", \\\"Tuesday\\\", \\\"Wednesday\\\", \\\"Thursday\\\", \\\"Friday\\\", \\\"Saturday\\\"];\\n  var MONTHS = [\\\"January\\\", \\\"February\\\", \\\"March\\\", \\\"April\\\", \\\"May\\\", \\\"June\\\", \\\"July\\\", \\\"August\\\", \\\"September\\\", \\\"October\\\", \\\"November\\\", \\\"December\\\"];\\n  function leadingSomething(value, digits, character) {\\n    var str = typeof value === \\\"number\\\" ? value.toString() : value || \\\"\\\";\\n    while (str.length < digits) {\\n      str = character[0] + str;\\n    }\\n    return str;\\n  }\\n  function leadingNulls(value, digits) {\\n    return leadingSomething(value, digits, \\\"0\\\");\\n  }\\n  function compareByDay(date1, date2) {\\n    function sgn(value) {\\n      return value < 0 ? -1 : value > 0 ? 1 : 0;\\n    }\\n    var compare;\\n    if ((compare = sgn(date1.getFullYear() - date2.getFullYear())) === 0) {\\n      if ((compare = sgn(date1.getMonth() - date2.getMonth())) === 0) {\\n        compare = sgn(date1.getDate() - date2.getDate());\\n      }\\n    }\\n    return compare;\\n  }\\n  function getFirstWeekStartDate(janFourth) {\\n    switch (janFourth.getDay()) {\\n      case 0:\\n        return new Date(janFourth.getFullYear() - 1, 11, 29);\\n      case 1:\\n        return janFourth;\\n      case 2:\\n        return new Date(janFourth.getFullYear(), 0, 3);\\n      case 3:\\n        return new Date(janFourth.getFullYear(), 0, 2);\\n      case 4:\\n        return new Date(janFourth.getFullYear(), 0, 1);\\n      case 5:\\n        return new Date(janFourth.getFullYear() - 1, 11, 31);\\n      case 6:\\n        return new Date(janFourth.getFullYear() - 1, 11, 30);\\n    }\\n  }\\n  function getWeekBasedYear(date) {\\n    var thisDate = __addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);\\n    var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);\\n    var janFourthNextYear = new Date(thisDate.getFullYear() + 1, 0, 4);\\n    var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\\n    var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\\n    if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {\\n      if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {\\n        return thisDate.getFullYear() + 1;\\n      } else {\\n        return thisDate.getFullYear();\\n      }\\n    } else {\\n      return thisDate.getFullYear() - 1;\\n    }\\n  }\\n  var EXPANSION_RULES_2 = {\\n    \\\"%a\\\": function (date) {\\n      return WEEKDAYS[date.tm_wday].substring(0, 3);\\n    },\\n    \\\"%A\\\": function (date) {\\n      return WEEKDAYS[date.tm_wday];\\n    },\\n    \\\"%b\\\": function (date) {\\n      return MONTHS[date.tm_mon].substring(0, 3);\\n    },\\n    \\\"%B\\\": function (date) {\\n      return MONTHS[date.tm_mon];\\n    },\\n    \\\"%C\\\": function (date) {\\n      var year = date.tm_year + 1900;\\n      return leadingNulls(year / 100 | 0, 2);\\n    },\\n    \\\"%d\\\": function (date) {\\n      return leadingNulls(date.tm_mday, 2);\\n    },\\n    \\\"%e\\\": function (date) {\\n      return leadingSomething(date.tm_mday, 2, \\\" \\\");\\n    },\\n    \\\"%g\\\": function (date) {\\n      return getWeekBasedYear(date).toString().substring(2);\\n    },\\n    \\\"%G\\\": function (date) {\\n      return getWeekBasedYear(date);\\n    },\\n    \\\"%H\\\": function (date) {\\n      return leadingNulls(date.tm_hour, 2);\\n    },\\n    \\\"%I\\\": function (date) {\\n      var twelveHour = date.tm_hour;\\n      if (twelveHour == 0) twelveHour = 12;else if (twelveHour > 12) twelveHour -= 12;\\n      return leadingNulls(twelveHour, 2);\\n    },\\n    \\\"%j\\\": function (date) {\\n      return leadingNulls(date.tm_mday + __arraySum(__isLeapYear(date.tm_year + 1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon - 1), 3);\\n    },\\n    \\\"%m\\\": function (date) {\\n      return leadingNulls(date.tm_mon + 1, 2);\\n    },\\n    \\\"%M\\\": function (date) {\\n      return leadingNulls(date.tm_min, 2);\\n    },\\n    \\\"%n\\\": function () {\\n      return \\\"\\\\n\\\";\\n    },\\n    \\\"%p\\\": function (date) {\\n      if (date.tm_hour >= 0 && date.tm_hour < 12) {\\n        return \\\"AM\\\";\\n      } else {\\n        return \\\"PM\\\";\\n      }\\n    },\\n    \\\"%S\\\": function (date) {\\n      return leadingNulls(date.tm_sec, 2);\\n    },\\n    \\\"%t\\\": function () {\\n      return \\\"\\\\t\\\";\\n    },\\n    \\\"%u\\\": function (date) {\\n      return date.tm_wday || 7;\\n    },\\n    \\\"%U\\\": function (date) {\\n      var janFirst = new Date(date.tm_year + 1900, 0, 1);\\n      var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7 - janFirst.getDay());\\n      var endDate = new Date(date.tm_year + 1900, date.tm_mon, date.tm_mday);\\n      if (compareByDay(firstSunday, endDate) < 0) {\\n        var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;\\n        var firstSundayUntilEndJanuary = 31 - firstSunday.getDate();\\n        var days = firstSundayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();\\n        return leadingNulls(Math.ceil(days / 7), 2);\\n      }\\n      return compareByDay(firstSunday, janFirst) === 0 ? \\\"01\\\" : \\\"00\\\";\\n    },\\n    \\\"%V\\\": function (date) {\\n      var janFourthThisYear = new Date(date.tm_year + 1900, 0, 4);\\n      var janFourthNextYear = new Date(date.tm_year + 1901, 0, 4);\\n      var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\\n      var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\\n      var endDate = __addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);\\n      if (compareByDay(endDate, firstWeekStartThisYear) < 0) {\\n        return \\\"53\\\";\\n      }\\n      if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {\\n        return \\\"01\\\";\\n      }\\n      var daysDifference;\\n      if (firstWeekStartThisYear.getFullYear() < date.tm_year + 1900) {\\n        daysDifference = date.tm_yday + 32 - firstWeekStartThisYear.getDate();\\n      } else {\\n        daysDifference = date.tm_yday + 1 - firstWeekStartThisYear.getDate();\\n      }\\n      return leadingNulls(Math.ceil(daysDifference / 7), 2);\\n    },\\n    \\\"%w\\\": function (date) {\\n      return date.tm_wday;\\n    },\\n    \\\"%W\\\": function (date) {\\n      var janFirst = new Date(date.tm_year, 0, 1);\\n      var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7 - janFirst.getDay() + 1);\\n      var endDate = new Date(date.tm_year + 1900, date.tm_mon, date.tm_mday);\\n      if (compareByDay(firstMonday, endDate) < 0) {\\n        var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;\\n        var firstMondayUntilEndJanuary = 31 - firstMonday.getDate();\\n        var days = firstMondayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();\\n        return leadingNulls(Math.ceil(days / 7), 2);\\n      }\\n      return compareByDay(firstMonday, janFirst) === 0 ? \\\"01\\\" : \\\"00\\\";\\n    },\\n    \\\"%y\\\": function (date) {\\n      return (date.tm_year + 1900).toString().substring(2);\\n    },\\n    \\\"%Y\\\": function (date) {\\n      return date.tm_year + 1900;\\n    },\\n    \\\"%z\\\": function (date) {\\n      var off = date.tm_gmtoff;\\n      var ahead = off >= 0;\\n      off = Math.abs(off) / 60;\\n      off = off / 60 * 100 + off % 60;\\n      return (ahead ? \\\"+\\\" : \\\"-\\\") + String(\\\"0000\\\" + off).slice(-4);\\n    },\\n    \\\"%Z\\\": function (date) {\\n      return date.tm_zone;\\n    },\\n    \\\"%%\\\": function () {\\n      return \\\"%\\\";\\n    }\\n  };\\n  for (var rule in EXPANSION_RULES_2) {\\n    if (pattern.indexOf(rule) >= 0) {\\n      pattern = pattern.replace(new RegExp(rule, \\\"g\\\"), EXPANSION_RULES_2[rule](date));\\n    }\\n  }\\n  var bytes = intArrayFromString(pattern, false);\\n  if (bytes.length > maxsize) {\\n    return 0;\\n  }\\n  writeArrayToMemory(bytes, s);\\n  return bytes.length - 1;\\n}\\nfunction _strftime_l(s, maxsize, format, tm) {\\n  return _strftime(s, maxsize, format, tm);\\n}\\nvar FSNode = function (parent, name, mode, rdev) {\\n  if (!parent) {\\n    parent = this;\\n  }\\n  this.parent = parent;\\n  this.mount = parent.mount;\\n  this.mounted = null;\\n  this.id = FS.nextInode++;\\n  this.name = name;\\n  this.mode = mode;\\n  this.node_ops = {};\\n  this.stream_ops = {};\\n  this.rdev = rdev;\\n};\\nvar readMode = 292 | 73;\\nvar writeMode = 146;\\nObject.defineProperties(FSNode.prototype, {\\n  read: {\\n    get: function () {\\n      return (this.mode & readMode) === readMode;\\n    },\\n    set: function (val) {\\n      val ? this.mode |= readMode : this.mode &= ~readMode;\\n    }\\n  },\\n  write: {\\n    get: function () {\\n      return (this.mode & writeMode) === writeMode;\\n    },\\n    set: function (val) {\\n      val ? this.mode |= writeMode : this.mode &= ~writeMode;\\n    }\\n  },\\n  isFolder: {\\n    get: function () {\\n      return FS.isDir(this.mode);\\n    }\\n  },\\n  isDevice: {\\n    get: function () {\\n      return FS.isChrdev(this.mode);\\n    }\\n  }\\n});\\nFS.FSNode = FSNode;\\nFS.staticInit();\\nfunction intArrayFromString(stringy, dontAddNull, length) {\\n  var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\\n  var u8array = new Array(len);\\n  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\\n  if (dontAddNull) u8array.length = numBytesWritten;\\n  return u8array;\\n}\\nvar asmLibraryArg = {\\n  \\\"o\\\": __ZN7VRegionC1ERK5VRect,\\n  \\\"m\\\": __ZN7VRegionD1Ev,\\n  \\\"n\\\": __ZN7VRegionpLERK5VRect,\\n  \\\"x\\\": __ZNK7VRegion12boundingRectEv,\\n  \\\"a\\\": ___assert_fail,\\n  \\\"u\\\": ___map_file,\\n  \\\"h\\\": ___sys_fcntl64,\\n  \\\"z\\\": ___sys_ioctl,\\n  \\\"t\\\": ___sys_munmap,\\n  \\\"A\\\": ___sys_open,\\n  \\\"d\\\": _abort,\\n  \\\"c\\\": _emscripten_longjmp,\\n  \\\"q\\\": _emscripten_memcpy_big,\\n  \\\"r\\\": _emscripten_resize_heap,\\n  \\\"v\\\": _environ_get,\\n  \\\"w\\\": _environ_sizes_get,\\n  \\\"g\\\": _fd_close,\\n  \\\"y\\\": _fd_read,\\n  \\\"p\\\": _fd_seek,\\n  \\\"f\\\": _fd_write,\\n  \\\"b\\\": _getTempRet0,\\n  \\\"k\\\": invoke_iii,\\n  \\\"B\\\": invoke_vi,\\n  \\\"memory\\\": wasmMemory,\\n  \\\"i\\\": _round,\\n  \\\"l\\\": _saveSetjmp,\\n  \\\"j\\\": _setTempRet0,\\n  \\\"s\\\": _strftime_l,\\n  \\\"table\\\": wasmTable,\\n  \\\"e\\\": _testSetjmp\\n};\\nvar asm = createWasm();\\nModule[\\\"asm\\\"] = asm;\\nvar ___wasm_call_ctors = Module[\\\"___wasm_call_ctors\\\"] = function () {\\n  return (___wasm_call_ctors = Module[\\\"___wasm_call_ctors\\\"] = Module[\\\"asm\\\"][\\\"C\\\"]).apply(null, arguments);\\n};\\nvar _lottie_init = Module[\\\"_lottie_init\\\"] = function () {\\n  return (_lottie_init = Module[\\\"_lottie_init\\\"] = Module[\\\"asm\\\"][\\\"D\\\"]).apply(null, arguments);\\n};\\nvar _lottie_resize = Module[\\\"_lottie_resize\\\"] = function () {\\n  return (_lottie_resize = Module[\\\"_lottie_resize\\\"] = Module[\\\"asm\\\"][\\\"E\\\"]).apply(null, arguments);\\n};\\nvar _free = Module[\\\"_free\\\"] = function () {\\n  return (_free = Module[\\\"_free\\\"] = Module[\\\"asm\\\"][\\\"F\\\"]).apply(null, arguments);\\n};\\nvar _lottie_load_from_data = Module[\\\"_lottie_load_from_data\\\"] = function () {\\n  return (_lottie_load_from_data = Module[\\\"_lottie_load_from_data\\\"] = Module[\\\"asm\\\"][\\\"G\\\"]).apply(null, arguments);\\n};\\nvar _lottie_buffer = Module[\\\"_lottie_buffer\\\"] = function () {\\n  return (_lottie_buffer = Module[\\\"_lottie_buffer\\\"] = Module[\\\"asm\\\"][\\\"H\\\"]).apply(null, arguments);\\n};\\nvar _lottie_destroy = Module[\\\"_lottie_destroy\\\"] = function () {\\n  return (_lottie_destroy = Module[\\\"_lottie_destroy\\\"] = Module[\\\"asm\\\"][\\\"I\\\"]).apply(null, arguments);\\n};\\nvar _lottie_render = Module[\\\"_lottie_render\\\"] = function () {\\n  return (_lottie_render = Module[\\\"_lottie_render\\\"] = Module[\\\"asm\\\"][\\\"J\\\"]).apply(null, arguments);\\n};\\nvar _malloc = Module[\\\"_malloc\\\"] = function () {\\n  return (_malloc = Module[\\\"_malloc\\\"] = Module[\\\"asm\\\"][\\\"K\\\"]).apply(null, arguments);\\n};\\nvar _realloc = Module[\\\"_realloc\\\"] = function () {\\n  return (_realloc = Module[\\\"_realloc\\\"] = Module[\\\"asm\\\"][\\\"L\\\"]).apply(null, arguments);\\n};\\nvar ___errno_location = Module[\\\"___errno_location\\\"] = function () {\\n  return (___errno_location = Module[\\\"___errno_location\\\"] = Module[\\\"asm\\\"][\\\"M\\\"]).apply(null, arguments);\\n};\\nvar _setThrew = Module[\\\"_setThrew\\\"] = function () {\\n  return (_setThrew = Module[\\\"_setThrew\\\"] = Module[\\\"asm\\\"][\\\"N\\\"]).apply(null, arguments);\\n};\\nvar dynCall_vi = Module[\\\"dynCall_vi\\\"] = function () {\\n  return (dynCall_vi = Module[\\\"dynCall_vi\\\"] = Module[\\\"asm\\\"][\\\"O\\\"]).apply(null, arguments);\\n};\\nvar dynCall_iii = Module[\\\"dynCall_iii\\\"] = function () {\\n  return (dynCall_iii = Module[\\\"dynCall_iii\\\"] = Module[\\\"asm\\\"][\\\"P\\\"]).apply(null, arguments);\\n};\\nvar stackSave = Module[\\\"stackSave\\\"] = function () {\\n  return (stackSave = Module[\\\"stackSave\\\"] = Module[\\\"asm\\\"][\\\"Q\\\"]).apply(null, arguments);\\n};\\nvar stackAlloc = Module[\\\"stackAlloc\\\"] = function () {\\n  return (stackAlloc = Module[\\\"stackAlloc\\\"] = Module[\\\"asm\\\"][\\\"R\\\"]).apply(null, arguments);\\n};\\nvar stackRestore = Module[\\\"stackRestore\\\"] = function () {\\n  return (stackRestore = Module[\\\"stackRestore\\\"] = Module[\\\"asm\\\"][\\\"S\\\"]).apply(null, arguments);\\n};\\nvar dynCall_v = Module[\\\"dynCall_v\\\"] = function () {\\n  return (dynCall_v = Module[\\\"dynCall_v\\\"] = Module[\\\"asm\\\"][\\\"T\\\"]).apply(null, arguments);\\n};\\nfunction invoke_iii(index, a1, a2) {\\n  var sp = stackSave();\\n  try {\\n    return dynCall_iii(index, a1, a2);\\n  } catch (e) {\\n    stackRestore(sp);\\n    if (e !== e + 0 && e !== \\\"longjmp\\\") throw e;\\n    _setThrew(1, 0);\\n  }\\n}\\nfunction invoke_vi(index, a1) {\\n  var sp = stackSave();\\n  try {\\n    dynCall_vi(index, a1);\\n  } catch (e) {\\n    stackRestore(sp);\\n    if (e !== e + 0 && e !== \\\"longjmp\\\") throw e;\\n    _setThrew(1, 0);\\n  }\\n}\\nModule[\\\"asm\\\"] = asm;\\nModule[\\\"intArrayFromString\\\"] = intArrayFromString;\\nModule[\\\"cwrap\\\"] = cwrap;\\nModule[\\\"allocate\\\"] = allocate;\\nvar calledRun;\\nfunction ExitStatus(status) {\\n  this.name = \\\"ExitStatus\\\";\\n  this.message = \\\"Program terminated with exit(\\\" + status + \\\")\\\";\\n  this.status = status;\\n}\\ndependenciesFulfilled = function runCaller() {\\n  if (!calledRun) run();\\n  if (!calledRun) dependenciesFulfilled = runCaller;\\n};\\nfunction run(args) {\\n  args = args || arguments_;\\n  if (runDependencies > 0) {\\n    return;\\n  }\\n  preRun();\\n  if (runDependencies > 0) return;\\n  function doRun() {\\n    if (calledRun) return;\\n    calledRun = true;\\n    Module[\\\"calledRun\\\"] = true;\\n    if (ABORT) return;\\n    initRuntime();\\n    preMain();\\n    if (Module[\\\"onRuntimeInitialized\\\"]) Module[\\\"onRuntimeInitialized\\\"]();\\n    postRun();\\n  }\\n  if (Module[\\\"setStatus\\\"]) {\\n    Module[\\\"setStatus\\\"](\\\"Running...\\\");\\n    setTimeout(function () {\\n      setTimeout(function () {\\n        Module[\\\"setStatus\\\"](\\\"\\\");\\n      }, 1);\\n      doRun();\\n    }, 1);\\n  } else {\\n    doRun();\\n  }\\n}\\nModule[\\\"run\\\"] = run;\\nif (Module[\\\"preInit\\\"]) {\\n  if (typeof Module[\\\"preInit\\\"] == \\\"function\\\") Module[\\\"preInit\\\"] = [Module[\\\"preInit\\\"]];\\n  while (Module[\\\"preInit\\\"].length > 0) {\\n    Module[\\\"preInit\\\"].pop()();\\n  }\\n}\\nnoExitRuntime = true;\\nrun();\"","require(\"!!/root/telegram-tt/node_modules/script-loader/addScript.js\")(require(\"!!/root/telegram-tt/node_modules/raw-loader/index.js!/root/telegram-tt/node_modules/babel-loader/lib/index.js!/root/telegram-tt/src/lib/rlottie/rlottie-wasm.js\"))"],"names":["rLottieApi","rLottieApiPromise","Promise","resolve","Module","onRuntimeInitialized","init","cwrap","destroy","resize","buffer","render","loadFromData","renderers","Map","async","extractJson","tgsUrl","response","fetch","headers","get","startsWith","text","arrayBuffer","inflate","to","calcParams","json","isLowPriority","framesCount","maxFps","sourceFps","JSON","parse","fr","reduceFactor","msPerFrame","reducedFramesCount","Math","ceil","api","key","imgSize","customColor","onInit","stringOnWasmHeap","allocate","intArrayFromString","handle","imageData","ImageData","set","frameIndex","onProgress","realIndex","bufferPointer","data","HEAPU8","subarray","arr","Uint8ClampedArray","color","i","length","applyColor","createImageBitmap","isRepeated","arguments","undefined","renderer","delete","err","setTimeout","createWorkerInterface","requestStates","self","addEventListener","e","type","messageId","result","requestState","MIN_PART_SIZE","Status","MP4Demuxer","constructor","url","_ref","onConfig","onChunk","stepOffset","stepMultiplier","isPolyfill","maxFrames","_defineProperty","loading","Set","this","file","MP4Box","onError","console","error","onReady","bind","onSamples","loadMetadata","offset","requestPart","status","ready","step","duration","partSize","tick","lastSample","rap","seek","closed","flush","useRap","reminder","start","end","params","generateIdFor","isResolved","promise","race","pause","then","reject","Error","Object","assign","catch","finally","postMessage","slice","fileStart","nextOffset","appendBuffer","byteLength","description","track","t","getTrackById","id","entry","mdia","minf","stbl","stsd","entries","avcC","hvcC","av1C","stream","DataStream","write","Uint8Array","info","videoTracks","codec","codedHeight","video","height","codedWidth","width","timescale","partSizeDivider","size","bitrate","max","round","calculateStep","setExtractionOptions","nbSamples","loadNextFrames","trackId","ref","samples","sample","time","cts","is_sync","number","decodedSamples","has","EncodedVideoChunk","timestamp","add","parseInt","releaseUsedSamples","close","stop","_data","byteOffset","_libavGetData","copyTo","destination","offscreenCanvas","VideoFrame","ArrayBuffer","_constructBuffer","_constructCanvas","image","document","createElement","style","display","body","appendChild","naturalWidth","naturalHeight","videoWidth","videoHeight","DOMException","ctx","getContext","clearRect","drawImage","getImageData","format","layout","stride","displayWidth","displayHeight","visibleRect","DOMRect","dWidth","dHeight","_nonSquarePixels","_sar_num","_sar_den","_layout","numPlanes_","numPlanes","sampleWidth","horizontalSubSamplingFactor","sampleHeight","verticalSubSamplingFactor","push","allocationSize","options","_parseVideoFrameCopyToOptions","defaultRect","overrideRect","rect","x","y","parsedRect","_parseVisibleRect","optLayout","_computeLayoutAndAllocationSize","sourceRect","TypeError","_verifyRectSampleAlignment","minAllocationSize","computedLayouts","endOffsets","planeIndex","sampleBytes_","sampleBytes","sampleWidthBytes","computedLayout","destinationOffset","destinationStride","sourceTop","sourceHeight","sourceLeftBytes","sourceWidthBytes","planeLayout","planeSize","planeEnd","earlierPlaneIndex","xw","ww","yh","hh","destBuf","combinedLayout","ret","sourceStride","sourceOffset","rowBytes","row","clone","libavs","libavOptions","decoders","setLibAVOptions","shift","LibAV","free","libav","load","avname","avcodec_find_decoder_by_name","codecs","decoder","outCodec","replace","indexOf","libavjs","cloneConfig","config","fields","field","VideoDecoder","_output","output","_error","state","decodeQueueSize","_p","all","_libav","_codec","_c","_pkt","_frame","configure","_free","supported","ptr","malloc","copyin_u8","parm","calloc","AVCodecParameters_extradata_s","AVCodecParameters_extradata_size_s","ff_init_decoder","AVCodecContext_time_base_s","_closeVideoDecoder","ff_free_decoder","exception","_resetVideoDecoder","name","decode","chunk","c","pkt","frame","decodedOutputs","ptsFull","floor","pts","ptshi","packet","dts","dtshi","durationhi","ff_decode_multi","ex","_outputVideoFrames","frames","AV_PIX_FMT_YUV420P","AV_PIX_FMT_YUVA420P","AV_PIX_FMT_YUV422P","AV_PIX_FMT_YUV444P","AV_PIX_FMT_NV12","AV_PIX_FMT_RGBA","AV_PIX_FMT_BGRA","sample_aspect_ratio","sar","raw","planes","vf","sbs","hssfs","vssfs","off","fd","j","part","reset","static","dec","misc","scalerSync","scalerAsync","origCreateImageBitmap","polyfill","noworker","global","opts","apply","resizeWidth","resizeHeight","frameData","sctx","inFrame","outFrame","sws_getContext","av_frame_alloc","rawU8","rawIdx","p","plane","sb","hssf","vssf","w","h","ff_copyin_frame","sws_scale_frame","ff_copyout_frame","av_frame_free_js","sws_freeContext","idx","UnsupportedException","super","demuxer","onDestroy","isLoaded","workerIndex","workersTotal","onFrame","hasWebCodecs","globalThis","vdec","evc","rendering","LibAVWebCodecs","nosimd","loadLibAV","decodedFrames","seconds","bitmap","log_level","Log","Date","setLogLevel","level","debug","warn","module","msg","log","getDurationString","_timescale","neg","pad","a","split","join","duration_sec","hours","minutes","msec","printRanges","ranges","str","exports","MP4BoxStream","dataview","DataView","position","prototype","getPosition","getEndPosition","getLength","pos","npos","min","isNaN","isFinite","isEos","readAnyInt","signed","res","getInt8","getUint8","getInt16","getUint16","getInt32","getUint32","readUint8","readUint16","readUint24","readUint32","readUint64","readString","s","String","fromCharCode","readCString","b","readInt8","readInt16","readInt32","readInt64","readUint8Array","readInt16Array","Int16Array","readUint16Array","readUint32Array","Uint32Array","readInt32Array","Int32Array","endianness","_byteOffset","dataView","LITTLE_ENDIAN","_realloc","extra","_dynamicSize","req","blen","_buffer","_byteLength","buf","src","_trimAlloc","dst","BIG_ENDIAN","defineProperty","v","_dataView","isEof","mapUint8Array","memcpy","BYTES_PER_ELEMENT","arrayToNative","readInt8Array","Int8Array","Uint16Array","readFloat64Array","Float64Array","readFloat32Array","Float32Array","readFloat32","getFloat32","readFloat64","getFloat64","dstOffset","srcOffset","dstU8","srcU8","array","arrayIsLittleEndian","flipArrayEndianness","nativeToEndian","littleEndian","u8","k","tmp","failurePosition","fromCharCodeUint8","uint8arr","encoding","TextDecoder","len","MAX_SIZE","pow","save","filename","blob","Blob","window","URL","createObjectURL","setAttribute","click","revokeObjectURL","writeInt32Array","mapInt32Array","writeInt32","writeInt16Array","mapInt16Array","writeInt16","writeInt8Array","mapInt8Array","writeInt8","writeUint32Array","mapUint32Array","writeUint32","writeUint16Array","mapUint16Array","writeUint16","writeUint8Array","writeUint8","writeFloat64Array","mapFloat64Array","writeFloat64","writeFloat32Array","mapFloat32Array","writeFloat32","setInt32","setInt16","setInt8","setUint32","setUint16","setUint8","setFloat32","setFloat64","writeUCS2String","lengthOverride","charCodeAt","writeString","TextEncoder","encode","substring","writeCString","writeStruct","structDefinition","struct","writeType","tp","Array","charset","test","ta","writeUint64","writeUint24","adjustUint32","value","MultiBufferStream","buffers","bufferIndex","insertBuffer","initialized","firstBuffer","logBufferLevel","concat","buffer1","buffer2","reduceBuffer","newLength","smallB","usedBytes","ab","to_add","splice","used","total","range","bufferedString","cleanBuffers","mergeNextBuffer","next_buffer","oldLength","oldUsedBytes","oldFileStart","findPosition","fromStart","filePosition","markAsUsed","abuffer","index","findEndContiguousBuf","inputindex","currentBuf","nextBuf","getEndFilePositionAfter","addUsedBytes","nbBytes","setAllUsedBytes","MPEG4DescriptorParser","descTagToName","getDescriptorName","tag","that","classes","parseOneDescriptor","desc","byteRead","Descriptor","_tag","_size","descs","findDescriptor","parseRemainingDescriptors","ES_Descriptor","call","ES_ID","flags","dependsOn_ES_ID","l","OCR_ES_ID","getOTI","dcd","oti","getAudioConfig","dsi","audioObjectType","DecoderConfigDescriptor","streamType","bufferSize","maxBitrate","avgBitrate","DecoderSpecificInfo","SLConfigDescriptor","BoxParser","ERR_INVALID_DATA","ERR_NOT_ENOUGH_DATA","OK","BASIC_BOXES","FULL_BOXES","CONTAINER_BOXES","boxCodes","fullBoxCodes","containerBoxCodes","sampleEntryCodes","sampleGroupEntryCodes","trackGroupTypes","UUIDBoxes","UUIDs","initialize","FullBox","Box","ContainerBox","SampleEntry","TrackGroupTypeBox","forEach","createBoxCtor","createFullBoxCtor","types","createContainerBoxCtor","_type","_uuid","uuid","version","boxes","hdr_size","SampleGroupEntry","grouping_type","parseMethod","parseFullHeader","addSubBoxArrays","subBoxNames","nbSubBoxes","createMediaSampleEntryCtor","mediaType","createSampleEntryCtor","createEncryptedSampleEntryCtor","createSampleGroupCtor","createTrackGroupCtor","createUUIDBox","isFullBox","isContainerBox","TKHD_FLAG_ENABLED","TKHD_FLAG_IN_MOVIE","TKHD_FLAG_IN_PREVIEW","TFHD_FLAG_BASE_DATA_OFFSET","TFHD_FLAG_SAMPLE_DESC","TFHD_FLAG_SAMPLE_DUR","TFHD_FLAG_SAMPLE_SIZE","TFHD_FLAG_SAMPLE_FLAGS","TFHD_FLAG_DUR_EMPTY","TFHD_FLAG_DEFAULT_BASE_IS_MOOF","TRUN_FLAGS_DATA_OFFSET","TRUN_FLAGS_FIRST_FLAG","TRUN_FLAGS_DURATION","TRUN_FLAGS_SIZE","TRUN_FLAGS_FLAGS","TRUN_FLAGS_CTS_OFFSET","addBox","box","prop","addEntry","_prop","parseUUID","parseHex16","hex16","hex","toString","parseOneBox","headerOnly","parentSize","diff","code","box_type","has_unparsed_data","parseDataAndRewind","parseLanguage","language","chars","languageString","SAMPLE_ENTRY_TYPE_VISUAL","SAMPLE_ENTRY_TYPE_AUDIO","SAMPLE_ENTRY_TYPE_HINT","SAMPLE_ENTRY_TYPE_METADATA","SAMPLE_ENTRY_TYPE_SUBTITLE","SAMPLE_ENTRY_TYPE_SYSTEM","SAMPLE_ENTRY_TYPE_TEXT","parseHeader","data_reference_index","parseFooter","compressorname_length","horizresolution","vertresolution","frame_count","compressorname","depth","channel_count","samplesize","samplerate","FieldLength","layer_size","op_index","aux_type","aux_subtype_length","aux_subtype","seq_profile","seq_level_idx_0","seq_tier_0","high_bitdepth","twelve_bit","monochrome","chroma_subsampling_x","chroma_subsampling_y","chroma_sample_position","reserved_1","initial_presentation_delay_present","initial_presentation_delay_minus_one","reserved_2","configOBUs_length","configOBUs","toparse","configurationVersion","AVCProfileIndication","profile_compatibility","AVCLevelIndication","lengthSizeMinusOne","nb_SPS_nalus","SPS","nalu","nb_PPS_nalus","PPS","ext","bufferSizeDB","cleanApertureWidthN","cleanApertureWidthD","cleanApertureHeightN","cleanApertureHeightD","horizOffN","horizOffD","vertOffN","vertOffD","max_content_light_level","max_pic_average_light_level","entry_count","chunk_offsets","maxCLL","maxFALL","colour_type","colour_primaries","transfer_characteristics","matrix_coefficients","full_range_flag","ICC_profile","notice","compositionToDTSShift","leastDecodeToDisplayDelta","greatestDecodeToDisplayDelta","compositionStartTime","compositionEndTime","sample_counts","sample_offsets","tmp_byte1","tmp_byte2","tmp_byte3","fscod","bsid","bsmod","acmod","lfeon","bit_rate_code","tmp_16","data_rate","num_ind_sub","ind_subs","ind_sub","num_dep_sub","chan_loc","boxesFound","knownBlockTypes","flagAndType","numMetadataBlocks","bytessent","Version","OutputChannelCount","PreSkip","InputSampleRate","OutputGain","ChannelMappingFamily","StreamCount","CoupledCount","ChannelMapping","extended_language","segment_duration","media_time","media_rate_integer","media_rate_fraction","presentation_time","event_duration","scheme_id_uri","presentation_time_delta","message_size","message_data","esd_data","esd_parser","esd","fieldCount","fieldOrdering","data_format","major_brand","minor_version","compatible_brands","handler","tmp_byte","general_profile_space","general_tier_flag","general_profile_idc","general_profile_compatibility","general_constraint_indicator","general_level_idc","min_spatial_segmentation_idc","parallelismType","chroma_format_idc","bit_depth_luma_minus8","bit_depth_chroma_minus8","avgFrameRate","constantFrameRate","numTemporalLayers","temporalIdNested","nalu_arrays","numOfArrays","nalu_array","completeness","nalu_type","numNalus","item_infos","byte","offset_size","length_size","base_offset_size","index_size","items","item_count","item","item_ID","construction_method","base_offset","extent_count","extents","extent","extent_index","extent_offset","extent_length","reserved","axis","item_protection_index","item_name","content_type","content_encoding","extension_type","item_type","item_uri_type","associations","item_assoc","association_count","props","essential","property_index","references","SingleItemTypeReferenceBox","SingleItemTypeReferenceBoxLarge","angle","image_width","image_height","schemeURI","count","levels","track_ID","padding_flag","assignment_type","grouping_type_parameter","sub_track_id","layer_id","period","bytes","display_primaries","white_point","max_display_mastering_luminance","min_display_mastering_luminance","creation_time","modification_time","fragment_duration","sequence_number","rate","volume","matrix","next_track_id","packetssent","sample_count","padbits","hSpacing","vSpacing","payloadID","rtpmap_string","initial_delay","item_id","num_channels","bits_per_channels","ref_track_id","ntp_timestamp","system_id","kid","datasize","descriptionformat","sdptext","aux_info_type","aux_info_type_parameter","default_sample_info_size","sample_info_size","mime_format","namespace","schema_location","auxiliary_mime_types","displayFlags","horizontal_justification","vertical_justification","bg_color_rgba","box_record","style_record","roll_count","first_output_sample","sample_offset","remaining","description_length","num_output_samples","num_total_samples","layerNumber","accurateStatisticsFlag","avgBitRate","subSequenceIdentifier","durationFlag","avgRateFlag","dependency","numReferences","dependencyInfo","subSeqDirectionFlag","roll_distance","num_leading_samples_known","num_leading_samples","operation_point_count","target_rate_share","available_bitrate","maximum_bitrate","minimum_bitrate","discard_priority","crypt_byte_block","skip_byte_block","isProtected","Per_Sample_IV_Size","KID","constant_IV_size","constant_IV","NAL_unit_type","level_independently_decodable","group_description_index","scheme_type","scheme_version","scheme_uri","is_leading","sample_depends_on","sample_is_depended_on","sample_has_redundancy","default_length","default_group_description_index","reference_ID","earliest_presentation_time","first_offset","tmp_32","reference_type","referenced_size","subsegment_duration","starts_with_SAP","SAP_type","SAP_delta_time","from_item_ID","primaryRChromaticity_x","primaryRChromaticity_y","primaryGChromaticity_x","primaryGChromaticity_y","primaryBChromaticity_x","primaryBChromaticity_y","whitePointChromaticity_x","whitePointChromaticity_y","luminanceMax","luminanceMin","balance","subsegments","subsegment_count","subsegment","range_count","range_size","priority","switch_group","alternate_group","attribute_list","first_chunk","samples_per_chunk","sample_description_index","entryCount","shadowed_sample_numbers","sync_sample_numbers","sample_numbers","sample_sizes","sample_size","delta","sample_deltas","tmp32","single_view_allowed","stereo_scheme","stereo_indication_type","ftypBox","field_size","subsample_count","sampleInfo","sample_delta","subsamples","subsample","discardable","codec_specific_parameters","default_crypt_byte_block","default_skip_byte_block","default_isProtected","default_Per_Sample_IV_Size","default_KID","default_constant_IV_size","default_constant_IV","baseMediaDecodeTime","readBytes","track_id","base_data_offset","default_sample_description_index","default_sample_duration","default_sample_size","default_sample_flags","length_size_of_traf_num","length_size_of_trun_num","length_size_of_sample_num","number_of_entries","moof_offset","traf_number","trun_number","sample_number","layer","track_group_id","TrackReferenceTypeBox","track_ids","trefBox","data_offset","first_sample_flags","sample_duration","sample_flags","sample_composition_time_offset","location","LiveServerManifest","default_AlgorithmID","default_IV_size","fragment_count","absolute_time","absolute_duration","graphicsmode","opcolor","profile","bitDepth","chromaSubsampling","videoFullRangeFlag","colourPrimaries","transferCharacteristics","matrixCoefficients","codecIntializationDataSize","codecIntializationData","colorSpace","transferFunction","bitReader","held_bits","num_held_bits","stream_read_1_bytes","strm","stream_read_2_bytes","extract_bits","num_bits","ptl_present_flag","ols_idx","num_sublayers","constant_frame_rate","bit_depth_minus8","num_bytes_constraint_info","ptl_frame_only_constraint_flag","ptl_multilayer_enabled_flag","general_constraint_info","cnstr1","cnstr2","ptl_sublayer_present_mask","val","sublayer_level_idc","ptl_num_sub_profiles","general_sub_profile_idc","max_picture_width","max_picture_height","avg_frame_rate","num_of_arrays","isVideo","isAudio","isSubtitle","isMetadata","isHint","getCodec","getWidth","getHeight","getChannelCount","getSampleRate","getSampleSize","VisualSampleEntry","AudioSampleEntry","SubtitleSampleEntry","MetadataSampleEntry","decimalToHex","d","padding","Number","avc1SampleEntry","avc2SampleEntry","avc3SampleEntry","avc4SampleEntry","baseCodec","hev1SampleEntry","hvc1SampleEntry","reversed","hasByte","constraint_string","vvc1SampleEntry","vvi1SampleEntry","vvcC","last_nonzero","ptl_frame_only_constraint","ptl_multilayer_enabled","base32_chars","mp4aSampleEntry","esds","stxtSampleEntry","vp08SampleEntry","vp09SampleEntry","vpcC","av01SampleEntry","bitdepth","writeHeader","sizePosition","avcCBox","co64Box","cslgBox","cttsBox","drefBox","elngBox","elstBox","emsgBox","hdlrBox","kindBox","mdhdBox","mehdBox","mfhdBox","mvhdBox","writeFooter","stppSampleEntry","sbgpBox","sgpdBox","sidxBox","smhdBox","stcoBox","stscBox","stsdBox","stshBox","stssBox","stszBox","constant","sttsBox","tfdtBox","UINT32_MAX","tfhdBox","tkhdBox","trexBox","trunBox","data_offset_position","vmhdBox","unpack","m","Infinity","description_index","chunk_index","DIFF_BOXES_PROP_NAMES","DIFF_PRIMITIVE_ARRAY_PROP_NAMES","boxEqualFields","box_a","box_b","boxEqual","VTTin4Parser","parseSample","cues","cue","getText","startTime","endTime","n","z","secToTimestamp","insec","ms","string","cueIn4","payl","XMLSubtitlein4Parser","documentString","resources","DOMParser","parseFromString","Textin4Parser","parseConfig","ISOFile","mdats","moofs","isProgressive","moovStartFound","onMoovStart","moovStartSent","readySent","onSegment","sampleListBuilt","fragmentedTracks","extractedTracks","isFragmentationInitialized","sampleProcessingStarted","nextMoofNumber","itemListBuilt","onSidx","sidxSent","setSegmentOptions","user","trak","fragTrack","nextSample","segmentStream","nb_samples","rapAlignement","unsetSegmentOptions","extractTrack","unsetExtractionOptions","restoreParsePosition","hasIncompleteMdat","processIncompleteMdat","saveParsePosition","processIncompleteBox","updateUsedBytes","checkBuffer","last","nextFileStart","moov","buildSampleLists","updateSampleLists","getInfo","processSamples","nextSeekPosition","nextParsePosition","sidx","meta","flattenItemInfo","processItems","onItem","getAllocatedSampleDataSize","sample_desc","movie","_1904","getTime","hasMoov","mvhd","isFragmented","mvex","mehd","hasIOD","iods","brands","ftyp","created","modified","tracks","audioTracks","subtitleTracks","metadataTracks","hintTracks","otherTracks","traks","tkhd","hdlr","tref","edts","edits","elst","movie_duration","movie_timescale","track_width","track_height","mdhd","cts_shift","cslg","samples_duration","kind","udta","kinds","elng","samples_size","audio","sample_rate","mime","fragTrak","createFragment","extractTrak","getSample","getBox","getBoxes","returnEarly","_sweep","getTrackSamplesInfo","getTrackSample","sampleNum","lastValidSample","releaseSample","samplesDataSize","seekTrack","seek_offset","rap_seek_sample_num","seek_sample_num","alreadyRead","trak_seek_info","seek_info","equal","box_index","a_box","b_box","lastBoxStartPosition","parsingMdat","discardMdatData","_options","addTrack","media_duration","sample_description_entry","media_type","codes","avcDecoderConfigRecord","description_boxes","buildTrakSampleLists","computeSize","stream_","addSample","depends_on","is_depended_on","has_redundancy","degradation_priority","first_dts","moof","createSingleSampleMoof","trafs","truns","moofBox","traf","lastMoofIndex","resetTables","stsc","stts","ctts","stss","initial_duration","stco","co64","stsz","stz2","initSampleGroups","sbgps","trak_sgpds","traf_sgpds","sample_group_info","sample_group_key","SampleGroupInfo","_parameter","_sbgp","sbgp","last_sample_in_run","entry_index","sample_groups_info","fragment_description","is_fragment","setSampleGroupProperties","sample_groups","process_sdtp","sdtp","subs","sgpds","stdp","chunk_run_index","last_chunk_in_run","offset_in_chunk","last_sample_in_chunk","last_sample_in_stts_run","stts_run_index","last_sample_in_ctts_run","ctts_run_index","last_stss_index","subs_entry_index","last_subs_sample_index","last_run_position","trex","tfhd","getTrexById","trun","moof_number","number_in_traf","first_sample_index","first_traf_merged","tfdt","bdo","bdop","dbim","dop","has_fragment_subsamples","sample_index","lengthAfterStart","getCodecs","trexs","itemsDataSize","iinf","ref_to","protection_index","protection","ipro","protections","iloc","itemloc","source","dinf","pitm","primary","iref","iprp","ipmas","ipma","association","properties","propEntry","ipco","propbox","getItem","releaseItem","callback","sent","hasItem","getMetaHandler","getPrimaryItem","itemToFragmentedTrackFile","itemId","trackOptions","ispe","outstream","sampleNumber","mdat","mdatBox","writeInitializationSegment","total_duration","getBuffer","initializeSegmentation","initSegs","seg","moovBox","printHeader","indent","print","prev_indent","_keepMdatData","_stream","keepMdatData","createFile"],"sourceRoot":""}